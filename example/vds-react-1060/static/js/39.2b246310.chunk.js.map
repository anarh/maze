{"version":3,"sources":["components/tooltip/example/index.js","pages/components/tooltip.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/link/index.js","components/tooltip/index.js"],"names":["TooltipExample","useState","showTooltip","setShowTooltip","tag","tooltip","placement","trigger","id","colorScheme","href","tooltipShown","onFocus","onBlur","onMouseEnter","onMouseLeave","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","disabled","flippable","isFullWidth","includes","oneOfType","number","Link","inline","cloneElement","element","Tooltip","shortid","generate","uid","useRef","current","modifiers","offset","enabled","getTooltipProps","tooltipRef","getTriggerProps","triggerRef","aria-hidden"],"mappings":"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","file":"static/js/39.2b246310.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Link from '../../link';\nimport Row from '../../row';\nimport Tooltip from '../../tooltip';\nimport Typography from '../../typography';\n\nconst TooltipExample = () => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <Grid>\n      <Row>\n        <Typography tag=\"h2\">Raw state, mouse-only interactions</Typography>\n      </Row>\n      <Row>\n        <Col>\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"right\"\n            trigger=\"hover\"\n            id=\"tooltip-12\"\n          >\n            <ButtonText>Right</ButtonText>\n          </Tooltip>\n\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"top\"\n            trigger=\"hover\"\n            id=\"tooltip-1\"\n          >\n            <ButtonText>Top</ButtonText>\n          </Tooltip>\n\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"bottom\"\n            trigger=\"hover\"\n            id=\"tooltip-15\"\n          >\n            <ButtonText>Bottom</ButtonText>\n          </Tooltip>\n\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"left\"\n            trigger=\"hover\"\n            id=\"tooltip-13\"\n          >\n            <ButtonText colorScheme=\"primary\">Left</ButtonText>\n          </Tooltip>\n\n          <Typography>{\"This is an example of a \"}\n            <Tooltip\n              trigger=\"hover\"\n              id=\"tooltip-20\"\n              tooltip=\"Because it's for demo purposes only\"\n            >\n              <Link href=\"#\">link</Link>\n            </Tooltip> with a tooltip.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Typography tag=\"h2\">A11y/VGAR usage, with mouse + keyboard/focus interactions</Typography>\n        <Typography tag=\"h4\">\n          Use the Tooltip component as a stateless wrapper component\n          to take control of the visibility of the tooltip. See code example for how to proceed...\n        </Typography>\n      </Row>\n      <Row>\n        <Col>\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            tooltipShown={showTooltip}\n            placement=\"right\"\n            trigger=\"none\"\n            id=\"tooltip-012\"\n          >\n            <ButtonText\n              onFocus={() => setShowTooltip(true)}\n              onBlur={() => setShowTooltip(false)}\n              onMouseEnter={() => setShowTooltip(true)}\n              onMouseLeave={() => setShowTooltip(false)}\n            >\n              Supports keyboard(focus) and mouse(hover)\n            </ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TooltipExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/tooltip/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/tooltip/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/tooltip/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst TooltipExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Tooltip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Tooltip</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Tooltip Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nTooltipExample.displayName = 'TooltipExample';\n\nexport default TooltipExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","import React, { cloneElement, Fragment, useRef } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport TooltipTrigger from 'react-popper-tooltip';\n\nconst CSS_PREFIX = 'vds-tooltip';\nconst CSS_STATE = 'vds-state';\n\nconst Tooltip = ({ className, tooltip, children, id = shortid.generate(), trigger, ...remainingProps }) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <TooltipTrigger\n      trigger={trigger}\n      {...remainingProps}\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: '0, 4px'\n        }\n      }}\n      tooltip={({ getTooltipProps, tooltipRef }) => (\n        <div\n          {...getTooltipProps({\n            className: classnames(CSS_PREFIX, `${CSS_STATE}--show`, className),\n            ref: tooltipRef\n          })}\n        >\n          <div className={`${CSS_PREFIX}-content`}>\n            <span className={`${CSS_PREFIX}-text`}>{tooltip}</span>\n            <span className={`${CSS_PREFIX}-pointer`} />\n          </div>\n        </div>\n      )}\n    >\n      {({ getTriggerProps, triggerRef }) => (\n        <Fragment>\n          {cloneElement(children, {\n            ...getTriggerProps({\n              'aria-controls': uid,\n              'aria-describedby': uid,\n              ref: triggerRef\n            })\n          })}\n          <span aria-hidden=\"true\" id={uid} style={{ display: 'none' }}>\n            {tooltip}\n          </span>\n        </Fragment>\n      )}\n    </TooltipTrigger>\n  );\n};\nTooltip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Popper Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Tooltip\n   */\n  tooltip: node.isRequired,\n\n  /**\n   * Trigger\n   */\n  trigger: oneOf([\n    'click',\n    'hover',\n    'right-click',\n    'none'\n  ])\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n"],"sourceRoot":""}