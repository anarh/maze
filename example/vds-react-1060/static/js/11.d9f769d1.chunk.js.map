{"version":3,"sources":["components/form-control/index.js","components/form/example/index.js","pages/components/form.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","components/button-label/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-text/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/button-group/index.js","components/fieldset/index.js","components/form/index.js"],"names":["FormControl","forwardRef","ref","children","className","divide","position","resize","space","remainingProps","cloneElement","classnames","Boolean","propTypes","element","string","oneOf","bool","displayName","FormExample","tag","helpText","label","name","showHelpText","direction","colorScheme","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","undefined","defaultValue","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","node","columns","arrayOf","shape","data","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","ButtonLabel","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","id","RegExp","test","ButtonText","active","disabled","flippable","isFullWidth","includes","oneOfType","InputContainer","expanded","filled","focus","invalid","isTextarea","readOnly","InputLabel","InputBar","InputMessage","ariaAtomic","show","aria-atomic","aria-live","InputOption","InputHint","InputText","Input","ariaLabel","checkmarkIcon","containerProps","errorIcon","errorText","helpIcon","shortid","labelId","noValidate","onBlur","onChange","onFocus","placeholder","showCheckmark","showErrorText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","useRef","current","setValidity","e","target","checkValidity","trim","htmlFor","aria-describedby","aria-label","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput","ButtonGroup","Fieldset","Form"],"mappings":"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","file":"static/js/11.d9f769d1.chunk.js","sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst FormControl = forwardRef(({\n  children,\n  className,\n  divide,\n  position,\n  resize,\n  space,\n  ...remainingProps\n}, ref) => (\n  cloneElement(children, {\n    className: classnames(`${CSS_PREFIX}-control`, {\n      [`${CSS_PREFIX}-control--${divide}${resize ? '--resize' : ''}`]: Boolean(divide),\n      [`${CSS_PREFIX}-control--${space}`]: Boolean(space),\n      [`${CSS_PREFIX}-space--${position}`]: Boolean(position)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nFormControl.propTypes = {\n  /**\n  * @ignore\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Divide by\n   */\n  divide: oneOf(['twenty-five', 'fifty']),\n\n  /**\n   * Position\n   */\n  position: oneOf(['left', 'right']),\n\n  /**\n   * Resize\n   */\n  resize: bool,\n  /**\n   * Space\n   */\n  space: oneOf(['thirty', 'forty', 'fifty', 'sixty', 'seventy'])\n};\n\nFormControl.displayName = 'FormControl';\n\nexport default FormControl;\n","import React from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Fieldset from '../../fieldset';\nimport Form from '../../form';\nimport FormControl from '../../form-control';\nimport Grid from '../../grid';\nimport Input from '../../input';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst FormExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl>\n              <Input\n                helpText=\"Enter Address\"\n                label=\"Address Line 1\"\n                name=\"address-line-1\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                helpText=\"Address line 2\"\n                label=\"Address Line 2\"\n                name=\"address-line-2\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                helpText=\"Enter City\"\n                label=\"City\"\n                name=\"City\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n          <ButtonGroup direction=\"right\">\n            <ButtonText colorScheme=\"primary\">Submit</ButtonText>\n            <ButtonText colorScheme=\"secondary\">Reset</ButtonText>\n          </ButtonGroup>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 30/70</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 40/60</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"forty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"sixty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 50/50</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"fifty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"fifty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 60/40</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"sixty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"forty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 70/30</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default FormExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/form/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/form/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/form/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst FormExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Form\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Form</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Form Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nFormExample.displayName = 'FormExample';\n\nexport default FormExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var i = step;\n    var bytes = random(i);\n\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || '';\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${uid}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${uid}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst Form = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nForm.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nForm.displayName = 'Form';\n\nexport default Form;\n"],"sourceRoot":""}