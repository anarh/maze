{
  "pipes": [],
  "interfaces": [
    {
      "name": "AlertActionConfig",
      "id": "interface-AlertActionConfig-215c6de6d56f696571a9680ed1621e58",
      "file": "projects/vds-lib/src/lib/alert/alert.constants.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport const ALERT = {\n  slideInTime: 50,\n  slideOutTime: 100,\n};\n\nexport interface AlertMessageConfig {\n  /**\n   * Message or label of the alert. <br>\n   * NOTE: Must be used with <code>AlertService.open()</code>\n   */\n  label?: string;\n  /**\n   * Message or label of the alert as a template. <br>\n   * NOTE: Must be used with <code>AlertService.openFromTemplate()</code>\n   */\n  labelTemplate?: TemplateRef<any>;\n  /**\n   * Title for the alert.\n   */\n  title?: string;\n}\n\nexport interface AlertDetailsConfig {\n  /**\n   * Sets the type of alert.\n   */\n  alertType?: AlertType;\n  /**\n   * Sets the duration in milliseconds for auto-hiding the alert.\n   */\n  duration?: number;\n  /**\n   * The icon to associate with the alert type.\n   */\n  icon?: string;\n  /**\n   * Flag that enables slide in animation for the alert.\n   */\n  slideIn?: boolean;\n  /**\n   * Flag that enables slide out animation for the alert.\n   */\n  slideOut?: boolean;\n}\n\nexport interface AlertActionConfig {\n  /**\n   * Custom function triggered on click event of action.\n   */\n  callback?: () => any;\n  /**\n   * The icon to use for the action.\n   */\n  icon?: string;\n  /**\n   * The label for the alert button, or aria-label when used with an icon.\n   */\n  label?: string;\n}\n\nexport interface AlertConfig {\n  /**\n   * Configure the Alert Action(s).\n   */\n  action?: AlertActionConfig[];\n  /**\n   * Configure the Alert Details.\n   */\n  details?: AlertDetailsConfig;\n  /**\n   * Configure the Alert Message.\n   */\n  message: AlertMessageConfig;\n}\n\nexport enum AlertType {\n  /**\n   * Sets alert to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets alert to display informative styling\n   */\n  INFO = 'info',\n  /**\n   * Sets alert to display affirmation styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets alert to display cautionary styling\n   */\n  WARNING = 'warning',\n}\n",
      "properties": [
        {
          "name": "callback",
          "type": "function",
          "optional": true,
          "description": "<p>Custom function triggered on click event of action.</p>\n",
          "line": 52
        },
        {
          "name": "icon",
          "type": "string",
          "optional": true,
          "description": "<p>The icon to use for the action.</p>\n",
          "line": 56
        },
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "description": "<p>The label for the alert button, or aria-label when used with an icon.</p>\n",
          "line": 60
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "AlertConfig",
      "id": "interface-AlertConfig-215c6de6d56f696571a9680ed1621e58",
      "file": "projects/vds-lib/src/lib/alert/alert.constants.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport const ALERT = {\n  slideInTime: 50,\n  slideOutTime: 100,\n};\n\nexport interface AlertMessageConfig {\n  /**\n   * Message or label of the alert. <br>\n   * NOTE: Must be used with <code>AlertService.open()</code>\n   */\n  label?: string;\n  /**\n   * Message or label of the alert as a template. <br>\n   * NOTE: Must be used with <code>AlertService.openFromTemplate()</code>\n   */\n  labelTemplate?: TemplateRef<any>;\n  /**\n   * Title for the alert.\n   */\n  title?: string;\n}\n\nexport interface AlertDetailsConfig {\n  /**\n   * Sets the type of alert.\n   */\n  alertType?: AlertType;\n  /**\n   * Sets the duration in milliseconds for auto-hiding the alert.\n   */\n  duration?: number;\n  /**\n   * The icon to associate with the alert type.\n   */\n  icon?: string;\n  /**\n   * Flag that enables slide in animation for the alert.\n   */\n  slideIn?: boolean;\n  /**\n   * Flag that enables slide out animation for the alert.\n   */\n  slideOut?: boolean;\n}\n\nexport interface AlertActionConfig {\n  /**\n   * Custom function triggered on click event of action.\n   */\n  callback?: () => any;\n  /**\n   * The icon to use for the action.\n   */\n  icon?: string;\n  /**\n   * The label for the alert button, or aria-label when used with an icon.\n   */\n  label?: string;\n}\n\nexport interface AlertConfig {\n  /**\n   * Configure the Alert Action(s).\n   */\n  action?: AlertActionConfig[];\n  /**\n   * Configure the Alert Details.\n   */\n  details?: AlertDetailsConfig;\n  /**\n   * Configure the Alert Message.\n   */\n  message: AlertMessageConfig;\n}\n\nexport enum AlertType {\n  /**\n   * Sets alert to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets alert to display informative styling\n   */\n  INFO = 'info',\n  /**\n   * Sets alert to display affirmation styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets alert to display cautionary styling\n   */\n  WARNING = 'warning',\n}\n",
      "properties": [
        {
          "name": "action",
          "type": "AlertActionConfig[]",
          "optional": true,
          "description": "<p>Configure the Alert Action(s).</p>\n",
          "line": 67
        },
        {
          "name": "details",
          "type": "AlertDetailsConfig",
          "optional": true,
          "description": "<p>Configure the Alert Details.</p>\n",
          "line": 71
        },
        {
          "name": "message",
          "type": "AlertMessageConfig",
          "optional": false,
          "description": "<p>Configure the Alert Message.</p>\n",
          "line": 75
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "AlertDetailsConfig",
      "id": "interface-AlertDetailsConfig-215c6de6d56f696571a9680ed1621e58",
      "file": "projects/vds-lib/src/lib/alert/alert.constants.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport const ALERT = {\n  slideInTime: 50,\n  slideOutTime: 100,\n};\n\nexport interface AlertMessageConfig {\n  /**\n   * Message or label of the alert. <br>\n   * NOTE: Must be used with <code>AlertService.open()</code>\n   */\n  label?: string;\n  /**\n   * Message or label of the alert as a template. <br>\n   * NOTE: Must be used with <code>AlertService.openFromTemplate()</code>\n   */\n  labelTemplate?: TemplateRef<any>;\n  /**\n   * Title for the alert.\n   */\n  title?: string;\n}\n\nexport interface AlertDetailsConfig {\n  /**\n   * Sets the type of alert.\n   */\n  alertType?: AlertType;\n  /**\n   * Sets the duration in milliseconds for auto-hiding the alert.\n   */\n  duration?: number;\n  /**\n   * The icon to associate with the alert type.\n   */\n  icon?: string;\n  /**\n   * Flag that enables slide in animation for the alert.\n   */\n  slideIn?: boolean;\n  /**\n   * Flag that enables slide out animation for the alert.\n   */\n  slideOut?: boolean;\n}\n\nexport interface AlertActionConfig {\n  /**\n   * Custom function triggered on click event of action.\n   */\n  callback?: () => any;\n  /**\n   * The icon to use for the action.\n   */\n  icon?: string;\n  /**\n   * The label for the alert button, or aria-label when used with an icon.\n   */\n  label?: string;\n}\n\nexport interface AlertConfig {\n  /**\n   * Configure the Alert Action(s).\n   */\n  action?: AlertActionConfig[];\n  /**\n   * Configure the Alert Details.\n   */\n  details?: AlertDetailsConfig;\n  /**\n   * Configure the Alert Message.\n   */\n  message: AlertMessageConfig;\n}\n\nexport enum AlertType {\n  /**\n   * Sets alert to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets alert to display informative styling\n   */\n  INFO = 'info',\n  /**\n   * Sets alert to display affirmation styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets alert to display cautionary styling\n   */\n  WARNING = 'warning',\n}\n",
      "properties": [
        {
          "name": "alertType",
          "type": "AlertType",
          "optional": true,
          "description": "<p>Sets the type of alert.</p>\n",
          "line": 29
        },
        {
          "name": "duration",
          "type": "number",
          "optional": true,
          "description": "<p>Sets the duration in milliseconds for auto-hiding the alert.</p>\n",
          "line": 33
        },
        {
          "name": "icon",
          "type": "string",
          "optional": true,
          "description": "<p>The icon to associate with the alert type.</p>\n",
          "line": 37
        },
        {
          "name": "slideIn",
          "type": "boolean",
          "optional": true,
          "description": "<p>Flag that enables slide in animation for the alert.</p>\n",
          "line": 41
        },
        {
          "name": "slideOut",
          "type": "boolean",
          "optional": true,
          "description": "<p>Flag that enables slide out animation for the alert.</p>\n",
          "line": 45
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "AlertMessageConfig",
      "id": "interface-AlertMessageConfig-215c6de6d56f696571a9680ed1621e58",
      "file": "projects/vds-lib/src/lib/alert/alert.constants.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport const ALERT = {\n  slideInTime: 50,\n  slideOutTime: 100,\n};\n\nexport interface AlertMessageConfig {\n  /**\n   * Message or label of the alert. <br>\n   * NOTE: Must be used with <code>AlertService.open()</code>\n   */\n  label?: string;\n  /**\n   * Message or label of the alert as a template. <br>\n   * NOTE: Must be used with <code>AlertService.openFromTemplate()</code>\n   */\n  labelTemplate?: TemplateRef<any>;\n  /**\n   * Title for the alert.\n   */\n  title?: string;\n}\n\nexport interface AlertDetailsConfig {\n  /**\n   * Sets the type of alert.\n   */\n  alertType?: AlertType;\n  /**\n   * Sets the duration in milliseconds for auto-hiding the alert.\n   */\n  duration?: number;\n  /**\n   * The icon to associate with the alert type.\n   */\n  icon?: string;\n  /**\n   * Flag that enables slide in animation for the alert.\n   */\n  slideIn?: boolean;\n  /**\n   * Flag that enables slide out animation for the alert.\n   */\n  slideOut?: boolean;\n}\n\nexport interface AlertActionConfig {\n  /**\n   * Custom function triggered on click event of action.\n   */\n  callback?: () => any;\n  /**\n   * The icon to use for the action.\n   */\n  icon?: string;\n  /**\n   * The label for the alert button, or aria-label when used with an icon.\n   */\n  label?: string;\n}\n\nexport interface AlertConfig {\n  /**\n   * Configure the Alert Action(s).\n   */\n  action?: AlertActionConfig[];\n  /**\n   * Configure the Alert Details.\n   */\n  details?: AlertDetailsConfig;\n  /**\n   * Configure the Alert Message.\n   */\n  message: AlertMessageConfig;\n}\n\nexport enum AlertType {\n  /**\n   * Sets alert to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets alert to display informative styling\n   */\n  INFO = 'info',\n  /**\n   * Sets alert to display affirmation styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets alert to display cautionary styling\n   */\n  WARNING = 'warning',\n}\n",
      "properties": [
        {
          "name": "label",
          "type": "string",
          "optional": true,
          "description": "<p>Message or label of the alert. <br>\nNOTE: Must be used with <code>AlertService.open()</code></p>\n",
          "line": 13
        },
        {
          "name": "labelTemplate",
          "type": "TemplateRef<any>",
          "optional": true,
          "description": "<p>Message or label of the alert as a template. <br>\nNOTE: Must be used with <code>AlertService.openFromTemplate()</code></p>\n",
          "line": 18
        },
        {
          "name": "title",
          "type": "string",
          "optional": true,
          "description": "<p>Title for the alert.</p>\n",
          "line": 22
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Button",
      "id": "interface-Button-9dcc82d115a6c14606b293d8030c3546",
      "file": "projects/vds-lib/src/lib/nav/nav.constants.ts",
      "type": "interface",
      "sourceCode": "export interface Button {\n  label: string;\n  listboxes: Array<ListItem>;\n}\n\nexport interface ListItem {\n  label: string;\n}\n\nexport interface NavData {\n  href: string;\n  component: any;\n  role: 'link' | 'disclosure';\n  parent: any;\n}\n\nexport const NAV_DEFAULT = {\n  name: 'nav',\n  altText: 'Visa',\n  class: {\n    active: 'vds-state--selected',\n    default: 'vds-tab',\n  },\n  menu: 'visa_menu',\n  close: 'visa_close',\n  down: 'arrow-expand',\n  up: 'visa_dropdown-up',\n  navOpenIcon: 'visa_arrow-previous',\n  navOpenText: 'open arrow',\n  navCloseIcon: 'visa_arrow-next',\n  navCloseText: 'close arrow',\n  orientation: 'horizontal',\n  skipLabel: 'Skip to main content',\n  skipPath: '',\n  src: 'assets/logos/visa/visa_vbm_wht.svg',\n  srcLight: 'assets/logos/visa/visa_vbm_blu.svg',\n  path: '',\n  openWidth: '240px',\n  closeWidth: '56px',\n  vertical: 'vertical',\n};\n\nexport enum NavPosition {\n  FIXED = 'fixed',\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n}\n\nexport enum NavStrategy {\n  // stored values\n  NoneStored = 'None Stored',\n  RootStored = 'Root Stored',\n  DisclosureStored = 'Disclosure Stored',\n  SublinkStored = 'Sublink Stored',\n  // incoming values\n  RootIncoming = 'Root Incoming',\n  DisclosureIncoming = 'Disclosure Incoming',\n  SublinkIncoming = 'Sublink Incoming',\n  // Top Level States\n  FromMiniState = 'From Mini State',\n  FromFullState = 'From Full State',\n}\n\nexport enum NavColorScheme {\n  /**\n   * Sets the colorscheme to default theme.\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets the colorscheme to consumer theme.\n   */\n  CONSUMER = 'consumer',\n  /**\n   * Sets the colorscheme to marketing theme.\n   */\n  MARKETING = 'marketing',\n  /**\n   * Sets the colorscheme to light theme.\n   */\n  LIGHT = 'light',\n}\n\nexport abstract class NavChild {\n  abstract open();\n  abstract close();\n}\n",
      "properties": [
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "listboxes",
          "type": "Array<ListItem>",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "CellActionEvent",
      "id": "interface-CellActionEvent-09f63096d5bf4c3713f75d98b4130d5c",
      "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
      "type": "interface",
      "sourceCode": "export const DATATABLE = {\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n};\n\nexport interface GroupHeaderItem {\n  value: string;\n  span: number;\n  ignore: boolean;\n}\n\nexport interface Sortable {\n  id: string | number;\n  direction?: SortDirection;\n  type?: ColumnType;\n  sortFn?: SortFn;\n}\n\nexport type SortFn = (\n  a: string,\n  b: string,\n  {  }?: Sortable\n) => 0 | 1 | -1;\n\nexport enum ColumnType {\n  /**\n   * Assumes column type is an anchor tag\n   */\n  LINK = 'link',\n\n  /**\n   * Assumes column type is an anchor tag\n   */\n  EMAIL = 'email',\n\n  /**\n   * Assumes column type is a date\n   */\n  DATE = 'date',\n\n  /**\n   * Assumes column type is a button\n   */\n  BUTTON = 'button',\n\n  /**\n   * Assumes column type is a series of buttons and/or anchor tags\n   */\n  ACTIONS = 'actions',\n}\n\nexport enum SortDirection {\n  /**\n   * Ascending sort direction\n   */\n  ASC = 'asc',\n  /**\n   * Descending sort direction\n   */\n  DESC = 'desc',\n}\n\nexport enum RowActionType {\n  /**\n   * No row actions\n   */\n  NONE = 'none',\n  /**\n   * Single select row action\n   */\n  SINGLE = 'single',\n  /**\n   * Multi select row action\n   */\n  MULTI = 'multi',\n  /**\n   * Expandable row action\n   */\n  EXPAND = 'expand',\n}\n\nexport interface ColumnDataItem {\n  /**\n   * Column header unique id\n   */\n  id: string;\n  /**\n   * Column header display text\n   */\n  value: string;\n  /**\n   * Column header ColumnType\n   */\n  type?: ColumnType | RowActionType;\n  /**\n   * Column header \"Group Header\" text\n   */\n  header?: string;\n  /**\n   * Column header tooltip display text <br>\n   * Toolip will display if not an empty string\n   */\n  tooltipValue?: string;\n  /**\n   * Column header sort function to overwrite default behavior\n   */\n  sortFn?: SortFn;\n  /**\n   * If true, column header will be filtered from display on first render\n   */\n  isColumnFiltered?: boolean;\n  /**\n   * If true, column header will be sortable\n   */\n  isSortable?: boolean;\n\n  /**\n   * Set internally by component\n   */\n  isRowAction?: boolean;\n}\n\nexport interface CellActionEvent {\n  /**\n   * Cell data object\n   */\n  cell: object;\n  /**\n   * Row data object\n   */\n  row: object;\n}\n\nexport interface SortEvent {\n  /**\n   * Current sort header id\n   */\n  id: string | number;\n  /**\n   * Current sort header direction\n   */\n  direction: SortDirection;\n  /**\n   * Current sort header type\n   */\n  type: ColumnType;\n}\n\nexport interface RowActionEvent {\n  /**\n   * Whether row action button is selected\n   */\n  checked: boolean;\n  /**\n   * Whether row action button is from header\n   */\n  isHeaderSelected: boolean;\n  /**\n   * Row data object\n   */\n  row: object;\n  /**\n   * Array of currently selected row data objects\n   */\n  selectionArray: object[];\n}\n",
      "properties": [
        {
          "name": "cell",
          "type": "object",
          "optional": false,
          "description": "<p>Cell data object</p>\n",
          "line": 131
        },
        {
          "name": "row",
          "type": "object",
          "optional": false,
          "description": "<p>Row data object</p>\n",
          "line": 135
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "CharacterCounter",
      "id": "interface-CharacterCounter-8d2829c3b263fa939000f4402d10c19b",
      "file": "projects/vds-lib/src/lib/character-counter/character-counter.constants.ts",
      "type": "interface",
      "sourceCode": "export interface CharacterCounter {\n  limit: number;\n  remainder?: number;\n  message?: string;\n}\n\nexport const CHARACTER_COUNTER = {\n  MESSAGE: {\n    SCREEN_READER: 'Characters remaining',\n    USER: 'Characters over limit:',\n  },\n};\n",
      "properties": [
        {
          "name": "limit",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "message",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "remainder",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "CheckboxChange",
      "id": "interface-CheckboxChange-cc86b75faca97cec7ebffc36ef390550",
      "file": "projects/vds-lib/src/lib/checkbox/checkbox.constant.ts",
      "type": "interface",
      "sourceCode": "import { CheckboxComponent } from './checkbox.component';\n\nexport const CHECKBOX = {\n  PREFIX: {\n    ID: 'vds-checkbox-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n};\n\nexport interface CheckboxChange {\n  /**\n   * Checkbox checked value\n   */\n  checked: boolean;\n  /**\n   * Checkbox component instance\n   */\n  source: CheckboxComponent;\n}\n",
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "optional": false,
          "description": "<p>Checkbox checked value</p>\n",
          "line": 17
        },
        {
          "name": "source",
          "type": "CheckboxComponent",
          "optional": false,
          "description": "<p>Checkbox component instance</p>\n",
          "line": 21
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Circle",
      "id": "interface-Circle-6a40e547a1d4d837fdab38063b649719",
      "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
      "type": "interface",
      "sourceCode": "export interface Circle {\n  OUTER: SubCircle;\n  INNER: SubCircle;\n  DIMENSION: number;\n  CX: number;\n  CY: number;\n  R: number;\n}\n\ninterface SubCircle {\n  STROKE_DASHARRAY: string;\n  STROKE_DASHOFFSET: string;\n}\n\nconst LARGE_CIRCLE: Circle = {\n  OUTER: {\n    STROKE_DASHARRAY: '255, 7',\n    STROKE_DASHOFFSET: '3',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '180, 180',\n    STROKE_DASHOFFSET: '101',\n  },\n  DIMENSION: 112,\n  CX: 56,\n  CY: 56,\n  R: 54,\n};\n\nconst SMALL_CIRCLE: Circle = {\n  OUTER: {\n    STROKE_DASHARRAY: '90, 8',\n    STROKE_DASHOFFSET: '50',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '135, 100',\n    STROKE_DASHOFFSET: '90',\n  },\n  DIMENSION: 64,\n  CX: 32,\n  CY: 32,\n  R: 30,\n};\n\nexport const PROGRESS_GAUGE = {\n  DEFAULT: {\n    TITLE: 'Application',\n    SUBTITLE: 'February 11 , 2054',\n    DETAILS: 'Not Started',\n    SIZE: {\n      LARGE: 'large',\n      SMALL: 'small',\n    },\n    CIRCLE_REF: {\n      LARGE: LARGE_CIRCLE,\n      SMALL: SMALL_CIRCLE,\n    },\n    STROKE_WIDTH: 4,\n  },\n  ERROR: 'VDS: \"setStatus\" method given wrong parameter',\n};\n\nexport enum ProgressGaugeStatus {\n  DEFAULT = 'default',\n  PROGRESS = 'progress',\n  COMPLETED = 'completed',\n  APPROVED = 'approved',\n}\n",
      "properties": [
        {
          "name": "CX",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "CY",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "DIMENSION",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "INNER",
          "type": "SubCircle",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "OUTER",
          "type": "SubCircle",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "R",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ColumnDataItem",
      "id": "interface-ColumnDataItem-09f63096d5bf4c3713f75d98b4130d5c",
      "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
      "type": "interface",
      "sourceCode": "export const DATATABLE = {\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n};\n\nexport interface GroupHeaderItem {\n  value: string;\n  span: number;\n  ignore: boolean;\n}\n\nexport interface Sortable {\n  id: string | number;\n  direction?: SortDirection;\n  type?: ColumnType;\n  sortFn?: SortFn;\n}\n\nexport type SortFn = (\n  a: string,\n  b: string,\n  {  }?: Sortable\n) => 0 | 1 | -1;\n\nexport enum ColumnType {\n  /**\n   * Assumes column type is an anchor tag\n   */\n  LINK = 'link',\n\n  /**\n   * Assumes column type is an anchor tag\n   */\n  EMAIL = 'email',\n\n  /**\n   * Assumes column type is a date\n   */\n  DATE = 'date',\n\n  /**\n   * Assumes column type is a button\n   */\n  BUTTON = 'button',\n\n  /**\n   * Assumes column type is a series of buttons and/or anchor tags\n   */\n  ACTIONS = 'actions',\n}\n\nexport enum SortDirection {\n  /**\n   * Ascending sort direction\n   */\n  ASC = 'asc',\n  /**\n   * Descending sort direction\n   */\n  DESC = 'desc',\n}\n\nexport enum RowActionType {\n  /**\n   * No row actions\n   */\n  NONE = 'none',\n  /**\n   * Single select row action\n   */\n  SINGLE = 'single',\n  /**\n   * Multi select row action\n   */\n  MULTI = 'multi',\n  /**\n   * Expandable row action\n   */\n  EXPAND = 'expand',\n}\n\nexport interface ColumnDataItem {\n  /**\n   * Column header unique id\n   */\n  id: string;\n  /**\n   * Column header display text\n   */\n  value: string;\n  /**\n   * Column header ColumnType\n   */\n  type?: ColumnType | RowActionType;\n  /**\n   * Column header \"Group Header\" text\n   */\n  header?: string;\n  /**\n   * Column header tooltip display text <br>\n   * Toolip will display if not an empty string\n   */\n  tooltipValue?: string;\n  /**\n   * Column header sort function to overwrite default behavior\n   */\n  sortFn?: SortFn;\n  /**\n   * If true, column header will be filtered from display on first render\n   */\n  isColumnFiltered?: boolean;\n  /**\n   * If true, column header will be sortable\n   */\n  isSortable?: boolean;\n\n  /**\n   * Set internally by component\n   */\n  isRowAction?: boolean;\n}\n\nexport interface CellActionEvent {\n  /**\n   * Cell data object\n   */\n  cell: object;\n  /**\n   * Row data object\n   */\n  row: object;\n}\n\nexport interface SortEvent {\n  /**\n   * Current sort header id\n   */\n  id: string | number;\n  /**\n   * Current sort header direction\n   */\n  direction: SortDirection;\n  /**\n   * Current sort header type\n   */\n  type: ColumnType;\n}\n\nexport interface RowActionEvent {\n  /**\n   * Whether row action button is selected\n   */\n  checked: boolean;\n  /**\n   * Whether row action button is from header\n   */\n  isHeaderSelected: boolean;\n  /**\n   * Row data object\n   */\n  row: object;\n  /**\n   * Array of currently selected row data objects\n   */\n  selectionArray: object[];\n}\n",
      "properties": [
        {
          "name": "header",
          "type": "string",
          "optional": true,
          "description": "<p>Column header &quot;Group Header&quot; text</p>\n",
          "line": 102
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "<p>Column header unique id</p>\n",
          "line": 90
        },
        {
          "name": "isColumnFiltered",
          "type": "boolean",
          "optional": true,
          "description": "<p>If true, column header will be filtered from display on first render</p>\n",
          "line": 115
        },
        {
          "name": "isRowAction",
          "type": "boolean",
          "optional": true,
          "description": "<p>Set internally by component</p>\n",
          "line": 124
        },
        {
          "name": "isSortable",
          "type": "boolean",
          "optional": true,
          "description": "<p>If true, column header will be sortable</p>\n",
          "line": 119
        },
        {
          "name": "sortFn",
          "type": "SortFn",
          "optional": true,
          "description": "<p>Column header sort function to overwrite default behavior</p>\n",
          "line": 111
        },
        {
          "name": "tooltipValue",
          "type": "string",
          "optional": true,
          "description": "<p>Column header tooltip display text <br>\nToolip will display if not an empty string</p>\n",
          "line": 107
        },
        {
          "name": "type",
          "type": "ColumnType | RowActionType",
          "optional": true,
          "description": "<p>Column header ColumnType</p>\n",
          "line": 98
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "<p>Column header display text</p>\n",
          "line": 94
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "DialogActionConfig",
      "id": "interface-DialogActionConfig-bbd3daa6d2dc831ecaa0f41b6568c21d",
      "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface DialogConfig {\n  /**\n   * Sets the id of dialog.\n   */\n  id?: string;\n  /**\n   * Sets the type of dialog.\n   */\n  dialogType?: DialogType;\n  /**\n   * Sets the variant of dialog.\n   */\n  dialogVariant?: DialogVariant;\n  /**\n   * Sets the content of dialog\n   */\n  content: DialogContentConfig;\n  /**\n   * Sets the actions on the dialog\n   */\n  actions: DialogActionConfig[];\n}\n\nexport interface DialogContentConfig {\n  /**\n   * Sets the title of dialog.\n   */\n  title: string;\n  /**\n   * Sets the body of dialog.\n   */\n  body: TemplateRef<any>;\n}\n\nexport interface DialogActionConfig {\n  /**\n   * The label for the dialog action button.\n   */\n  label: string;\n  /**\n   * The callback for the dialog action button.\n   */\n  callback?: () => any;\n  /**\n   * The color scheme for the dialog action button.\n   */\n  colorScheme: string;\n}\n\nexport enum DialogType {\n  /**\n   * Sets dialog to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets dialog to display default styling\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets dialog to display success styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets dialog to display warning styling\n   */\n  WARNING = 'warning',\n}\n\nexport enum DialogVariant {\n  /**\n   * Sets the dialog to accept actions only\n   */\n  CALL_TO_ACTION = 'call-to-action',\n  /**\n   * Sets the dialog to be closeable without actions\n   */\n  CLOSEABLE = 'closeable',\n}\n",
      "properties": [
        {
          "name": "callback",
          "type": "function",
          "optional": true,
          "description": "<p>The callback for the dialog action button.</p>\n",
          "line": 45
        },
        {
          "name": "colorScheme",
          "type": "string",
          "optional": false,
          "description": "<p>The color scheme for the dialog action button.</p>\n",
          "line": 49
        },
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "<p>The label for the dialog action button.</p>\n",
          "line": 41
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "DialogConfig",
      "id": "interface-DialogConfig-bbd3daa6d2dc831ecaa0f41b6568c21d",
      "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface DialogConfig {\n  /**\n   * Sets the id of dialog.\n   */\n  id?: string;\n  /**\n   * Sets the type of dialog.\n   */\n  dialogType?: DialogType;\n  /**\n   * Sets the variant of dialog.\n   */\n  dialogVariant?: DialogVariant;\n  /**\n   * Sets the content of dialog\n   */\n  content: DialogContentConfig;\n  /**\n   * Sets the actions on the dialog\n   */\n  actions: DialogActionConfig[];\n}\n\nexport interface DialogContentConfig {\n  /**\n   * Sets the title of dialog.\n   */\n  title: string;\n  /**\n   * Sets the body of dialog.\n   */\n  body: TemplateRef<any>;\n}\n\nexport interface DialogActionConfig {\n  /**\n   * The label for the dialog action button.\n   */\n  label: string;\n  /**\n   * The callback for the dialog action button.\n   */\n  callback?: () => any;\n  /**\n   * The color scheme for the dialog action button.\n   */\n  colorScheme: string;\n}\n\nexport enum DialogType {\n  /**\n   * Sets dialog to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets dialog to display default styling\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets dialog to display success styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets dialog to display warning styling\n   */\n  WARNING = 'warning',\n}\n\nexport enum DialogVariant {\n  /**\n   * Sets the dialog to accept actions only\n   */\n  CALL_TO_ACTION = 'call-to-action',\n  /**\n   * Sets the dialog to be closeable without actions\n   */\n  CLOSEABLE = 'closeable',\n}\n",
      "properties": [
        {
          "name": "actions",
          "type": "DialogActionConfig[]",
          "optional": false,
          "description": "<p>Sets the actions on the dialog</p>\n",
          "line": 23
        },
        {
          "name": "content",
          "type": "DialogContentConfig",
          "optional": false,
          "description": "<p>Sets the content of dialog</p>\n",
          "line": 19
        },
        {
          "name": "dialogType",
          "type": "DialogType",
          "optional": true,
          "description": "<p>Sets the type of dialog.</p>\n",
          "line": 11
        },
        {
          "name": "dialogVariant",
          "type": "DialogVariant",
          "optional": true,
          "description": "<p>Sets the variant of dialog.</p>\n",
          "line": 15
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the id of dialog.</p>\n",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "DialogContentConfig",
      "id": "interface-DialogContentConfig-bbd3daa6d2dc831ecaa0f41b6568c21d",
      "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts",
      "type": "interface",
      "sourceCode": "import { TemplateRef } from '@angular/core';\n\nexport interface DialogConfig {\n  /**\n   * Sets the id of dialog.\n   */\n  id?: string;\n  /**\n   * Sets the type of dialog.\n   */\n  dialogType?: DialogType;\n  /**\n   * Sets the variant of dialog.\n   */\n  dialogVariant?: DialogVariant;\n  /**\n   * Sets the content of dialog\n   */\n  content: DialogContentConfig;\n  /**\n   * Sets the actions on the dialog\n   */\n  actions: DialogActionConfig[];\n}\n\nexport interface DialogContentConfig {\n  /**\n   * Sets the title of dialog.\n   */\n  title: string;\n  /**\n   * Sets the body of dialog.\n   */\n  body: TemplateRef<any>;\n}\n\nexport interface DialogActionConfig {\n  /**\n   * The label for the dialog action button.\n   */\n  label: string;\n  /**\n   * The callback for the dialog action button.\n   */\n  callback?: () => any;\n  /**\n   * The color scheme for the dialog action button.\n   */\n  colorScheme: string;\n}\n\nexport enum DialogType {\n  /**\n   * Sets dialog to display error styling\n   */\n  ERROR = 'error',\n  /**\n   * Sets dialog to display default styling\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets dialog to display success styling\n   */\n  SUCCESS = 'success',\n  /**\n   * Sets dialog to display warning styling\n   */\n  WARNING = 'warning',\n}\n\nexport enum DialogVariant {\n  /**\n   * Sets the dialog to accept actions only\n   */\n  CALL_TO_ACTION = 'call-to-action',\n  /**\n   * Sets the dialog to be closeable without actions\n   */\n  CLOSEABLE = 'closeable',\n}\n",
      "properties": [
        {
          "name": "body",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "<p>Sets the body of dialog.</p>\n",
          "line": 34
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "<p>Sets the title of dialog.</p>\n",
          "line": 30
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "DisclosureContainerConfig",
      "id": "interface-DisclosureContainerConfig-a812010378c7d8ffa9cdc129c0cf292c",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
      "type": "interface",
      "sourceCode": "export const DISCLOSURE_ID_PREFIX = 'vds-disclosure-';\n\nexport interface DisclosureContainerConfig {\n  /**\n   * Adds additional class to disclosure.\n   */\n  class?: string;\n  /**\n   * Sets the id of disclosure.\n   */\n  id?: string;\n}\n\nexport interface DisclosureContentConfig {\n  /**\n   * Adds additional class to disclosure content.\n   */\n  class?: string;\n  /**\n   * Sets the id of disclosure content.\n   */\n  id?: string;\n}\n\nexport interface DisclosureHeaderConfig {\n  /**\n   * Adds additional class to disclosure header.\n   */\n  class?: string;\n  /**\n   * Sets the close icon of disclosure header.\n   * Default: <code>disclosure-expand</code>\n   */\n  closeIcon?: string;\n  /**\n   * If enabled, shows the icon on the right of the text.\n   * Default: <code>false</code>\n   */\n  iconRight?: boolean;\n  /**\n   * Sets the iconType of disclosure header.\n   * Default: <code>tiny</code>\n   */\n  iconType?: string;\n  /**\n   * Sets the id of disclosure header.\n   * Default: <code>disclosure-collapse</code>\n   */\n  id?: string;\n  /**\n   * Sets the open icon of disclosure header.\n   */\n  openIcon?: string;\n}\n",
      "properties": [
        {
          "name": "class",
          "type": "string",
          "optional": true,
          "description": "<p>Adds additional class to disclosure.</p>\n",
          "line": 7
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the id of disclosure.</p>\n",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "DisclosureContentConfig",
      "id": "interface-DisclosureContentConfig-a812010378c7d8ffa9cdc129c0cf292c",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
      "type": "interface",
      "sourceCode": "export const DISCLOSURE_ID_PREFIX = 'vds-disclosure-';\n\nexport interface DisclosureContainerConfig {\n  /**\n   * Adds additional class to disclosure.\n   */\n  class?: string;\n  /**\n   * Sets the id of disclosure.\n   */\n  id?: string;\n}\n\nexport interface DisclosureContentConfig {\n  /**\n   * Adds additional class to disclosure content.\n   */\n  class?: string;\n  /**\n   * Sets the id of disclosure content.\n   */\n  id?: string;\n}\n\nexport interface DisclosureHeaderConfig {\n  /**\n   * Adds additional class to disclosure header.\n   */\n  class?: string;\n  /**\n   * Sets the close icon of disclosure header.\n   * Default: <code>disclosure-expand</code>\n   */\n  closeIcon?: string;\n  /**\n   * If enabled, shows the icon on the right of the text.\n   * Default: <code>false</code>\n   */\n  iconRight?: boolean;\n  /**\n   * Sets the iconType of disclosure header.\n   * Default: <code>tiny</code>\n   */\n  iconType?: string;\n  /**\n   * Sets the id of disclosure header.\n   * Default: <code>disclosure-collapse</code>\n   */\n  id?: string;\n  /**\n   * Sets the open icon of disclosure header.\n   */\n  openIcon?: string;\n}\n",
      "properties": [
        {
          "name": "class",
          "type": "string",
          "optional": true,
          "description": "<p>Adds additional class to disclosure content.</p>\n",
          "line": 18
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the id of disclosure content.</p>\n",
          "line": 22
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "DisclosureHeaderConfig",
      "id": "interface-DisclosureHeaderConfig-a812010378c7d8ffa9cdc129c0cf292c",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
      "type": "interface",
      "sourceCode": "export const DISCLOSURE_ID_PREFIX = 'vds-disclosure-';\n\nexport interface DisclosureContainerConfig {\n  /**\n   * Adds additional class to disclosure.\n   */\n  class?: string;\n  /**\n   * Sets the id of disclosure.\n   */\n  id?: string;\n}\n\nexport interface DisclosureContentConfig {\n  /**\n   * Adds additional class to disclosure content.\n   */\n  class?: string;\n  /**\n   * Sets the id of disclosure content.\n   */\n  id?: string;\n}\n\nexport interface DisclosureHeaderConfig {\n  /**\n   * Adds additional class to disclosure header.\n   */\n  class?: string;\n  /**\n   * Sets the close icon of disclosure header.\n   * Default: <code>disclosure-expand</code>\n   */\n  closeIcon?: string;\n  /**\n   * If enabled, shows the icon on the right of the text.\n   * Default: <code>false</code>\n   */\n  iconRight?: boolean;\n  /**\n   * Sets the iconType of disclosure header.\n   * Default: <code>tiny</code>\n   */\n  iconType?: string;\n  /**\n   * Sets the id of disclosure header.\n   * Default: <code>disclosure-collapse</code>\n   */\n  id?: string;\n  /**\n   * Sets the open icon of disclosure header.\n   */\n  openIcon?: string;\n}\n",
      "properties": [
        {
          "name": "class",
          "type": "string",
          "optional": true,
          "description": "<p>Adds additional class to disclosure header.</p>\n",
          "line": 29
        },
        {
          "name": "closeIcon",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the close icon of disclosure header.\nDefault: <code>disclosure-expand</code></p>\n",
          "line": 34
        },
        {
          "name": "iconRight",
          "type": "boolean",
          "optional": true,
          "description": "<p>If enabled, shows the icon on the right of the text.\nDefault: <code>false</code></p>\n",
          "line": 39
        },
        {
          "name": "iconType",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the iconType of disclosure header.\nDefault: <code>tiny</code></p>\n",
          "line": 44
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the id of disclosure header.\nDefault: <code>disclosure-collapse</code></p>\n",
          "line": 49
        },
        {
          "name": "openIcon",
          "type": "string",
          "optional": true,
          "description": "<p>Sets the open icon of disclosure header.</p>\n",
          "line": 53
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "GroupHeaderItem",
      "id": "interface-GroupHeaderItem-09f63096d5bf4c3713f75d98b4130d5c",
      "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
      "type": "interface",
      "sourceCode": "export const DATATABLE = {\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n};\n\nexport interface GroupHeaderItem {\n  value: string;\n  span: number;\n  ignore: boolean;\n}\n\nexport interface Sortable {\n  id: string | number;\n  direction?: SortDirection;\n  type?: ColumnType;\n  sortFn?: SortFn;\n}\n\nexport type SortFn = (\n  a: string,\n  b: string,\n  {  }?: Sortable\n) => 0 | 1 | -1;\n\nexport enum ColumnType {\n  /**\n   * Assumes column type is an anchor tag\n   */\n  LINK = 'link',\n\n  /**\n   * Assumes column type is an anchor tag\n   */\n  EMAIL = 'email',\n\n  /**\n   * Assumes column type is a date\n   */\n  DATE = 'date',\n\n  /**\n   * Assumes column type is a button\n   */\n  BUTTON = 'button',\n\n  /**\n   * Assumes column type is a series of buttons and/or anchor tags\n   */\n  ACTIONS = 'actions',\n}\n\nexport enum SortDirection {\n  /**\n   * Ascending sort direction\n   */\n  ASC = 'asc',\n  /**\n   * Descending sort direction\n   */\n  DESC = 'desc',\n}\n\nexport enum RowActionType {\n  /**\n   * No row actions\n   */\n  NONE = 'none',\n  /**\n   * Single select row action\n   */\n  SINGLE = 'single',\n  /**\n   * Multi select row action\n   */\n  MULTI = 'multi',\n  /**\n   * Expandable row action\n   */\n  EXPAND = 'expand',\n}\n\nexport interface ColumnDataItem {\n  /**\n   * Column header unique id\n   */\n  id: string;\n  /**\n   * Column header display text\n   */\n  value: string;\n  /**\n   * Column header ColumnType\n   */\n  type?: ColumnType | RowActionType;\n  /**\n   * Column header \"Group Header\" text\n   */\n  header?: string;\n  /**\n   * Column header tooltip display text <br>\n   * Toolip will display if not an empty string\n   */\n  tooltipValue?: string;\n  /**\n   * Column header sort function to overwrite default behavior\n   */\n  sortFn?: SortFn;\n  /**\n   * If true, column header will be filtered from display on first render\n   */\n  isColumnFiltered?: boolean;\n  /**\n   * If true, column header will be sortable\n   */\n  isSortable?: boolean;\n\n  /**\n   * Set internally by component\n   */\n  isRowAction?: boolean;\n}\n\nexport interface CellActionEvent {\n  /**\n   * Cell data object\n   */\n  cell: object;\n  /**\n   * Row data object\n   */\n  row: object;\n}\n\nexport interface SortEvent {\n  /**\n   * Current sort header id\n   */\n  id: string | number;\n  /**\n   * Current sort header direction\n   */\n  direction: SortDirection;\n  /**\n   * Current sort header type\n   */\n  type: ColumnType;\n}\n\nexport interface RowActionEvent {\n  /**\n   * Whether row action button is selected\n   */\n  checked: boolean;\n  /**\n   * Whether row action button is from header\n   */\n  isHeaderSelected: boolean;\n  /**\n   * Row data object\n   */\n  row: object;\n  /**\n   * Array of currently selected row data objects\n   */\n  selectionArray: object[];\n}\n",
      "properties": [
        {
          "name": "ignore",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "span",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "HttpRequestOptions",
      "id": "interface-HttpRequestOptions-e082dd01bf6611da513685ff4b8ef010",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
      "type": "interface",
      "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport {\n  HttpParams,\n  HttpHeaders,\n} from '@angular/common/http';\n\nexport const FILEUPLOAD = {\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n};\n\nexport enum UPLOAD_STATUS {\n  /**\n   * Upload status when a file is added for upload\n   */\n  ADD = 'ADD',\n  /**\n   * Upload status when a file is removed\n   */\n  REMOVE = 'REMOVE',\n  /**\n   * Upload status when a file upload is retried\n   */\n  RETRY = 'RETRY',\n  /**\n   * Upload status when a form is submitted\n   */\n  SUBMIT = 'SUBMIT',\n  /**\n   * Upload status for file upload progress\n   */\n  PROGRESS = 'PROGRESS',\n  /**\n   * Upload status when a file upload completes\n   */\n  COMPLETE = 'COMPLETE',\n  /**\n   * Upload status when all file uploads are complete\n   */\n  COMPLETE_ALL = 'COMPLETE_ALL',\n  /**\n   * Upload status when there is an error\n   */\n  ERROR = 'ERROR',\n}\n\nexport enum UPLOAD_ERROR_MSG {\n  SIZE = 'The file is too big. Upload a file less than 100MB in size.',\n  INVALID_NAME = 'The file name has characters that are not allowed: / \\\\ < > : * \" ? | ',\n  INVALID_GENERIC = 'An unexpected error happened during upload.',\n  INVALID_NETWORK = 'Network issues interrupted the file upload.',\n}\n\nexport interface UploadItem {\n  /**\n   * Upload item internal ID\n   */\n  __id: number;\n  /**\n   * Upload item File upload reference\n   */\n  file: File;\n  /**\n   * Upload item visa icon to use\n   */\n  icon: string;\n  /**\n   * If true, indicates item has finished uploading\n   */\n  complete: boolean;\n  /**\n   * If true, indicates a upload retry is allowed\n   */\n  allowRetry: boolean;\n  /**\n   * If true, indicates there is an error of some sort\n   */\n  hasError: boolean;\n  /**\n   * If true, indicates file is attempting to upload\n   */\n  uploadInit: boolean;\n  /**\n   * Error observable\n   */\n  error$?: Observable<UploadError>;\n  /**\n   * Progress observable\n   */\n  progress$?: Observable<UploadProgress>;\n  /**\n   * File upload subject used to kick-off file upload\n   */\n  upload$?: Subject<HttpRequestOptions>;\n  /**\n   * File upload subject used to destroy file upload request\n   */\n  destroy$?: Subject<boolean>;\n}\n\nexport interface UploadEvent {\n  /**\n   * UPLOAD_STATUS type\n   */\n  type: UPLOAD_STATUS;\n  /**\n   * Payload which accompanies an UPLOAD_STATUS event type\n   */\n  payload: any;\n}\n\nexport interface UploadProgress {\n  /**\n   * Indicates upload progress, in %, for a file upload request\n   */\n  progress: number;\n  /**\n   * Indicates amount loaded for a file upload request\n   */\n  loaded: string;\n  /**\n   * Indicates total file size for a file upload request\n   */\n  total: string;\n}\n\nexport interface UploadError {\n  /**\n   * Error object\n   */\n  error: Error;\n  /**\n   * Error message\n   */\n  message: string;\n}\n\nexport interface HttpRequestOptions {\n  /**\n   * Outgoing headers for this request\n   */\n  headers?: HttpHeaders;\n  /**\n   * Whether this request should be made in a way that exposes progress events <br>\n   * Default: <code>true</code>\n   */\n  reportProgress?: boolean;\n  /**\n   * Http params to accompany a request\n   */\n  params?: HttpParams;\n  /**\n   * Outgoing URL parameters\n   */\n  withCredentials?: boolean;\n}\n",
      "properties": [
        {
          "name": "headers",
          "type": "HttpHeaders",
          "optional": true,
          "description": "<p>Outgoing headers for this request</p>\n",
          "line": 161
        },
        {
          "name": "params",
          "type": "HttpParams",
          "optional": true,
          "description": "<p>Http params to accompany a request</p>\n",
          "line": 170
        },
        {
          "name": "reportProgress",
          "type": "boolean",
          "optional": true,
          "description": "<p>Whether this request should be made in a way that exposes progress events <br>\nDefault: <code>true</code></p>\n",
          "line": 166
        },
        {
          "name": "withCredentials",
          "type": "boolean",
          "optional": true,
          "description": "<p>Outgoing URL parameters</p>\n",
          "line": 174
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "InputKeyupEvent",
      "id": "interface-InputKeyupEvent-ce5b0c45f6d179dbc0d16bea3b640981",
      "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
      "type": "interface",
      "sourceCode": "export type ComboboxType =\n  | 'none'\n  | 'manual'\n  | 'auto'\n  | 'inline';\n\nexport type FilterFunction = (\n  val: string,\n  term: string\n) => boolean;\n\nexport interface InputKeyupEvent {\n  /**\n   * Input key up event.\n   */\n  event: Event;\n  /**\n   * Key value of item.\n   */\n  value: string;\n}\n\nexport interface ListItemSelectEvent {\n  /**\n   * Selection event of item.\n   */\n  event: Event;\n  /**\n   * Index of item.\n   */\n  index: number;\n}\n\nexport interface ListDataObject {\n  /**\n   * Display label of item.\n   */\n  label: string;\n  /**\n   * Key value of item.\n   */\n  value: string;\n}\n\nexport type ListDataType =\n  | Array<string>\n  | Array<ListDataObject>;\n",
      "properties": [
        {
          "name": "event",
          "type": "Event",
          "optional": false,
          "description": "<p>Input key up event.</p>\n",
          "line": 16
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "<p>Key value of item.</p>\n",
          "line": 20
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ListDataObject",
      "id": "interface-ListDataObject-ce5b0c45f6d179dbc0d16bea3b640981",
      "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
      "type": "interface",
      "sourceCode": "export type ComboboxType =\n  | 'none'\n  | 'manual'\n  | 'auto'\n  | 'inline';\n\nexport type FilterFunction = (\n  val: string,\n  term: string\n) => boolean;\n\nexport interface InputKeyupEvent {\n  /**\n   * Input key up event.\n   */\n  event: Event;\n  /**\n   * Key value of item.\n   */\n  value: string;\n}\n\nexport interface ListItemSelectEvent {\n  /**\n   * Selection event of item.\n   */\n  event: Event;\n  /**\n   * Index of item.\n   */\n  index: number;\n}\n\nexport interface ListDataObject {\n  /**\n   * Display label of item.\n   */\n  label: string;\n  /**\n   * Key value of item.\n   */\n  value: string;\n}\n\nexport type ListDataType =\n  | Array<string>\n  | Array<ListDataObject>;\n",
      "properties": [
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "<p>Display label of item.</p>\n",
          "line": 38
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "<p>Key value of item.</p>\n",
          "line": 42
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ListItem",
      "id": "interface-ListItem-9dcc82d115a6c14606b293d8030c3546",
      "file": "projects/vds-lib/src/lib/nav/nav.constants.ts",
      "type": "interface",
      "sourceCode": "export interface Button {\n  label: string;\n  listboxes: Array<ListItem>;\n}\n\nexport interface ListItem {\n  label: string;\n}\n\nexport interface NavData {\n  href: string;\n  component: any;\n  role: 'link' | 'disclosure';\n  parent: any;\n}\n\nexport const NAV_DEFAULT = {\n  name: 'nav',\n  altText: 'Visa',\n  class: {\n    active: 'vds-state--selected',\n    default: 'vds-tab',\n  },\n  menu: 'visa_menu',\n  close: 'visa_close',\n  down: 'arrow-expand',\n  up: 'visa_dropdown-up',\n  navOpenIcon: 'visa_arrow-previous',\n  navOpenText: 'open arrow',\n  navCloseIcon: 'visa_arrow-next',\n  navCloseText: 'close arrow',\n  orientation: 'horizontal',\n  skipLabel: 'Skip to main content',\n  skipPath: '',\n  src: 'assets/logos/visa/visa_vbm_wht.svg',\n  srcLight: 'assets/logos/visa/visa_vbm_blu.svg',\n  path: '',\n  openWidth: '240px',\n  closeWidth: '56px',\n  vertical: 'vertical',\n};\n\nexport enum NavPosition {\n  FIXED = 'fixed',\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n}\n\nexport enum NavStrategy {\n  // stored values\n  NoneStored = 'None Stored',\n  RootStored = 'Root Stored',\n  DisclosureStored = 'Disclosure Stored',\n  SublinkStored = 'Sublink Stored',\n  // incoming values\n  RootIncoming = 'Root Incoming',\n  DisclosureIncoming = 'Disclosure Incoming',\n  SublinkIncoming = 'Sublink Incoming',\n  // Top Level States\n  FromMiniState = 'From Mini State',\n  FromFullState = 'From Full State',\n}\n\nexport enum NavColorScheme {\n  /**\n   * Sets the colorscheme to default theme.\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets the colorscheme to consumer theme.\n   */\n  CONSUMER = 'consumer',\n  /**\n   * Sets the colorscheme to marketing theme.\n   */\n  MARKETING = 'marketing',\n  /**\n   * Sets the colorscheme to light theme.\n   */\n  LIGHT = 'light',\n}\n\nexport abstract class NavChild {\n  abstract open();\n  abstract close();\n}\n",
      "properties": [
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ListItemSelectEvent",
      "id": "interface-ListItemSelectEvent-ce5b0c45f6d179dbc0d16bea3b640981",
      "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
      "type": "interface",
      "sourceCode": "export type ComboboxType =\n  | 'none'\n  | 'manual'\n  | 'auto'\n  | 'inline';\n\nexport type FilterFunction = (\n  val: string,\n  term: string\n) => boolean;\n\nexport interface InputKeyupEvent {\n  /**\n   * Input key up event.\n   */\n  event: Event;\n  /**\n   * Key value of item.\n   */\n  value: string;\n}\n\nexport interface ListItemSelectEvent {\n  /**\n   * Selection event of item.\n   */\n  event: Event;\n  /**\n   * Index of item.\n   */\n  index: number;\n}\n\nexport interface ListDataObject {\n  /**\n   * Display label of item.\n   */\n  label: string;\n  /**\n   * Key value of item.\n   */\n  value: string;\n}\n\nexport type ListDataType =\n  | Array<string>\n  | Array<ListDataObject>;\n",
      "properties": [
        {
          "name": "event",
          "type": "Event",
          "optional": false,
          "description": "<p>Selection event of item.</p>\n",
          "line": 27
        },
        {
          "name": "index",
          "type": "number",
          "optional": false,
          "description": "<p>Index of item.</p>\n",
          "line": 31
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "NavData",
      "id": "interface-NavData-9dcc82d115a6c14606b293d8030c3546",
      "file": "projects/vds-lib/src/lib/nav/nav.constants.ts",
      "type": "interface",
      "sourceCode": "export interface Button {\n  label: string;\n  listboxes: Array<ListItem>;\n}\n\nexport interface ListItem {\n  label: string;\n}\n\nexport interface NavData {\n  href: string;\n  component: any;\n  role: 'link' | 'disclosure';\n  parent: any;\n}\n\nexport const NAV_DEFAULT = {\n  name: 'nav',\n  altText: 'Visa',\n  class: {\n    active: 'vds-state--selected',\n    default: 'vds-tab',\n  },\n  menu: 'visa_menu',\n  close: 'visa_close',\n  down: 'arrow-expand',\n  up: 'visa_dropdown-up',\n  navOpenIcon: 'visa_arrow-previous',\n  navOpenText: 'open arrow',\n  navCloseIcon: 'visa_arrow-next',\n  navCloseText: 'close arrow',\n  orientation: 'horizontal',\n  skipLabel: 'Skip to main content',\n  skipPath: '',\n  src: 'assets/logos/visa/visa_vbm_wht.svg',\n  srcLight: 'assets/logos/visa/visa_vbm_blu.svg',\n  path: '',\n  openWidth: '240px',\n  closeWidth: '56px',\n  vertical: 'vertical',\n};\n\nexport enum NavPosition {\n  FIXED = 'fixed',\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n}\n\nexport enum NavStrategy {\n  // stored values\n  NoneStored = 'None Stored',\n  RootStored = 'Root Stored',\n  DisclosureStored = 'Disclosure Stored',\n  SublinkStored = 'Sublink Stored',\n  // incoming values\n  RootIncoming = 'Root Incoming',\n  DisclosureIncoming = 'Disclosure Incoming',\n  SublinkIncoming = 'Sublink Incoming',\n  // Top Level States\n  FromMiniState = 'From Mini State',\n  FromFullState = 'From Full State',\n}\n\nexport enum NavColorScheme {\n  /**\n   * Sets the colorscheme to default theme.\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets the colorscheme to consumer theme.\n   */\n  CONSUMER = 'consumer',\n  /**\n   * Sets the colorscheme to marketing theme.\n   */\n  MARKETING = 'marketing',\n  /**\n   * Sets the colorscheme to light theme.\n   */\n  LIGHT = 'light',\n}\n\nexport abstract class NavChild {\n  abstract open();\n  abstract close();\n}\n",
      "properties": [
        {
          "name": "component",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "href",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "parent",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "role",
          "type": "\"link\" | \"disclosure\"",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "NavSelect",
      "id": "interface-NavSelect-a343645e00c445101e2502dd18a4171d",
      "file": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
      "type": "interface",
      "sourceCode": "export const MENU_TYPES = {\n  icon: 'icon',\n  dropdown: 'dropdown',\n  initials: 'initials',\n};\n\nexport const NAVMENU_DEFAULT = {\n  name: 'menu',\n};\n\nexport interface NavSelect {\n  /**\n   * The routing path of the selected component.\n   */\n  href?: string;\n  /**\n   * The reference of the selected component.\n   */\n  component: any;\n  /**\n   * A flag determining if the selected component is part of\n   * a larger navigation child component.\n   */\n  isNested?: boolean;\n  /**\n   * The name of the parent component, if it exists.\n   */\n  parent?: any;\n  /**\n   * The role of the selected component. (disclosure, navmenu, or navlink).\n   */\n  role?: string;\n}\n",
      "properties": [
        {
          "name": "component",
          "type": "any",
          "optional": false,
          "description": "<p>The reference of the selected component.</p>\n",
          "line": 19
        },
        {
          "name": "href",
          "type": "string",
          "optional": true,
          "description": "<p>The routing path of the selected component.</p>\n",
          "line": 15
        },
        {
          "name": "isNested",
          "type": "boolean",
          "optional": true,
          "description": "<p>A flag determining if the selected component is part of\na larger navigation child component.</p>\n",
          "line": 24
        },
        {
          "name": "parent",
          "type": "any",
          "optional": true,
          "description": "<p>The name of the parent component, if it exists.</p>\n",
          "line": 28
        },
        {
          "name": "role",
          "type": "string",
          "optional": true,
          "description": "<p>The role of the selected component. (disclosure, navmenu, or navlink).</p>\n",
          "line": 32
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "PageEvent",
      "id": "interface-PageEvent-8f3d8687da997518f303a94ec1c44cbc",
      "file": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
      "type": "interface",
      "sourceCode": "export const sortFn = (a, b) => a - b;\n\nexport interface PageEvent {\n  /**\n   * Index of the page that was selected previously\n   */\n  previousPageIndex: number;\n  /**\n   * The current page index\n   */\n  pageIndex: number;\n  /**\n   * Number of items to display on a page\n   */\n  pageSize: number;\n  /**\n   * The current total number of items being paged\n   */\n  length: number;\n}\n\nexport const PAGINATION = {\n  DEFAULT_PAGESIZE: 20,\n  PAGE_LIMIT: 9,\n  START_END_LIMIT: 7,\n  MIDDLE_LIMIT: 5,\n  DATA_ATTR_PAGE_SIZE_ITEM: 'data-item-size',\n};\n",
      "properties": [
        {
          "name": "length",
          "type": "number",
          "optional": false,
          "description": "<p>The current total number of items being paged</p>\n",
          "line": 19
        },
        {
          "name": "pageIndex",
          "type": "number",
          "optional": false,
          "description": "<p>The current page index</p>\n",
          "line": 11
        },
        {
          "name": "pageSize",
          "type": "number",
          "optional": false,
          "description": "<p>Number of items to display on a page</p>\n",
          "line": 15
        },
        {
          "name": "previousPageIndex",
          "type": "number",
          "optional": false,
          "description": "<p>Index of the page that was selected previously</p>\n",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "RowActionEvent",
      "id": "interface-RowActionEvent-09f63096d5bf4c3713f75d98b4130d5c",
      "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
      "type": "interface",
      "sourceCode": "export const DATATABLE = {\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n};\n\nexport interface GroupHeaderItem {\n  value: string;\n  span: number;\n  ignore: boolean;\n}\n\nexport interface Sortable {\n  id: string | number;\n  direction?: SortDirection;\n  type?: ColumnType;\n  sortFn?: SortFn;\n}\n\nexport type SortFn = (\n  a: string,\n  b: string,\n  {  }?: Sortable\n) => 0 | 1 | -1;\n\nexport enum ColumnType {\n  /**\n   * Assumes column type is an anchor tag\n   */\n  LINK = 'link',\n\n  /**\n   * Assumes column type is an anchor tag\n   */\n  EMAIL = 'email',\n\n  /**\n   * Assumes column type is a date\n   */\n  DATE = 'date',\n\n  /**\n   * Assumes column type is a button\n   */\n  BUTTON = 'button',\n\n  /**\n   * Assumes column type is a series of buttons and/or anchor tags\n   */\n  ACTIONS = 'actions',\n}\n\nexport enum SortDirection {\n  /**\n   * Ascending sort direction\n   */\n  ASC = 'asc',\n  /**\n   * Descending sort direction\n   */\n  DESC = 'desc',\n}\n\nexport enum RowActionType {\n  /**\n   * No row actions\n   */\n  NONE = 'none',\n  /**\n   * Single select row action\n   */\n  SINGLE = 'single',\n  /**\n   * Multi select row action\n   */\n  MULTI = 'multi',\n  /**\n   * Expandable row action\n   */\n  EXPAND = 'expand',\n}\n\nexport interface ColumnDataItem {\n  /**\n   * Column header unique id\n   */\n  id: string;\n  /**\n   * Column header display text\n   */\n  value: string;\n  /**\n   * Column header ColumnType\n   */\n  type?: ColumnType | RowActionType;\n  /**\n   * Column header \"Group Header\" text\n   */\n  header?: string;\n  /**\n   * Column header tooltip display text <br>\n   * Toolip will display if not an empty string\n   */\n  tooltipValue?: string;\n  /**\n   * Column header sort function to overwrite default behavior\n   */\n  sortFn?: SortFn;\n  /**\n   * If true, column header will be filtered from display on first render\n   */\n  isColumnFiltered?: boolean;\n  /**\n   * If true, column header will be sortable\n   */\n  isSortable?: boolean;\n\n  /**\n   * Set internally by component\n   */\n  isRowAction?: boolean;\n}\n\nexport interface CellActionEvent {\n  /**\n   * Cell data object\n   */\n  cell: object;\n  /**\n   * Row data object\n   */\n  row: object;\n}\n\nexport interface SortEvent {\n  /**\n   * Current sort header id\n   */\n  id: string | number;\n  /**\n   * Current sort header direction\n   */\n  direction: SortDirection;\n  /**\n   * Current sort header type\n   */\n  type: ColumnType;\n}\n\nexport interface RowActionEvent {\n  /**\n   * Whether row action button is selected\n   */\n  checked: boolean;\n  /**\n   * Whether row action button is from header\n   */\n  isHeaderSelected: boolean;\n  /**\n   * Row data object\n   */\n  row: object;\n  /**\n   * Array of currently selected row data objects\n   */\n  selectionArray: object[];\n}\n",
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "optional": false,
          "description": "<p>Whether row action button is selected</p>\n",
          "line": 157
        },
        {
          "name": "isHeaderSelected",
          "type": "boolean",
          "optional": false,
          "description": "<p>Whether row action button is from header</p>\n",
          "line": 161
        },
        {
          "name": "row",
          "type": "object",
          "optional": false,
          "description": "<p>Row data object</p>\n",
          "line": 165
        },
        {
          "name": "selectionArray",
          "type": "object[]",
          "optional": false,
          "description": "<p>Array of currently selected row data objects</p>\n",
          "line": 169
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "SelectOptionChange",
      "id": "interface-SelectOptionChange-d3448fe0420531f42838f9b9d55569e6",
      "file": "projects/vds-lib/src/lib/select/select.constant.ts",
      "type": "interface",
      "sourceCode": "import { SelectComponent } from './select.component';\n\nexport const SELECT = {\n  PREFIX: {\n    ID: 'vds-select-',\n    ERROR_ID: 'vds-select-error-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n};\n\nexport interface SelectOptionChange {\n  /**\n   * Select Component Instance.\n   */\n  source: SelectComponent;\n  /**\n   * Key value selected.\n   */\n  value: string | number;\n}\n",
      "properties": [
        {
          "name": "source",
          "type": "SelectComponent",
          "optional": false,
          "description": "<p>Select Component Instance.</p>\n",
          "line": 18
        },
        {
          "name": "value",
          "type": "string | number",
          "optional": false,
          "description": "<p>Key value selected.</p>\n",
          "line": 22
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Sortable",
      "id": "interface-Sortable-09f63096d5bf4c3713f75d98b4130d5c",
      "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
      "type": "interface",
      "sourceCode": "export const DATATABLE = {\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n};\n\nexport interface GroupHeaderItem {\n  value: string;\n  span: number;\n  ignore: boolean;\n}\n\nexport interface Sortable {\n  id: string | number;\n  direction?: SortDirection;\n  type?: ColumnType;\n  sortFn?: SortFn;\n}\n\nexport type SortFn = (\n  a: string,\n  b: string,\n  {  }?: Sortable\n) => 0 | 1 | -1;\n\nexport enum ColumnType {\n  /**\n   * Assumes column type is an anchor tag\n   */\n  LINK = 'link',\n\n  /**\n   * Assumes column type is an anchor tag\n   */\n  EMAIL = 'email',\n\n  /**\n   * Assumes column type is a date\n   */\n  DATE = 'date',\n\n  /**\n   * Assumes column type is a button\n   */\n  BUTTON = 'button',\n\n  /**\n   * Assumes column type is a series of buttons and/or anchor tags\n   */\n  ACTIONS = 'actions',\n}\n\nexport enum SortDirection {\n  /**\n   * Ascending sort direction\n   */\n  ASC = 'asc',\n  /**\n   * Descending sort direction\n   */\n  DESC = 'desc',\n}\n\nexport enum RowActionType {\n  /**\n   * No row actions\n   */\n  NONE = 'none',\n  /**\n   * Single select row action\n   */\n  SINGLE = 'single',\n  /**\n   * Multi select row action\n   */\n  MULTI = 'multi',\n  /**\n   * Expandable row action\n   */\n  EXPAND = 'expand',\n}\n\nexport interface ColumnDataItem {\n  /**\n   * Column header unique id\n   */\n  id: string;\n  /**\n   * Column header display text\n   */\n  value: string;\n  /**\n   * Column header ColumnType\n   */\n  type?: ColumnType | RowActionType;\n  /**\n   * Column header \"Group Header\" text\n   */\n  header?: string;\n  /**\n   * Column header tooltip display text <br>\n   * Toolip will display if not an empty string\n   */\n  tooltipValue?: string;\n  /**\n   * Column header sort function to overwrite default behavior\n   */\n  sortFn?: SortFn;\n  /**\n   * If true, column header will be filtered from display on first render\n   */\n  isColumnFiltered?: boolean;\n  /**\n   * If true, column header will be sortable\n   */\n  isSortable?: boolean;\n\n  /**\n   * Set internally by component\n   */\n  isRowAction?: boolean;\n}\n\nexport interface CellActionEvent {\n  /**\n   * Cell data object\n   */\n  cell: object;\n  /**\n   * Row data object\n   */\n  row: object;\n}\n\nexport interface SortEvent {\n  /**\n   * Current sort header id\n   */\n  id: string | number;\n  /**\n   * Current sort header direction\n   */\n  direction: SortDirection;\n  /**\n   * Current sort header type\n   */\n  type: ColumnType;\n}\n\nexport interface RowActionEvent {\n  /**\n   * Whether row action button is selected\n   */\n  checked: boolean;\n  /**\n   * Whether row action button is from header\n   */\n  isHeaderSelected: boolean;\n  /**\n   * Row data object\n   */\n  row: object;\n  /**\n   * Array of currently selected row data objects\n   */\n  selectionArray: object[];\n}\n",
      "properties": [
        {
          "name": "direction",
          "type": "SortDirection",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "id",
          "type": "string | number",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "sortFn",
          "type": "SortFn",
          "optional": true,
          "description": "",
          "line": 20
        },
        {
          "name": "type",
          "type": "ColumnType",
          "optional": true,
          "description": "",
          "line": 19
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "SortEvent",
      "id": "interface-SortEvent-09f63096d5bf4c3713f75d98b4130d5c",
      "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
      "type": "interface",
      "sourceCode": "export const DATATABLE = {\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n};\n\nexport interface GroupHeaderItem {\n  value: string;\n  span: number;\n  ignore: boolean;\n}\n\nexport interface Sortable {\n  id: string | number;\n  direction?: SortDirection;\n  type?: ColumnType;\n  sortFn?: SortFn;\n}\n\nexport type SortFn = (\n  a: string,\n  b: string,\n  {  }?: Sortable\n) => 0 | 1 | -1;\n\nexport enum ColumnType {\n  /**\n   * Assumes column type is an anchor tag\n   */\n  LINK = 'link',\n\n  /**\n   * Assumes column type is an anchor tag\n   */\n  EMAIL = 'email',\n\n  /**\n   * Assumes column type is a date\n   */\n  DATE = 'date',\n\n  /**\n   * Assumes column type is a button\n   */\n  BUTTON = 'button',\n\n  /**\n   * Assumes column type is a series of buttons and/or anchor tags\n   */\n  ACTIONS = 'actions',\n}\n\nexport enum SortDirection {\n  /**\n   * Ascending sort direction\n   */\n  ASC = 'asc',\n  /**\n   * Descending sort direction\n   */\n  DESC = 'desc',\n}\n\nexport enum RowActionType {\n  /**\n   * No row actions\n   */\n  NONE = 'none',\n  /**\n   * Single select row action\n   */\n  SINGLE = 'single',\n  /**\n   * Multi select row action\n   */\n  MULTI = 'multi',\n  /**\n   * Expandable row action\n   */\n  EXPAND = 'expand',\n}\n\nexport interface ColumnDataItem {\n  /**\n   * Column header unique id\n   */\n  id: string;\n  /**\n   * Column header display text\n   */\n  value: string;\n  /**\n   * Column header ColumnType\n   */\n  type?: ColumnType | RowActionType;\n  /**\n   * Column header \"Group Header\" text\n   */\n  header?: string;\n  /**\n   * Column header tooltip display text <br>\n   * Toolip will display if not an empty string\n   */\n  tooltipValue?: string;\n  /**\n   * Column header sort function to overwrite default behavior\n   */\n  sortFn?: SortFn;\n  /**\n   * If true, column header will be filtered from display on first render\n   */\n  isColumnFiltered?: boolean;\n  /**\n   * If true, column header will be sortable\n   */\n  isSortable?: boolean;\n\n  /**\n   * Set internally by component\n   */\n  isRowAction?: boolean;\n}\n\nexport interface CellActionEvent {\n  /**\n   * Cell data object\n   */\n  cell: object;\n  /**\n   * Row data object\n   */\n  row: object;\n}\n\nexport interface SortEvent {\n  /**\n   * Current sort header id\n   */\n  id: string | number;\n  /**\n   * Current sort header direction\n   */\n  direction: SortDirection;\n  /**\n   * Current sort header type\n   */\n  type: ColumnType;\n}\n\nexport interface RowActionEvent {\n  /**\n   * Whether row action button is selected\n   */\n  checked: boolean;\n  /**\n   * Whether row action button is from header\n   */\n  isHeaderSelected: boolean;\n  /**\n   * Row data object\n   */\n  row: object;\n  /**\n   * Array of currently selected row data objects\n   */\n  selectionArray: object[];\n}\n",
      "properties": [
        {
          "name": "direction",
          "type": "SortDirection",
          "optional": false,
          "description": "<p>Current sort header direction</p>\n",
          "line": 146
        },
        {
          "name": "id",
          "type": "string | number",
          "optional": false,
          "description": "<p>Current sort header id</p>\n",
          "line": 142
        },
        {
          "name": "type",
          "type": "ColumnType",
          "optional": false,
          "description": "<p>Current sort header type</p>\n",
          "line": 150
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "Star",
      "id": "interface-Star-2509d82e43b85ae18ab27ee763292316",
      "file": "projects/vds-lib/src/lib/rating/rating.interfaces.ts",
      "type": "interface",
      "sourceCode": "export interface Star {\n  focused: boolean;\n  hovered: boolean;\n  id: number;\n  selected: boolean;\n}\n",
      "properties": [
        {
          "name": "focused",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "hovered",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "id",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "selected",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "SubCircle",
      "id": "interface-SubCircle-6a40e547a1d4d837fdab38063b649719",
      "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
      "type": "interface",
      "sourceCode": "export interface Circle {\n  OUTER: SubCircle;\n  INNER: SubCircle;\n  DIMENSION: number;\n  CX: number;\n  CY: number;\n  R: number;\n}\n\ninterface SubCircle {\n  STROKE_DASHARRAY: string;\n  STROKE_DASHOFFSET: string;\n}\n\nconst LARGE_CIRCLE: Circle = {\n  OUTER: {\n    STROKE_DASHARRAY: '255, 7',\n    STROKE_DASHOFFSET: '3',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '180, 180',\n    STROKE_DASHOFFSET: '101',\n  },\n  DIMENSION: 112,\n  CX: 56,\n  CY: 56,\n  R: 54,\n};\n\nconst SMALL_CIRCLE: Circle = {\n  OUTER: {\n    STROKE_DASHARRAY: '90, 8',\n    STROKE_DASHOFFSET: '50',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '135, 100',\n    STROKE_DASHOFFSET: '90',\n  },\n  DIMENSION: 64,\n  CX: 32,\n  CY: 32,\n  R: 30,\n};\n\nexport const PROGRESS_GAUGE = {\n  DEFAULT: {\n    TITLE: 'Application',\n    SUBTITLE: 'February 11 , 2054',\n    DETAILS: 'Not Started',\n    SIZE: {\n      LARGE: 'large',\n      SMALL: 'small',\n    },\n    CIRCLE_REF: {\n      LARGE: LARGE_CIRCLE,\n      SMALL: SMALL_CIRCLE,\n    },\n    STROKE_WIDTH: 4,\n  },\n  ERROR: 'VDS: \"setStatus\" method given wrong parameter',\n};\n\nexport enum ProgressGaugeStatus {\n  DEFAULT = 'default',\n  PROGRESS = 'progress',\n  COMPLETED = 'completed',\n  APPROVED = 'approved',\n}\n",
      "properties": [
        {
          "name": "STROKE_DASHARRAY",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "STROKE_DASHOFFSET",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "TooltipOption",
      "id": "interface-TooltipOption-f5174d512fd4f9eba835467620d0e833",
      "file": "projects/vds-lib/src/lib/tooltip/tooltip.constant.ts",
      "type": "interface",
      "sourceCode": "export const TOOLTIP = {\n  POSITION: {\n    BOTTOM: {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'bottom',\n    },\n    LEFT: {\n      offsetX: 0,\n      offsetY: 0,\n    },\n    RIGHT: {\n      originX: 'center',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: 48,\n      offsetY: 0,\n    },\n    TOP: {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetX: 0,\n      offsetY: -16,\n    },\n  },\n};\n\nexport interface TooltipOption {\n  /**\n   * The position of the tooltip. top, left, bottom, or right.\n   */\n  position: string;\n  /**\n   * The message that is displayed when the tooltip is activated.\n   */\n  content: string;\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "string",
          "optional": false,
          "description": "<p>The message that is displayed when the tooltip is activated.</p>\n",
          "line": 40
        },
        {
          "name": "position",
          "type": "string",
          "optional": false,
          "description": "<p>The position of the tooltip. top, left, bottom, or right.</p>\n",
          "line": 36
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "UploadError",
      "id": "interface-UploadError-e082dd01bf6611da513685ff4b8ef010",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
      "type": "interface",
      "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport {\n  HttpParams,\n  HttpHeaders,\n} from '@angular/common/http';\n\nexport const FILEUPLOAD = {\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n};\n\nexport enum UPLOAD_STATUS {\n  /**\n   * Upload status when a file is added for upload\n   */\n  ADD = 'ADD',\n  /**\n   * Upload status when a file is removed\n   */\n  REMOVE = 'REMOVE',\n  /**\n   * Upload status when a file upload is retried\n   */\n  RETRY = 'RETRY',\n  /**\n   * Upload status when a form is submitted\n   */\n  SUBMIT = 'SUBMIT',\n  /**\n   * Upload status for file upload progress\n   */\n  PROGRESS = 'PROGRESS',\n  /**\n   * Upload status when a file upload completes\n   */\n  COMPLETE = 'COMPLETE',\n  /**\n   * Upload status when all file uploads are complete\n   */\n  COMPLETE_ALL = 'COMPLETE_ALL',\n  /**\n   * Upload status when there is an error\n   */\n  ERROR = 'ERROR',\n}\n\nexport enum UPLOAD_ERROR_MSG {\n  SIZE = 'The file is too big. Upload a file less than 100MB in size.',\n  INVALID_NAME = 'The file name has characters that are not allowed: / \\\\ < > : * \" ? | ',\n  INVALID_GENERIC = 'An unexpected error happened during upload.',\n  INVALID_NETWORK = 'Network issues interrupted the file upload.',\n}\n\nexport interface UploadItem {\n  /**\n   * Upload item internal ID\n   */\n  __id: number;\n  /**\n   * Upload item File upload reference\n   */\n  file: File;\n  /**\n   * Upload item visa icon to use\n   */\n  icon: string;\n  /**\n   * If true, indicates item has finished uploading\n   */\n  complete: boolean;\n  /**\n   * If true, indicates a upload retry is allowed\n   */\n  allowRetry: boolean;\n  /**\n   * If true, indicates there is an error of some sort\n   */\n  hasError: boolean;\n  /**\n   * If true, indicates file is attempting to upload\n   */\n  uploadInit: boolean;\n  /**\n   * Error observable\n   */\n  error$?: Observable<UploadError>;\n  /**\n   * Progress observable\n   */\n  progress$?: Observable<UploadProgress>;\n  /**\n   * File upload subject used to kick-off file upload\n   */\n  upload$?: Subject<HttpRequestOptions>;\n  /**\n   * File upload subject used to destroy file upload request\n   */\n  destroy$?: Subject<boolean>;\n}\n\nexport interface UploadEvent {\n  /**\n   * UPLOAD_STATUS type\n   */\n  type: UPLOAD_STATUS;\n  /**\n   * Payload which accompanies an UPLOAD_STATUS event type\n   */\n  payload: any;\n}\n\nexport interface UploadProgress {\n  /**\n   * Indicates upload progress, in %, for a file upload request\n   */\n  progress: number;\n  /**\n   * Indicates amount loaded for a file upload request\n   */\n  loaded: string;\n  /**\n   * Indicates total file size for a file upload request\n   */\n  total: string;\n}\n\nexport interface UploadError {\n  /**\n   * Error object\n   */\n  error: Error;\n  /**\n   * Error message\n   */\n  message: string;\n}\n\nexport interface HttpRequestOptions {\n  /**\n   * Outgoing headers for this request\n   */\n  headers?: HttpHeaders;\n  /**\n   * Whether this request should be made in a way that exposes progress events <br>\n   * Default: <code>true</code>\n   */\n  reportProgress?: boolean;\n  /**\n   * Http params to accompany a request\n   */\n  params?: HttpParams;\n  /**\n   * Outgoing URL parameters\n   */\n  withCredentials?: boolean;\n}\n",
      "properties": [
        {
          "name": "error",
          "type": "Error",
          "optional": false,
          "description": "<p>Error object</p>\n",
          "line": 150
        },
        {
          "name": "message",
          "type": "string",
          "optional": false,
          "description": "<p>Error message</p>\n",
          "line": 154
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "UploadEvent",
      "id": "interface-UploadEvent-e082dd01bf6611da513685ff4b8ef010",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
      "type": "interface",
      "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport {\n  HttpParams,\n  HttpHeaders,\n} from '@angular/common/http';\n\nexport const FILEUPLOAD = {\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n};\n\nexport enum UPLOAD_STATUS {\n  /**\n   * Upload status when a file is added for upload\n   */\n  ADD = 'ADD',\n  /**\n   * Upload status when a file is removed\n   */\n  REMOVE = 'REMOVE',\n  /**\n   * Upload status when a file upload is retried\n   */\n  RETRY = 'RETRY',\n  /**\n   * Upload status when a form is submitted\n   */\n  SUBMIT = 'SUBMIT',\n  /**\n   * Upload status for file upload progress\n   */\n  PROGRESS = 'PROGRESS',\n  /**\n   * Upload status when a file upload completes\n   */\n  COMPLETE = 'COMPLETE',\n  /**\n   * Upload status when all file uploads are complete\n   */\n  COMPLETE_ALL = 'COMPLETE_ALL',\n  /**\n   * Upload status when there is an error\n   */\n  ERROR = 'ERROR',\n}\n\nexport enum UPLOAD_ERROR_MSG {\n  SIZE = 'The file is too big. Upload a file less than 100MB in size.',\n  INVALID_NAME = 'The file name has characters that are not allowed: / \\\\ < > : * \" ? | ',\n  INVALID_GENERIC = 'An unexpected error happened during upload.',\n  INVALID_NETWORK = 'Network issues interrupted the file upload.',\n}\n\nexport interface UploadItem {\n  /**\n   * Upload item internal ID\n   */\n  __id: number;\n  /**\n   * Upload item File upload reference\n   */\n  file: File;\n  /**\n   * Upload item visa icon to use\n   */\n  icon: string;\n  /**\n   * If true, indicates item has finished uploading\n   */\n  complete: boolean;\n  /**\n   * If true, indicates a upload retry is allowed\n   */\n  allowRetry: boolean;\n  /**\n   * If true, indicates there is an error of some sort\n   */\n  hasError: boolean;\n  /**\n   * If true, indicates file is attempting to upload\n   */\n  uploadInit: boolean;\n  /**\n   * Error observable\n   */\n  error$?: Observable<UploadError>;\n  /**\n   * Progress observable\n   */\n  progress$?: Observable<UploadProgress>;\n  /**\n   * File upload subject used to kick-off file upload\n   */\n  upload$?: Subject<HttpRequestOptions>;\n  /**\n   * File upload subject used to destroy file upload request\n   */\n  destroy$?: Subject<boolean>;\n}\n\nexport interface UploadEvent {\n  /**\n   * UPLOAD_STATUS type\n   */\n  type: UPLOAD_STATUS;\n  /**\n   * Payload which accompanies an UPLOAD_STATUS event type\n   */\n  payload: any;\n}\n\nexport interface UploadProgress {\n  /**\n   * Indicates upload progress, in %, for a file upload request\n   */\n  progress: number;\n  /**\n   * Indicates amount loaded for a file upload request\n   */\n  loaded: string;\n  /**\n   * Indicates total file size for a file upload request\n   */\n  total: string;\n}\n\nexport interface UploadError {\n  /**\n   * Error object\n   */\n  error: Error;\n  /**\n   * Error message\n   */\n  message: string;\n}\n\nexport interface HttpRequestOptions {\n  /**\n   * Outgoing headers for this request\n   */\n  headers?: HttpHeaders;\n  /**\n   * Whether this request should be made in a way that exposes progress events <br>\n   * Default: <code>true</code>\n   */\n  reportProgress?: boolean;\n  /**\n   * Http params to accompany a request\n   */\n  params?: HttpParams;\n  /**\n   * Outgoing URL parameters\n   */\n  withCredentials?: boolean;\n}\n",
      "properties": [
        {
          "name": "payload",
          "type": "any",
          "optional": false,
          "description": "<p>Payload which accompanies an UPLOAD_STATUS event type</p>\n",
          "line": 128
        },
        {
          "name": "type",
          "type": "UPLOAD_STATUS",
          "optional": false,
          "description": "<p>UPLOAD_STATUS type</p>\n",
          "line": 124
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "UploadItem",
      "id": "interface-UploadItem-e082dd01bf6611da513685ff4b8ef010",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
      "type": "interface",
      "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport {\n  HttpParams,\n  HttpHeaders,\n} from '@angular/common/http';\n\nexport const FILEUPLOAD = {\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n};\n\nexport enum UPLOAD_STATUS {\n  /**\n   * Upload status when a file is added for upload\n   */\n  ADD = 'ADD',\n  /**\n   * Upload status when a file is removed\n   */\n  REMOVE = 'REMOVE',\n  /**\n   * Upload status when a file upload is retried\n   */\n  RETRY = 'RETRY',\n  /**\n   * Upload status when a form is submitted\n   */\n  SUBMIT = 'SUBMIT',\n  /**\n   * Upload status for file upload progress\n   */\n  PROGRESS = 'PROGRESS',\n  /**\n   * Upload status when a file upload completes\n   */\n  COMPLETE = 'COMPLETE',\n  /**\n   * Upload status when all file uploads are complete\n   */\n  COMPLETE_ALL = 'COMPLETE_ALL',\n  /**\n   * Upload status when there is an error\n   */\n  ERROR = 'ERROR',\n}\n\nexport enum UPLOAD_ERROR_MSG {\n  SIZE = 'The file is too big. Upload a file less than 100MB in size.',\n  INVALID_NAME = 'The file name has characters that are not allowed: / \\\\ < > : * \" ? | ',\n  INVALID_GENERIC = 'An unexpected error happened during upload.',\n  INVALID_NETWORK = 'Network issues interrupted the file upload.',\n}\n\nexport interface UploadItem {\n  /**\n   * Upload item internal ID\n   */\n  __id: number;\n  /**\n   * Upload item File upload reference\n   */\n  file: File;\n  /**\n   * Upload item visa icon to use\n   */\n  icon: string;\n  /**\n   * If true, indicates item has finished uploading\n   */\n  complete: boolean;\n  /**\n   * If true, indicates a upload retry is allowed\n   */\n  allowRetry: boolean;\n  /**\n   * If true, indicates there is an error of some sort\n   */\n  hasError: boolean;\n  /**\n   * If true, indicates file is attempting to upload\n   */\n  uploadInit: boolean;\n  /**\n   * Error observable\n   */\n  error$?: Observable<UploadError>;\n  /**\n   * Progress observable\n   */\n  progress$?: Observable<UploadProgress>;\n  /**\n   * File upload subject used to kick-off file upload\n   */\n  upload$?: Subject<HttpRequestOptions>;\n  /**\n   * File upload subject used to destroy file upload request\n   */\n  destroy$?: Subject<boolean>;\n}\n\nexport interface UploadEvent {\n  /**\n   * UPLOAD_STATUS type\n   */\n  type: UPLOAD_STATUS;\n  /**\n   * Payload which accompanies an UPLOAD_STATUS event type\n   */\n  payload: any;\n}\n\nexport interface UploadProgress {\n  /**\n   * Indicates upload progress, in %, for a file upload request\n   */\n  progress: number;\n  /**\n   * Indicates amount loaded for a file upload request\n   */\n  loaded: string;\n  /**\n   * Indicates total file size for a file upload request\n   */\n  total: string;\n}\n\nexport interface UploadError {\n  /**\n   * Error object\n   */\n  error: Error;\n  /**\n   * Error message\n   */\n  message: string;\n}\n\nexport interface HttpRequestOptions {\n  /**\n   * Outgoing headers for this request\n   */\n  headers?: HttpHeaders;\n  /**\n   * Whether this request should be made in a way that exposes progress events <br>\n   * Default: <code>true</code>\n   */\n  reportProgress?: boolean;\n  /**\n   * Http params to accompany a request\n   */\n  params?: HttpParams;\n  /**\n   * Outgoing URL parameters\n   */\n  withCredentials?: boolean;\n}\n",
      "properties": [
        {
          "name": "__id",
          "type": "number",
          "optional": false,
          "description": "<p>Upload item internal ID</p>\n",
          "line": 77
        },
        {
          "name": "allowRetry",
          "type": "boolean",
          "optional": false,
          "description": "<p>If true, indicates a upload retry is allowed</p>\n",
          "line": 93
        },
        {
          "name": "complete",
          "type": "boolean",
          "optional": false,
          "description": "<p>If true, indicates item has finished uploading</p>\n",
          "line": 89
        },
        {
          "name": "destroy$",
          "type": "Subject<boolean>",
          "optional": true,
          "description": "<p>File upload subject used to destroy file upload request</p>\n",
          "line": 117
        },
        {
          "name": "error$",
          "type": "Observable<UploadError>",
          "optional": true,
          "description": "<p>Error observable</p>\n",
          "line": 105
        },
        {
          "name": "file",
          "type": "File",
          "optional": false,
          "description": "<p>Upload item File upload reference</p>\n",
          "line": 81
        },
        {
          "name": "hasError",
          "type": "boolean",
          "optional": false,
          "description": "<p>If true, indicates there is an error of some sort</p>\n",
          "line": 97
        },
        {
          "name": "icon",
          "type": "string",
          "optional": false,
          "description": "<p>Upload item visa icon to use</p>\n",
          "line": 85
        },
        {
          "name": "progress$",
          "type": "Observable<UploadProgress>",
          "optional": true,
          "description": "<p>Progress observable</p>\n",
          "line": 109
        },
        {
          "name": "upload$",
          "type": "Subject<HttpRequestOptions>",
          "optional": true,
          "description": "<p>File upload subject used to kick-off file upload</p>\n",
          "line": 113
        },
        {
          "name": "uploadInit",
          "type": "boolean",
          "optional": false,
          "description": "<p>If true, indicates file is attempting to upload</p>\n",
          "line": 101
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "UploadProgress",
      "id": "interface-UploadProgress-e082dd01bf6611da513685ff4b8ef010",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
      "type": "interface",
      "sourceCode": "import { Observable, Subject } from 'rxjs';\nimport {\n  HttpParams,\n  HttpHeaders,\n} from '@angular/common/http';\n\nexport const FILEUPLOAD = {\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n};\n\nexport enum UPLOAD_STATUS {\n  /**\n   * Upload status when a file is added for upload\n   */\n  ADD = 'ADD',\n  /**\n   * Upload status when a file is removed\n   */\n  REMOVE = 'REMOVE',\n  /**\n   * Upload status when a file upload is retried\n   */\n  RETRY = 'RETRY',\n  /**\n   * Upload status when a form is submitted\n   */\n  SUBMIT = 'SUBMIT',\n  /**\n   * Upload status for file upload progress\n   */\n  PROGRESS = 'PROGRESS',\n  /**\n   * Upload status when a file upload completes\n   */\n  COMPLETE = 'COMPLETE',\n  /**\n   * Upload status when all file uploads are complete\n   */\n  COMPLETE_ALL = 'COMPLETE_ALL',\n  /**\n   * Upload status when there is an error\n   */\n  ERROR = 'ERROR',\n}\n\nexport enum UPLOAD_ERROR_MSG {\n  SIZE = 'The file is too big. Upload a file less than 100MB in size.',\n  INVALID_NAME = 'The file name has characters that are not allowed: / \\\\ < > : * \" ? | ',\n  INVALID_GENERIC = 'An unexpected error happened during upload.',\n  INVALID_NETWORK = 'Network issues interrupted the file upload.',\n}\n\nexport interface UploadItem {\n  /**\n   * Upload item internal ID\n   */\n  __id: number;\n  /**\n   * Upload item File upload reference\n   */\n  file: File;\n  /**\n   * Upload item visa icon to use\n   */\n  icon: string;\n  /**\n   * If true, indicates item has finished uploading\n   */\n  complete: boolean;\n  /**\n   * If true, indicates a upload retry is allowed\n   */\n  allowRetry: boolean;\n  /**\n   * If true, indicates there is an error of some sort\n   */\n  hasError: boolean;\n  /**\n   * If true, indicates file is attempting to upload\n   */\n  uploadInit: boolean;\n  /**\n   * Error observable\n   */\n  error$?: Observable<UploadError>;\n  /**\n   * Progress observable\n   */\n  progress$?: Observable<UploadProgress>;\n  /**\n   * File upload subject used to kick-off file upload\n   */\n  upload$?: Subject<HttpRequestOptions>;\n  /**\n   * File upload subject used to destroy file upload request\n   */\n  destroy$?: Subject<boolean>;\n}\n\nexport interface UploadEvent {\n  /**\n   * UPLOAD_STATUS type\n   */\n  type: UPLOAD_STATUS;\n  /**\n   * Payload which accompanies an UPLOAD_STATUS event type\n   */\n  payload: any;\n}\n\nexport interface UploadProgress {\n  /**\n   * Indicates upload progress, in %, for a file upload request\n   */\n  progress: number;\n  /**\n   * Indicates amount loaded for a file upload request\n   */\n  loaded: string;\n  /**\n   * Indicates total file size for a file upload request\n   */\n  total: string;\n}\n\nexport interface UploadError {\n  /**\n   * Error object\n   */\n  error: Error;\n  /**\n   * Error message\n   */\n  message: string;\n}\n\nexport interface HttpRequestOptions {\n  /**\n   * Outgoing headers for this request\n   */\n  headers?: HttpHeaders;\n  /**\n   * Whether this request should be made in a way that exposes progress events <br>\n   * Default: <code>true</code>\n   */\n  reportProgress?: boolean;\n  /**\n   * Http params to accompany a request\n   */\n  params?: HttpParams;\n  /**\n   * Outgoing URL parameters\n   */\n  withCredentials?: boolean;\n}\n",
      "properties": [
        {
          "name": "loaded",
          "type": "string",
          "optional": false,
          "description": "<p>Indicates amount loaded for a file upload request</p>\n",
          "line": 139
        },
        {
          "name": "progress",
          "type": "number",
          "optional": false,
          "description": "<p>Indicates upload progress, in %, for a file upload request</p>\n",
          "line": 135
        },
        {
          "name": "total",
          "type": "string",
          "optional": false,
          "description": "<p>Indicates total file size for a file upload request</p>\n",
          "line": 143
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "AlertService",
      "id": "injectable-AlertService-7fa3eb96d5785c4596627740ac0cecdb",
      "file": "projects/vds-lib/src/lib/alert.service.ts",
      "properties": [
        {
          "name": "existingComponent",
          "type": "ComponentRef<AlertComponent>",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methods": [
        {
          "name": "_destroyAlert",
          "args": [
            {
              "name": "alert",
              "type": "ComponentRef<AlertComponent>"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "alert",
              "type": "ComponentRef<AlertComponent>",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_generateAlert",
          "args": [],
          "optional": false,
          "returnType": "ComponentRef<AlertComponent>",
          "typeParameters": [],
          "line": 30,
          "modifierKind": [112]
        },
        {
          "name": "_generateAndSetAlert",
          "args": [
            {
              "name": "config",
              "type": "AlertConfig",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 115,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "config",
              "type": "AlertConfig",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_setProperties",
          "args": [
            {
              "name": "alertRef",
              "type": "ComponentRef<AlertComponent>"
            },
            {
              "name": "config",
              "type": "AlertConfig"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "alertRef",
              "type": "ComponentRef<AlertComponent>",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "config",
              "type": "AlertConfig",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 141,
          "description": "<p>Closes the alert.</p>\n"
        },
        {
          "name": "open",
          "args": [
            {
              "name": "config",
              "type": "AlertConfig",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85,
          "description": "<p>Opens an alert of the given configuration using label string. <br>\nNOTE: Must provide <code>AlertMessageConfig.label</code></p>\n",
          "jsdoctags": [
            {
              "name": "config",
              "type": "AlertConfig",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "openFromTemplate",
          "args": [
            {
              "name": "config",
              "type": "AlertConfig",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "description": "<p>Opens an alert of the given configuration using label template. <br>\nNOTE: Must provide <code>AlertMessageConfig.labelTemplate</code></p>\n",
          "jsdoctags": [
            {
              "name": "config",
              "type": "AlertConfig",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable, ComponentRef } from '@angular/core';\nimport { AlertComponent } from './alert/alert.component';\nimport { VdsLibService } from './vds-lib.service';\nimport {\n  AlertConfig,\n  AlertType,\n} from './alert/alert.constants';\n\nexport const ALERT_SERVICE = {\n  MESSAGING: {\n    MISSING_CONFIG:\n      '[VDS NG] Alert missing alert config. Please refer API',\n    MISSING_LABEL:\n      '[VDS NG] Alert missing message label. Please refer API',\n    MISSING_LABEL_TEMPLATE:\n      '[VDS NG] Alert missing message label template. Please refer API',\n    ACTION_ITEMS_EXCEED:\n      '[VDS NG] Alert actions exceed 2 items. UI Pattern not recommended.',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  existingComponent: ComponentRef<AlertComponent>;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  private _generateAlert(): ComponentRef<AlertComponent> {\n    // I don't believe this if statement will ever be true.\n    if (this.existingComponent) {\n      this._destroyAlert(this.existingComponent);\n      return;\n    }\n    const alertRef = this.vdsLibService.insertGlobalComponent(\n      AlertComponent\n    );\n    this.existingComponent = alertRef;\n    return alertRef;\n  }\n\n  private _setProperties(\n    alertRef: ComponentRef<AlertComponent>,\n    config: AlertConfig\n  ) {\n    const details = config.details;\n    const message = config.message;\n    alertRef.instance.message = {\n      label: message.label ? message.label : null,\n      labelTemplate: message.labelTemplate\n        ? message.labelTemplate\n        : null,\n      title: message.title ? message.title : null,\n    };\n    alertRef.instance.details = {\n      alertType:\n        details && details.alertType\n          ? details.alertType\n          : AlertType.INFO,\n      duration:\n        details && details.duration\n          ? details.duration\n          : null,\n      icon: details && details.icon ? details.icon : null,\n      slideIn: details && details.slideIn,\n      slideOut: details && details.slideOut,\n    };\n    alertRef.instance.action = config.action;\n    alertRef.instance.show();\n  }\n\n  private _destroyAlert(\n    alert: ComponentRef<AlertComponent>\n  ) {\n    if (alert.instance && !alert.instance.hasCallback()) {\n      alert.instance.hide();\n    }\n  }\n\n  /**\n   * Opens an alert of the given configuration using label string. <br>\n   * NOTE: Must provide <code>AlertMessageConfig.label</code>\n   */\n  open(config?: AlertConfig): void {\n    if (!config) {\n      console.warn(ALERT_SERVICE.MESSAGING.MISSING_CONFIG);\n      return;\n    }\n    if (!config.message || !config.message.label) {\n      console.warn(ALERT_SERVICE.MESSAGING.MISSING_LABEL);\n      return;\n    }\n    this._generateAndSetAlert(config);\n  }\n\n  /**\n   * Opens an alert of the given configuration using label template. <br>\n   * NOTE: Must provide <code>AlertMessageConfig.labelTemplate</code>\n   */\n  openFromTemplate(config?: AlertConfig): void {\n    if (!config) {\n      console.warn(ALERT_SERVICE.MESSAGING.MISSING_CONFIG);\n      return;\n    }\n    if (!config.message || !config.message.labelTemplate) {\n      console.warn(\n        ALERT_SERVICE.MESSAGING.MISSING_LABEL_TEMPLATE\n      );\n      return;\n    }\n    this._generateAndSetAlert(config);\n  }\n\n  private _generateAndSetAlert(config?: AlertConfig): void {\n    if (\n      this.existingComponent &&\n      this.existingComponent.instance\n    ) {\n      if (this.existingComponent.instance.visible) {\n        return;\n      }\n      if (!this.existingComponent.instance.visible) {\n        this.existingComponent = null;\n      }\n    }\n    if (config.action && config.action.length > 2) {\n      console.warn(\n        ALERT_SERVICE.MESSAGING.ACTION_ITEMS_EXCEED\n      );\n    }\n    const alertRef: ComponentRef<\n      AlertComponent\n    > = this._generateAlert();\n    this._setProperties(alertRef, config);\n  }\n\n  /**\n   * Closes the alert.\n   */\n  close() {\n    if (this.existingComponent) {\n      this._destroyAlert(this.existingComponent);\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "DialogService",
      "id": "injectable-DialogService-2b912a7794911c3c824836e45379748f",
      "file": "projects/vds-lib/src/lib/dialog.service.ts",
      "properties": [
        {
          "name": "existingComponent",
          "type": "ComponentRef<DialogComponent>",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "_destroyDialog",
          "args": [
            {
              "name": "dialog",
              "type": "ComponentRef<DialogComponent>"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "dialog",
              "type": "ComponentRef<DialogComponent>",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_generateDialog",
          "args": [],
          "optional": false,
          "returnType": "ComponentRef<DialogComponent>",
          "typeParameters": [],
          "line": 14,
          "modifierKind": [112]
        },
        {
          "name": "_setProperties",
          "args": [
            {
              "name": "dialogRef",
              "type": "ComponentRef<DialogComponent>"
            },
            {
              "name": "config",
              "type": "DialogConfig"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "dialogRef",
              "type": "ComponentRef<DialogComponent>",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "config",
              "type": "DialogConfig",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "open",
          "args": [
            {
              "name": "config",
              "type": "DialogConfig",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62,
          "description": "<p>Opens a dialog.</p>\n",
          "jsdoctags": [
            {
              "name": "config",
              "type": "DialogConfig",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { ComponentRef, Injectable } from '@angular/core';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { VdsLibService } from './vds-lib.service';\nimport { DialogConfig } from './dialog/dialog.constant';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  existingComponent: ComponentRef<DialogComponent>;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  private _generateDialog(): ComponentRef<DialogComponent> {\n    if (this.existingComponent) {\n      this._destroyDialog(this.existingComponent);\n      return;\n    }\n    const dialogRef = this.vdsLibService.insertGlobalComponent(\n      DialogComponent\n    );\n    this.existingComponent = dialogRef;\n    return dialogRef;\n  }\n\n  private _setProperties(\n    dialogRef: ComponentRef<DialogComponent>,\n    config: DialogConfig\n  ) {\n    const content = config.content;\n    const actions = config.actions;\n    if (config && config.id) {\n      dialogRef.instance.id = config.id;\n    }\n    if (config && config.dialogType) {\n      dialogRef.instance.messageType = config.dialogType;\n    }\n    if (config && config.dialogVariant) {\n      dialogRef.instance.variant = config.dialogVariant;\n    }\n    if (config && content.title) {\n      dialogRef.instance.title = content.title;\n    }\n    if (config && content.body) {\n      dialogRef.instance.dialogBodyTemplate = content.body;\n    }\n    if (config && config.actions) {\n      dialogRef.instance.action = actions;\n    }\n    dialogRef.instance.show();\n  }\n\n  private _destroyDialog(\n    dialog: ComponentRef<DialogComponent>\n  ) {\n    dialog.instance.hide();\n  }\n\n  /**\n   *  Opens a dialog.\n   */\n  open(config?: DialogConfig): void {\n    if (!config) {\n      console.warn(\n        '[VDS NG] Dialog missing dialog config. Please refer API'\n      );\n      return;\n    }\n    if (!config.content) {\n      console.warn(\n        '[VDS NG] Dialog missing dialog content. Please refer API'\n      );\n      return;\n    }\n    if (config.actions && config.actions.length > 2) {\n      console.warn(\n        '[VDS NG] Dialog actions exceed 2 items. UI Pattern not recommended.'\n      );\n    }\n    if (\n      this.existingComponent &&\n      this.existingComponent.instance\n    ) {\n      if (this.existingComponent.instance.isOpen) {\n        return;\n      }\n      if (!this.existingComponent.instance.isOpen) {\n        this.existingComponent = null;\n      }\n    }\n    const dialogRef: ComponentRef<\n      DialogComponent\n    > = this._generateDialog();\n    this._setProperties(dialogRef, config);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "FileUploadService",
      "id": "injectable-FileUploadService-278e891037e9afe7bfed1086e57f6d48",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.service.ts",
      "properties": [
        {
          "name": "_fileMap$",
          "defaultValue": "new BehaviorSubject<\n    Map<string, UploadItem>\n  >(new Map<string, UploadItem>())",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [112]
        },
        {
          "name": "_fileNameMap",
          "defaultValue": "new Map<\n    string,\n    UploadItem\n  >()",
          "type": "Map<string | UploadItem>",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [112]
        },
        {
          "name": "_internalIdIncrem",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [112]
        },
        {
          "name": "_submitComplete$",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [112]
        },
        {
          "name": "customControl",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [114]
        },
        {
          "name": "ERROR",
          "defaultValue": "{\n    SIZE: UPLOAD_ERROR_MSG.SIZE,\n    INVALID_NAME: UPLOAD_ERROR_MSG.INVALID_NAME,\n    INVALID_GENERIC: UPLOAD_ERROR_MSG.INVALID_GENERIC,\n    INVALID_NETWORK: UPLOAD_ERROR_MSG.INVALID_NETWORK,\n  }",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [114]
        },
        {
          "name": "fileMap$",
          "defaultValue": "this._fileMap$.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57,
          "modifierKind": [114]
        },
        {
          "name": "httpOptions",
          "defaultValue": "{}",
          "type": "HttpRequestOptions",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [114]
        },
        {
          "name": "id",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [114]
        },
        {
          "name": "maxFilesize",
          "defaultValue": "FILEUPLOAD.MAX_FILESIZE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [114]
        },
        {
          "name": "multiple",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [114]
        },
        {
          "name": "submitComplete$",
          "defaultValue": "this._submitComplete$.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58,
          "modifierKind": [114]
        },
        {
          "name": "URL",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [114]
        }
      ],
      "methods": [
        {
          "name": "_cleanupObservables",
          "args": [
            {
              "name": "fileName",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 390,
          "jsdoctags": [
            {
              "name": "fileName",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_fileUploadCompleteAction",
          "args": [
            {
              "name": "fileName",
              "type": "string"
            },
            {
              "name": "hasError",
              "type": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 372,
          "jsdoctags": [
            {
              "name": "fileName",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "hasError",
              "type": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_getCountFromFileMap",
          "args": [
            {
              "name": "filterFn",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 478,
          "jsdoctags": [
            {
              "name": "filterFn",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_getFileIconType",
          "args": [
            {
              "name": "file",
              "type": "File"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 442,
          "jsdoctags": [
            {
              "name": "file",
              "type": "File",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_getHttpRequest",
          "args": [
            {
              "name": "file",
              "type": ""
            },
            {
              "name": "userHttpOptions",
              "type": "HttpRequestOptions",
              "defaultValue": "{}"
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 249,
          "jsdoctags": [
            {
              "name": "file",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "userHttpOptions",
              "type": "HttpRequestOptions",
              "defaultValue": "{}",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_handleUploadError",
          "args": [
            {
              "name": "err",
              "type": ""
            },
            {
              "name": "fileName",
              "type": ""
            },
            {
              "name": "error$",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 345,
          "jsdoctags": [
            {
              "name": "err",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "fileName",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "error$",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_handleUploadProgress",
          "args": [
            {
              "name": "res",
              "type": ""
            },
            {
              "name": "fileName",
              "type": ""
            },
            {
              "name": "progress$",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 298,
          "jsdoctags": [
            {
              "name": "res",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "fileName",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "progress$",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_initFileUpload",
          "args": [
            {
              "name": "file",
              "type": ""
            },
            {
              "name": "autoSubmit",
              "type": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 188,
          "jsdoctags": [
            {
              "name": "file",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "autoSubmit",
              "type": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_updateSubmitComplete",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 407
        },
        {
          "name": "_validateFile",
          "args": [
            {
              "name": "file",
              "type": "File"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 429,
          "jsdoctags": [
            {
              "name": "file",
              "type": "File",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "add",
          "args": [
            {
              "name": "files",
              "type": "FileList"
            },
            {
              "name": "autoSubmit",
              "type": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 73,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "files",
              "type": "FileList",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "autoSubmit",
              "type": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68
        },
        {
          "name": "remove",
          "args": [
            {
              "name": "fileName",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 99,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "fileName",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "retry",
          "args": [
            {
              "name": "fileName",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 122,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "fileName",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "submit",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 153,
          "modifierKind": [114]
        }
      ],
      "description": "",
      "sourceCode": "import {\n  EventEmitter,\n  Injectable,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpEventType,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport {\n  BehaviorSubject,\n  Observable,\n  of,\n  Subject,\n} from 'rxjs';\nimport {\n  UploadProgress,\n  UploadError,\n  UPLOAD_ERROR_MSG,\n  UploadItem,\n  UPLOAD_STATUS,\n  HttpRequestOptions,\n  FILEUPLOAD,\n} from './fileupload.constants';\nimport {\n  catchError,\n  map,\n  switchMap,\n  takeUntil,\n} from 'rxjs/operators';\n\n@Injectable()\nexport class FileUploadService implements OnDestroy {\n  @Output() uploadEvent = new EventEmitter();\n  @Output() downloadEvent = new EventEmitter();\n  @Output() directoryDeleteEvent = new EventEmitter();\n\n  private _internalIdIncrem = 0;\n  private _fileNameMap: Map<string, UploadItem> = new Map<\n    string,\n    UploadItem\n  >();\n  private _fileMap$ = new BehaviorSubject<\n    Map<string, UploadItem>\n  >(new Map<string, UploadItem>());\n  private _submitComplete$ = new Subject();\n\n  public id = null;\n  public multiple = false;\n  public URL = '';\n  public httpOptions: HttpRequestOptions = {};\n  public customControl = false;\n  public maxFilesize = FILEUPLOAD.MAX_FILESIZE;\n  public fileMap$ = this._fileMap$.asObservable();\n  public submitComplete$ = this._submitComplete$.asObservable();\n  public ERROR = {\n    SIZE: UPLOAD_ERROR_MSG.SIZE,\n    INVALID_NAME: UPLOAD_ERROR_MSG.INVALID_NAME,\n    INVALID_GENERIC: UPLOAD_ERROR_MSG.INVALID_GENERIC,\n    INVALID_NETWORK: UPLOAD_ERROR_MSG.INVALID_NETWORK,\n  };\n\n  constructor(private http: HttpClient) {}\n\n  ngOnDestroy() {\n    this._fileMap$.complete();\n    this._submitComplete$.complete();\n  }\n\n  public add(files: FileList, autoSubmit = false) {\n    if (files && files.length > 0) {\n      this._submitComplete$.next(false);\n\n      Object.values(files)\n        .slice(0, this.multiple ? files.length : 1)\n        .forEach((file: File) => {\n          if (!this._fileNameMap.has(file.name)) {\n            this._initFileUpload(file, autoSubmit);\n          }\n        });\n\n      this._fileMap$.next(this._fileNameMap);\n\n      this.uploadEvent.emit({\n        id: this.id,\n        type: UPLOAD_STATUS.ADD,\n        payload: this._fileNameMap,\n      });\n\n      return this._fileMap$.getValue();\n    }\n\n    return false;\n  }\n\n  public remove(fileName) {\n    if (this._fileNameMap.has(fileName)) {\n      const removedFile = this._fileNameMap.get(fileName);\n\n      this._cleanupObservables(fileName);\n      this._fileNameMap.delete(fileName);\n      this._fileMap$.next(this._fileNameMap);\n\n      this.uploadEvent.emit({\n        id: this.id,\n        type: UPLOAD_STATUS.REMOVE,\n        payload: removedFile,\n      });\n\n      // need to throw this on the next microtask else the remove emit won't happen\n      Promise.resolve(() => this._updateSubmitComplete());\n\n      return this._fileMap$.getValue();\n    }\n\n    return false;\n  }\n\n  public retry(fileName) {\n    if (this._fileNameMap.has(fileName)) {\n      const fileInfo = this._fileNameMap.get(fileName);\n\n      if (fileInfo.upload$) {\n        this._fileNameMap.set(fileName, {\n          ...fileInfo,\n          uploadInit: true,\n          complete: false,\n          hasError: false,\n        });\n\n        this._fileMap$.next(this._fileNameMap);\n\n        fileInfo.upload$.next({});\n\n        this.uploadEvent.emit({\n          id: this.id,\n          type: UPLOAD_STATUS.RETRY,\n          payload: fileInfo,\n        });\n\n        Promise.resolve(() => this._updateSubmitComplete());\n\n        return this._fileMap$.getValue();\n      }\n    }\n\n    return false;\n  }\n\n  public submit() {\n    if (this._fileNameMap.size <= 0) {\n      this._submitComplete$.next(true);\n\n      return this._fileMap$.getValue();\n    }\n\n    this._fileNameMap.forEach(\n      ({ upload$, progress$, hasError, file }) => {\n        if (upload$ && (hasError || !progress$)) {\n          this._fileNameMap.set(file.name, {\n            ...this._fileNameMap.get(file.name),\n            uploadInit: true,\n            complete: false,\n            hasError: false,\n          });\n\n          if (!this.customControl) {\n            upload$.next({});\n          }\n        }\n      }\n    );\n\n    this._fileMap$.next(this._fileNameMap);\n\n    this.uploadEvent.emit({\n      id: this.id,\n      type: UPLOAD_STATUS.SUBMIT,\n      payload: this._fileNameMap,\n    });\n\n    return this._fileMap$.getValue();\n  }\n\n  _initFileUpload(file, autoSubmit = false): void {\n    const fileName = file.name;\n    const errorMessage = this._validateFile(file);\n    const hasError = errorMessage !== '';\n\n    this._fileNameMap.set(fileName, {\n      __id: ++this._internalIdIncrem,\n      file,\n      icon: this._getFileIconType(file),\n      complete: false,\n      allowRetry: false,\n      uploadInit: false,\n      hasError,\n    });\n\n    if (!hasError) {\n      const upload$ = new Subject<any>();\n\n      upload$\n        .asObservable()\n        .pipe(\n          switchMap(\n            (httpOptions: HttpRequestOptions = {}) => {\n              this._fileNameMap.set(fileName, {\n                ...this._fileNameMap.get(fileName),\n                uploadInit: true,\n              });\n\n              return this._getHttpRequest(\n                file,\n                httpOptions\n              );\n            }\n          )\n        )\n        .subscribe();\n\n      this._fileNameMap.set(fileName, {\n        ...this._fileNameMap.get(fileName),\n        upload$,\n      });\n\n      if (autoSubmit && !this.customControl) {\n        upload$.next();\n      }\n    } else {\n      const error$ = new BehaviorSubject<UploadError>({\n        message: errorMessage,\n        error: new Error(errorMessage),\n      });\n\n      this._fileNameMap.set(fileName, {\n        ...this._fileNameMap.get(fileName),\n        error$: error$.asObservable(),\n        complete: true,\n      });\n\n      this._updateSubmitComplete();\n    }\n  }\n\n  _getHttpRequest(\n    file,\n    userHttpOptions: HttpRequestOptions = {}\n  ): Observable<any> {\n    const fileName = file.name;\n    const formData = new FormData();\n    const destroy$ = new Subject<boolean>();\n    const error$ = new BehaviorSubject<UploadError>({\n      message: '',\n      error: null,\n    });\n    const progress$ = new BehaviorSubject<UploadProgress>({\n      progress: 0,\n      loaded: '0',\n      total: '0',\n    });\n\n    formData.append(`userfile`, file, fileName);\n\n    this._fileNameMap.set(fileName, {\n      ...this._fileNameMap.get(fileName),\n      error$: error$.asObservable(),\n      progress$: progress$.asObservable(),\n      destroy$,\n    });\n\n    return this.http\n      .request(\n        new HttpRequest('POST', this.URL, formData, {\n          ...this.httpOptions,\n          ...userHttpOptions,\n          reportProgress: true,\n        })\n      )\n      .pipe(\n        takeUntil(destroy$),\n        map((res) =>\n          this._handleUploadProgress(\n            res,\n            fileName,\n            progress$\n          )\n        ),\n        catchError((err) =>\n          this._handleUploadError(err, fileName, error$)\n        )\n      );\n  }\n\n  _handleUploadProgress(res, fileName, progress$) {\n    const fileInfo = this._fileNameMap.get(fileName);\n\n    if (\n      res.type === HttpEventType.Sent &&\n      !fileInfo.allowRetry\n    ) {\n      this._fileNameMap.set(fileName, {\n        ...fileInfo,\n        allowRetry: true,\n      });\n    } else if (res.type === HttpEventType.UploadProgress) {\n      const progressInfo = {\n        progress: Math.round(\n          (100 * res.loaded) / res.total\n        ),\n        loaded: (res.loaded / 1000000).toFixed(2),\n        total: (res.total / 1000000).toFixed(2),\n      };\n\n      progress$.next(progressInfo);\n\n      this.uploadEvent.emit({\n        id: this.id,\n        type: UPLOAD_STATUS.PROGRESS,\n        payload: {\n          response: res,\n          file: fileInfo,\n          ...progressInfo,\n        },\n      });\n    } else if (res instanceof HttpResponse) {\n      this._fileUploadCompleteAction(fileName);\n      this._cleanupObservables(fileName);\n\n      this.uploadEvent.emit({\n        id: this.id,\n        type: UPLOAD_STATUS.COMPLETE,\n        payload: fileInfo,\n      });\n\n      this._updateSubmitComplete();\n    }\n\n    return of(res);\n  }\n\n  _handleUploadError(err, fileName, error$) {\n    this._fileUploadCompleteAction(fileName, true);\n    const message =\n      err && err.status >= 400 && err.status < 600\n        ? this.ERROR.INVALID_NETWORK\n        : this.ERROR.INVALID_GENERIC;\n\n    error$.next({\n      message,\n      error: err,\n    });\n\n    this.uploadEvent.emit({\n      id: this.id,\n      type: UPLOAD_STATUS.ERROR,\n      payload: {\n        message,\n        error: err,\n        file: this._fileNameMap.get(fileName),\n      },\n    });\n\n    this._updateSubmitComplete();\n\n    return of(err);\n  }\n\n  _fileUploadCompleteAction(\n    fileName: string,\n    hasError = false\n  ): void {\n    if (this._fileNameMap.has(fileName)) {\n      const fileInfo = this._fileNameMap.get(fileName);\n\n      this._fileNameMap.set(fileName, {\n        ...fileInfo,\n        complete: true,\n        allowRetry: !hasError ? false : fileInfo.allowRetry,\n        hasError,\n      });\n\n      this._fileMap$.next(this._fileNameMap);\n    }\n  }\n\n  _cleanupObservables(fileName: string): void {\n    if (this._fileNameMap.has(fileName)) {\n      const { upload$, destroy$ } = this._fileNameMap.get(\n        fileName\n      );\n\n      if (upload$) {\n        upload$.complete();\n      }\n\n      if (destroy$) {\n        destroy$.next(true);\n        destroy$.complete();\n      }\n    }\n  }\n\n  _updateSubmitComplete(): void {\n    const uploadValidItemCount = this._getCountFromFileMap(\n      (val) => !val.hasError\n    );\n    const uploadCompleteCount = this._getCountFromFileMap(\n      (val) => !val.hasError && val.complete\n    );\n    const isComplete =\n      uploadValidItemCount === 0 ||\n      uploadCompleteCount === uploadValidItemCount;\n\n    this._submitComplete$.next(isComplete);\n\n    if (isComplete) {\n      this.uploadEvent.emit({\n        id: this.id,\n        type: UPLOAD_STATUS.COMPLETE_ALL,\n        payload: this._fileNameMap,\n      });\n    }\n  }\n\n  _validateFile(file: File): string {\n    if (\n      file.size !== 0 &&\n      file.size / 1000000 > this.maxFilesize\n    ) {\n      return this.ERROR.SIZE;\n    } else if (/[/\\\\<>:*\"?|']/.test(file.name)) {\n      return this.ERROR.INVALID_NAME;\n    }\n\n    return '';\n  }\n\n  _getFileIconType(file: File): string {\n    if (!file) {\n      return '';\n    }\n\n    const fileType = file.type.toLowerCase();\n\n    if (fileType.includes('image')) {\n      if (/\\.(jpg|jpeg)$/i.test(file.name)) {\n        return FILEUPLOAD.ICONS.JPG;\n      } else if (/\\.(png)$/i.test(file.name)) {\n        return FILEUPLOAD.ICONS.PNG;\n      } else {\n        return FILEUPLOAD.ICONS.PHOTO;\n      }\n    } else if (fileType.includes('video')) {\n      if (/\\.(mov)$/i.test(file.name)) {\n        return FILEUPLOAD.ICONS.MOV;\n      } else if (/\\.(avi)$/i.test(file.name)) {\n        return FILEUPLOAD.ICONS.AVI;\n      }\n    } else if (fileType.includes('pdf')) {\n      return FILEUPLOAD.ICONS.PDF;\n    } else if (fileType.includes('json')) {\n      return FILEUPLOAD.ICONS.JSON;\n    } else if (\n      /\\.(xls|xlsx|xlsm|xlsb|)$/i.test(file.name)\n    ) {\n      return FILEUPLOAD.ICONS.XLS;\n    } else if (/\\.(xml?)$/i.test(file.name)) {\n      return FILEUPLOAD.ICONS.XML;\n    }\n\n    return FILEUPLOAD.ICONS.DEFAULT;\n  }\n\n  _getCountFromFileMap(filterFn): number {\n    if (filterFn) {\n      return Array.from(this._fileNameMap.values()).filter(\n        filterFn\n      ).length;\n    }\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient"
          }
        ],
        "line": 64,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "RowSelectionService",
      "id": "injectable-RowSelectionService-62b74b3bf473e7c43dc8adceff3271e8",
      "file": "projects/vds-lib/src/lib/datatable/row-selection.service.ts",
      "properties": [
        {
          "name": "_rowData",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "_stateChange",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "handleExpandLazySelect",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "handleHeaderLazySelect",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 85
        },
        {
          "name": "handleHeaderSelect",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "handleRowMultiSelect",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        },
        {
          "name": "handleRowSingleSelect",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "isHeaderSelected",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "selection",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "_emitStateChange",
          "args": [
            {
              "name": "row",
              "type": ""
            },
            {
              "name": "checked",
              "type": "",
              "defaultValue": "this.selection.indexOf(row) !== -1"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 96,
          "jsdoctags": [
            {
              "name": "row",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "checked",
              "type": "",
              "defaultValue": "this.selection.indexOf(row) !== -1",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13
        },
        {
          "name": "updateState",
          "args": [
            {
              "name": "rowData",
              "type": ""
            },
            {
              "name": "isSingle",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "jsdoctags": [
            {
              "name": "rowData",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "isSingle",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RowSelectionService implements OnDestroy {\n  _rowData = [];\n  _stateChange = new Subject();\n  selection = [];\n  isHeaderSelected = false;\n\n  ngOnDestroy() {\n    this._stateChange.complete();\n  }\n\n  updateState(rowData, isSingle) {\n    if (Array.isArray(rowData)) {\n      this._rowData = rowData.slice();\n\n      this.selection = this._rowData.filter(\n        (row) => row.__rowChecked__\n      );\n\n      if (isSingle) {\n        // if we find more than 1 row selected, we return the first row selection found\n        if (this.selection.length > 0) {\n          this.selection = [this.selection[0]];\n        }\n      } else {\n        this.isHeaderSelected =\n          this._rowData.length === this.selection.length;\n      }\n    }\n  }\n\n  handleHeaderSelect = () => {\n    this.isHeaderSelected = !this.isHeaderSelected;\n    this.selection = this.isHeaderSelected\n      ? this._rowData.slice()\n      : [];\n    this._emitStateChange(null);\n  };\n\n  handleRowMultiSelect = (row) => {\n    const selection = this.selection.slice();\n    const rowIndex = selection.indexOf(row);\n\n    if (rowIndex === -1) {\n      selection.push(row);\n    } else {\n      selection.splice(rowIndex, 1);\n    }\n\n    this.isHeaderSelected =\n      selection.length === this._rowData.length;\n    this.selection = selection;\n    this._emitStateChange(row);\n  };\n\n  handleRowSingleSelect = (row) => {\n    const rowIndex = this.selection.indexOf(row);\n    const selection = rowIndex === -1 ? [row] : [];\n\n    this.isHeaderSelected = false;\n    this.selection = selection;\n    this._emitStateChange(row);\n  };\n\n  handleExpandLazySelect = (row) => {\n    const rowIndex = this.selection.indexOf(row);\n    const checked = rowIndex === -1;\n\n    // we only record when we un-select for the lazy case\n    if (!checked) {\n      const selection = this.selection.slice();\n      selection.splice(rowIndex, 1);\n      this.isHeaderSelected = false;\n      this.selection = selection;\n    }\n\n    this._emitStateChange(row, checked);\n  };\n\n  handleHeaderLazySelect = () => {\n    const isHeaderSelected = !this.isHeaderSelected;\n\n    // we only record when we un-select for the lazy case\n    if (!isHeaderSelected) {\n      this.selection = [];\n    }\n\n    this._emitStateChange(null, isHeaderSelected);\n  };\n\n  _emitStateChange(\n    row,\n    checked = this.selection.indexOf(row) !== -1\n  ) {\n    this._stateChange.next({\n      row,\n      checked,\n      selectionArray: this.selection,\n      isHeaderSelected: this.isHeaderSelected,\n    });\n  }\n}\n",
      "type": "injectable"
    },
    {
      "name": "VdsLibService",
      "id": "injectable-VdsLibService-6ff56b4408b531f5887ce28ea7ab7035",
      "file": "projects/vds-lib/src/lib/vds-lib.service.ts",
      "properties": [
        {
          "name": "navInfo",
          "defaultValue": "new BehaviorSubject<any>(null)",
          "type": "",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [112]
        },
        {
          "name": "navInfo$",
          "defaultValue": "this.navInfo.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "UUIDs",
          "defaultValue": "{}",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [112]
        }
      ],
      "methods": [
        {
          "name": "checkUUID",
          "args": [
            {
              "name": "uuid",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 48,
          "jsdoctags": [
            {
              "name": "uuid",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "name",
              "type": "string",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "deviceMatched",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 124,
          "modifierKind": [112]
        },
        {
          "name": "getBoundingBoxAndCoords",
          "args": [
            {
              "name": "element",
              "type": "HTMLElement"
            },
            {
              "name": "toggleVisibility",
              "type": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "{ left: number; top: number; width: number; height: number; }",
          "typeParameters": [],
          "line": 136,
          "jsdoctags": [
            {
              "name": "element",
              "type": "HTMLElement",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "toggleVisibility",
              "type": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getComponentRootNode",
          "args": [
            {
              "name": "componentRef",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "HTMLElement",
          "typeParameters": [],
          "line": 64,
          "jsdoctags": [
            {
              "name": "componentRef",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getEnumValues",
          "args": [
            {
              "name": "someEnum",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 56,
          "jsdoctags": [
            {
              "name": "someEnum",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getUUID",
          "args": [
            {
              "name": "name",
              "type": "string",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "name",
              "type": "string",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "insertGlobalComponent",
          "args": [
            {
              "name": "componentClassOrFactory",
              "type": "any"
            },
            {
              "name": "detectionSelector",
              "type": "string",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 73,
          "jsdoctags": [
            {
              "name": "componentClassOrFactory",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "detectionSelector",
              "type": "string",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isMobile",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 112
        },
        {
          "name": "setNavInfo",
          "args": [
            {
              "name": "navUpdateInfo",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "navUpdateInfo",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "triageDisabledValue",
          "args": [
            {
              "name": "disabled",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 103,
          "jsdoctags": [
            {
              "name": "disabled",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport {\n  VISIBLE_ELEMENT_PROPS,\n  KNOWN_MOBILE_DEVICES,\n  MOBILE_WIDTH,\n} from './vds-lib.service.constants';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VdsLibService {\n  private UUIDs: any = {};\n  private navInfo = new BehaviorSubject<any>(null);\n  navInfo$ = this.navInfo.asObservable();\n\n  constructor(\n    private appRef: ApplicationRef,\n    private injector: Injector,\n    private componentResolver: ComponentFactoryResolver\n  ) {}\n\n  setNavInfo(navUpdateInfo: any) {\n    this.navInfo.next(navUpdateInfo);\n  }\n\n  getUUID(name?: string): string {\n    name = name ? name : '';\n    const uuid =\n      '' +\n      name +\n      Math.floor(Math.random() * 10).toString() +\n      Math.floor(Math.random() * 10).toString() +\n      Math.floor(Math.random() * 10).toString() +\n      Math.floor(Math.random() * 10).toString() +\n      Math.floor(Math.random() * 10).toString() +\n      Math.floor(Math.random() * 10).toString();\n    return this.checkUUID(uuid, name);\n  }\n\n  checkUUID(uuid: string, name?: string): string {\n    if (this.UUIDs[uuid]) {\n      return this.getUUID(name);\n    }\n    this.UUIDs[uuid] = 1;\n    return uuid;\n  }\n\n  getEnumValues(someEnum: any) {\n    let enumValues: Array<string> = [];\n    for (let value in someEnum) {\n      enumValues.push(value);\n    }\n    return enumValues;\n  }\n\n  getComponentRootNode(componentRef: any): HTMLElement {\n    if (!componentRef.hostView) {\n      return componentRef.element.nativeElement;\n    }\n\n    return (componentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n  }\n\n  insertGlobalComponent(\n    componentClassOrFactory: any,\n    detectionSelector?: string\n  ): any {\n    if (detectionSelector) {\n      const existingComponentInstanceEl: HTMLElement = document.querySelector(\n        detectionSelector\n      );\n      if (existingComponentInstanceEl) {\n        return;\n      }\n    }\n    let factory: any;\n    factory = this.componentResolver.resolveComponentFactory(\n      componentClassOrFactory\n    );\n    const componentReference: ComponentRef<\n      any\n    > = factory.create(this.injector);\n    this.appRef.attachView(componentReference.hostView);\n    const componentElReference: HTMLElement = this.getComponentRootNode(\n      componentReference\n    );\n    document.body.appendChild(componentElReference);\n    componentReference.onDestroy(() => {\n      this.appRef.detachView(componentReference.hostView);\n    });\n    return componentReference;\n  }\n\n  triageDisabledValue(disabled): boolean {\n    const disabledStr = String(disabled).toLowerCase();\n    return !(\n      disabledStr === 'undefined' ||\n      disabledStr === 'null' ||\n      disabledStr === 'false'\n    );\n  }\n\n  isMobile(): boolean {\n    // If user matches any known mobile device, return true\n    if (this.deviceMatched()) {\n      return true;\n    }\n    // If user window width is less than 1024px (taken from web)\n    if (window.innerWidth <= MOBILE_WIDTH) {\n      return true;\n    }\n    return false;\n  }\n\n  private deviceMatched(): boolean {\n    const array: Array<string> = Object.keys(\n      KNOWN_MOBILE_DEVICES\n    ).map((key) => {\n      return KNOWN_MOBILE_DEVICES[key];\n    });\n    const match = array.filter((device) => {\n      navigator.userAgent.match(new RegExp(`/${device}i/`));\n    });\n    return match.length > 0;\n  }\n\n  getBoundingBoxAndCoords(\n    element: HTMLElement,\n    toggleVisibility = false\n  ) {\n    /*\n      toggleVisibity will temporarily fiddle with CSS to ensure\n      that the component is actually getting measurable layout\n      properties at the time that we measure width/height\n    */\n    const currentCSS = {\n      display: element.style.display,\n      visibility: element.style.visibility,\n      position: element.style.position,\n    };\n    if (toggleVisibility) {\n      element.style.display = VISIBLE_ELEMENT_PROPS.display;\n      element.style.visibility =\n        VISIBLE_ELEMENT_PROPS.visibility;\n      element.style.position =\n        VISIBLE_ELEMENT_PROPS.position;\n    }\n    const boundingRect = element.getBoundingClientRect();\n    const left: number = boundingRect.left;\n    const top: number = boundingRect.top;\n    const width: number = boundingRect.width;\n    const height: number = boundingRect.height;\n    if (toggleVisibility) {\n      element.style.display = currentCSS.display;\n      element.style.visibility = currentCSS.visibility;\n      element.style.position = currentCSS.position;\n    }\n    return { left, top, width, height };\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "appRef",
            "type": "ApplicationRef"
          },
          {
            "name": "injector",
            "type": "Injector"
          },
          {
            "name": "componentResolver",
            "type": "ComponentFactoryResolver"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "appRef",
            "type": "ApplicationRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "injector",
            "type": "Injector",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "componentResolver",
            "type": "ComponentFactoryResolver",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    }
  ],
  "classes": [
    {
      "name": "AbstractValueAccessor",
      "id": "class-AbstractValueAccessor-6dce83ff092935569c274ff73976fb12",
      "file": "projects/vds-lib/src/lib/abstract-value-accessor.ts",
      "type": "class",
      "sourceCode": "import { forwardRef } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nexport abstract class AbstractValueAccessor\n  implements ControlValueAccessor {\n  val: any = '';\n\n  get value(): any {\n    return this.val;\n  }\n  set value(v: any) {\n    if (v !== this.val) {\n      this.val = v;\n      this.onChange(v);\n    }\n  }\n\n  writeValue(value: any) {\n    this.val = value;\n    this.onChange(value);\n  }\n\n  onChange = (_) => {};\n\n  onTouched = () => {};\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n\nexport function MakeProvider(type: any) {\n  return {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => type),\n    multi: true,\n  };\n}\n",
      "properties": [
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methods": [
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "accessors": {
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "args": [
              {
                "name": "v",
                "type": "any"
              }
            ],
            "returnType": "void",
            "line": 14,
            "jsdoctags": [
              {
                "name": "v",
                "type": "any",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "value",
            "type": "any",
            "returnType": "any",
            "line": 11
          }
        }
      },
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["ControlValueAccessor"]
    },
    {
      "name": "NavChild",
      "id": "class-NavChild-9dcc82d115a6c14606b293d8030c3546",
      "file": "projects/vds-lib/src/lib/nav/nav.constants.ts",
      "type": "class",
      "sourceCode": "export interface Button {\n  label: string;\n  listboxes: Array<ListItem>;\n}\n\nexport interface ListItem {\n  label: string;\n}\n\nexport interface NavData {\n  href: string;\n  component: any;\n  role: 'link' | 'disclosure';\n  parent: any;\n}\n\nexport const NAV_DEFAULT = {\n  name: 'nav',\n  altText: 'Visa',\n  class: {\n    active: 'vds-state--selected',\n    default: 'vds-tab',\n  },\n  menu: 'visa_menu',\n  close: 'visa_close',\n  down: 'arrow-expand',\n  up: 'visa_dropdown-up',\n  navOpenIcon: 'visa_arrow-previous',\n  navOpenText: 'open arrow',\n  navCloseIcon: 'visa_arrow-next',\n  navCloseText: 'close arrow',\n  orientation: 'horizontal',\n  skipLabel: 'Skip to main content',\n  skipPath: '',\n  src: 'assets/logos/visa/visa_vbm_wht.svg',\n  srcLight: 'assets/logos/visa/visa_vbm_blu.svg',\n  path: '',\n  openWidth: '240px',\n  closeWidth: '56px',\n  vertical: 'vertical',\n};\n\nexport enum NavPosition {\n  FIXED = 'fixed',\n  RELATIVE = 'relative',\n  ABSOLUTE = 'absolute',\n}\n\nexport enum NavStrategy {\n  // stored values\n  NoneStored = 'None Stored',\n  RootStored = 'Root Stored',\n  DisclosureStored = 'Disclosure Stored',\n  SublinkStored = 'Sublink Stored',\n  // incoming values\n  RootIncoming = 'Root Incoming',\n  DisclosureIncoming = 'Disclosure Incoming',\n  SublinkIncoming = 'Sublink Incoming',\n  // Top Level States\n  FromMiniState = 'From Mini State',\n  FromFullState = 'From Full State',\n}\n\nexport enum NavColorScheme {\n  /**\n   * Sets the colorscheme to default theme.\n   */\n  DEFAULT = 'default',\n  /**\n   * Sets the colorscheme to consumer theme.\n   */\n  CONSUMER = 'consumer',\n  /**\n   * Sets the colorscheme to marketing theme.\n   */\n  MARKETING = 'marketing',\n  /**\n   * Sets the colorscheme to light theme.\n   */\n  LIGHT = 'light',\n}\n\nexport abstract class NavChild {\n  abstract open();\n  abstract close();\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 85,
          "modifierKind": [117]
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 84,
          "modifierKind": [117]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "ParentNav",
      "id": "class-ParentNav-bc6df3b5d68faed67ea46dc11b55b948",
      "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
      "type": "class",
      "sourceCode": "export const VISIBLE_ELEMENT_PROPS = {\n  display: 'block',\n  visibility: 'hidden',\n  position: 'absolute',\n};\n\nexport const KNOWN_MOBILE_DEVICES = {\n  ANDROID: 'Android',\n  IPHONE: 'iPhone',\n  WEBOS: 'webOS',\n  IPAD: 'iPad',\n  IPOD: 'Ipod',\n  BLACKBERRY: 'Blackberry',\n  WINDOWS: 'Windows Phone',\n};\n\nexport const MOBILE_WIDTH = 1024;\n\nexport abstract class ParentNav {\n  name: string;\n  isSelected?: boolean;\n  abstract open?();\n  abstract close?();\n}\n",
      "properties": [
        {
          "name": "isSelected",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 21
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methods": [
        {
          "name": "close",
          "args": [],
          "optional": true,
          "returnType": "any",
          "typeParameters": [],
          "line": 23,
          "modifierKind": [117]
        },
        {
          "name": "open",
          "args": [],
          "optional": true,
          "returnType": "any",
          "typeParameters": [],
          "line": 22,
          "modifierKind": [117]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    }
  ],
  "directives": [
    {
      "name": "BlockChildEventDirective",
      "id": "directive-BlockChildEventDirective-13418125a282d783116539b546a47b54",
      "file": "projects/vds-lib/src/lib/disclosure/block-child-event.directive.ts",
      "type": "directive",
      "description": "<p>BlockChildEventDirective use to block child event</p>\n",
      "sourceCode": "import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * BlockChildEventDirective use to block child event\n */\n@Directive({\n  selector: '[vdsBlockChildEvent]',\n})\nexport class BlockChildEventDirective {\n  constructor(private _element: ElementRef) {}\n\n  private _blockEvent: boolean;\n  get blockEvent(): boolean {\n    return this._blockEvent;\n  }\n  @Input('vdsBlockChildEvent')\n  set blockEvent(block: boolean) {\n    this._blockEvent = coerceBooleanProperty(block);\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e) {\n    this.blockChildEvent(e);\n  }\n\n  @HostListener('keyup.enter', ['$event'])\n  enter(e) {\n    this.blockChildEvent(e);\n  }\n\n  @HostListener('keyup.space', ['$event'])\n  space(e) {\n    this.blockChildEvent(e);\n  }\n\n  blockChildEvent(e) {\n    if (this.blockEvent) {\n      e.stopPropagation();\n    }\n  }\n}\n",
      "selector": "[vdsBlockChildEvent]",
      "providers": [],
      "inputsClass": [
        {
          "name": "vdsBlockChildEvent",
          "line": 23,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 28
        },
        {
          "name": "keyup.enter",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 33
        },
        {
          "name": "keyup.space",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 38
        }
      ],
      "propertiesClass": [
        {
          "name": "_blockEvent",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "blockChildEvent",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_element",
            "type": "ElementRef"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "_element",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "blockEvent": {
          "name": "blockEvent",
          "setSignature": {
            "name": "blockEvent",
            "type": "void",
            "args": [
              {
                "name": "block",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 23,
            "jsdoctags": [
              {
                "name": "block",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "blockEvent",
            "type": "boolean",
            "returnType": "boolean",
            "line": 19
          }
        }
      }
    },
    {
      "name": "DisclosureContentDirective",
      "id": "directive-DisclosureContentDirective-66a890a78237790f2f588760eb2411e1",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure-content.directive.ts",
      "type": "directive",
      "description": "<p>put disclosure content inside *vdsDisclosureContent directive</p>\n<p>  &lt;ng-container *vdsDisclosureContent&gt;\n     &lt;vds-listbox\n       [items]=&quot;items&quot;\n     &gt;\n     </vds-listbox>\n</ng-container></p>\n",
      "sourceCode": "import { Directive } from '@angular/core';\n/**\n * put disclosure content inside *vdsDisclosureContent directive\n *\n *  <ng-container *vdsDisclosureContent>\n *     <vds-listbox\n *       [items]=\"items\"\n *     >\n *     </vds-listbox>\n * </ng-container>\n */\n\n@Directive({\n  selector: '[vdsDisclosureContent]',\n})\nexport class DisclosureContentDirective {\n  constructor() {}\n}\n",
      "selector": "[vdsDisclosureContent]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      }
    },
    {
      "name": "DisclosureLazyContentDirective",
      "id": "directive-DisclosureLazyContentDirective-038691032fd24bb37577bf5f921301ed",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure-lazy-content.directive.ts",
      "type": "directive",
      "description": "<p>use *vdpDisclosureLazyContent directive\nwhen you do not want to mount content until disclosure expanded.\nOne use case would be the content is huge like datagrid,\nby using lazy loading, it can boost initial render performance.</p>\n",
      "sourceCode": "import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * use *vdpDisclosureLazyContent directive\n * when you do not want to mount content until disclosure expanded.\n * One use case would be the content is huge like datagrid,\n * by using lazy loading, it can boost initial render performance.\n */\n@Directive({\n  selector: '[vdsDisclosureLazyContent]',\n})\nexport class DisclosureLazyContentDirective {\n  constructor(public _template: TemplateRef<any>) {}\n}\n",
      "selector": "[vdsDisclosureLazyContent]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "_template",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_template",
            "type": "TemplateRef<any>"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "_template",
            "type": "TemplateRef<any>",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "KeyboardFocusDirective",
      "id": "directive-KeyboardFocusDirective-6ecaf91bc9637b761bafb5c87f3024cc",
      "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import {\n  Directive,\n  ElementRef,\n  HostListener,\n  AfterViewChecked,\n} from '@angular/core';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport { merge } from 'rxjs';\nimport { DatatableComponent } from './datatable.component';\n\nconst DATA_FOCUS_DISABLED = 'data-dg-focus-disabled';\nconst DATA_ROW_INDEX = 'data-dg-row-index';\nconst DATA_COLUMN_INDEX = 'data-dg-column-index';\nconst TABINDEX_SELECTOR = '[tabindex]';\nconst ROW_SELECTOR = '[role=\"row\"]';\nconst GRID_CELL_SELECTOR = '[role=\"gridcell\"]';\nconst COLUMN_HEADER_SELECTOR = '[role=\"columnheader\"]';\n\nfunction findElementWithTabIndex(element) {\n  if (\n    !element ||\n    element.nodeName.toLowerCase() === 'table'\n  ) {\n    return;\n  }\n\n  if (element.matches(TABINDEX_SELECTOR)) {\n    return element;\n  }\n\n  return findElementWithTabIndex(element.parentNode);\n}\n\n@Directive({\n  selector: '[vdsKeyboardFocusDatatable]',\n})\nexport class KeyboardFocusDirective\n  implements AfterViewChecked {\n  _focusGrid: HTMLElement[][] = null;\n  _curRowIndex = 0;\n  _curColumnIndex = 0;\n  _updateFocusGrid = false;\n\n  @HostListener('click', ['$event'])\n  handleClick(event) {\n    if (this.dataTable.loading) {\n      return;\n    }\n\n    let focusElement = event.target.querySelector(\n      TABINDEX_SELECTOR\n    );\n\n    if (!focusElement) {\n      if (event.target.matches(TABINDEX_SELECTOR)) {\n        focusElement = event.target;\n      } else if (\n        event.target.parentNode.matches(TABINDEX_SELECTOR)\n      ) {\n        focusElement = event.target.parentNode;\n      } else {\n        focusElement = findElementWithTabIndex(\n          event.target.parentNode\n        );\n      }\n    }\n\n    if (\n      focusElement &&\n      focusElement.getAttribute(DATA_FOCUS_DISABLED) !==\n        'true'\n    ) {\n      this._setCurFocusedElemTabIndex(\n        Number(focusElement.getAttribute(DATA_ROW_INDEX)),\n        Number(\n          focusElement.getAttribute(DATA_COLUMN_INDEX)\n        ),\n        false\n      );\n    }\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyDown(event): void {\n    if (this.dataTable.loading) {\n      return;\n    }\n\n    switch (event.which || event.keyCode) {\n      case UP_ARROW:\n        this._keyDownNextCellLookup(0, -1);\n        break;\n\n      case DOWN_ARROW:\n        this._keyDownNextCellLookup(0, 1);\n        break;\n\n      case LEFT_ARROW:\n        this._keyDownNextCellLookup(-1, 0);\n        break;\n\n      case RIGHT_ARROW:\n        this._keyDownNextCellLookup(1, 0);\n        break;\n\n      case HOME:\n        this._setCurFocusedElemTabIndex(\n          event.ctrlKey ? 0 : this._curRowIndex,\n          0\n        );\n        break;\n\n      case END:\n        const curRowIndex = event.ctrlKey\n          ? this._focusGrid.length - 1\n          : this._curRowIndex;\n        this._setCurFocusedElemTabIndex(\n          curRowIndex,\n          this._focusGrid[curRowIndex].length - 1\n        );\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n\n  constructor(\n    public element: ElementRef,\n    public dataTable: DatatableComponent\n  ) {\n    merge(\n      this.dataTable.tableStateChange$,\n      this.dataTable.columnStateChange$,\n      this.dataTable.expandStateChange$\n    ).subscribe(() => (this._updateFocusGrid = true));\n  }\n\n  ngAfterViewChecked() {\n    if (this._updateFocusGrid) {\n      this._updateFocusGrid = false;\n\n      Promise.resolve().then(() => {\n        this._focusGrid = this._setupFocusGrid();\n        this._setCurFocusedElemTabIndex(\n          this._curRowIndex,\n          this._curColumnIndex,\n          false\n        );\n      });\n    }\n  }\n\n  _keyDownNextCellLookup(dirX: number, dirY: number): void {\n    const rowCount = this._focusGrid.length - 1;\n    const rowIndex = Math.min(\n      Math.max(this._curRowIndex + dirY, 0),\n      rowCount\n    );\n    const numberOfColumns = Math.max(\n      0,\n      this._focusGrid[rowIndex] &&\n        this._focusGrid[rowIndex].length - 1\n    );\n    const columnIndex =\n      numberOfColumns !== undefined\n        ? Math.min(\n            this._curColumnIndex + dirX,\n            numberOfColumns\n          )\n        : -1;\n    const focusElement = this._focusGrid[rowIndex][\n      columnIndex\n    ];\n    const isFocusElementDisabled =\n      focusElement &&\n      focusElement.getAttribute(DATA_FOCUS_DISABLED) ===\n        'true';\n\n    if (\n      focusElement === undefined ||\n      isFocusElementDisabled\n    ) {\n      if (dirX === 0) {\n        const newDirY = dirY + Math.sign(dirY);\n        if (\n          this._curRowIndex + newDirY >= 0 &&\n          this._curRowIndex + newDirY <= rowCount\n        ) {\n          return this._keyDownNextCellLookup(dirX, newDirY);\n        }\n      } else {\n        const newDirX = dirX + Math.sign(dirX);\n        if (\n          this._curColumnIndex + newDirX >= 0 &&\n          this._curColumnIndex + newDirX <= numberOfColumns\n        ) {\n          return this._keyDownNextCellLookup(newDirX, dirY);\n        }\n      }\n    }\n\n    if (focusElement && !isFocusElementDisabled) {\n      this._setCurFocusedElemTabIndex(\n        rowIndex,\n        columnIndex\n      );\n    }\n  }\n\n  _setupFocusGrid(): any[] {\n    const focusGrid = [];\n\n    Array.from(\n      this.element.nativeElement.querySelectorAll(\n        ROW_SELECTOR\n      )\n    ).forEach((tr: HTMLElement, i: number) => {\n      const rowArray = [];\n      tr.querySelectorAll(\n        `${GRID_CELL_SELECTOR}, ${COLUMN_HEADER_SELECTOR}`\n      ).forEach((column: HTMLElement, j: number) => {\n        const focusableElements = column.querySelectorAll(\n          TABINDEX_SELECTOR + ':not(svg)'\n        );\n\n        if (focusableElements.length > 0) {\n          column.removeAttribute('tabindex');\n\n          focusableElements.forEach(\n            (focusElement: HTMLElement, k: number) => {\n              focusElement.setAttribute(\n                DATA_ROW_INDEX,\n                i.toString()\n              );\n              focusElement.setAttribute(\n                DATA_COLUMN_INDEX,\n                (j + k).toString()\n              );\n              rowArray.push(focusElement);\n            }\n          );\n        } else if (column.matches(TABINDEX_SELECTOR)) {\n          column.setAttribute(DATA_ROW_INDEX, i.toString());\n          column.setAttribute(\n            DATA_COLUMN_INDEX,\n            j.toString()\n          );\n          rowArray.push(column);\n        }\n      });\n\n      focusGrid.push(rowArray);\n    });\n\n    return focusGrid;\n  }\n\n  _setCurFocusedElemTabIndex(\n    rowIndex: number,\n    columnIndex: number,\n    allowFocus = true\n  ): void {\n    if (\n      Array.isArray(this._focusGrid) &&\n      this._focusGrid.length\n    ) {\n      if (\n        this._focusGrid[this._curRowIndex] &&\n        this._focusGrid[this._curRowIndex][\n          this._curColumnIndex\n        ]\n      ) {\n        this._focusGrid[this._curRowIndex][\n          this._curColumnIndex\n        ].setAttribute('tabindex', '-1');\n      }\n\n      this._curRowIndex = rowIndex;\n      this._curColumnIndex = columnIndex;\n\n      if (\n        this._focusGrid[this._curRowIndex] &&\n        this._focusGrid[this._curRowIndex][\n          this._curColumnIndex\n        ]\n      ) {\n        this._focusGrid[this._curRowIndex][\n          this._curColumnIndex\n        ].setAttribute('tabindex', '0');\n        if (allowFocus) {\n          this._focusGrid[this._curRowIndex][\n            this._curColumnIndex\n          ].focus();\n        }\n      }\n    }\n  }\n}\n",
      "selector": "[vdsKeyboardFocusDatatable]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 52
        },
        {
          "name": "keydown",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 91
        }
      ],
      "propertiesClass": [
        {
          "name": "_curColumnIndex",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "_curRowIndex",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "_focusGrid",
          "defaultValue": "null",
          "type": "HTMLElement[][]",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "_updateFocusGrid",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "dataTable",
          "type": "DatatableComponent",
          "optional": false,
          "description": "",
          "line": 139,
          "modifierKind": [114]
        },
        {
          "name": "element",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 138,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "_keyDownNextCellLookup",
          "args": [
            {
              "name": "dirX",
              "type": "number"
            },
            {
              "name": "dirY",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 163,
          "jsdoctags": [
            {
              "name": "dirX",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dirY",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_setCurFocusedElemTabIndex",
          "args": [
            {
              "name": "rowIndex",
              "type": "number"
            },
            {
              "name": "columnIndex",
              "type": "number"
            },
            {
              "name": "allowFocus",
              "type": "",
              "defaultValue": "true"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 268,
          "jsdoctags": [
            {
              "name": "rowIndex",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "columnIndex",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "allowFocus",
              "type": "",
              "defaultValue": "true",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_setupFocusGrid",
          "args": [],
          "optional": false,
          "returnType": "any[]",
          "typeParameters": [],
          "line": 220
        },
        {
          "name": "ngAfterViewChecked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 148
        }
      ],
      "implements": ["AfterViewChecked"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "element",
            "type": "ElementRef"
          },
          {
            "name": "dataTable",
            "type": "DatatableComponent"
          }
        ],
        "line": 135,
        "jsdoctags": [
          {
            "name": "element",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dataTable",
            "type": "DatatableComponent",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "SortHeaderDirective",
      "id": "directive-SortHeaderDirective-8e7eb70f984b6f1575e7ce8ffd1103e0",
      "file": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n} from '@angular/core';\nimport {\n  ColumnType,\n  Sortable,\n  SortDirection,\n  SortFn,\n} from '../datatable.constants';\nimport { Subject } from 'rxjs';\n\nconst isSortDirectionValid = (value: any) => {\n  return (\n    value !== null &&\n    value !== undefined &&\n    [SortDirection.ASC, SortDirection.DESC].includes(value)\n  );\n};\n\n@Directive({\n  selector: '[vdsSortHeader]',\n})\nexport class SortHeaderDirective\n  implements OnChanges, OnDestroy {\n  @Input()\n  get sortActiveId() {\n    return this._sortActiveId;\n  }\n  set sortActiveId(value: string | number) {\n    this._sortActiveId = value;\n  }\n  _sortActiveId: string | number = null;\n\n  @Input()\n  get sortDirection() {\n    return this._sortDirection;\n  }\n  set sortDirection(value: SortDirection) {\n    if (isSortDirectionValid(value)) {\n      this._sortDirection = value;\n    }\n  }\n  _sortDirection: SortDirection = SortDirection.ASC;\n\n  @Input()\n  get sortStart() {\n    return this._sortStart;\n  }\n  set sortStart(value: SortDirection) {\n    if (isSortDirectionValid(value)) {\n      this._sortStart = value;\n    }\n  }\n  _sortStart: SortDirection = SortDirection.ASC;\n\n  @Output()\n  sortEvent: EventEmitter<any> = new EventEmitter<any>();\n\n  _stateChange = new Subject();\n  stateChange$ = this._stateChange.asObservable();\n  sortColumnType: ColumnType = null;\n  sortFn: SortFn;\n\n  ngOnChanges() {\n    this._emitStateChange();\n  }\n\n  ngOnDestroy() {\n    this._stateChange.complete();\n  }\n\n  sort(sortable: Sortable): void {\n    this.sortDirection =\n      this.sortActiveId === sortable.id\n        ? this.sortDirection === SortDirection.ASC\n          ? SortDirection.DESC\n          : SortDirection.ASC\n        : this.sortStart;\n    this.sortActiveId = sortable.id;\n    this.sortColumnType = sortable.type;\n    this.sortFn = sortable.sortFn;\n\n    this._emitStateChange();\n\n    this.sortEvent.emit(this._getSortState());\n  }\n\n  _emitStateChange() {\n    this._stateChange.next(this._getSortState());\n  }\n\n  _getSortState() {\n    return {\n      id: this.sortActiveId,\n      direction: this.sortDirection,\n      sortFn: this.sortFn,\n      type: this.sortColumnType,\n    };\n  }\n}\n",
      "selector": "[vdsSortHeader]",
      "providers": [],
      "inputsClass": [
        {
          "name": "sortActiveId",
          "line": 31
        },
        {
          "name": "sortDirection",
          "line": 40
        },
        {
          "name": "sortStart",
          "line": 51
        }
      ],
      "outputsClass": [
        {
          "name": "sortEvent",
          "defaultValue": "new EventEmitter<any>()",
          "line": 62,
          "type": "EventEmitter<any>"
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "_sortActiveId",
          "defaultValue": "null",
          "type": "string | number",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "_sortDirection",
          "defaultValue": "SortDirection.ASC",
          "type": "SortDirection",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "_sortStart",
          "defaultValue": "SortDirection.ASC",
          "type": "SortDirection",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "_stateChange",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "sortColumnType",
          "defaultValue": "null",
          "type": "ColumnType",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "sortFn",
          "type": "SortFn",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "stateChange$",
          "defaultValue": "this._stateChange.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 65
        }
      ],
      "methodsClass": [
        {
          "name": "_emitStateChange",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 93
        },
        {
          "name": "_getSortState",
          "args": [],
          "optional": false,
          "returnType": "{ id: string | number; direction: any; sortFn: any; type: any; }",
          "typeParameters": [],
          "line": 97
        },
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73
        },
        {
          "name": "sort",
          "args": [
            {
              "name": "sortable",
              "type": "Sortable"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 77,
          "jsdoctags": [
            {
              "name": "sortable",
              "type": "Sortable",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "implements": ["OnChanges", "OnDestroy"],
      "accessors": {
        "sortActiveId": {
          "name": "sortActiveId",
          "setSignature": {
            "name": "sortActiveId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 34,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "sortDirection": {
          "name": "sortDirection",
          "setSignature": {
            "name": "sortDirection",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 43,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "sortStart": {
          "name": "sortStart",
          "setSignature": {
            "name": "sortStart",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 54,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "TooltipDirective",
      "id": "directive-TooltipDirective-e0c909056957d33664beaec428b428d9",
      "file": "projects/vds-lib/src/lib/tooltip/tooltip.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import {\n  ComponentRef,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport {\n  Overlay,\n  OverlayPositionBuilder,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\n\nimport { TooltipComponent } from './tooltip.component';\nimport { TOOLTIP, TooltipOption } from './tooltip.constant';\n\n@Directive({ selector: '[vdsTooltip]' })\nexport class TooltipDirective implements OnInit {\n  /**\n   * The information and optional configuration for the\n   * tooltip.\n   */\n  @Input('vdsTooltip') tooltipOptions:\n    | TooltipOption\n    | string\n    | null;\n\n  private overlayRef: OverlayRef;\n  private tooltipRef: ComponentRef<TooltipComponent>;\n\n  constructor(\n    private overlay: Overlay,\n    private overlayPositionBuilder: OverlayPositionBuilder,\n    private elementRef: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.setPosition();\n  }\n\n  setPosition() {\n    let positionStrategy;\n    let _position;\n    if (!this.tooltipOptions) {\n      return;\n    }\n    switch (typeof this.tooltipOptions) {\n      case 'string':\n        _position = TOOLTIP.POSITION.TOP;\n        break;\n      case 'object':\n        switch (\n          this.tooltipOptions.position.toLowerCase()\n        ) {\n          case 'bottom':\n            _position = TOOLTIP.POSITION.BOTTOM;\n            break;\n          case 'left':\n            _position = TOOLTIP.POSITION.LEFT;\n            break;\n          case 'right':\n            _position = TOOLTIP.POSITION.RIGHT;\n            break;\n          case 'top':\n          default:\n            _position = TOOLTIP.POSITION.TOP;\n            break;\n        }\n    }\n    positionStrategy = this.overlayPositionBuilder\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: _position.originX,\n          originY: _position.originY,\n          overlayX: _position.overlayX,\n          overlayY: _position.overlayY,\n          offsetY: _position.offsetY,\n          offsetX: _position.offsetX,\n        },\n      ]);\n\n    this.overlayRef = this.overlay.create({\n      positionStrategy,\n    });\n  }\n\n  @HostListener('mouseenter')\n  show() {\n    if (!this.overlayRef) {\n      return;\n    }\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\n      this.tooltipRef = this.overlayRef.attach(\n        new ComponentPortal(TooltipComponent)\n      );\n    }\n    if (typeof this.tooltipOptions === 'object') {\n      this.tooltipRef.instance.position = this.tooltipOptions.position;\n      this.tooltipRef.instance.text = this.tooltipOptions.content;\n      return;\n    }\n    this.tooltipRef.instance.text = this\n      .tooltipOptions as string;\n  }\n\n  @HostListener('mouseleave')\n  hide() {\n    if (!this.overlayRef) {\n      return;\n    }\n    this.overlayRef.detach();\n  }\n}\n",
      "selector": "[vdsTooltip]",
      "providers": [],
      "inputsClass": [
        {
          "name": "vdsTooltip",
          "description": "<p>The information and optional configuration for the\ntooltip.</p>\n",
          "line": 25,
          "type": "TooltipOption | string | null"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "mouseenter",
          "args": [],
          "argsDecorator": [],
          "line": 91
        },
        {
          "name": "mouseleave",
          "args": [],
          "argsDecorator": [],
          "line": 110
        }
      ],
      "propertiesClass": [
        {
          "name": "overlayRef",
          "type": "OverlayRef",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [112]
        },
        {
          "name": "tooltipRef",
          "type": "ComponentRef<TooltipComponent>",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "setPosition",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43
        }
      ],
      "implements": ["OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "overlay",
            "type": "Overlay"
          },
          {
            "name": "overlayPositionBuilder",
            "type": "OverlayPositionBuilder"
          },
          {
            "name": "elementRef",
            "type": "ElementRef"
          }
        ],
        "line": 31,
        "jsdoctags": [
          {
            "name": "overlay",
            "type": "Overlay",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "overlayPositionBuilder",
            "type": "OverlayPositionBuilder",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    }
  ],
  "components": [
    {
      "name": "AccordionComponent",
      "id": "component-AccordionComponent-a47b4c9560114fdaee8af6b49cdb61a3",
      "file": "projects/vds-lib/src/lib/accordion/accordion.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-accordion",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./accordion.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disables the accordion.</p>\n",
          "line": 23,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "iterator",
          "defaultValue": "1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "sections",
          "type": "QueryList<SectionComponent>",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "SectionComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "disable",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72
        },
        {
          "name": "enable",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 80
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35
        },
        {
          "name": "select",
          "args": [
            {
              "name": "selectedSection",
              "type": "SectionComponent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62,
          "description": "<p>We only allow one section to be open at a time.\nClose all other sections when we get a change event from a section.</p>\n",
          "jsdoctags": [
            {
              "name": {
                "pos": 1559,
                "end": 1574,
                "flags": 0,
                "escapedText": "selectedSection"
              },
              "type": "SectionComponent",
              "tagName": {
                "pos": 1553,
                "end": 1558,
                "flags": 0,
                "escapedText": "param"
              },
              "comment": ""
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n} from '@angular/core';\nimport { SectionComponent } from './section/section.component';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-accordion',\n  templateUrl: './accordion.component.html',\n})\nexport class AccordionComponent\n  implements AfterContentInit {\n  @ContentChildren(SectionComponent)\n  sections: QueryList<SectionComponent>;\n\n  /**\n   * Disables the accordion.\n   */\n  @Input() disabled: boolean;\n\n  id: string;\n  iterator = 1;\n\n  constructor(private vdsLibService: VdsLibService) {\n    this.id = this.vdsLibService.getUUID();\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n  }\n\n  ngAfterContentInit() {\n    this.sections\n      .toArray()\n      .forEach((section: SectionComponent) => {\n        section.change.subscribe(\n          (selectedSection: SectionComponent) => {\n            // No reason to call to close all the other sections if the change\n            // was because the current section is closed.\n            if (selectedSection.isOpen) {\n              this.select(selectedSection);\n            }\n          }\n        );\n        section.headingID += `${this.id}--${this.iterator}`;\n        section.bodyID += `${this.id}--${this.iterator}`;\n        ++this.iterator;\n      });\n    if (this.disabled) {\n      this.disable();\n    }\n  }\n\n  /**\n   * We only allow one section to be open at a time.\n   * Close all other sections when we get a change event from a section.\n   * @param selectedSection\n   */\n  select(selectedSection: SectionComponent) {\n    this.sections\n      .toArray()\n      .forEach((section: SectionComponent) => {\n        if (section !== selectedSection) {\n          section.close();\n        }\n      });\n  }\n\n  disable() {\n    this.sections\n      .toArray()\n      .forEach((section: SectionComponent) => {\n        section.disable();\n      });\n  }\n\n  enable() {\n    this.sections\n      .toArray()\n      .forEach((section: SectionComponent) => {\n        section.enable();\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterContentInit"],
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-accordion': true,\n    'vds-state--disabled': disabled\n  }\">\n    <ng-content select=\"vds-section\"></ng-content>\n</div>"
    },
    {
      "name": "ActionBarComponent",
      "id": "component-ActionBarComponent-4cfd661454b2b9e550888a90fd1fccb3",
      "file": "projects/vds-lib/src/lib/action-bar/action-bar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-action-bar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./action-bar.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "active",
          "description": "<p>Set as Active Controls.\nDefaults to Standard Controls.</p>\n",
          "line": 14,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_active",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-action-bar',\n  templateUrl: './action-bar.component.html',\n})\nexport class ActionBarComponent implements OnInit {\n  /**\n   * Set as Active Controls.\n   * Defaults to Standard Controls.\n   */\n  @Input()\n  get active(): boolean {\n    return this._active;\n  }\n  set active(value) {\n    this._active = coerceBooleanProperty(value);\n  }\n  private _active: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 20
      },
      "implements": ["OnInit"],
      "accessors": {
        "active": {
          "name": "active",
          "setSignature": {
            "name": "active",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 17,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  [ngClass]=\"{\n    'row': true,\n    'vds-action-bar': true,\n    'vds-action-bar--standard-controls': !active,\n    'vds-action-bar--active-controls': active\n  }\"\n>\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "AlertComponent",
      "id": "component-AlertComponent-4b4473134f0e6cf6bfa04dac76430d3d",
      "file": "projects/vds-lib/src/lib/alert/alert.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-alert",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./alert.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "action",
          "description": "<p>Configure the Alert Action(s).</p>\n",
          "line": 26,
          "type": "AlertActionConfig[]"
        },
        {
          "name": "details",
          "description": "<p>Configure the Alert Details.</p>\n",
          "line": 30,
          "type": "AlertDetailsConfig"
        },
        {
          "name": "message",
          "description": "<p>Configure the Alert Message.</p>\n",
          "line": 34,
          "type": "AlertMessageConfig"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "ALERT_TYPE",
          "defaultValue": "AlertType",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "hasMultipleButtons",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "navSubscription",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "sideNavClosed",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "sideNavOpen",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "slideInTimer",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "slideOutTimer",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "timerID",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "typeIcon",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "visible",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 45
        }
      ],
      "methodsClass": [
        {
          "name": "destroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "modifierKind": [112]
        },
        {
          "name": "hasCallback",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 139
        },
        {
          "name": "hide",
          "args": [
            {
              "name": "index",
              "type": "number",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 119,
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 87
        },
        {
          "name": "setTypeIcon",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "modifierKind": [112]
        },
        {
          "name": "show",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 106
        },
        {
          "name": "startTimer",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 76,
          "modifierKind": [112]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n} from '@angular/core';\nimport {\n  ALERT,\n  AlertActionConfig,\n  AlertDetailsConfig,\n  AlertMessageConfig,\n  AlertType,\n} from './alert.constants';\nimport { VdsLibService } from '../vds-lib.service';\nimport { Subscription } from 'rxjs';\nimport { NAV_DEFAULT } from '../nav/nav.constants';\n\n@Component({\n  selector: 'vds-alert',\n  templateUrl: './alert.component.html',\n})\nexport class AlertComponent implements OnInit {\n  /**\n   * Configure the Alert Action(s).\n   */\n  @Input() action: AlertActionConfig[];\n  /**\n   * Configure the Alert Details.\n   */\n  @Input() details: AlertDetailsConfig;\n  /**\n   * Configure the Alert Message.\n   */\n  @Input() message: AlertMessageConfig;\n\n  ALERT_TYPE: typeof AlertType = AlertType;\n  hasMultipleButtons: boolean;\n  navSubscription: Subscription;\n  slideInTimer: boolean;\n  slideOutTimer: boolean;\n  sideNavClosed: boolean;\n  sideNavOpen: boolean;\n  timerID: any;\n  typeIcon: string;\n  visible = false;\n\n  constructor(\n    private el: ElementRef,\n    private vdsLibService: VdsLibService\n  ) {}\n\n  private setTypeIcon() {\n    if (this.details && this.details.icon) {\n      this.typeIcon = this.details.icon;\n      return;\n    }\n    if (this.details && this.details.alertType) {\n      switch (this.details.alertType.toLowerCase()) {\n        case AlertType.WARNING:\n          this.typeIcon = AlertType.WARNING;\n          break;\n        case AlertType.ERROR:\n          this.typeIcon = AlertType.ERROR;\n          break;\n        case AlertType.SUCCESS:\n          this.typeIcon = AlertType.SUCCESS;\n          break;\n        case AlertType.INFO:\n        default:\n          this.typeIcon = AlertType.INFO;\n          break;\n      }\n    }\n  }\n\n  private startTimer() {\n    return setTimeout(() => {\n      this.hide();\n    }, this.details.duration);\n  }\n\n  private destroy() {\n    this.el.nativeElement.remove();\n    this.navSubscription.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.setTypeIcon();\n    if (this.details && this.details.duration) {\n      this.timerID = this.startTimer();\n    }\n    // dependency on the Nav component having set the nav info on the service\n    this.navSubscription = this.vdsLibService.navInfo$.subscribe(\n      (navInfo) => {\n        if (\n          navInfo &&\n          navInfo.orientation === NAV_DEFAULT.vertical\n        ) {\n          this.sideNavClosed = !navInfo.expanded;\n          this.sideNavOpen = navInfo.expanded;\n        }\n      }\n    );\n  }\n\n  show() {\n    if (this.details && this.details.slideIn) {\n      setTimeout(() => {\n        this.visible = true;\n      }, ALERT.slideInTime);\n    } else {\n      this.visible = true;\n    }\n    if (this.timerID) {\n      clearTimeout(this.timerID);\n    }\n  }\n\n  hide(index?: number) {\n    this.visible = false;\n    if (this.details && this.details.slideOut) {\n      setTimeout(() => {\n        this.destroy();\n      }, ALERT.slideOutTime);\n    } else {\n      this.destroy();\n    }\n    if (this.timerID) {\n      clearTimeout(this.timerID);\n    }\n    if (index === undefined) {\n      return;\n    }\n    if (this.action[index] && this.action[index].callback) {\n      this.action[index].callback();\n    }\n  }\n\n  hasCallback(): boolean {\n    let callback = false;\n    if (this.action && this.action.length) {\n      // see if there is even one that has a callback\n      return this.action.some(\n        (item: AlertActionConfig) => !!item.callback\n      );\n    }\n    return callback;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 45,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div\n  role=\"alert\"\n  [ngClass]=\"{\n    'vds-alert': true,\n    'vds-state--show': visible,\n    'vds-alert--sidenav--open': sideNavOpen,\n    'vds-alert--sidenav--closed': sideNavClosed,\n    'vds-alert--success': (details?.alertType.toString().toLowerCase() === ALERT_TYPE.SUCCESS) ? true : null,\n    'vds-alert--warning': (details?.alertType.toString().toLowerCase() === ALERT_TYPE.WARNING) ? true : null,\n    'vds-alert--error': (details?.alertType.toString().toLowerCase() === ALERT_TYPE.ERROR) ? true : null\n  }\">\n    <div class=\"vds-grid\">\n     <div class=\"row\">\n      <div class=\"col\">\n       <span class=\"vds-alert-icon\">\n         <vds-icon\n          [icon]=\"typeIcon\"\n          low=\"true\">\n        </vds-icon>\n       </span>\n       <span\n        [ngClass]=\"{\n          'vds-alert-label': true\n        }\"\n        [attr.aria-live]=\"details?.alertType?.toString().toLowerCase() === ALERT_TYPE.INFO ? 'polite' : 'assertive'\"\n        aria-atomic=\"true\">\n        <span *ngIf=\"message?.title\" class=\"vds-alert-label-title\">{{ message?.title }}</span>\n          <ng-container *ngIf=\"message?.label\">\n            {{ message?.label }}\n          </ng-container>\n         <ng-container *ngIf=\"message?.labelTemplate\">\n            <ng-container *ngTemplateOutlet=\"message?.labelTemplate\"></ng-container>\n          </ng-container>\n       </span>\n      </div>\n      <div class=\"col--sm-1\" *ngIf=\"action\">\n       <div class=\"vds-btn-container\">\n        <div class=\"vds-btn-group vds-btn-group--right\">\n          <ng-container *ngIf=\"action.length\">\n            <ng-container *ngFor=\"let actionItem of action; let i = index\">\n              <vds-button\n                *ngIf=\"actionItem.icon\"\n                [ariaLabel]=\"(actionItem.label) ? (actionItem.label) : null\"\n                iconType=\"light-tiny\"\n                variant=\"icon\"\n                (click)=\"hide(i)\">\n                <vds-icon\n                  [icon]=\"actionItem.icon\"\n                  tiny=\"true\">\n                </vds-icon>\n              </vds-button>\n              <vds-button\n                *ngIf=\"!actionItem.icon && actionItem.label\"\n                [ariaLabel]=\"actionItem.label\"\n                colorScheme=\"tertiary\"\n                (click)=\"hide(i)\">\n                {{ actionItem.label }}\n              </vds-button>\n            </ng-container>\n          </ng-container>\n        </div>\n       </div>\n      </div>\n     </div>\n    </div>\n   </div>\n"
    },
    {
      "name": "AvatarComponent",
      "id": "component-AvatarComponent-30a769865852b7978400a7c1fea082af",
      "file": "projects/vds-lib/src/lib/avatar/avatar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-avatar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./avatar.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "altText",
          "description": "<p>Alternative text for screen readers when using photo or logo.\n<code>#a11y</code></p>\n",
          "line": 13,
          "type": "string"
        },
        {
          "name": "icon",
          "defaultValue": "AVATAR.ICON_DEFAULT",
          "description": "<p>Avatar icon for visual representation; defaults to <code>account</code>.</p>\n",
          "line": 17
        },
        {
          "name": "initials",
          "description": "<p>User&#39;s name is represented in one or two character initial format.</p>\n",
          "line": 21,
          "type": "string"
        },
        {
          "name": "link",
          "description": "<p>Link providing details on the avatar.</p>\n",
          "line": 25,
          "type": "string"
        },
        {
          "name": "logoUrl",
          "description": "<p>Logo content; provide url pointing to <code>assets</code> folder.</p>\n",
          "line": 29,
          "type": "string"
        },
        {
          "name": "photoUrl",
          "defaultValue": "AVATAR.PHOTO_URL_DEFAULT",
          "description": "<p>Photographic content; provide url pointing to <code>assets</code> folder.</p>\n",
          "line": 33
        },
        {
          "name": "userName",
          "description": "<p>Name representing the user logged in.</p>\n",
          "line": 37,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { AVATAR } from './avatar.constant';\n\n@Component({\n  selector: 'vds-avatar',\n  templateUrl: './avatar.component.html',\n})\nexport class AvatarComponent implements OnInit {\n  /**\n   * Alternative text for screen readers when using photo or logo.\n   * <code>#a11y</code>\n   */\n  @Input() altText: string;\n  /**\n   * Avatar icon for visual representation; defaults to <code>account</code>.\n   */\n  @Input() icon = AVATAR.ICON_DEFAULT;\n  /**\n   * User's name is represented in one or two character initial format.\n   */\n  @Input() initials: string;\n  /**\n   * Link providing details on the avatar.\n   */\n  @Input() link: string;\n  /**\n   * Logo content; provide url pointing to <code>assets</code> folder.\n   */\n  @Input() logoUrl: string;\n  /**\n   * Photographic content; provide url pointing to <code>assets</code> folder.\n   */\n  @Input() photoUrl = AVATAR.PHOTO_URL_DEFAULT;\n  /**\n   * Name representing the user logged in.\n   */\n  @Input() userName: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (\n      (this.photoUrl !== AVATAR.PHOTO_URL_DEFAULT ||\n        this.logoUrl) &&\n      !this.altText\n    ) {\n      console.error(AVATAR.ALT_TEXT_ERROR_MSG);\n      return;\n    }\n    if (this.initials && !this.userName) {\n      console.error(AVATAR.USERNAME_ERROR_MSG);\n      return;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 37
      },
      "implements": ["OnInit"],
      "templateData": "<ng-container\n  *ngIf=\"!link else linked\">\n  <div\n    class=\"vds-avatar\">\n    <ng-container\n      *ngTemplateOutlet=\"common\">\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template\n  #linked>\n  <a\n    [href]=\"link\"\n    class=\"vds-avatar\">\n    <ng-container\n      *ngTemplateOutlet=\"common\">\n    </ng-container>\n  </a>\n</ng-template>\n\n<ng-template\n  #common>\n  <ng-container\n    *ngIf=\"userName && initials\">\n    <ng-container\n      *ngTemplateOutlet=\"defaultInitials\">\n    </ng-container>\n  </ng-container>\n  <ng-container\n    *ngIf=\"userName && !initials\">\n    <ng-container\n      *ngTemplateOutlet=\"textContent\">\n    </ng-container>\n  </ng-container>\n  <ng-container\n    *ngIf=\"logoUrl && altText\">\n    <ng-container\n      *ngTemplateOutlet=\"logoContent\">\n    </ng-container>\n  </ng-container>\n  <ng-container\n    *ngIf=\"photoUrl === 'default' && altText && !logoUrl\">\n    <ng-container\n      *ngTemplateOutlet=\"photoIcon\">\n    </ng-container>\n  </ng-container>\n  <ng-container\n    *ngIf=\"photoUrl !== 'default' && altText && !logoUrl\">\n    <ng-container\n      *ngTemplateOutlet=\"photoContent\">\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template\n  #defaultInitials>\n  <div\n    class=\"vds-avatar--label\">\n    {{ userName }}\n  </div>\n  <div\n    class=\"vds-avatar--initials\"\n    aria-hidden=\"true\"\n    role=\"presentation\">\n    {{ initials }}\n  </div>\n</ng-template>\n\n<ng-template\n  #textContent>\n  <div\n    class=\"vds-avatar--text\">\n    {{ userName }}\n  </div>\n</ng-template>\n\n<ng-template\n  #logoContent>\n  <img\n    class=\"vds-avatar--company-logo\"\n    [attr.src]=\"logoUrl\"\n    [attr.alt]=\"altText\">\n</ng-template>\n\n<ng-template\n  #photoIcon>\n  <div\n    class=\"vds-avatar--photo\">\n    <vds-icon\n      low=\"true\"\n      [icon]=\"icon\"\n      [altText]=\"altText\">\n    </vds-icon>\n  </div>\n</ng-template>\n\n<ng-template\n  #photoContent>\n  <img\n    class=\"vds-avatar--photo\"\n    [attr.src]=\"photoUrl\"\n    [attr.alt]=\"altText\">\n</ng-template>\n"
    },
    {
      "name": "BadgeComponent",
      "id": "component-BadgeComponent-37317718d29f45f2f43f60ba4a3a37e8",
      "file": "projects/vds-lib/src/lib/badge/badge.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-badge",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./badge.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "badgeType",
          "defaultValue": "BadgeType.ACCENT",
          "description": "<p>Badge type (Accent, Critical, Disabled, Stable, Status, or Warning)</p>\n",
          "line": 19,
          "type": "BadgeType"
        },
        {
          "name": "small",
          "defaultValue": "false",
          "description": "<p>Renders smaller version of the badge</p>\n",
          "line": 23
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { BadgeType } from './badge.constants';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-badge',\n  templateUrl: './badge.component.html',\n})\nexport class BadgeComponent implements OnInit, OnChanges {\n  /**\n   * Badge type (Accent, Critical, Disabled, Stable, Status, or Warning)\n   */\n  @Input() badgeType: BadgeType = BadgeType.ACCENT;\n  /**\n   * Renders smaller version of the badge\n   */\n  @Input() small = false;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.small = this.vdsLibService.triageDisabledValue(\n      this.small\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes &&\n      changes.small &&\n      changes.small.previousValue !==\n        changes.small.currentValue\n    ) {\n      this.small = this.vdsLibService.triageDisabledValue(\n        changes.small.currentValue\n      );\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 23,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnChanges"],
      "templateData": "<span \n  [class]=\"'vds-badge ' + 'vds-badge--' + badgeType.toLowerCase()\"\n  [ngClass]=\"{\n    'vds-badge--small': small\n  }\">\n  <ng-content></ng-content>\n</span>"
    },
    {
      "name": "BreadcrumbComponent",
      "id": "component-BreadcrumbComponent-39de96d946b2ef4a8cafec0366168eb2",
      "file": "projects/vds-lib/src/lib/breadcrumb/breadcrumb.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-breadcrumb",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./breadcrumb.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "path",
          "description": "<p>Path link of the location hierarchy.</p>\n",
          "line": 19,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "selectEvent",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits change event.</p>\n",
          "line": 23,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "element",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "isActive",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "isLast",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [
        {
          "name": "emitClicked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n})\nexport class BreadcrumbComponent {\n  /**\n   * Path link of the location hierarchy.\n   */\n  @Input() path: string;\n  /**\n   * Emits change event.\n   */\n  @Output() selectEvent = new EventEmitter<any>();\n\n  element: ElementRef;\n  id: string;\n  isLast = false;\n  isActive = false;\n\n  constructor(\n    private el: ElementRef,\n    vdsLibService: VdsLibService\n  ) {\n    this.element = el.nativeElement.children;\n    this.id = vdsLibService.getUUID();\n  }\n\n  emitClicked() {\n    this.selectEvent.emit(this.id);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 28,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<li class=\"vds-breadcrumb\">\n  <a\n    [routerLink]=\"path ? path : null\"\n    (click)=\"emitClicked()\"\n    class=\"vds-breadcrumb-link\"\n    *ngIf=\"!isActive\">\n    <ng-container *ngTemplateOutlet=\"child\"></ng-container>\n  </a>\n  <ng-container *ngIf=\"isActive\">\n    <ng-container *ngTemplateOutlet=\"child\"></ng-container>\n  </ng-container>\n  <vds-icon \n    *ngIf=\"!isLast\"\n    icon=\"visa_arrow-next\"\n    tiny=\"true\"\n    presentation>\n  </vds-icon>\n</li>\n\n<ng-template #child>\n  <ng-content></ng-content>\n</ng-template>"
    },
    {
      "name": "BreadcrumbsComponent",
      "id": "component-BreadcrumbsComponent-8749298ef6097b96ea7e3d67001c901b",
      "file": "projects/vds-lib/src/lib/breadcrumbs/breadcrumbs.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-breadcrumbs",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./breadcrumbs.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "crumbs",
          "type": "QueryList<BreadcrumbComponent>",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "BreadcrumbComponent"
            }
          ]
        },
        {
          "name": "currentUrl",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52
        },
        {
          "name": "setActiveCrumb",
          "args": [
            {
              "name": "id",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ContentChildren,\n  AfterViewInit,\n  AfterContentInit,\n  QueryList,\n} from '@angular/core';\nimport { BreadcrumbComponent } from '../breadcrumb/breadcrumb.component';\nimport { BREADCRUMBS } from '../breadcrumb/breadcrumb.constant';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'vds-breadcrumbs',\n  templateUrl: './breadcrumbs.component.html',\n})\nexport class BreadcrumbsComponent\n  implements AfterViewInit, AfterContentInit {\n  @ContentChildren(BreadcrumbComponent) crumbs!: QueryList<\n    BreadcrumbComponent\n  >;\n\n  currentUrl: string;\n\n  constructor(private route: Router) {}\n\n  ngAfterContentInit() {\n    // we are trying to set the property of the last breadcrumb to last\n    if (this.crumbs.last) {\n      setTimeout(() => {\n        this.crumbs.last.isLast = true;\n      }, 0);\n    }\n\n    this.currentUrl = this.route.url;\n    this.crumbs.forEach((crumb) => {\n      if (crumb.path === this.currentUrl) {\n        crumb.element[0].classList = `${\n          BREADCRUMBS.CLASS.DEFAULT\n        } ${BREADCRUMBS.CLASS.ACTIVE}`;\n        crumb.element[0].setAttribute(\n          BREADCRUMBS.ARIA.CURRENT_ATTRIBUTE,\n          BREADCRUMBS.ARIA.CURRENT_VALUE\n        );\n        // without it will cause an expression checked exception\n        setTimeout(() => {\n          crumb.isActive = true;\n        }, 0);\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.crumbs.forEach((crumb) => {\n      crumb.selectEvent.subscribe((id) => {\n        this.setActiveCrumb(id);\n      });\n    });\n  }\n\n  setActiveCrumb(id: string) {\n    this.crumbs.forEach((crumb) => {\n      crumb.element[0].classList =\n        BREADCRUMBS.CLASS.DEFAULT;\n      crumb.element[0].removeAttribute(\n        BREADCRUMBS.ARIA.CURRENT_ATTRIBUTE\n      );\n      crumb.isActive = false;\n      if (crumb.id === id) {\n        crumb.element[0].classList = `${\n          BREADCRUMBS.CLASS.DEFAULT\n        } ${BREADCRUMBS.CLASS.ACTIVE}`;\n        crumb.element[0].setAttribute(\n          BREADCRUMBS.ARIA.CURRENT_ATTRIBUTE,\n          BREADCRUMBS.ARIA.CURRENT_VALUE\n        );\n        crumb.isActive = true;\n      }\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "Router"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "route",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "AfterContentInit"],
      "templateData": "<nav class=\"vds-breadcrumbs-container\" aria-label=\"Breadcrumb\">\n    <ol class=\"vds-breadcrumbs\" #crumbs>\n      <ng-content></ng-content>\n    </ol>\n  </nav>"
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-e896bd1b5ae62bc0183028dd74fe8690",
      "file": "projects/vds-lib/src/lib/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-button",
      "styleUrls": ["./button.component.css"],
      "styles": [],
      "templateUrl": ["./button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "description": "<p>ARIA Label for screen readers.\n<code>#a11y</code></p>\n",
          "line": 32,
          "type": "string"
        },
        {
          "name": "colorScheme",
          "defaultValue": "BUTTON.COLOR_SCHEME.PRIMARY",
          "description": "<p>Color scheme of button. Default:\n<code>primary. [primary|secondary|tertiary]</code></p>\n",
          "line": 37
        },
        {
          "name": "describedBy",
          "description": "<p>Accessibility label for icon button variations.</p>\n",
          "line": 41,
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "<p>Disable button statically or programmatically.\nUse as attribute or input property.\nDefault: <code>false</code></p>\n",
          "line": 47,
          "type": "boolean"
        },
        {
          "name": "href",
          "description": "<p>Hyperlink URL or URL fragment.</p>\n",
          "line": 57,
          "type": "string"
        },
        {
          "name": "icon",
          "defaultValue": "BUTTON.ICON.DEFAULT",
          "description": "<p>Icon for split button. Default:\n<code>arrow-expand</code></p>\n",
          "line": 62
        },
        {
          "name": "iconType",
          "defaultValue": "BUTTON.ICON_TYPE.DEFAULT",
          "description": "<p>Type of Icon. Default:\n<code>default. [default|light|light-outline|light-tiny|light-fill\n|dark-outline|dark-tiny]</code></p>\n",
          "line": 68
        },
        {
          "name": "isFullWidth",
          "description": "<p>Specify for full width button.\nUse as attribute or input property.\nDefault: <code>false</code></p>\n",
          "line": 53,
          "type": "boolean"
        },
        {
          "name": "tag",
          "defaultValue": "BUTTON.TAG.A",
          "description": "<p>Tag of link button. Default:\n<code>a. [a|button|div|span]</code></p>\n",
          "line": 73
        },
        {
          "name": "type",
          "description": "<p>Default behavior of the button.\nSet Native HTML element type.\nDefault:\n<code>null</code></p>\n",
          "line": 80,
          "type": "ButtonType"
        },
        {
          "name": "variant",
          "defaultValue": "BUTTON.VARIANT.TEXT",
          "description": "<p>Category of button. Default:\n<code>text. [icon|split|text]</code></p>\n",
          "line": 85
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "button",
          "type": "ElementRef",
          "optional": false,
          "description": "<p>The current button tag element.\nAllows for us to set and check for focus.</p>\n",
          "line": 91,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'button'"
            }
          ]
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 93
        }
      ],
      "methodsClass": [
        {
          "name": "checkButtonType",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 139
        },
        {
          "name": "hasFocus",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 164,
          "description": "<p>Return if our button element has the focus.</p>\n"
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 121
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 97
        },
        {
          "name": "setFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 157,
          "description": "<p>Allow consumers to set the focus on our button without knowing the structure\nof our button elements.</p>\n"
        }
      ],
      "hostBindings": [
        {
          "name": "style.pointer-events",
          "line": 22,
          "type": "string"
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { BUTTON, ButtonType } from './button.constant';\n\n@Component({\n  selector: 'vds-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css'],\n})\nexport class ButtonComponent\n  implements OnInit, AfterViewInit {\n  // https://issues.trusted.visa.com/browse/VUIANG-1215 fix\n  @HostBinding('style.pointer-events')\n  get pEvents(): string {\n    if (this.disabled) {\n      return 'none';\n    }\n    return 'auto';\n  }\n  /**\n   * ARIA Label for screen readers.\n   * <code>#a11y</code>\n   */\n  @Input() ariaLabel: string;\n  /**\n   * Color scheme of button. Default:\n   * <code>primary. [primary|secondary|tertiary]</code>\n   */\n  @Input() colorScheme = BUTTON.COLOR_SCHEME.PRIMARY;\n  /**\n   * Accessibility label for icon button variations.\n   */\n  @Input() describedBy: string;\n  /**\n   * Disable button statically or programmatically.\n   * Use as attribute or input property.\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * Specify for full width button.\n   * Use as attribute or input property.\n   * Default: <code>false</code>\n   */\n  @Input() isFullWidth: boolean;\n  /**\n   * Hyperlink URL or URL fragment.\n   */\n  @Input() href: string;\n  /**\n   * Icon for split button. Default:\n   * <code>arrow-expand</code>\n   */\n  @Input() icon = BUTTON.ICON.DEFAULT;\n  /**\n   * Type of Icon. Default:\n   * <code>default. [default|light|light-outline|light-tiny|light-fill\n   * |dark-outline|dark-tiny]</code>\n   */\n  @Input() iconType = BUTTON.ICON_TYPE.DEFAULT;\n  /**\n   * Tag of link button. Default:\n   * <code>a. [a|button|div|span]</code>\n   */\n  @Input() tag = BUTTON.TAG.A;\n  /**\n   * Default behavior of the button.\n   * Set Native HTML element type.\n   * Default:\n   * <code>null</code>\n   */\n  @Input() type: ButtonType;\n  /**\n   * Category of button. Default:\n   * <code>text. [icon|split|text]</code>\n   */\n  @Input() variant = BUTTON.VARIANT.TEXT;\n\n  /**\n   * The current button tag element.\n   * Allows for us to set and check for focus.\n   */\n  @ViewChild('button') button: ElementRef;\n\n  id: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.vdsLibService.getUUID();\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.isFullWidth = this.vdsLibService.triageDisabledValue(\n      this.isFullWidth\n    );\n    this.href = this.href ? this.href : null;\n    this.iconType =\n      this.iconType === BUTTON.ICON_TYPE.DEFAULT\n        ? BUTTON.ICON_TYPE.LIGHT_DEFAULT\n        : this.iconType;\n\n    if (\n      this.variant === BUTTON.VARIANT.SPLIT &&\n      (this.colorScheme !== BUTTON.COLOR_SCHEME.PRIMARY &&\n        this.colorScheme !== BUTTON.COLOR_SCHEME.SECONDARY)\n    ) {\n      this.colorScheme = BUTTON.COLOR_SCHEME.PRIMARY;\n    }\n    this.checkButtonType();\n  }\n\n  ngAfterViewInit() {\n    // this only works for buttons with an icon, not split buttons\n    const icon = document.getElementById(this.id)\n      ? (document\n          .getElementById(this.id)\n          .getElementsByTagName(\n            'vds-icon'\n          )[0] as HTMLElement)\n      : null;\n    if (icon) {\n      icon.getAttribute('tiny')\n        ? (icon.style.height = BUTTON.HEIGHT.TINY)\n        : icon.getAttribute('high')\n        ? (icon.style.height = BUTTON.HEIGHT.HIGH)\n        : (icon.style.height = BUTTON.HEIGHT.LOW);\n    }\n  }\n\n  checkButtonType() {\n    if (this.type) {\n      switch (this.type.toLowerCase()) {\n        case ButtonType.BUTTON:\n        case ButtonType.RESET:\n        case ButtonType.SUBMIT:\n          break;\n        default:\n          this.type = null;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Allow consumers to set the focus on our button without knowing the structure\n   * of our button elements.\n   */\n  setFocus(): void {\n    this.button.nativeElement.focus();\n  }\n\n  /**\n   * Return if our button element has the focus.\n   */\n  hasFocus(): boolean {\n    return (\n      document.activeElement === this.button.nativeElement\n    );\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "button > * {\n  pointer-events: none;\n}\n",
          "styleUrl": "./button.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 93,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<ng-container *ngIf=\"variant === 'text'\">\n  <button\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.disabled]=\"(disabled) ? true : null\"\n    [ngClass]=\"{\n      'vds-btn-text--fullwidth': (isFullWidth) ? true : null\n    }\"\n    class=\"vds-btn-text--{{colorScheme}}\"\n    [attr.type]=\"type || null\"\n    #button\n  >\n    <ng-container *ngTemplateOutlet=\"buttonContent\">\n    </ng-container>\n  </button>\n</ng-container>\n\n<ng-container *ngIf=\"variant === 'icon'\">\n  <button\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.aria-describedby]=\"describedBy\"\n    class=\"vds-btn-icon vds-btn-icon--{{iconType}}\"\n    [attr.type]=\"type || null\"\n    [attr.disabled]=\"(disabled) ? true : null\"\n    #button\n  >\n    <ng-container *ngTemplateOutlet=\"buttonContent\">\n    </ng-container>\n  </button>\n</ng-container>\n\n<ng-container *ngIf=\"variant === 'split'\">\n  <button\n    [attr.aria-label]=\"ariaLabel\"\n    [attr.disabled]=\"(disabled) ? true : null\"\n    [ngClass]=\"{\n      'vds-state--disabled': (disabled) ? true : null\n    }\"\n    class=\"vds-btn-split vds-btn-split--{{colorScheme}}\"\n    type=\"button\"\n    #button\n  >\n    <ng-container *ngTemplateOutlet=\"buttonContent\">\n    </ng-container>\n    <span class=\"vds-btn--action\">\n      <vds-icon\n        [altText]=\"ariaLabel\"\n        [icon]=\"icon\"\n        tiny=\"true\"\n      >\n      </vds-icon>\n    </span>\n  </button>\n</ng-container>\n\n<ng-template #buttonContent>\n  <span class=\"vds-btn-label\" [id]=\"id\">\n    <ng-container *ngTemplateOutlet=\"content\">\n    </ng-container>\n  </span>\n</ng-template>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n"
    },
    {
      "name": "ButtonGroupComponent",
      "id": "component-ButtonGroupComponent-2eead6e0d3854db173a2f49c139d32c4",
      "file": "projects/vds-lib/src/lib/button-group/button-group.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-button-group",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./button-group.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "direction",
          "description": "<p>Direction of buttons in group. Default:\n<code>default. [default|right|reverse]</code></p>\n",
          "line": 12,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'vds-button-group',\n  templateUrl: './button-group.component.html',\n})\nexport class ButtonGroupComponent {\n  /**\n   * Direction of buttons in group. Default:\n   * <code>default. [default|right|reverse]</code>\n   */\n  @Input() direction: string;\n  constructor() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 12
      },
      "templateData": "<div class=\"vds-btn-container\">\n  <div\n    [ngClass]=\"{\n      'vds-btn-group': true,\n      'vds-btn-group--right': direction === 'right',\n      'vds-btn-group--reverse': direction === 'reverse'\n    }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</div>\n"
    },
    {
      "name": "CardArtComponent",
      "id": "component-CardArtComponent-ff817c1627e21ae915def103ae7ffb06",
      "file": "projects/vds-lib/src/lib/card-art/card-art.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-card-art",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./card-art.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "motion",
          "description": "<p>Set Motion for Card Art.\nDefaults to <code>'none'</code>.</p>\n",
          "line": 17,
          "type": "CardArtMotion"
        },
        {
          "name": "size",
          "description": "<p>Set Size for Card Art.\nDefaults to <code>'334x210'</code>.</p>\n",
          "line": 30,
          "type": "CardArtSize"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_motion",
          "defaultValue": "CardArtMotion.NONE",
          "type": "CardArtMotion",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [112]
        },
        {
          "name": "_size",
          "defaultValue": "CardArtSize.x334x210",
          "type": "CardArtSize",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport {\n  CardArtMotion,\n  CardArtSize,\n} from './card-art.constants';\n\n@Component({\n  selector: 'vds-card-art',\n  templateUrl: './card-art.component.html',\n})\nexport class CardArtComponent {\n  /**\n   * Set Motion for Card Art.\n   * Defaults to <code>'none'</code>.\n   */\n  @Input()\n  get motion(): CardArtMotion {\n    return this._motion;\n  }\n  set motion(value) {\n    this._motion = value;\n  }\n  private _motion: CardArtMotion = CardArtMotion.NONE;\n\n  /**\n   * Set Size for Card Art.\n   * Defaults to <code>'334x210'</code>.\n   */\n  @Input()\n  get size(): CardArtSize {\n    return this._size;\n  }\n  set size(value) {\n    this._size = value;\n  }\n  private _size: CardArtSize = CardArtSize.x334x210;\n\n  constructor() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 36
      },
      "accessors": {
        "motion": {
          "name": "motion",
          "setSignature": {
            "name": "motion",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 20,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "size": {
          "name": "size",
          "setSignature": {
            "name": "size",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 33,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  class=\"\n  vds-card-art\n  vds-state--{{size}}\n  vds-state--{{motion}}\"\n>\n</div>\n"
    },
    {
      "name": "CardComponent",
      "id": "component-CardComponent-18a182c2621982149dd7b28218097d36",
      "file": "projects/vds-lib/src/lib/card/card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-card",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dashboard",
          "description": "<p>Enable Dashboard Content Card.\nDefaults to <code>false</code>.</p>\n",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "header",
          "description": "<p>Header for Content Card.</p>\n",
          "line": 29,
          "type": "string"
        },
        {
          "name": "icon",
          "description": "<p>Icon for Content Card.\nDefaults to <code>'atm'</code>.</p>\n",
          "line": 42,
          "type": "string"
        },
        {
          "name": "imageUrl",
          "description": "<p>Image URL for Content Card.</p>\n",
          "line": 54,
          "type": "string"
        },
        {
          "name": "mini",
          "description": "<p>Enable Mini Content Card.\nDefaults to <code>false</code>.</p>\n",
          "line": 67,
          "type": "boolean"
        },
        {
          "name": "miniIcon",
          "description": "<p>Icon for Dashboard Mini Card.</p>\n",
          "line": 91,
          "type": "string"
        },
        {
          "name": "miniNumber",
          "description": "<p>Number for Dashboard Mini Card.</p>\n",
          "line": 79,
          "type": "number"
        },
        {
          "name": "miniUnit",
          "description": "<p>Unit for Dashboard Mini Card.</p>\n",
          "line": 103,
          "type": "string"
        },
        {
          "name": "subtitle",
          "description": "<p>Subtitle for Dashboard Card.</p>\n",
          "line": 115,
          "type": "string"
        },
        {
          "name": "success",
          "description": "<p>Set Success Status for Dashboard Mini Card.\nDefaults to <code>true</code>.</p>\n",
          "line": 128,
          "type": "boolean"
        },
        {
          "name": "title",
          "description": "<p>Title for Content or Dashboard Card.</p>\n",
          "line": 140,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_dashboard",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [112]
        },
        {
          "name": "_header",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [112]
        },
        {
          "name": "_icon",
          "defaultValue": "'atm'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [112]
        },
        {
          "name": "_imageUrl",
          "defaultValue": "null",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 60,
          "modifierKind": [112]
        },
        {
          "name": "_mini",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 73,
          "modifierKind": [112]
        },
        {
          "name": "_miniIcon",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 97,
          "modifierKind": [112]
        },
        {
          "name": "_miniNumber",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 85,
          "modifierKind": [112]
        },
        {
          "name": "_miniUnit",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 109,
          "modifierKind": [112]
        },
        {
          "name": "_subtitle",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 121,
          "modifierKind": [112]
        },
        {
          "name": "_success",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 134,
          "modifierKind": [112]
        },
        {
          "name": "_title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 146,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent {\n  /**\n   * Enable Dashboard Content Card.\n   * Defaults to <code>false</code>.\n   */\n  @Input()\n  get dashboard(): boolean {\n    return this._dashboard;\n  }\n  set dashboard(value) {\n    this._dashboard = coerceBooleanProperty(value);\n  }\n  private _dashboard: boolean = false;\n\n  /**\n   * Header for Content Card.\n   */\n  @Input()\n  get header(): string {\n    return this._header;\n  }\n  set header(value) {\n    this._header = value;\n  }\n  private _header: string;\n\n  /**\n   * Icon for Content Card.\n   * Defaults to <code>'atm'</code>.\n   */\n  @Input()\n  get icon(): string {\n    return this._icon;\n  }\n  set icon(value) {\n    this._icon = value;\n  }\n  private _icon = 'atm';\n\n  /**\n   * Image URL for Content Card.\n   */\n  @Input()\n  get imageUrl(): string {\n    return this._imageUrl;\n  }\n  set imageUrl(value) {\n    this._imageUrl = value;\n  }\n  private _imageUrl: string = null;\n\n  /**\n   * Enable Mini Content Card.\n   * Defaults to <code>false</code>.\n   */\n  @Input()\n  get mini(): boolean {\n    return this._mini;\n  }\n  set mini(value) {\n    this._mini = coerceBooleanProperty(value);\n  }\n  private _mini: boolean = false;\n\n  /**\n   * Number for Dashboard Mini Card.\n   */\n  @Input()\n  get miniNumber(): number {\n    return this._miniNumber;\n  }\n  set miniNumber(value) {\n    this._miniNumber = coerceNumberProperty(value);\n  }\n  private _miniNumber: number;\n\n  /**\n   * Icon for Dashboard Mini Card.\n   */\n  @Input()\n  get miniIcon(): string {\n    return this._miniIcon;\n  }\n  set miniIcon(value) {\n    this._miniIcon = value;\n  }\n  private _miniIcon: string;\n\n  /**\n   * Unit for Dashboard Mini Card.\n   */\n  @Input()\n  get miniUnit(): string {\n    return this._miniUnit;\n  }\n  set miniUnit(value) {\n    this._miniUnit = value;\n  }\n  private _miniUnit: string;\n\n  /**\n   * Subtitle for Dashboard Card.\n   */\n  @Input()\n  get subtitle(): string {\n    return this._subtitle;\n  }\n  set subtitle(value) {\n    this._subtitle = value;\n  }\n  private _subtitle: string;\n\n  /**\n   * Set Success Status for Dashboard Mini Card.\n   * Defaults to <code>true</code>.\n   */\n  @Input()\n  get success(): boolean {\n    return this._success;\n  }\n  set success(value) {\n    this._success = coerceBooleanProperty(value);\n  }\n  private _success = true;\n\n  /**\n   * Title for Content or Dashboard Card.\n   */\n  @Input()\n  get title(): string {\n    return this._title;\n  }\n  set title(value) {\n    this._title = value;\n  }\n  private _title: string;\n\n  constructor() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 146
      },
      "accessors": {
        "dashboard": {
          "name": "dashboard",
          "setSignature": {
            "name": "dashboard",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 20,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "header": {
          "name": "header",
          "setSignature": {
            "name": "header",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 32,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "icon": {
          "name": "icon",
          "setSignature": {
            "name": "icon",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 45,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "imageUrl": {
          "name": "imageUrl",
          "setSignature": {
            "name": "imageUrl",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 57,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "mini": {
          "name": "mini",
          "setSignature": {
            "name": "mini",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 70,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "miniNumber": {
          "name": "miniNumber",
          "setSignature": {
            "name": "miniNumber",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 82,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "miniIcon": {
          "name": "miniIcon",
          "setSignature": {
            "name": "miniIcon",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 94,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "miniUnit": {
          "name": "miniUnit",
          "setSignature": {
            "name": "miniUnit",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 106,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "subtitle": {
          "name": "subtitle",
          "setSignature": {
            "name": "subtitle",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 118,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "success": {
          "name": "success",
          "setSignature": {
            "name": "success",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 131,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "title": {
          "name": "title",
          "setSignature": {
            "name": "title",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 143,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"!mini && !dashboard\">\n  <div class=\"vds-card--content\">\n    <div\n      *ngIf=\"!imageUrl\"\n      class=\"vds-card--content-category\">\n      <div class=\"vds-card--content-content\">\n        <vds-icon\n          altText=\"attachment\"\n          [icon]=\"icon\"\n          low=\"true\">\n        </vds-icon>\n        <p class=\"vds-text--body\">{{ header }}</p>\n      </div>\n    </div>\n    <div\n      *ngIf=\"imageUrl\"\n      class=\"vds-card--content-image\"\n      [ngStyle]=\"{'background-image': 'url(' + imageUrl + ')'}\">\n    </div>\n    <div class=\"vds-card--content-content\">\n      <h3 class=\"vds-text--title--alt\">{{ title }}</h3>\n      <hr class=\"vds-card--content-separator\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      <div class=\"vds-card--content-footer\">\n        <ng-container *ngTemplateOutlet=\"buttons\"></ng-container>\n        <ng-container *ngTemplateOutlet=\"link\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"mini && !dashboard\">\n  <div class=\"vds-card--content--mini\">\n    <div class=\"vds-card--content-content\">\n      <h3 class=\"vds-text--title--alt\">{{ title }}</h3>\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      <ng-container *ngTemplateOutlet=\"link\"></ng-container>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #buttons>\n  <ng-content select=\"vds-button\"></ng-content>\n</ng-template>\n\n<ng-template #content>\n  <p class=\"vds-text--body\">\n    <ng-container *ngTemplateOutlet=\"dashboardContent\"></ng-container>\n  </p>\n</ng-template>\n\n<ng-template #dashboardContent>\n  <ng-content></ng-content>\n</ng-template>\n\n<ng-template #link>\n  <ng-content select=\"vds-link\"></ng-content>\n</ng-template>\n\n<ng-template #subtitleContent let-subtitle=\"subtitle\">\n  <p class=\"vds-card--dashboard-subtitle\">{{ subtitle }}</p>\n</ng-template>\n\n<ng-template #miniDashboardContent>\n  <div class=\"col\">\n   <p class=\"vds-text--body vds-card--dashboard--mini-qualifier\">\n     <ng-container *ngTemplateOutlet=\"dashboardContent\"></ng-container>\n   </p>\n  </div>\n</ng-template>\n\n<ng-container *ngIf=\"dashboard\">\n  <div\n    [ngClass]=\"{\n      'vds-card--dashboard': !mini,\n      'vds-card--dashboard--mini': mini,\n      'vds-state--error': !success,\n      'vds-state--success': success\n    }\"\n  >\n    <div class=\"vds-card--dashboard-content\">\n      <div class=\"row col--no-gutter vds-card--dashboard-header\">\n        <div class=\"col\">\n          <h2\n            [ngClass]=\"{\n              'vds-text--headline': !mini,\n              'vds-text--title': mini\n            }\"\n          >\n            {{ title }}\n          </h2>\n          <ng-container\n            *ngTemplateOutlet=\"subtitleContent; context: {\n              subtitle: subtitle\n            }\"\n          >\n          </ng-container>\n        </div>\n        <div class=\"col\">\n          <div class=\"vds-btn-container\">\n            <div class=\"vds-btn-group vds-btn-group--right\">\n              <ng-container *ngTemplateOutlet=\"buttons\"></ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf=\"mini\">\n        <div class=\"row col--no-gutter\">\n          <div class=\"col vds-card--dashboard--mini-data-point\">\n            <span class=\"vds-card--dashboard--mini-number--big\">{{ miniNumber }}</span>\n            <span class=\"vds-card--dashboard--mini-measure\">\n            <vds-icon [icon]=\"miniIcon\" low=\"true\"></vds-icon>\n            <span class=\"vds-text--body\">{{ miniUnit }}</span>\n           </span>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"row col--no-gutter\">\n        <ng-container *ngIf=\"!mini else miniDashboardContent\">\n          <div class=\"col vds-card--dashboard-data-vis\">\n            <ng-container *ngTemplateOutlet=\"dashboardContent\"></ng-container>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</ng-container>\n"
    },
    {
      "name": "CardExpirationComponent",
      "id": "component-CardExpirationComponent-ec5e21e2863a99f60747675da6b6bafb",
      "file": "projects/vds-lib/src/lib/card-expiration/card-expiration.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-card-expiration",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./card-expiration.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "invalid",
          "description": "<p>Validation error for group selects. Defaults to falsy.</p>\n",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "invalidText",
          "description": "<p>The error displayed in the case both month and year are erroneous.\nDefaults to &#39;Please fill out the Card Expiration field.&#39;.</p>\n",
          "line": 35,
          "type": "string"
        },
        {
          "name": "label",
          "description": "<p>The label above the card-expiration select. Defaults  to &#39;Expires (MM/YY)&#39;.</p>\n",
          "line": 46,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_invalid",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [112]
        },
        {
          "name": "_invalidText",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [112]
        },
        {
          "name": "_label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [112]
        },
        {
          "name": "delimiter",
          "defaultValue": "EXPIRATION.DEFAULT.DELIMITER",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "selects",
          "type": "QueryList<SelectComponent>",
          "optional": false,
          "description": "",
          "line": 54,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "SelectComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  QueryList,\n  ContentChildren,\n  OnChanges,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EXPIRATION } from './card-expiration.constants';\nimport { VdsLibService } from '../vds-lib.service';\nimport { SelectComponent } from '../select/select.component';\n\n@Component({\n  selector: 'vds-card-expiration',\n  templateUrl: './card-expiration.component.html',\n})\nexport class CardExpirationComponent\n  implements OnInit, OnChanges {\n  /**\n   * Validation error for group selects. Defaults to falsy.\n   */\n  @Input() get invalid(): boolean {\n    return this._invalid;\n  }\n  set invalid(value: boolean) {\n    this._invalid = coerceBooleanProperty(value);\n  }\n  private _invalid: boolean = false;\n\n  /**\n   * The error displayed in the case both month and year are erroneous.\n   * Defaults to 'Please fill out the Card Expiration field.'.\n   */\n  @Input() get invalidText(): string {\n    return this._invalidText;\n  }\n  set invalidText(value: string) {\n    this._invalidText = value;\n  }\n  private _invalidText: string;\n\n  /**\n   * The label above the card-expiration select. Defaults  to 'Expires (MM/YY)'.\n   */\n  @Input() get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    this._label = value;\n  }\n  private _label: string;\n\n  @ContentChildren(SelectComponent) selects: QueryList<\n    SelectComponent\n  >;\n\n  delimiter = EXPIRATION.DEFAULT.DELIMITER;\n  id: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.label = this.label\n      ? this.label\n      : EXPIRATION.DEFAULT.LABEL;\n    this.invalidText = this.invalidText\n      ? this.invalidText\n      : EXPIRATION.DEFAULT.GROUP_ERROR;\n    this.id = this.vdsLibService.getUUID();\n  }\n\n  ngOnChanges() {\n    if (this.selects.length === 2) {\n      const selectsArray = this.selects.toArray();\n      const selectOne = selectsArray[0];\n      const selectTwo = selectsArray[1];\n      switch (this.invalid) {\n        case true:\n          selectOne.invalid = true;\n          selectOne.groupError = true;\n          selectTwo.invalid = true;\n          selectTwo.groupError = true;\n          break;\n        case false:\n        default:\n          selectOne.invalid = false;\n          selectTwo.invalid = false;\n          selectOne.groupError = false;\n          selectTwo.groupError = false;\n          break;\n      }\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 59,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnChanges"],
      "accessors": {
        "invalid": {
          "name": "invalid",
          "setSignature": {
            "name": "invalid",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 26,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "invalidText": {
          "name": "invalidText",
          "setSignature": {
            "name": "invalidText",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 38,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 49,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div [ngClass]=\"{\n    'vds-select-group': true,\n    'vds-card-expiration': true,\n    'vds-state--error': invalid\n  }\">\n  <fieldset class=\"vds-fieldset\">\n    <legend class=\"vds-legend\">{{ label }}</legend>\n    <div class=\"vds-select-group-container\">\n      <ng-content select=\"vds-select.month\"></ng-content>\n      <span aria-hidden=\"true\" class=\"vds-select-group-delimiter\">{{ delimiter }}</span>\n      <ng-content select=\"vds-select.year\"></ng-content>\n      <span \n        aria-atomic=\"true\" \n        aria-live=\"assertive\" \n        [ngClass]=\"{\n          'vds-select-group-message': true,\n          'vds-state--hidden': !invalid\n        }\" \n        [id]=\"'input-select-group-error-message--' + id\" \n        role=\"alert\">\n        <vds-icon tiny=\"true\" icon=\"visa_error\"></vds-icon>\n        {{ invalidText }}\n      </span>\n    </div>\n  </fieldset>\n</div>"
    },
    {
      "name": "CellButtonComponent",
      "id": "component-CellButtonComponent-26f3204e1d5fa2994f57175175c8f7d8",
      "file": "projects/vds-lib/src/lib/datatable/cell-factory/cell-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-datatable-cell-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./cell-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "defaultValue": "false",
          "line": 20
        },
        {
          "name": "id",
          "defaultValue": "null",
          "line": 23
        }
      ],
      "outputsClass": [
        {
          "name": "changeEvent",
          "defaultValue": "new EventEmitter()",
          "line": 26,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_isFocused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "handleBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43
        },
        {
          "name": "handleFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { VdsLibService } from '../../vds-lib.service';\n\n@Component({\n  selector: 'vds-datatable-cell-button',\n  templateUrl: './cell-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CellButtonComponent implements OnInit {\n  @Input()\n  disabled = false;\n\n  @Input()\n  id = null;\n\n  @Output()\n  changeEvent = new EventEmitter();\n\n  _isFocused = false;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.vdsLibService.getUUID();\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n  }\n\n  handleFocus() {\n    this._isFocused = true;\n  }\n\n  handleBlur() {\n    this._isFocused = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 28,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<button\n  tabindex=\"-1\"\n  class=\"vds-btn-text vds-btn-text--tertiary\"\n  [id]=\"id\"\n  [attr.disabled]=\"(disabled) ? true : null\"\n  (focus)=\"!disabled ? handleFocus() : null\"\n  (blur)=\"!disabled ? handleBlur() : null\"\n  (click)=\"changeEvent.emit($event)\"\n>\n  <span class=\"vds-btn-label\">\n    <ng-content></ng-content>\n  </span>\n</button>\n"
    },
    {
      "name": "CellFactoryComponent",
      "id": "component-CellFactoryComponent-5c6652d0c4fedf96b6e52b3d19783b6e",
      "file": "projects/vds-lib/src/lib/datatable/cell-factory/cell-factory.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-datatable-cell-factory",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./cell-factory.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "loadingMessage",
          "defaultValue": "DATATABLE.DEFAULTS.LOADING_MSG",
          "line": 19
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_isValueValid",
          "defaultValue": "isValueValid",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "actions",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 31,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'actions'"
            }
          ]
        },
        {
          "name": "button",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 29,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'button'"
            }
          ]
        },
        {
          "name": "date",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'date'"
            }
          ]
        },
        {
          "name": "default",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 21,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'default'"
            }
          ]
        },
        {
          "name": "email",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 25,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'email'"
            }
          ]
        },
        {
          "name": "expand",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 37,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'expand'"
            }
          ]
        },
        {
          "name": "link",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 23,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'link'"
            }
          ]
        },
        {
          "name": "loader",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 39,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'loader'"
            }
          ]
        },
        {
          "name": "multi",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'multi'"
            }
          ]
        },
        {
          "name": "single",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 33,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'single'"
            }
          ]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { DATATABLE } from '../datatable.constants';\nimport { isValueValid } from '../utils';\n\n@Component({\n  selector: 'vds-datatable-cell-factory',\n  templateUrl: './cell-factory.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CellFactoryComponent {\n  @Input() loadingMessage = DATATABLE.DEFAULTS.LOADING_MSG;\n\n  @ViewChild('default') default: TemplateRef<any>;\n\n  @ViewChild('link') link: TemplateRef<any>;\n\n  @ViewChild('email') email: TemplateRef<any>;\n\n  @ViewChild('date') date: TemplateRef<any>;\n\n  @ViewChild('button') button: TemplateRef<any>;\n\n  @ViewChild('actions') actions: TemplateRef<any>;\n\n  @ViewChild('single') single: TemplateRef<any>;\n\n  @ViewChild('multi') multi: TemplateRef<any>;\n\n  @ViewChild('expand') expand: TemplateRef<any>;\n\n  @ViewChild('loader') loader: TemplateRef<any>;\n\n  _isValueValid = isValueValid;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<ng-template #default let-cell>\n  <ng-container *ngIf=\"_isValueValid(cell)\">\n    {{ cell['value'] || cell }}\n  </ng-container>\n</ng-template>\n\n<ng-template #date let-cell>\n  <ng-container *ngIf=\"_isValueValid(cell)\">\n    {{ cell['value'] || cell | date: 'LLL d, yyyy hh:mma' }}\n  </ng-container>\n</ng-template>\n\n<ng-template #link let-cell let-disabled=\"disabled\">\n  <ng-container\n    *ngIf=\"\n      !disabled &&\n        _isValueValid(cell) &&\n        _isValueValid(cell['href']) &&\n        _isValueValid(cell['value']);\n      else nonLink\n    \"\n  >\n    <a [href]=\"cell['href']\" tabindex=\"-1\">{{\n      cell['value']\n    }}</a>\n  </ng-container>\n\n  <ng-template #nonLink>\n    <ng-container *ngIf=\"_isValueValid(cell)\">\n      {{ cell['value'] || cell }}\n    </ng-container>\n  </ng-template>\n</ng-template>\n\n<ng-template #email let-cell let-disabled=\"disabled\">\n  <ng-container *ngIf=\"!disabled; else nonEmail\">\n    <ng-container\n      *ngIf=\"\n        _isValueValid(cell) &&\n          _isValueValid(cell['href']) &&\n          _isValueValid(cell['value']);\n        else defaultEmail\n      \"\n    >\n      <a [href]=\"'mailto:' + cell['href']\" tabindex=\"-1\">{{\n        cell['value']\n      }}</a>\n    </ng-container>\n\n    <ng-template #defaultEmail>\n      <ng-container *ngIf=\"_isValueValid(cell)\">\n        <a\n          tabindex=\"-1\"\n          [href]=\"'mailto:' + (cell['value'] || cell)\"\n        >\n          {{ cell['value'] || cell }}\n        </a>\n      </ng-container>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #nonEmail>\n    {{ cell['value'] || cell }}\n  </ng-template>\n</ng-template>\n\n<ng-template\n  #button\n  let-cell\n  let-row=\"row\"\n  let-action=\"action\"\n  let-disabled=\"disabled\"\n>\n  <ng-container *ngIf=\"_isValueValid(cell)\">\n    <vds-datatable-cell-button\n      (changeEvent)=\"action(cell, row)\"\n      [disabled]=\"disabled\"\n    >\n      {{ cell['value'] || cell }}\n    </vds-datatable-cell-button>\n  </ng-container>\n</ng-template>\n\n<ng-template\n  #actions\n  let-cell\n  let-row=\"row\"\n  let-action=\"action\"\n  let-actionsArray=\"actionsArray\"\n  let-disabled=\"disabled\"\n>\n  <div class=\"vds-datatable-cell-actions\">\n    <ng-container *ngFor=\"let item of actionsArray\">\n      <ng-container\n        *ngIf=\"_isValueValid(item)\"\n        [ngSwitch]=\"item['type']\"\n      >\n        <ng-container\n          *ngSwitchCase=\"'link'\"\n          [ngTemplateOutlet]=\"link\"\n          [ngTemplateOutletContext]=\"{\n            $implicit: item,\n            disabled: disabled\n          }\"\n        >\n        </ng-container>\n        <ng-container\n          *ngSwitchCase=\"'email'\"\n          [ngTemplateOutlet]=\"email\"\n          [ngTemplateOutletContext]=\"{\n            $implicit: item,\n            disabled: disabled\n          }\"\n        >\n        </ng-container>\n        <ng-container\n          *ngSwitchDefault\n          [ngTemplateOutlet]=\"button\"\n          [ngTemplateOutletContext]=\"{\n            $implicit: item,\n            row: row,\n            action: action,\n            disabled: disabled\n          }\"\n        >\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template\n  #single\n  let-checked\n  let-row=\"row\"\n  let-action=\"action\"\n  let-index=\"index\"\n  let-disabled=\"disabled\"\n>\n  <vds-datatable-cell-input\n    [disabled]=\"disabled\"\n    [isRadio]=\"true\"\n    [checked]=\"checked\"\n    (changeEvent)=\"action(row)\"\n  ></vds-datatable-cell-input>\n</ng-template>\n\n<ng-template\n  #multi\n  let-checked\n  let-row=\"row\"\n  let-action=\"action\"\n  let-index=\"index\"\n  let-disabled=\"disabled\"\n>\n  <vds-datatable-cell-input\n    [disabled]=\"disabled\"\n    [checked]=\"checked\"\n    (changeEvent)=\"action(row)\"\n  ></vds-datatable-cell-input>\n</ng-template>\n\n<ng-template\n  #expand\n  let-checked\n  let-row=\"row\"\n  let-action=\"action\"\n  let-disabled=\"disabled\"\n>\n  <button\n    class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n    type=\"button\"\n    [attr.tabindex]=\"!disabled ? -1 : null\"\n    [disabled]=\"disabled\"\n    (click)=\"action(row)\"\n  >\n    <span class=\"vds-btn-label\">\n      <ng-container\n        *ngIf=\"!disabled && checked; else arrowExpand\"\n      >\n         <vds-icon\n           [icon]=\"'visa_arrow-collapse'\"\n           tiny=\"true\"\n         ></vds-icon>\n      </ng-container>\n      <ng-template #arrowExpand>\n        <vds-icon\n          [icon]=\"'visa_arrow-expand'\"\n          tiny=\"true\"\n        ></vds-icon>\n      </ng-template>\n    </span>\n  </button>\n</ng-template>\n\n<ng-template #loader>\n  <div class=\"vds-datatable-loader\">\n    <span>{{loadingMessage}}</span>\n  </div>\n</ng-template>\n"
    },
    {
      "name": "CellInputComponent",
      "id": "component-CellInputComponent-c0f5c2fa36b8d85d0e52985912840a8b",
      "file": "projects/vds-lib/src/lib/datatable/cell-factory/cell-input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-datatable-cell-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./cell-input.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "checked",
          "defaultValue": "false",
          "line": 31
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "line": 23
        },
        {
          "name": "disableFocusBlur",
          "defaultValue": "false",
          "line": 25
        },
        {
          "name": "id",
          "line": 34
        },
        {
          "name": "isRadio",
          "defaultValue": "false",
          "line": 29
        },
        {
          "name": "tabindex",
          "defaultValue": "-1",
          "line": 27
        }
      ],
      "outputsClass": [
        {
          "name": "changeEvent",
          "defaultValue": "new EventEmitter()",
          "line": 44,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_id",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "_isActive",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        },
        {
          "name": "_isFocused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 47
        }
      ],
      "methodsClass": [
        {
          "name": "handleBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 74
        },
        {
          "name": "handleFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54
        },
        {
          "name": "setActiveStyles",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        },
        {
          "name": "setInactiveStyles",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Highlightable } from '@angular/cdk/a11y';\nimport { VdsLibService } from '../../vds-lib.service';\nimport { isValidString } from '../utils';\n\n@Component({\n  selector: 'vds-datatable-cell-input',\n  templateUrl: './cell-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CellInputComponent\n  implements OnInit, Highlightable {\n  @Input() disabled = false;\n\n  @Input() disableFocusBlur = false;\n\n  @Input() tabindex = -1;\n\n  @Input() isRadio = false;\n\n  @Input() checked = false;\n\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    if (isValidString(value)) {\n      this._id = value;\n    }\n  }\n  _id = null;\n\n  @Output() changeEvent = new EventEmitter();\n\n  _isActive = false;\n  _isFocused = false;\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {}\n\n  ngOnInit() {\n    if (this.id === null) {\n      this.id = `__datatable_cell_${this.vdsLibService.getUUID()}`;\n    }\n  }\n\n  setActiveStyles(): void {\n    this._isActive = true;\n    this.cdr.markForCheck();\n  }\n\n  setInactiveStyles(): void {\n    this._isActive = false;\n    this.cdr.markForCheck();\n  }\n\n  handleFocus() {\n    this._isFocused = true;\n  }\n\n  handleBlur() {\n    this._isFocused = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 47,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "Highlightable"],
      "accessors": {
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 37,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<input\n  [disabled]=\"disabled\"\n  [attr.tabindex]=\"tabindex\"\n  [attr.id]=\"id\"\n  [attr.class]=\"isRadio ? 'vds-radio' : 'vds-checkbox'\"\n  [attr.type]=\"isRadio ? 'radio' : 'checkbox'\"\n  (change)=\"changeEvent.emit($event)\"\n  (focus)=\"!disableFocusBlur && !disabled ? handleFocus() : null\"\n  (blur)=\"!disableFocusBlur && !disabled ? handleBlur() : null\"\n  [checked]=\"checked\"\n/>\n<label\n  [attr.for]=\"id\"\n  [ngClass]=\"{\n    'vds-radio-label': isRadio,\n    'vds-checkbox-label': !isRadio,\n    'vds-state--checked': checked ? true : null,\n    'vds-state--focus': _isFocused || _isActive ? true : null\n  }\"\n  ><ng-content></ng-content>\n</label>\n"
    },
    {
      "name": "CharacterCounterComponent",
      "id": "component-CharacterCounterComponent-da7473c210df571547783cf66532b555",
      "file": "projects/vds-lib/src/lib/character-counter/character-counter.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-character-counter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./character-counter.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "characterCounter",
          "description": "<p>Character Counter typed interface to specify limit and message.</p>\n",
          "line": 16,
          "type": "CharacterCounter"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_characterCounter",
          "defaultValue": "{\n    limit: null,\n    message: CHARACTER_COUNTER.MESSAGE.SCREEN_READER,\n  }",
          "type": "CharacterCounter",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "CHARACTER_COUNTER",
          "defaultValue": "CHARACTER_COUNTER",
          "type": "",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  CHARACTER_COUNTER,\n  CharacterCounter,\n} from './character-counter.constants';\n\n@Component({\n  selector: 'vds-character-counter',\n  templateUrl: './character-counter.component.html',\n})\nexport class CharacterCounterComponent implements OnInit {\n  /**\n   * Character Counter typed interface to specify limit and message.\n   */\n  @Input()\n  get characterCounter(): CharacterCounter {\n    return this._characterCounter;\n  }\n  set characterCounter(value) {\n    this._characterCounter = value;\n  }\n  _characterCounter: CharacterCounter = {\n    limit: null,\n    message: CHARACTER_COUNTER.MESSAGE.SCREEN_READER,\n  };\n\n  CHARACTER_COUNTER = CHARACTER_COUNTER;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 27
      },
      "implements": ["OnInit"],
      "accessors": {
        "characterCounter": {
          "name": "characterCounter",
          "setSignature": {
            "name": "characterCounter",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 19,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  aria-atomic=\"true\"\n  [attr.aria-live]=\"(characterCounter.remainder < 0)? 'off' : 'polite'\"\n  class=\"vds-input-count vds-character-counter-container\"\n  *ngIf=\"characterCounter.limit\"\n>\n  <span\n    [ngClass]=\"{\n      'vds-character-counter-error': (characterCounter.remainder < 0),\n      'vds-state--hidden': !characterCounter.message\n    }\"\n    >\n    <vds-icon\n      *ngIf=\"(characterCounter.remainder < 0)\"\n      altText=\"attachment\"\n      icon=\"error\"\n      low=\"true\">\n    </vds-icon>\n    {{ characterCounter.message || CHARACTER_COUNTER.MESSAGE.SCREEN_READER }}\n  </span>\n  <span\n    [ngClass]=\"{\n      'vds-character-counter': true,\n      'vds-character-counter--over-limit': (characterCounter.remainder < 0)\n    }\"\n    class=\"vds-character-counter\">\n    {{ characterCounter.remainder }}\n  </span>\n  <span class=\"vds-sr\">\n    {{ characterCounter.message || CHARACTER_COUNTER.MESSAGE.SCREEN_READER }}\n  </span>\n</div>\n"
    },
    {
      "name": "CheckboxComponent",
      "id": "component-CheckboxComponent-8e436b0c52fe7c2a4a7d4da0a5e25146",
      "file": "projects/vds-lib/src/lib/checkbox/checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MakeProvider(CheckboxComponent)",
          "type": "component"
        }
      ],
      "selector": "vds-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "checked",
          "description": "<p>Checks the checkbox statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 33,
          "type": "boolean"
        },
        {
          "name": "describedBy",
          "description": "<p>Accessibility description label.</p>\n",
          "line": 37,
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "<p>Disable checkbox statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 43,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>The id of the input element.</p>\n",
          "line": 47,
          "type": "string"
        },
        {
          "name": "indeterminate",
          "description": "<p>Set indeterminate statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 53,
          "type": "boolean"
        },
        {
          "name": "invalid",
          "description": "<p>Set invalid statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 59,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>The user display label of the checkbox.</p>\n",
          "line": 63,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name of the input element.</p>\n",
          "line": 67,
          "type": "string"
        },
        {
          "name": "readOnly",
          "description": "<p>Used to denote read only checkboxes</p>\n",
          "line": 75,
          "type": "boolean"
        },
        {
          "name": "required",
          "description": "<p>Used to denote required checkboxes</p>\n",
          "line": 79,
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "<p>The value of the input element.</p>\n",
          "line": 71,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits change event.</p>\n",
          "line": 83,
          "type": "EventEmitter<CheckboxChange>"
        }
      ],
      "propertiesClass": [
        {
          "name": "checkboxID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 87,
          "modifierKind": [114]
        },
        {
          "name": "checkboxName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 88,
          "modifierKind": [114]
        },
        {
          "name": "checkboxValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 89,
          "modifierKind": [114]
        },
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 90,
          "modifierKind": [114]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "checkAndWrite",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 142
        },
        {
          "name": "click",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 149,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 99
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 164
        },
        {
          "name": "onFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 160
        },
        {
          "name": "onKeyDown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 154,
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 132,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  CHECKBOX,\n  CheckboxChange,\n} from './checkbox.constant';\nimport {\n  AbstractValueAccessor,\n  MakeProvider,\n} from '../abstract-value-accessor';\n\n@Component({\n  selector: 'vds-checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [MakeProvider(CheckboxComponent)],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxComponent extends AbstractValueAccessor\n  implements OnInit {\n  /**\n   * Checks the checkbox statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() checked: boolean;\n  /**\n   * Accessibility description label.\n   */\n  @Input() describedBy: string;\n  /**\n   * Disable checkbox statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * The id of the input element.\n   */\n  @Input() id: string;\n  /**\n   * Set indeterminate statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() indeterminate: boolean;\n  /**\n   * Set invalid statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() invalid: boolean;\n  /**\n   * The user display label of the checkbox.\n   */\n  @Input() label: string;\n  /**\n   * The name of the input element.\n   */\n  @Input() name: string;\n  /**\n   * The value of the input element.\n   */\n  @Input() value: string;\n  /**\n   * Used to denote read only checkboxes\n   */\n  @Input() readOnly: boolean;\n  /**\n   * Used to denote required checkboxes\n   */\n  @Input() required: boolean;\n  /**\n   * Emits change event.\n   */\n  @Output() change: EventEmitter<\n    CheckboxChange\n  > = new EventEmitter();\n\n  public checkboxID: string;\n  public checkboxName: string;\n  public checkboxValue: string;\n  public focused = false;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(CHECKBOX.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + CHECKBOX.SUFFIX.NAME;\n    this.checkboxID = `${this.id}${CHECKBOX.SUFFIX.NATIVE}`;\n    this.checkboxName = `${this.name}${\n      CHECKBOX.SUFFIX.NATIVE\n    }`;\n    this.checked = this.vdsLibService.triageDisabledValue(\n      this.checked\n    );\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.readOnly = this.vdsLibService.triageDisabledValue(\n      this.readOnly\n    );\n    this.indeterminate = this.vdsLibService.triageDisabledValue(\n      this.indeterminate\n    );\n    this.invalid = this.vdsLibService.triageDisabledValue(\n      this.invalid\n    );\n    this.required = this.vdsLibService.triageDisabledValue(\n      this.required\n    );\n    this.checkboxValue = this.value;\n    this.writeValue(this.checked);\n  }\n\n  writeValue(value: any) {\n    super.writeValue(value);\n    this.checked = value;\n    this.change.emit({\n      checked: this.checked,\n      source: this,\n    });\n    this.cdRef.detectChanges();\n  }\n\n  checkAndWrite(): void {\n    if (!this.disabled && !this.readOnly) {\n      this.checked = !this.checked;\n    }\n    this.writeValue(this.checked);\n  }\n\n  click(event): void {\n    this.checkAndWrite();\n    event.stopPropagation();\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    this.checkAndWrite();\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  onFocus(): void {\n    this.focused = true;\n  }\n\n  onBlur(): void {\n    this.focused = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 90,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": ["OnInit"],
      "templateData": "<input\n  [attr.checked]=\"(checked) ? true : null\"\n  [checked]=\"(checked) ? true : null\"\n  [attr.disabled]=\"(disabled || readOnly) ? true : null\"\n  [attr.value]=\"(checkboxValue) ? checkboxValue : null\"\n  [attr.readOnly]=\"(readOnly) ? true : null\"\n  [attr.ariadescribedby]=\"describedBy\"\n  [attr.aria-required]=\"required\"\n  [attr.required]=\"required\"\n  [id]=\"checkboxID\"\n  [name]=\"checkboxName\"\n  (blur)=\"onBlur()\"\n  (click)=\"click($event)\"\n  (focus)=\"onFocus()\"\n  (keydown.space)=\"onKeyDown($event)\"\n  class=\"vds-checkbox\"\n  type=\"checkbox\"\n  #input\n>\n<label\n  [for]=\"checkboxID\"\n  [ngClass]=\"{\n    'vds-checkbox-label': true,\n    'vds-state--checked': (checked) ? true : null,\n    'vds-state--disabled': (disabled) ? true : null,\n    'vds-state--focus': (focused) ? true : null,\n    'vds-state--indeterminate': (indeterminate) ? true : null,\n    'vds-state--invalid': (invalid) ? true : null\n  }\"\n>\n  {{ label }}\n</label>\n"
    },
    {
      "name": "CheckboxListComponent",
      "id": "component-CheckboxListComponent-aa35b67691e101769ea871d9810c452a",
      "file": "projects/vds-lib/src/lib/checkbox-list/checkbox-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-checkbox-list",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./checkbox-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "isInner",
          "description": "<p>Set as inner list statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 14,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-checkbox-list',\n  templateUrl: './checkbox-list.component.html',\n})\nexport class CheckboxListComponent implements OnInit {\n  /**\n   * Set as inner list statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() isInner: boolean;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.isInner = this.vdsLibService.triageDisabledValue(\n      this.isInner\n    );\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<ul\n  [ngClass]=\"{\n    'vds-checkbox-list': true,\n    'vds-checkbox-list-inner': (isInner) ? true : null\n  }\"\n>\n  <ng-content></ng-content>\n</ul>\n"
    },
    {
      "name": "CheckboxListItemComponent",
      "id": "component-CheckboxListItemComponent-7a77c760bef37675e11754df5e0b1d0c",
      "file": "projects/vds-lib/src/lib/checkbox-list-item/checkbox-list-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-checkbox-list-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./checkbox-list-item.component.html"
      ],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'vds-checkbox-list-item',\n  templateUrl: './checkbox-list-item.component.html',\n})\nexport class CheckboxListItemComponent {\n  constructor() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 7
      },
      "templateData": "<li class=\"vds-checkbox-list-item\">\n  <ng-content></ng-content>\n</li>\n"
    },
    {
      "name": "CheckboxSetComponent",
      "id": "component-CheckboxSetComponent-0409d62a005a4a24d984b77c0facda40",
      "file": "projects/vds-lib/src/lib/checkbox-set/checkbox-set.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-checkbox-set",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./checkbox-set.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "errorMessage",
          "description": "<p>Error message for the user.</p>\n",
          "line": 12,
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "<p>Set invalid statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "legend",
          "description": "<p>Legend header for the field set.</p>\n",
          "line": 22,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-checkbox-set',\n  templateUrl: './checkbox-set.component.html',\n})\nexport class CheckboxSetComponent implements OnInit {\n  /**\n   * Error message for the user.\n   */\n  @Input() errorMessage: string;\n  /**\n   * Set invalid statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() invalid: boolean;\n  /**\n   * Legend header for the field set.\n   */\n  @Input() legend: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.invalid = this.vdsLibService.triageDisabledValue(\n      this.invalid\n    );\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<fieldset class=\"vds-checkbox-set\">\n  <legend\n    *ngIf=\"legend\"\n    [ngClass]=\"{\n      'vds-checkbox-set-legend': true,\n      'vds-state--invalid': (invalid) ? true : null\n    }\"\n  >\n    {{ legend }}\n  </legend>\n  <ng-content select=\"vds-checkbox-list\"></ng-content>\n  <span\n    *ngIf=\"invalid && errorMessage\"\n    aria-atomic=\"true\"\n    aria-live=\"assertive\"\n    class=\"vds-checkbox-error-message\"\n    role=\"alert\"\n  >\n    <vds-icon\n      icon=\"visa_error\"\n      tiny=\"true\"\n      altText=\"Error\">\n    </vds-icon>\n   {{ errorMessage }}\n  </span>\n</fieldset>\n"
    },
    {
      "name": "ChipComponent",
      "id": "component-ChipComponent-a8a46a900fb5e9b11e9412b66c1a8b24",
      "file": "projects/vds-lib/src/lib/chip/chip.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-chip",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./chip.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disable chip statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 38,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>The id of the element.</p>\n",
          "line": 50,
          "type": "string"
        },
        {
          "name": "readOnly",
          "description": "<p>Set chip read only statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 64,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits changed value.</p>\n",
          "line": 75,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_disabled",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [112]
        },
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [112]
        },
        {
          "name": "_readOnly",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 70,
          "modifierKind": [112]
        },
        {
          "name": "button",
          "type": "ButtonComponent",
          "optional": false,
          "description": "",
          "line": 26,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ButtonComponent"
            }
          ]
        },
        {
          "name": "checkbox",
          "type": "CheckboxComponent",
          "optional": false,
          "description": "",
          "line": 28,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "CheckboxComponent"
            }
          ]
        },
        {
          "name": "chipID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 77,
          "modifierKind": [114]
        },
        {
          "name": "focused",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 78,
          "modifierKind": [114]
        },
        {
          "name": "isSelected",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 79,
          "modifierKind": [114]
        },
        {
          "name": "text",
          "type": "TextComponent",
          "optional": false,
          "description": "",
          "line": 30,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "TextComponent"
            }
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 95
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 88
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ButtonComponent } from '../button/button.component';\nimport { CHIP } from './chip.constants';\nimport { VdsLibService } from '../vds-lib.service';\nimport { CheckboxComponent } from '../checkbox/checkbox.component';\nimport { TextComponent } from '../text/text.component';\nimport { AbstractValueAccessor } from '../abstract-value-accessor';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-chip',\n  templateUrl: './chip.component.html',\n})\nexport class ChipComponent extends AbstractValueAccessor\n  implements OnInit, AfterContentInit {\n  @ContentChild(ButtonComponent)\n  button: ButtonComponent;\n  @ContentChild(CheckboxComponent)\n  checkbox: CheckboxComponent;\n  @ContentChild(TextComponent)\n  text: TextComponent;\n\n  /**\n   * Disable chip statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /**\n   * The id of the element.\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  private _id: string;\n\n  /**\n   * Set chip read only statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get readOnly(): boolean {\n    return this._readOnly;\n  }\n  set readOnly(value) {\n    this._readOnly = coerceBooleanProperty(value);\n  }\n  private _readOnly: boolean;\n\n  /**\n   * Emits changed value.\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  public chipID: string;\n  public focused: boolean;\n  public isSelected: boolean;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(CHIP.PREFIX.ID);\n    this.chipID = `${this.id}${CHIP.SUFFIX.NATIVE}`;\n  }\n\n  ngAfterContentInit() {\n    if (this.checkbox) {\n      if (this.disabled) {\n        this.checkbox.disabled = true;\n        this.checkbox.describedBy =\n          CHIP.DEFAULT.DESCRIPTION.DISABLED;\n      }\n      if (this.readOnly) {\n        this.checkbox.readOnly = true;\n        this.checkbox.describedBy =\n          CHIP.DEFAULT.DESCRIPTION.READONLY;\n      }\n      this.isSelected = this.checkbox.checked;\n      this.checkbox.change.subscribe((change: any) => {\n        this.isSelected = change.checked;\n        this.change.emit({\n          checked: change.checked,\n          source: this,\n        });\n        this.cdRef.detectChanges();\n      });\n    }\n\n    if (this.disabled && this.button) {\n      this.button.disabled = true;\n    }\n    if (this.readOnly && this.button) {\n      this.button.describedBy =\n        CHIP.DEFAULT.DESCRIPTION.READONLY;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 79,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": ["OnInit", "AfterContentInit"],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 41,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 53,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "readOnly": {
          "name": "readOnly",
          "setSignature": {
            "name": "readOnly",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 67,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-chip': !this.checkbox,\n    'vds-chip--filter': this.checkbox,\n    'vds-state--disabled': disabled,\n    'vds-state--readonly': readOnly,\n    'vds-state--selected': !!isSelected\n  }\"\n  [id]=\"chipID\"\n>\n  <ng-content select=\"vds-avatar\"></ng-content>\n  <ng-content select=\"vds-checkbox\"></ng-content>\n  <span class=\"vds-chip-text\" *ngIf=\"text\">\n    <ng-content select=\"vds-text\"></ng-content>\n  </span>\n  <ng-content select=\"vds-button\"></ng-content>\n</div>\n"
    },
    {
      "name": "ChipsComponent",
      "id": "component-ChipsComponent-66d59568ca3d6a12eb444cc36704edc9",
      "file": "projects/vds-lib/src/lib/chips/chips.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-chips",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./chips.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "id",
          "description": "<p>The id of the chip group.</p>\n",
          "line": 24,
          "type": "string"
        },
        {
          "name": "legend",
          "description": "<p>Legend header for the field set.</p>\n",
          "line": 36,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [112]
        },
        {
          "name": "_legend",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [112]
        },
        {
          "name": "chipID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [114]
        },
        {
          "name": "chips",
          "type": "QueryList<ChipComponent>",
          "optional": false,
          "description": "",
          "line": 17,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ChipComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 48
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  ContentChildren,\n  QueryList,\n  Input,\n} from '@angular/core';\nimport { ChipComponent } from '../chip/chip.component';\nimport { VdsLibService } from '../vds-lib.service';\nimport { CHIP } from '../chip/chip.constants';\n\n@Component({\n  selector: 'vds-chips',\n  templateUrl: './chips.component.html',\n})\nexport class ChipsComponent implements OnInit {\n  @ContentChildren(ChipComponent) chips: QueryList<\n    ChipComponent\n  >;\n  /**\n   * The id of the chip group.\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  private _id: string;\n\n  /**\n   * Legend header for the field set.\n   */\n  @Input()\n  get legend(): string {\n    return this._legend;\n  }\n  set legend(value) {\n    this._legend = value;\n  }\n  private _legend: string;\n\n  public chipID: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(CHIP.PREFIX.ID);\n    this.chipID = `${this.id}${CHIP.SUFFIX.NATIVE}`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 44,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 27,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "legend": {
          "name": "legend",
          "setSignature": {
            "name": "legend",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 39,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  [id]=\"chipID\"\n  class=\"vds-chip-container\">\n  <fieldset class=\"vds-fieldset\">\n      <legend class=\"vds-text--body--alt\">\n        {{ legend }}\n      </legend>\n    <ng-content></ng-content>\n  </fieldset>\n</div>\n"
    },
    {
      "name": "ColumnFilterComponent",
      "id": "component-ColumnFilterComponent-0cc859f3aebb73ce7584a41b73332d71",
      "file": "projects/vds-lib/src/lib/datatable/column-filter/column-filter.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-datatable-column-filter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./column-filter.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "dataSource",
          "line": 38,
          "type": "Array<any>"
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "line": 36
        }
      ],
      "outputsClass": [
        {
          "name": "selectEvent",
          "defaultValue": "new EventEmitter<any>()",
          "line": 40,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "_keyManagerFocusId",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "_keyManagerIndex",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "columnCheckboxes",
          "type": "QueryList<CellInputComponent>",
          "optional": false,
          "description": "",
          "line": 44,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "CellInputComponent"
            }
          ]
        },
        {
          "name": "filterListbox",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 45,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'filterListbox'"
            }
          ]
        },
        {
          "name": "keyManager",
          "type": "ActiveDescendantKeyManager<ListKeyManagerOption>",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "overlay",
          "type": "CdkTrapFocus",
          "optional": false,
          "description": "",
          "line": 42,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "CdkTrapFocus"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "__initCdkKeyManager",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 120
        },
        {
          "name": "__listItemScrollTop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 138
        },
        {
          "name": "handleButtonSelect",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleKeyDown",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleOverlayAttach",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 109
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70
        },
        {
          "name": "trackByFn",
          "args": [
            {
              "name": "index",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 116,
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [],
          "argsDecorator": [],
          "line": 56
        },
        {
          "name": "keyup.escape",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 61
        }
      ],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { CellInputComponent } from '../cell-factory/cell-input.component';\nimport {\n  ActiveDescendantKeyManager,\n  CdkTrapFocus,\n  ListKeyManagerOption,\n} from '@angular/cdk/a11y';\nimport {\n  END,\n  HOME,\n  SPACE,\n  TAB,\n} from '@angular/cdk/keycodes';\n\n@Component({\n  selector: 'vds-datatable-column-filter',\n  templateUrl: './column-filter.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ColumnFilterComponent implements OnDestroy {\n  @Input() disabled = false;\n\n  @Input() dataSource: Array<any>;\n\n  @Output() selectEvent = new EventEmitter<any>();\n\n  @ViewChild(CdkTrapFocus) overlay: CdkTrapFocus;\n  @ViewChildren(CellInputComponent)\n  columnCheckboxes: QueryList<CellInputComponent>;\n  @ViewChild('filterListbox') filterListbox: ElementRef;\n\n  keyManager: ActiveDescendantKeyManager<\n    ListKeyManagerOption\n  >;\n\n  _keyManagerIndex;\n  _keyManagerFocusId;\n  _isOpen = false;\n\n  @HostListener('document:click')\n  clickOut() {\n    this._isOpen = false;\n  }\n\n  @HostListener('keyup.escape', ['$event'])\n  handleKeyUpEscape(event) {\n    if (!this.disabled && this._isOpen) {\n      event.preventDefault();\n      this._isOpen = false;\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnDestroy() {\n    if (this.keyManager) {\n      this.keyManager.change.unsubscribe();\n    }\n  }\n\n  handleButtonSelect(event) {\n    event.stopPropagation();\n    this._isOpen = !this._isOpen;\n  }\n\n  handleKeyDown(event) {\n    const keyCode = event.which || event.keyCode;\n    if (keyCode === SPACE) {\n      event.preventDefault();\n      const dgInputButtonComponent = this.columnCheckboxes.toArray()[\n        this._keyManagerIndex\n      ];\n      dgInputButtonComponent.checked = !this.columnCheckboxes.toArray()[\n        this._keyManagerIndex\n      ].checked;\n      dgInputButtonComponent.changeEvent.emit(\n        this._keyManagerIndex\n      );\n    } else if (keyCode === HOME) {\n      event.preventDefault();\n      this.keyManager.setFirstItemActive();\n    } else if (keyCode === END) {\n      event.preventDefault();\n      this.keyManager.setLastItemActive();\n    } else if (keyCode === TAB) {\n      if (!this.disabled && this._isOpen) {\n        this._isOpen = false;\n      }\n    }\n\n    this.keyManager.onKeydown(event);\n  }\n\n  handleOverlayAttach() {\n    Promise.resolve().then(() => {\n      this.cdr.markForCheck();\n      this.__initCdkKeyManager();\n    });\n  }\n\n  trackByFn(index) {\n    return index;\n  }\n\n  __initCdkKeyManager() {\n    if (this.keyManager) {\n      this.keyManager.change.unsubscribe();\n    }\n\n    this.keyManager = new ActiveDescendantKeyManager(\n      this.columnCheckboxes\n    ).withWrap();\n    this.keyManager.change.subscribe((value) => {\n      this._keyManagerFocusId = this.columnCheckboxes.toArray()[\n        value\n      ].id;\n      this._keyManagerIndex = value;\n      this.__listItemScrollTop();\n    });\n    this.keyManager.setActiveItem(0);\n  }\n\n  __listItemScrollTop() {\n    if (this.filterListbox && this._keyManagerIndex >= 0) {\n      const target = this.filterListbox.nativeElement\n        .children[this._keyManagerIndex];\n      target.parentNode.scrollTop =\n        target.offsetTop - target.parentNode.offsetTop;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef"
          }
        ],
        "line": 66,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnDestroy"],
      "templateData": "<button\n  cdkOverlayOrigin\n  #trigger=\"cdkOverlayOrigin\"\n  class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n  type=\"button\"\n  aria-label=\"Select column headers to filter\"\n  [disabled]=\"disabled\"\n  [attr.aria-haspopup]=\"true\"\n  [attr.aria-expanded]=\"_isOpen.toString()\"\n  (click)=\"handleButtonSelect($event)\"\n>\n  <span class=\"vds-btn-label\">\n    <vds-icon\n      [icon]=\"'visa_options'\"\n      tiny=\"true\"\n    ></vds-icon>\n  </span>\n</button>\n\n<ng-template\n  cdkConnectedOverlay\n  [cdkConnectedOverlayOrigin]=\"trigger\"\n  [cdkConnectedOverlayOpen]=\"_isOpen\"\n  [cdkConnectedOverlayOffsetX]=\"-248\"\n  (attach)=\"handleOverlayAttach()\"\n>\n  <div\n    class=\"vds-datatable-filter-container\"\n    role=\"dialog\"\n    (click)=\"$event.stopPropagation()\"\n  >\n    <ul\n      #filterListbox\n      cdkTrapFocus\n      cdkTrapFocusAutoCapture\n      role=\"listbox\"\n      tabindex=\"0\"\n      class=\"vds-listbox\"\n      [attr.aria-activedescendant]=\"_keyManagerFocusId\"\n      [attr.aria-multiselectable]=\"true\"\n      (keydown)=\"!disabled ? handleKeyDown($event) : null\"\n    >\n      <ng-container\n        *ngFor=\"\n          let data of dataSource;\n          let i = index;\n          trackBy: trackByFn\n        \"\n      >\n        <ng-container *ngIf=\"!data['isRowAction']\">\n          <li\n            role=\"option\"\n            [attr.aria-label]=\"data['value']\"\n            [attr.aria-selected]=\"!data['isColumnFiltered']\"\n          >\n            <vds-datatable-cell-input\n              [disabled]=\"disabled\"\n              [disableFocusBlur]=\"true\"\n              [id]=\"data['id']\"\n              [isRadio]=\"false\"\n              [checked]=\"!data['isColumnFiltered']\"\n              (changeEvent)=\"selectEvent.emit(i)\"\n            >\n              {{ data['value'] }}\n            </vds-datatable-cell-input>\n          </li>\n        </ng-container>\n      </ng-container>\n    </ul>\n  </div>\n</ng-template>\n"
    },
    {
      "name": "ComboboxComponent",
      "id": "component-ComboboxComponent-50b0bd5307c2cde5e73f3ace06358a9c",
      "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MakeProvider(ComboboxComponent)",
          "type": "component"
        }
      ],
      "selector": "vds-combobox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./combobox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "defaultError",
          "description": "<p>Error message to display if # of Listbox suggestions is &gt; 0 <br>\nDefault: <code>''</code></p>\n",
          "line": 286,
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "<p>Whether component is disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 153,
          "type": "boolean"
        },
        {
          "name": "displaySelectCheckmark",
          "description": "<p>If true, a checkmark will display for the selected list item. <br>\nDefault: <code>true</code></p>\n",
          "line": 343,
          "type": "boolean"
        },
        {
          "name": "inputDebounceTime",
          "description": "<p>Time in milliseconds to debounce the Input filtering of list options <br>\nDefault: <code>0</code></p>\n",
          "line": 327,
          "type": "number"
        },
        {
          "name": "inputId",
          "description": "<p>ID for Input element <br>\nDefault: <code>null</code></p>\n",
          "line": 211,
          "type": "string | null"
        },
        {
          "name": "label",
          "description": "<p>Label to display for the Combobox <br>\nDefault: <code>''</code></p>\n",
          "line": 271,
          "type": "string"
        },
        {
          "name": "labelId",
          "description": "<p>ID for label element <br>\nDefault: <code>null</code></p>\n",
          "line": 226,
          "type": "string | null"
        },
        {
          "name": "listboxId",
          "description": "<p>ID for ul element <br>\nDefault: <code>null</code></p>\n",
          "line": 241,
          "type": "string | null"
        },
        {
          "name": "listData",
          "description": "<p>List item: <br>\n   | Array&lt;string&gt; <br>\n   | Array&lt;ListDataObject&gt; <br>\nDefault: <code>[]</code></p>\n",
          "line": 196,
          "type": "ListDataType"
        },
        {
          "name": "noMatchError",
          "description": "<p>Error message to display when # of Listbox suggestions = 0. Not applicable to type=&quot;none&quot; <br>\nDefault: <code>''</code></p>\n",
          "line": 305,
          "type": "string"
        },
        {
          "name": "readOnly",
          "description": "<p>Whether component is readonly <br>\nDefault: <code>false</code></p>\n",
          "line": 166,
          "type": "boolean"
        },
        {
          "name": "searchFn",
          "defaultValue": "(listItem, searchTerm) =>\n    listItem\n      .toString()\n      .toLowerCase()\n      .indexOf(searchTerm.toString().toLowerCase()) === 0",
          "description": "<p>Pass in a custom filter function <br></p>\n",
          "line": 357,
          "type": "FilterFunction"
        },
        {
          "name": "type",
          "description": "<p>Choose from &#39;none&#39;, &#39;manual&#39;, &#39;auto&#39;, or &#39;inline&#39; <br>\nDefault: <code>none</code></p>\n",
          "line": 179,
          "type": "ComboboxType"
        },
        {
          "name": "value",
          "description": "<p>Value to display for the Combobox input field <br>\nDefault: <code>''</code></p>\n",
          "line": 256,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "inputButtonSelectEvent",
          "defaultValue": "new EventEmitter<boolean>()",
          "description": "<p>Fires when Input arrow button is selected. <br>\nReturns a boolean to indicate if the Listbox is open or not. <br>\n<code>returns boolean</code></p>\n",
          "line": 117,
          "type": "EventEmitter"
        },
        {
          "name": "inputKeyupEvent",
          "defaultValue": "new EventEmitter<InputKeyupEvent>()",
          "description": "<p>Fires when Input keyup event fires. <br>\nReturns the event object along w/ the current. <br>\nInput value recorded by the component. <br>\n<code>returns InputKeyupEvent</code></p>\n",
          "line": 126,
          "type": "EventEmitter"
        },
        {
          "name": "listItemSelectEvent",
          "defaultValue": "new EventEmitter<\n    ListItemSelectEvent\n  >()",
          "description": "<p>Fires when list option is selected. <br>\nReturns the event object and selected list option index. <br>\n<code>returns ListItemSelectEvent</code></p>\n",
          "line": 134,
          "type": "EventEmitter"
        },
        {
          "name": "optionChange",
          "defaultValue": "new EventEmitter<\n    ListDataObject | string\n  >()",
          "description": "<p>Fires when list option is selected. <br>\nReturns the selected list option input object. <br>\n<code>returns ListDataObject</code></p>\n",
          "line": 144,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_ariaActiveDescendant",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 94
        },
        {
          "name": "_defaultError",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 298
        },
        {
          "name": "_disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 159
        },
        {
          "name": "_displaySelectCheckmark",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 351
        },
        {
          "name": "_displayValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 100
        },
        {
          "name": "_errorMessage",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 96
        },
        {
          "name": "_inputDebounceTime",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 336
        },
        {
          "name": "_inputId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 219
        },
        {
          "name": "_isExpanded",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "_keyManager",
          "type": "ListKeyManager<ListKeyManagerOption>",
          "optional": false,
          "description": "",
          "line": 97
        },
        {
          "name": "_label",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 279
        },
        {
          "name": "_labelId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 234
        },
        {
          "name": "_listboxId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 249
        },
        {
          "name": "_listData",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 204
        },
        {
          "name": "_listDataOrig",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 95
        },
        {
          "name": "_listDataStream",
          "defaultValue": "new BehaviorSubject([])",
          "type": "",
          "optional": false,
          "description": "",
          "line": 98
        },
        {
          "name": "_noMatchError",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 320
        },
        {
          "name": "_readOnly",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 172
        },
        {
          "name": "_selectedItem",
          "type": "Element",
          "optional": false,
          "description": "",
          "line": 99
        },
        {
          "name": "_selectItemIndex",
          "defaultValue": "-1",
          "type": "",
          "optional": false,
          "description": "",
          "line": 93
        },
        {
          "name": "_type",
          "defaultValue": "'none'",
          "type": "ComboboxType",
          "optional": false,
          "description": "",
          "line": 187
        },
        {
          "name": "_uidInput",
          "type": "",
          "optional": false,
          "description": "",
          "line": 89
        },
        {
          "name": "_uidLabel",
          "type": "",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "_uidListbox",
          "type": "",
          "optional": false,
          "description": "",
          "line": 91
        },
        {
          "name": "_value",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 264
        },
        {
          "name": "inputComp",
          "type": "InputComponent",
          "optional": false,
          "description": "",
          "line": 106,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "InputComponent"
            }
          ]
        },
        {
          "name": "listBoxComp",
          "type": "ListboxComponent",
          "optional": false,
          "description": "",
          "line": 103,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "ListboxComponent"
            }
          ]
        },
        {
          "name": "listItemTemplate",
          "type": "TemplateCellComponent",
          "optional": false,
          "description": "",
          "line": 109,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "TemplateCellComponent"
            }
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "__filterListData",
          "args": [
            {
              "name": "searchTerm",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 740,
          "jsdoctags": [
            {
              "name": "searchTerm",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "__getInputAriaAutocomplete",
          "args": [],
          "optional": false,
          "returnType": "\"both\" | \"list\"",
          "typeParameters": [],
          "line": 831
        },
        {
          "name": "__listItemSelect",
          "args": [
            {
              "name": "itemIndex",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 774,
          "jsdoctags": [
            {
              "name": "itemIndex",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "__selectionProcess",
          "args": [
            {
              "name": "currentVal",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 750,
          "jsdoctags": [
            {
              "name": "currentVal",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "__setErrorMessage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 801
        },
        {
          "name": "__typeAutoInlineAction",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 815
        },
        {
          "name": "handleInputButtonSelect",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 514
        },
        {
          "name": "handleInputKeydown",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 536,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleInputKeyup",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 628,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleItemSelect",
          "args": [
            {
              "name": "ev",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 715,
          "jsdoctags": [
            {
              "name": "ev",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 467
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "change",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 432,
          "jsdoctags": [
            {
              "name": "change",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 508
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 399
        },
        {
          "name": "toggleListBoxClasses",
          "args": [
            {
              "name": "target",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 726,
          "jsdoctags": [
            {
              "name": "target",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "val",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 380,
          "jsdoctags": [
            {
              "name": "val",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [],
          "argsDecorator": [],
          "line": 364
        }
      ],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  ViewChild,\n  HostListener,\n  OnInit,\n  AfterViewInit,\n  ContentChild,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {\n  ALT,\n  BACKSPACE,\n  DELETE,\n  DOWN_ARROW,\n  ENTER,\n  ESCAPE,\n  SHIFT,\n  TAB,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {\n  ListKeyManager,\n  ListKeyManagerOption,\n} from '@angular/cdk/a11y';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\nimport { COMBOBOX } from './combobox.constants';\nimport { BehaviorSubject } from 'rxjs';\nimport { ListboxComponent } from './listbox.component';\nimport { InputComponent } from './input.component';\nimport { TemplateCellComponent } from '../custom-template/template-cell.component';\nimport { isValueValid, isValidString } from './utils';\nimport {\n  ComboboxType,\n  FilterFunction,\n  InputKeyupEvent,\n  ListItemSelectEvent,\n  ListDataType,\n  ListDataObject,\n} from './combobox.model';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  MakeProvider,\n  AbstractValueAccessor,\n} from '../abstract-value-accessor';\n\nconst acceptedTypes = ['none', 'manual', 'auto', 'inline'];\nconst keyupKeyCodeBlock = [\n  ESCAPE,\n  TAB,\n  ENTER,\n  UP_ARROW,\n  DOWN_ARROW,\n  DELETE,\n  ALT,\n  SHIFT,\n];\n\nconst validateSearchFn = (fn) => {\n  const boolCheck = fn('', '');\n  if (typeof boolCheck !== 'boolean') {\n    throw new Error(\n      'Your search function must return a boolean.'\n    );\n  }\n\n  return true;\n};\n\n@Component({\n  selector: 'vds-combobox',\n  templateUrl: './combobox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [MakeProvider(ComboboxComponent)],\n})\nexport class ComboboxComponent extends AbstractValueAccessor\n  implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  _uidInput;\n  _uidLabel;\n  _uidListbox;\n  _isExpanded = false;\n  _selectItemIndex = -1;\n  _ariaActiveDescendant = null;\n  _listDataOrig = [];\n  _errorMessage = '';\n  _keyManager: ListKeyManager<ListKeyManagerOption>;\n  _listDataStream = new BehaviorSubject([]);\n  _selectedItem: Element;\n  _displayValue: string;\n\n  @ViewChild(ListboxComponent)\n  listBoxComp: ListboxComponent;\n\n  @ViewChild(InputComponent)\n  inputComp: InputComponent;\n\n  @ContentChild(TemplateCellComponent)\n  listItemTemplate: TemplateCellComponent;\n\n  /**\n   * Fires when Input arrow button is selected. <br>\n   * Returns a boolean to indicate if the Listbox is open or not. <br>\n   * <code>returns boolean</code>\n   */\n  @Output()\n  inputButtonSelectEvent = new EventEmitter<boolean>();\n\n  /**\n   * Fires when Input keyup event fires. <br>\n   * Returns the event object along w/ the current. <br>\n   * Input value recorded by the component. <br>\n   * <code>returns InputKeyupEvent</code>\n   */\n  @Output()\n  inputKeyupEvent = new EventEmitter<InputKeyupEvent>();\n\n  /**\n   * Fires when list option is selected. <br>\n   * Returns the event object and selected list option index. <br>\n   * <code>returns ListItemSelectEvent</code>\n   */\n  @Output()\n  listItemSelectEvent = new EventEmitter<\n    ListItemSelectEvent\n  >();\n\n  /**\n   * Fires when list option is selected. <br>\n   * Returns the selected list option input object. <br>\n   * <code>returns ListDataObject</code>\n   */\n  @Output()\n  optionChange = new EventEmitter<\n    ListDataObject | string\n  >();\n\n  /**\n   * Whether component is disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled = false;\n\n  /**\n   * Whether component is readonly <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get readOnly(): boolean {\n    return this._readOnly;\n  }\n  set readOnly(value) {\n    this._readOnly = coerceBooleanProperty(value);\n  }\n  _readOnly = false;\n\n  /**\n   * Choose from 'none', 'manual', 'auto', or 'inline' <br>\n   * Default: <code>none</code>\n   */\n  @Input()\n  get type(): ComboboxType {\n    return this._type;\n  }\n  set type(value) {\n    if (acceptedTypes.includes(value)) {\n      this._type = value;\n    }\n  }\n  _type: ComboboxType = 'none';\n\n  /**\n   * List item: <br>\n   *   | Array\\<string> <br>\n   *   | Array\\<ListDataObject> <br>\n   * Default: <code>[]</code>\n   */\n  @Input()\n  get listData(): ListDataType {\n    return this._listData;\n  }\n  set listData(arry) {\n    if (Array.isArray(arry)) {\n      this._listData = arry;\n    }\n  }\n  _listData = [];\n\n  /**\n   * ID for Input element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get inputId(): string | null {\n    return this._inputId;\n  }\n  set inputId(value) {\n    if (isValidString(value)) {\n      this._inputId = value;\n    }\n  }\n  _inputId = null;\n\n  /**\n   * ID for label element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get labelId(): string | null {\n    return this._labelId;\n  }\n  set labelId(value) {\n    if (isValidString(value)) {\n      this._labelId = value;\n    }\n  }\n  _labelId = null;\n\n  /**\n   * ID for ul element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get listboxId(): string | null {\n    return this._listboxId;\n  }\n  set listboxId(value) {\n    if (isValidString(value)) {\n      this._listboxId = value;\n    }\n  }\n  _listboxId = null;\n\n  /**\n   * Value to display for the Combobox input field <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get value(): string {\n    return this._value;\n  }\n  set value(value) {\n    this._value = isValidString(value)\n      ? value.toString()\n      : '';\n  }\n  _value = '';\n\n  /**\n   * Label to display for the Combobox <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value) {\n    this._label = isValidString(value)\n      ? value.toString()\n      : '';\n  }\n  _label = '';\n\n  /**\n   * Error message to display if # of Listbox suggestions is > 0 <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get defaultError(): string {\n    return this._defaultError;\n  }\n  set defaultError(value) {\n    this._defaultError = isValidString(value)\n      ? value.toString()\n      : '';\n\n    if (this._listDataStream.getValue().length > 0) {\n      this._errorMessage = this._defaultError;\n    }\n  }\n  _defaultError = '';\n\n  /**\n   * Error message to display when # of Listbox suggestions = 0. Not applicable to type=\"none\" <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get noMatchError(): string {\n    return this._noMatchError;\n  }\n  set noMatchError(value) {\n    this._noMatchError = isValidString(value)\n      ? value.toString()\n      : '';\n\n    if (\n      this._listDataStream.getValue().length === 0 &&\n      this.value.length > 0\n    ) {\n      this._errorMessage = this._noMatchError;\n    }\n  }\n  _noMatchError = '';\n\n  /**\n   * Time in milliseconds to debounce the Input filtering of list options <br>\n   * Default: <code>0</code>\n   */\n  @Input()\n  get inputDebounceTime(): number {\n    return this._inputDebounceTime;\n  }\n  set inputDebounceTime(value) {\n    this._inputDebounceTime = coerceNumberProperty(\n      value,\n      0\n    );\n  }\n  _inputDebounceTime = 0;\n\n  /**\n   * If true, a checkmark will display for the selected list item. <br>\n   * Default: <code>true</code>\n   */\n  @Input()\n  get displaySelectCheckmark(): boolean {\n    return this._displaySelectCheckmark;\n  }\n  set displaySelectCheckmark(value) {\n    this._displaySelectCheckmark = coerceBooleanProperty(\n      value\n    );\n  }\n  _displaySelectCheckmark = true;\n\n  /**\n   * Pass in a custom filter function <br>\n   */\n  @Input()\n  searchFn: FilterFunction = (listItem, searchTerm) =>\n    listItem\n      .toString()\n      .toLowerCase()\n      .indexOf(searchTerm.toString().toLowerCase()) === 0;\n\n  @HostListener('document:click')\n  clickOut() {\n    if (this._isExpanded) {\n      this.__listItemSelect(\n        this._keyManager.activeItemIndex\n      );\n      this._isExpanded = false;\n    }\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {\n    super();\n  }\n\n  writeValue(val: any) {\n    if (!val) {\n      if (this._listDataOrig.slice()) {\n        this._listDataStream.next(\n          this._listDataOrig.slice()\n        );\n      }\n      return;\n    }\n    this.value =\n      isValueValid(val.value) && isValueValid(val.label)\n        ? val.value\n        : val;\n    super.writeValue(this.value);\n    // this.value = val;\n    this.__selectionProcess(val);\n    this.cdRef.detectChanges();\n  }\n\n  ngOnInit() {\n    const nextUniqueId = this.vdsLibService.getUUID();\n    this._uidInput = `vds-combobox-input-${nextUniqueId}`;\n    this._uidLabel = `vds-combobox-label-${nextUniqueId}`;\n    this._uidListbox = `vds-combobox-listbox-${nextUniqueId}`;\n\n    validateSearchFn(this.searchFn);\n\n    if (!isValidString(this.inputId)) {\n      this.inputId = this._uidInput;\n    }\n\n    if (!isValueValid(this.labelId)) {\n      this.labelId = this._uidLabel;\n    }\n\n    if (!isValueValid(this.listboxId)) {\n      this.listboxId = this._uidListbox;\n    }\n\n    this._errorMessage = this.defaultError;\n    this._listDataOrig = this.listData.slice();\n    this._listDataStream.next(this._listDataOrig.slice());\n\n    if (this.type !== 'none') {\n      this._listDataStream.next(\n        this.__filterListData(this.value)\n      );\n    }\n\n    this.writeValue(this.value);\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (\n      change.listData &&\n      !change.listData.firstChange &&\n      this.type !== 'none'\n    ) {\n      this._listDataOrig = change.listData.currentValue.slice();\n      this._listDataStream.next(this._listDataOrig.slice());\n      if (isValueValid(this._displayValue)) {\n        this._listDataStream.next(\n          this.__filterListData(this._displayValue)\n        );\n        this._selectItemIndex = 0;\n        this.__setErrorMessage();\n        if (this._keyManager) {\n          this._keyManager.setActiveItem(\n            this._selectItemIndex\n          );\n        }\n      }\n    }\n    if (\n      change.value &&\n      !change.value.firstChange &&\n      this.type !== 'none'\n    ) {\n      this._isExpanded = false;\n      this._selectItemIndex = -1;\n      this._keyManager.setActiveItem(-1);\n      this._listDataStream.next(\n        this.__filterListData(change.value.currentValue)\n      );\n    }\n  }\n\n  ngAfterViewInit() {\n    this._keyManager = new ListKeyManager(\n      this.listBoxComp.listItems\n    ).withWrap();\n\n    this._keyManager.change.subscribe((index) => {\n      const listBoxAction = () => {\n        if (index > 0) {\n          this.listBoxComp.setScrollTop(index);\n        } else {\n          this.listBoxComp.resetScrollTop();\n        }\n      };\n\n      if (\n        this.listBoxComp &&\n        this.listBoxComp.listItems &&\n        this.listBoxComp.listItems.toArray()[index] &&\n        this.listBoxComp.listItems.toArray()[index]\n          .nativeElement &&\n        this.listBoxComp.listItems.toArray()[index]\n          .nativeElement.id\n      ) {\n        this._ariaActiveDescendant =\n          index >= 0\n            ? this.listBoxComp.listItems.toArray()[index]\n                .nativeElement.id\n            : null;\n      }\n\n      if (this._isExpanded) {\n        listBoxAction();\n      } else {\n        // We use a setTimeout here because a _keyManager active item index\n        // can be set when the Listbox has not displayed yet, causing issues w/ scrollTop positions.\n        // This is only necessary, and called, when the Listbox is displayed after being hidden.\n        setTimeout(() => listBoxAction(), 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._keyManager && this._keyManager.change) {\n      this._keyManager.change.unsubscribe();\n    }\n  }\n\n  handleInputButtonSelect() {\n    const isExpanded = !this._isExpanded;\n\n    if (!isExpanded) {\n      this.__listItemSelect(\n        this._keyManager.activeItemIndex\n      );\n    } else if (\n      this._keyManager.activeItemIndex < 0 &&\n      this._keyManager.activeItemIndex !== -100\n    ) {\n      // -100 is an arbitrary negative number; it just needs to be\n      // something other than -1 which is set from the keydown handler\n      this._keyManager.setActiveItem(-100);\n    }\n\n    // it is required that _isExpanded is set AFTER _keyManager has set an\n    // active item index so that setTimeout correctly fires during _keyManager.change\n    this._isExpanded = isExpanded;\n    this.inputButtonSelectEvent.emit(this._isExpanded);\n  }\n\n  handleInputKeydown(event) {\n    const keyCode = event.which;\n    if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n      const listDataArray = this._listDataStream.getValue();\n      event.preventDefault();\n\n      if (\n        event.altKey &&\n        keyCode === UP_ARROW &&\n        this._isExpanded\n      ) {\n        // ALT + UP ARROW to close\n        this._isExpanded = false;\n        return;\n      } else if (\n        event.altKey &&\n        keyCode === DOWN_ARROW &&\n        !this._isExpanded &&\n        listDataArray.length > 0\n      ) {\n        // ALT + DOWN ARROW to open\n        this._isExpanded = true;\n        this._keyManager.setActiveItem(-1);\n        return;\n      } else if (\n        !this._isExpanded &&\n        listDataArray.length > 0\n      ) {\n        // UP ARROW/DOWN ARROW to open\n        const activeIndex =\n          this._selectItemIndex >= 0\n            ? this._selectItemIndex\n            : keyCode === UP_ARROW\n            ? listDataArray.length - 1\n            : 0;\n\n        this._keyManager.setActiveItem(activeIndex);\n        this.__typeAutoInlineAction();\n        // it is required that _isExpanded is set AFTER _keyManager has set an\n        // active item index so that setTimeout correctly fires during _keyManager.change\n        this._isExpanded = true;\n        return;\n      } else if (listDataArray.length === 0) {\n        // NOOP\n        return;\n      }\n\n      // UP ARROW/DOWN ARROW to cycle\n      this._keyManager.onKeydown(event);\n      this.__typeAutoInlineAction();\n      return;\n    } else if (keyCode === ENTER && this._isExpanded) {\n      // Handle ENTER\n      event.preventDefault();\n      this.toggleListBoxClasses(\n        this._keyManager.activeItem\n      );\n      this.__listItemSelect(\n        this._keyManager.activeItemIndex\n      );\n      this._isExpanded = false;\n      this.listItemSelectEvent.emit({\n        event,\n        index: this._selectItemIndex,\n      });\n      if (this._keyManager.activeItem) {\n        this.optionChange.emit(\n          this._selectedItem.textContent\n        );\n      } else {\n        this.writeValue(this.value);\n        this.optionChange.emit(this.value);\n      }\n      return;\n    } else if (keyCode === TAB && this._isExpanded) {\n      // TAB to close\n      this._isExpanded = false;\n    } else if (keyCode === ESCAPE) {\n      // ESCAPE to close\n      this.value = '';\n      this._isExpanded = false;\n      this._selectItemIndex = -1;\n      this._keyManager.setActiveItem(-1);\n      this._errorMessage = this.defaultError;\n      this.toggleListBoxClasses(null);\n\n      if (this.type !== 'none') {\n        this._listDataStream.next(this._listDataOrig);\n      }\n    }\n  }\n\n  handleInputKeyup(event) {\n    const keyCode = event.which;\n    if (keyupKeyCodeBlock.includes(keyCode)) {\n      event.preventDefault();\n      return;\n    }\n\n    const previousValue = this.value;\n    this.value = event.target.value;\n    const hasValueChanged =\n      previousValue.toLowerCase() !==\n      this.value.toLowerCase();\n\n    this._selectItemIndex = hasValueChanged\n      ? -1\n      : this._selectItemIndex;\n    let highlightIndex = hasValueChanged\n      ? -1\n      : this._keyManager.activeItemIndex;\n    let isExpanded =\n      this._listDataStream.getValue().length > 0;\n\n    if (this.type !== 'none') {\n      const validValue = this.value.trim() !== '';\n      const filteredData = this.__filterListData(\n        this.value\n      );\n      isExpanded = filteredData.length > 0;\n\n      this._listDataStream.next(\n        validValue && isExpanded\n          ? filteredData\n          : this._listDataOrig\n      );\n\n      // For type `auto` and `inline` we always select first option in filtered list\n      if (hasValueChanged) {\n        this._selectItemIndex = highlightIndex =\n          this.type !== 'manual' && validValue && isExpanded\n            ? 0\n            : -1;\n      }\n\n      this.__setErrorMessage();\n\n      if (\n        this.type === 'inline' &&\n        keyCode !== BACKSPACE &&\n        isExpanded\n      ) {\n        const listValue = isValueValid(\n          filteredData[0].value\n        )\n          ? filteredData[0].value\n          : filteredData[0];\n\n        if (this.value !== listValue) {\n          const previousInputLen = this.value.length;\n          event.target.value = this.value = listValue;\n          this.writeValue(this.value);\n          // We use a setTimeout for cross-browser support\n          // Safari 12.1.1 for example will not set the selection range w/out the timeout\n          setTimeout(() => {\n            event.target.setSelectionRange(\n              previousInputLen,\n              listValue.length\n            );\n          }, 0);\n        }\n      }\n    }\n\n    if (hasValueChanged) {\n      this._keyManager.setActiveItem(highlightIndex);\n      this.writeValue(this.value);\n      this.toggleListBoxClasses(null);\n    }\n\n    // it is required that _isExpanded is set AFTER _keyManager has set an\n    // active item index so that setTimeout correctly fires during _keyManager.change\n    this._isExpanded = isExpanded;\n    this.inputKeyupEvent.emit({\n      event,\n      value: this.value,\n    });\n  }\n\n  handleItemSelect(ev) {\n    this.toggleListBoxClasses(ev.event.currentTarget);\n    this.__listItemSelect(ev.index);\n    this._isExpanded = false;\n    this.listItemSelectEvent.emit({\n      event: ev.event,\n      index: ev.index,\n    });\n    this.optionChange.emit(ev.data);\n  }\n\n  toggleListBoxClasses(target) {\n    if (this._selectedItem) {\n      this._selectedItem.className =\n        COMBOBOX.CLASSES.DEFAULT;\n    }\n    if (target) {\n      this._selectedItem = target.nativeElement\n        ? target.nativeElement\n        : target;\n      this._selectedItem.className =\n        COMBOBOX.CLASSES.SELECTED;\n    }\n  }\n\n  __filterListData(searchTerm) {\n    return this._listDataOrig.filter((item) => {\n      item =\n        isValueValid(item.value) && isValueValid(item.label)\n          ? item.label\n          : item;\n      return this.searchFn(item, searchTerm);\n    });\n  }\n\n  __selectionProcess(currentVal) {\n    this._displayValue =\n      currentVal &&\n      currentVal.label &&\n      isValueValid(currentVal.label)\n        ? currentVal.label\n        : currentVal;\n    if (\n      this.type !== 'none' &&\n      isValueValid(this._displayValue)\n    ) {\n      this._listDataStream.next(\n        this.__filterListData(this._displayValue)\n      );\n      this._selectItemIndex = 0;\n      this.__setErrorMessage();\n      if (this._keyManager) {\n        this._keyManager.setActiveItem(\n          this._selectItemIndex\n        );\n      }\n    }\n  }\n\n  __listItemSelect(itemIndex) {\n    if (itemIndex >= 0) {\n      const listItemData = this._listDataStream.getValue()[\n        itemIndex\n      ];\n      this._displayValue = isValueValid(listItemData.label)\n        ? listItemData.label\n        : listItemData;\n      this.value = isValueValid(listItemData.value)\n        ? listItemData.value\n        : listItemData;\n      // this.writeValue(this.value);\n      this.writeValue(listItemData);\n      if (this.type !== 'none') {\n        this._listDataStream.next(\n          this.__filterListData(this._displayValue)\n        );\n        this._selectItemIndex = 0;\n      } else {\n        this._selectItemIndex = itemIndex;\n      }\n\n      this.__setErrorMessage();\n      this._keyManager.setActiveItem(this._selectItemIndex);\n    }\n  }\n\n  __setErrorMessage() {\n    if (this._displayValue == null) {\n      return;\n    }\n    const validValue = this._displayValue.trim() !== '';\n    const filteredData = this.__filterListData(\n      this._displayValue\n    );\n    this._errorMessage =\n      validValue && filteredData.length === 0\n        ? this.noMatchError\n        : this.defaultError;\n  }\n\n  __typeAutoInlineAction() {\n    if (this.type === 'auto' || this.type === 'inline') {\n      this._selectItemIndex = this._keyManager.activeItemIndex;\n\n      if (this.type === 'inline') {\n        const listItemData = this._listDataStream.getValue()[\n          this._selectItemIndex\n        ];\n        this.value = isValueValid(listItemData.value)\n          ? listItemData.value\n          : listItemData;\n        this.writeValue(this.value);\n      }\n    }\n  }\n\n  __getInputAriaAutocomplete() {\n    if (this.type === 'inline') {\n      return 'both';\n    }\n\n    return 'list';\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 371,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": [
        "OnInit",
        "AfterViewInit",
        "OnChanges",
        "OnDestroy"
      ],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 156,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "readOnly": {
          "name": "readOnly",
          "setSignature": {
            "name": "readOnly",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 169,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "type": {
          "name": "type",
          "setSignature": {
            "name": "type",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 182,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "listData": {
          "name": "listData",
          "setSignature": {
            "name": "listData",
            "type": "void",
            "args": [
              {
                "name": "arry",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 199,
            "jsdoctags": [
              {
                "name": "arry",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "inputId": {
          "name": "inputId",
          "setSignature": {
            "name": "inputId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 214,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "labelId": {
          "name": "labelId",
          "setSignature": {
            "name": "labelId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 229,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "listboxId": {
          "name": "listboxId",
          "setSignature": {
            "name": "listboxId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 244,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 259,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 274,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "defaultError": {
          "name": "defaultError",
          "setSignature": {
            "name": "defaultError",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 289,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "noMatchError": {
          "name": "noMatchError",
          "setSignature": {
            "name": "noMatchError",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 308,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "inputDebounceTime": {
          "name": "inputDebounceTime",
          "setSignature": {
            "name": "inputDebounceTime",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 330,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "displaySelectCheckmark": {
          "name": "displaySelectCheckmark",
          "setSignature": {
            "name": "displaySelectCheckmark",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 346,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  class=\"vds-combobox-container vdp-combobox-container\"\n  role=\"combobox\"\n  aria-haspopup=\"listbox\"\n  [attr.aria-owns]=\"listboxId\"\n  [attr.aria-expanded]=\"_isExpanded\"\n  [attr.data-combobox-container]=\"true\">\n  <vds-combobox-input\n    [labelId]=\"labelId\"\n    [inputId]=\"inputId\"\n    [ariaActiveDescendant]=\"_ariaActiveDescendant\"\n    [ariaAutocomplete]=\"__getInputAriaAutocomplete()\"\n    [ariaOwns]=\"listboxId\"\n    [displayValue]=\"_displayValue\"\n    [value]=\"value\"\n    [label]=\"label\"\n    [error]=\"_errorMessage\"\n    [isExpanded]=\"_isExpanded\"\n    [disabled]=\"disabled\"\n    [readOnly]=\"readOnly\"\n    [debounceTime]=\"inputDebounceTime\"\n    (click)=\"$event.stopPropagation()\"\n    (buttonSelectEvent)=\"handleInputButtonSelect()\"\n    (inputKeydownEvent)=\"handleInputKeydown($event)\"\n    (inputKeyupEvent)=\"handleInputKeyup($event)\">\n  </vds-combobox-input>\n  <vds-combobox-listbox\n    [listData]=\"_listDataStream | async\"\n    [listboxId]=\"listboxId\"\n    [isExpanded]=\"_isExpanded\"\n    [highlightIndex]=\"_keyManager ? _keyManager['activeItemIndex'] : -1\"\n    [selectIndex]=\"_selectItemIndex\"\n    [ariaLabeledBy]=\"labelId\"\n    [listItemTemplate]=\"listItemTemplate && listItemTemplate.template\"\n    [displaySelectCheckmark]=\"displaySelectCheckmark\"\n    (itemSelectEvent)=\"handleItemSelect($event)\">\n  </vds-combobox-listbox>\n</div>\n"
    },
    {
      "name": "ContentComponent",
      "id": "component-ContentComponent-92fea6f8dc65aeac606185f6bbe6ab7e",
      "file": "projects/vds-lib/src/lib/panel/content/content.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-content",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./content.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vds-content',\n  templateUrl: './content.component.html',\n})\nexport class ContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 7
      },
      "implements": ["OnInit"],
      "templateData": "<!-- Accepts any child elements-->\n<ng-content></ng-content>"
    },
    {
      "name": "DatagridComponent",
      "id": "component-DatagridComponent-6968e51e5a90bcc2aec2ce8d27897b2a",
      "file": "projects/vds-lib/src/lib/datagrid/datagrid.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-datagrid",
      "styleUrls": ["./datagrid.component.scss"],
      "styles": [],
      "templateUrl": ["./datagrid.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "data",
          "line": 9,
          "type": "any"
        },
        {
          "name": "description",
          "line": 11,
          "type": "string"
        },
        {
          "name": "header",
          "line": 10,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vds-datagrid',\n  templateUrl: './datagrid.component.html',\n  styleUrls: ['./datagrid.component.scss'],\n})\nexport class DatagridComponent implements OnInit {\n  @Input() data: any;\n  @Input() header: string;\n  @Input() description: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./datagrid.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 11
      },
      "implements": ["OnInit"],
      "templateData": "<h3 *ngIf=\"header\"> \n  <u>{{ header }}</u>\n</h3>\n<span [innerHTML]=\"description\" *ngIf=\"description\"></span>\n<table\n  *ngIf=\"data.rows.length > 0\"\n  class=\"vds-data-table\"\n  data-header=\"header\"\n  title=\"Quick caption to describe the table content.\">\n  <caption\n    class=\"vds-sr\">\n    Quick caption to describe the table content.\n  </caption>\n  <thead class=\"vds-thead\">\n    <tr class=\"vds-tr\">\n      <ng-container *ngFor='let col of data.columns'>\n        <th\n          class=\"vds-th\"\n          scope=\"col\"\n          role=\"columnheader\">\n          <span\n            class=\"vds-datagrid-header\"\n            role=\"button\"\n            tabindex=\"0\">\n            <span\n              class=\"vds-datagrid-header--label\">\n             {{ col }}\n            </span>\n          </span>\n        </th>\n      </ng-container>\n    </tr>\n  </thead>\n  <tbody class=\"vds-tbody\">\n  <tr class=\"vds-tr\" *ngFor='let col of data.rows'>\n    <td class=\"vds-td\"><p><code>{{ col[0] }}</code></p></td>\n    <td><p><code>{{ col[1] }}</code></p></td>\n    <td [innerHTML]=\"col[2]\"></td>\n  </tr>\n  </tbody>\n</table>\n"
    },
    {
      "name": "DatatableComponent",
      "id": "component-DatatableComponent-6ba7fb4ea013f69f8acf9fd3b15dbaeb",
      "file": "projects/vds-lib/src/lib/datatable/datatable.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "RowSelectionService"
        }
      ],
      "selector": "vds-datatable",
      "styleUrls": ["./datatable.component.scss"],
      "styles": [],
      "templateUrl": ["./datatable.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "columnData",
          "description": "<p>Column data array\nDefault: <code>[]</code></p>\n",
          "line": 139,
          "type": "ColumnDataItem[]"
        },
        {
          "name": "enableColumnFilter",
          "description": "<p>Whether column filtering should be enabled\nDefault: <code>false</code></p>\n",
          "line": 230,
          "type": "boolean"
        },
        {
          "name": "enableCompactView",
          "description": "<p>Whether table should display in compact view\nDefault: <code>false</code></p>\n",
          "line": 286,
          "type": "boolean"
        },
        {
          "name": "enableDividerLines",
          "description": "<p>Whether table divider lines should display\nDefault: <code>false</code></p>\n",
          "line": 299,
          "type": "boolean"
        },
        {
          "name": "enableLocalExpandedRow",
          "description": "<p>If true component will load expanded row content synchronously\nDefault: <code>false</code></p>\n",
          "line": 258,
          "type": "boolean"
        },
        {
          "name": "enableLocalSortPagination",
          "description": "<p>If true component will handle sorting and pagination synchronously within the component\nDefault: <code>false</code></p>\n",
          "line": 243,
          "type": "boolean"
        },
        {
          "name": "enableStickyHeader",
          "description": "<p>Whether table should enable a sticky header\nDefault: <code>false</code></p>\n",
          "line": 273,
          "type": "boolean"
        },
        {
          "name": "loading",
          "description": "<p>Whether component is in loading state\nDefault: <code>false</code></p>\n",
          "line": 162,
          "type": "boolean"
        },
        {
          "name": "loadingMessage",
          "defaultValue": "DATATABLE.DEFAULTS.LOADING_MSG",
          "description": "<p>Message to display for the default loader\nDefault: <code>'Loading...'</code></p>\n",
          "line": 317
        },
        {
          "name": "maxNumberOfExpandedRows",
          "description": "<p>Number of expanded rows to display when in &#39;per column&#39; view\nDefault: <code>5</code></p>\n",
          "line": 192,
          "type": "number"
        },
        {
          "name": "noDataMessage",
          "defaultValue": "DATATABLE.DEFAULTS.NO_DATA_MSG",
          "description": "<p>Message to display when rowData is an empty array\nDefault: <code>'No records found'</code></p>\n",
          "line": 311
        },
        {
          "name": "rowActionType",
          "description": "<p>Row button action type; select from &#39;multi&#39;, &#39;single&#39;, &#39;expand&#39;, or &#39;none&#39;\nDefault: <code>'none'</code></p>\n",
          "line": 175,
          "type": "RowActionType"
        },
        {
          "name": "rowData",
          "description": "<p>Row data array\nDefault: <code>[]</code></p>\n",
          "line": 116,
          "type": "any[]"
        },
        {
          "name": "sortActiveId",
          "defaultValue": "null",
          "description": "<p>Sort header id to set as active when component first renders\nDefault: <code>null</code></p>\n",
          "line": 211
        },
        {
          "name": "sortDirection",
          "defaultValue": "SortDirection.ASC",
          "description": "<p>Sort direction for active header when component first renders\nDefault: <code>'asc'</code></p>\n",
          "line": 217,
          "type": "SortDirection"
        },
        {
          "name": "sortStart",
          "defaultValue": "SortDirection.ASC",
          "description": "<p>Sort start direction for when sort header is selected\nDefault: <code>'asc'</code></p>\n",
          "line": 223,
          "type": "SortDirection"
        }
      ],
      "outputsClass": [
        {
          "name": "cellActionEvent",
          "defaultValue": "new EventEmitter<\n    CellActionEvent\n  >()",
          "description": "<p>Emits when a cell button is selected</p>\n",
          "line": 322,
          "type": "EventEmitter"
        },
        {
          "name": "filterEvent",
          "defaultValue": "new EventEmitter<string[]>()",
          "description": "<p>Emits when a column filter checkbox is selected</p>\n",
          "line": 334,
          "type": "EventEmitter"
        },
        {
          "name": "rowActionEvent",
          "defaultValue": "new EventEmitter<\n    RowActionEvent\n  >()",
          "description": "<p>Emits when a row action button is selected</p>\n",
          "line": 339,
          "type": "EventEmitter"
        },
        {
          "name": "sortEvent",
          "defaultValue": "new EventEmitter<SortEvent>()",
          "description": "<p>Emits when a sort header is selected</p>\n",
          "line": 329,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_columnData",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 155
        },
        {
          "name": "_columnDataSource",
          "defaultValue": "new BehaviorSubject<ColumnDataItem[]>(\n    []\n  )",
          "type": "",
          "optional": false,
          "description": "",
          "line": 359
        },
        {
          "name": "_displayHeader",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 354
        },
        {
          "name": "_enableColumnFilter",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 236
        },
        {
          "name": "_enableCompactView",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 292
        },
        {
          "name": "_enableDividerLines",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 305
        },
        {
          "name": "_enableLocalExpandedRow",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 266
        },
        {
          "name": "_enableLocalSortPagination",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 251
        },
        {
          "name": "_enableStickyHeader",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 279
        },
        {
          "name": "_expandStateChange",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 368
        },
        {
          "name": "_groupHeaderDataSource",
          "defaultValue": "new BehaviorSubject<\n    GroupHeaderItem[]\n  >([])",
          "type": "",
          "optional": false,
          "description": "",
          "line": 362
        },
        {
          "name": "_groupHeaderTitleDataSource",
          "defaultValue": "new BehaviorSubject<\n    string[]\n  >([])",
          "type": "",
          "optional": false,
          "description": "",
          "line": 365
        },
        {
          "name": "_loading",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 168
        },
        {
          "name": "_maxNumberOfExpandedRows",
          "defaultValue": "DATATABLE.DEFAULTS.MAX_NUMBER_EXPANDED_ROWS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 204
        },
        {
          "name": "_rowActionType",
          "defaultValue": "RowActionType.NONE",
          "type": "RowActionType",
          "optional": false,
          "description": "",
          "line": 185
        },
        {
          "name": "_rowData",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "_rowDataSource",
          "defaultValue": "new BehaviorSubject<any[]>([])",
          "type": "",
          "optional": false,
          "description": "",
          "line": 358
        },
        {
          "name": "_rowDetailTemplateId",
          "defaultValue": "DATATABLE.DEFAULTS.ROW_DETAILS",
          "type": "",
          "optional": false,
          "description": "",
          "line": 355
        },
        {
          "name": "_tableDataSource",
          "defaultValue": "new BehaviorSubject<any[]>([])",
          "type": "",
          "optional": false,
          "description": "",
          "line": 357
        },
        {
          "name": "_templateMap",
          "defaultValue": "new Map()",
          "type": "Map<string | TemplateRef<any>>",
          "optional": false,
          "description": "",
          "line": 356
        },
        {
          "name": "columnStateChange$",
          "defaultValue": "this._columnDataSource.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 371
        },
        {
          "name": "expandStateChange$",
          "defaultValue": "this._expandStateChange.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 373
        },
        {
          "name": "factory",
          "type": "CellFactoryComponent",
          "optional": false,
          "description": "",
          "line": 346,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'factory'"
            }
          ]
        },
        {
          "name": "handleCellActionSelect",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 514
        },
        {
          "name": "paginator",
          "type": "PaginationComponent",
          "optional": false,
          "description": "",
          "line": 349,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "PaginationComponent"
            }
          ]
        },
        {
          "name": "paginatorStateChange$",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 375
        },
        {
          "name": "rowSelectionService",
          "type": "RowSelectionService",
          "optional": false,
          "description": "",
          "line": 378,
          "modifierKind": [114]
        },
        {
          "name": "selectionStateChange$",
          "defaultValue": "this.rowSelectionService._stateChange.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 372
        },
        {
          "name": "sortStateChange$",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 374
        },
        {
          "name": "sortTableDirective",
          "type": "SortHeaderDirective",
          "optional": false,
          "description": "",
          "line": 344,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "SortHeaderDirective"
            }
          ]
        },
        {
          "name": "tableStateChange$",
          "defaultValue": "this._tableDataSource.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 370
        },
        {
          "name": "templateContainer",
          "type": "TemplateContainerComponent",
          "optional": false,
          "description": "",
          "line": 352,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "TemplateContainerComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "__getGroupHeaderDataSource",
          "args": [],
          "optional": false,
          "returnType": "GroupHeaderItem[]",
          "typeParameters": [],
          "line": 611
        },
        {
          "name": "_createTemplateActionsArray",
          "args": [
            {
              "name": "actions",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 667,
          "jsdoctags": [
            {
              "name": "actions",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_getCellTemplate",
          "args": [
            {
              "name": "column",
              "type": ""
            },
            {
              "name": "isExpanded",
              "type": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 572,
          "jsdoctags": [
            {
              "name": "column",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "isExpanded",
              "type": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_getDisplayedColumns",
          "args": [
            {
              "name": "includeRowAction",
              "type": "",
              "defaultValue": "true"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 551,
          "jsdoctags": [
            {
              "name": "includeRowAction",
              "type": "",
              "defaultValue": "true",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_getMaxNumOfExpandedRowArray",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 565
        },
        {
          "name": "_getNumberOfOpenExpandedRows",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 592
        },
        {
          "name": "_isColumnTypeAction",
          "args": [
            {
              "name": "type",
              "type": ""
            },
            {
              "name": "isHeader",
              "type": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 685,
          "jsdoctags": [
            {
              "name": "type",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "isHeader",
              "type": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_isRowSelected",
          "args": [
            {
              "name": "row",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 679,
          "jsdoctags": [
            {
              "name": "row",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_multiRowDetails",
          "args": [
            {
              "name": "j",
              "type": ""
            },
            {
              "name": "index",
              "type": ""
            },
            {
              "name": "row",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 543,
          "jsdoctags": [
            {
              "name": "j",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "row",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_trackCell",
          "args": [
            {
              "name": "id",
              "type": ""
            },
            {
              "name": "cell",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 539,
          "jsdoctags": [
            {
              "name": "id",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "cell",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_updateColumnDataSource",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 707
        },
        {
          "name": "_updateRowService",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 700
        },
        {
          "name": "handleFilterColumn",
          "args": [
            {
              "name": "columnIndex",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 518,
          "jsdoctags": [
            {
              "name": "columnIndex",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 481
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 496
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 505
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 382
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  of,\n  Subject,\n} from 'rxjs';\nimport {\n  DATATABLE,\n  CellActionEvent,\n  RowActionEvent,\n  RowActionType,\n  SortDirection,\n  SortEvent,\n  ColumnDataItem,\n  GroupHeaderItem,\n} from './datatable.constants';\nimport { SortHeaderDirective } from './sort-header/sort-header.directive';\nimport { PaginationComponent } from '../pagination/pagination.component';\nimport { PageEvent } from '../pagination/pagination.constant';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\nimport { TemplateContainerComponent } from '../custom-template/template-container.component';\nimport { RowSelectionService } from './row-selection.service';\nimport { CellFactoryComponent } from './cell-factory/cell-factory.component';\n\nconst columnPrepMapFn = (column: any) => {\n  const isColumnFiltered = column.hasOwnProperty(\n    'isColumnFiltered'\n  )\n    ? !!column.isColumnFiltered\n    : false;\n  const isSortable = column.hasOwnProperty('isSortable')\n    ? !!column.isSortable\n    : false;\n\n  if (!column.hasOwnProperty('id')) {\n    throw new Error(\n      'Every column object must have an `id` property containing a unique string'\n    );\n  }\n\n  let sortFn = null;\n  if (typeof column.sortFn === 'function') {\n    let retValue = column.sortFn(1, 2);\n    if (retValue !== undefined && retValue !== null) {\n      retValue = Number(retValue);\n      if (\n        retValue === 0 ||\n        retValue === 1 ||\n        retValue === -1\n      ) {\n        sortFn = column.sortFn;\n      }\n    }\n  }\n\n  return {\n    id: column.id.toString(),\n    value:\n      column.value !== undefined && column.value !== null\n        ? column.value\n        : '',\n    type: (column.type || '').toString().trim(),\n    header:\n      column.header !== undefined && column.header !== null\n        ? column.header\n        : '',\n    tooltipValue:\n      column.tooltipValue !== undefined &&\n      column.tooltipValue !== null\n        ? column.tooltipValue\n        : '',\n    sortFn,\n    isColumnFiltered,\n    isSortable,\n  };\n};\n\n@Component({\n  selector: 'vds-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [RowSelectionService],\n})\nexport class DatatableComponent\n  implements\n    OnInit,\n    AfterContentInit,\n    AfterViewInit,\n    OnDestroy {\n  /**\n   * Row data array\n   * Default: <code>[]</code>\n   */\n  @Input()\n  get rowData(): any[] {\n    return this._rowData;\n  }\n  set rowData(value: any[]) {\n    if (Array.isArray(value)) {\n      this._rowData = value.slice();\n\n      if (this.enableLocalSortPagination) {\n        this.sortTableDirective._emitStateChange();\n      } else {\n        this._rowDataSource.next(this._rowData);\n      }\n\n      this._updateRowService();\n    }\n  }\n  _rowData = [];\n\n  /**\n   * Column data array\n   * Default: <code>[]</code>\n   */\n  @Input()\n  get columnData(): ColumnDataItem[] {\n    return this._columnData;\n  }\n  set columnData(value: ColumnDataItem[]) {\n    if (Array.isArray(value)) {\n      this._columnData = value.slice();\n      this._columnDataSource.next(\n        this._columnData.map(columnPrepMapFn)\n      );\n      this._groupHeaderDataSource.next(\n        this.__getGroupHeaderDataSource()\n      );\n\n      this._updateColumnDataSource();\n    }\n  }\n  _columnData = [];\n\n  /**\n   * Whether component is in loading state\n   * Default: <code>false</code>\n   */\n  @Input()\n  get loading(): boolean {\n    return this._loading;\n  }\n  set loading(value) {\n    this._loading = coerceBooleanProperty(value);\n  }\n  _loading = false;\n\n  /**\n   * Row button action type; select from 'multi', 'single', 'expand', or 'none'\n   * Default: <code>'none'</code>\n   */\n  @Input()\n  get rowActionType(): RowActionType {\n    return this._rowActionType;\n  }\n  set rowActionType(value: RowActionType) {\n    this._rowActionType = value;\n\n    this._updateRowService();\n\n    this._updateColumnDataSource();\n  }\n  _rowActionType: RowActionType = RowActionType.NONE;\n\n  /**\n   * Number of expanded rows to display when in 'per column' view\n   * Default: <code>5</code>\n   */\n  @Input()\n  get maxNumberOfExpandedRows(): number {\n    return this._maxNumberOfExpandedRows;\n  }\n  set maxNumberOfExpandedRows(value) {\n    this._maxNumberOfExpandedRows = Math.max(\n      coerceNumberProperty(\n        value,\n        DATATABLE.DEFAULTS.MAX_NUMBER_EXPANDED_ROWS\n      ),\n      1\n    );\n  }\n  _maxNumberOfExpandedRows =\n    DATATABLE.DEFAULTS.MAX_NUMBER_EXPANDED_ROWS;\n\n  /**\n   * Sort header id to set as active when component first renders\n   * Default: <code>null</code>\n   */\n  @Input() sortActiveId = null;\n\n  /**\n   * Sort direction for active header when component first renders\n   * Default: <code>'asc'</code>\n   */\n  @Input() sortDirection: SortDirection = SortDirection.ASC;\n\n  /**\n   * Sort start direction for when sort header is selected\n   * Default: <code>'asc'</code>\n   */\n  @Input() sortStart: SortDirection = SortDirection.ASC;\n\n  /**\n   * Whether column filtering should be enabled\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableColumnFilter(): boolean {\n    return this._enableColumnFilter;\n  }\n  set enableColumnFilter(value) {\n    this._enableColumnFilter = coerceBooleanProperty(value);\n  }\n  _enableColumnFilter = false;\n\n  /**\n   * If true component will handle sorting and pagination synchronously within the component\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableLocalSortPagination(): boolean {\n    return this._enableLocalSortPagination;\n  }\n  set enableLocalSortPagination(value) {\n    this._enableLocalSortPagination = coerceBooleanProperty(\n      value\n    );\n  }\n  _enableLocalSortPagination = false;\n\n  /**\n   * If true component will load expanded row content synchronously\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableLocalExpandedRow(): boolean {\n    return this._enableLocalExpandedRow;\n  }\n  set enableLocalExpandedRow(value) {\n    this._enableLocalExpandedRow = coerceBooleanProperty(\n      value\n    );\n  }\n  _enableLocalExpandedRow = false;\n\n  /**\n   * Whether table should enable a sticky header\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableStickyHeader(): boolean {\n    return this._enableStickyHeader;\n  }\n  set enableStickyHeader(value) {\n    this._enableStickyHeader = coerceBooleanProperty(value);\n  }\n  _enableStickyHeader = false;\n\n  /**\n   * Whether table should display in compact view\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableCompactView(): boolean {\n    return this._enableCompactView;\n  }\n  set enableCompactView(value) {\n    this._enableCompactView = coerceBooleanProperty(value);\n  }\n  _enableCompactView = false;\n\n  /**\n   * Whether table divider lines should display\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableDividerLines(): boolean {\n    return this._enableDividerLines;\n  }\n  set enableDividerLines(value) {\n    this._enableDividerLines = coerceBooleanProperty(value);\n  }\n  _enableDividerLines = false;\n\n  /**\n   * Message to display when rowData is an empty array\n   * Default: <code>'No records found'</code>\n   */\n  @Input() noDataMessage = DATATABLE.DEFAULTS.NO_DATA_MSG;\n\n  /**\n   * Message to display for the default loader\n   * Default: <code>'Loading...'</code>\n   */\n  @Input() loadingMessage = DATATABLE.DEFAULTS.LOADING_MSG;\n\n  /**\n   * Emits when a cell button is selected\n   */\n  @Output() cellActionEvent = new EventEmitter<\n    CellActionEvent\n  >();\n\n  /**\n   * Emits when a sort header is selected\n   */\n  @Output() sortEvent = new EventEmitter<SortEvent>();\n\n  /**\n   * Emits when a column filter checkbox is selected\n   */\n  @Output() filterEvent = new EventEmitter<string[]>();\n\n  /**\n   * Emits when a row action button is selected\n   */\n  @Output() rowActionEvent = new EventEmitter<\n    RowActionEvent\n  >();\n\n  @ViewChild(SortHeaderDirective)\n  sortTableDirective: SortHeaderDirective;\n\n  @ViewChild('factory') factory: CellFactoryComponent;\n\n  @ContentChild(PaginationComponent)\n  paginator: PaginationComponent;\n\n  @ContentChild(TemplateContainerComponent)\n  templateContainer: TemplateContainerComponent;\n\n  _displayHeader = false;\n  _rowDetailTemplateId = DATATABLE.DEFAULTS.ROW_DETAILS;\n  _templateMap: Map<string, TemplateRef<any>> = new Map();\n  _tableDataSource = new BehaviorSubject<any[]>([]);\n  _rowDataSource = new BehaviorSubject<any[]>([]);\n  _columnDataSource = new BehaviorSubject<ColumnDataItem[]>(\n    []\n  );\n  _groupHeaderDataSource = new BehaviorSubject<\n    GroupHeaderItem[]\n  >([]);\n  _groupHeaderTitleDataSource = new BehaviorSubject<\n    string[]\n  >([]);\n  _expandStateChange = new Subject();\n\n  tableStateChange$ = this._tableDataSource.asObservable();\n  columnStateChange$ = this._columnDataSource.asObservable();\n  selectionStateChange$ = this.rowSelectionService._stateChange.asObservable();\n  expandStateChange$ = this._expandStateChange.asObservable();\n  sortStateChange$ = null;\n  paginatorStateChange$ = null;\n\n  constructor(\n    public rowSelectionService: RowSelectionService,\n    private element: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this._groupHeaderDataSource.next(\n      this.__getGroupHeaderDataSource()\n    );\n    this.sortStateChange$ = this.sortTableDirective.stateChange$;\n    this.paginatorStateChange$ = this.paginator\n      ? this.paginator.stateChange$\n      : of(null);\n\n    // listen for row selection\n    this.selectionStateChange$.subscribe((value: any) => {\n      if (this.rowActionType === RowActionType.EXPAND) {\n        this._expandStateChange.next();\n      }\n\n      this.rowActionEvent.emit(value);\n    });\n\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      numeric: true,\n    });\n\n    // listen for sort button selection\n    this.sortStateChange$.subscribe((state) => {\n      if (this.enableLocalSortPagination) {\n        const { id, direction, sortFn } = state;\n        let { type } = state;\n\n        if (type === null || type === undefined) {\n          const columnObj = this._columnDataSource\n            .getValue()\n            .find((element) => element.id === id);\n          if (columnObj !== undefined) {\n            type = columnObj.type;\n          }\n        }\n\n        this._rowDataSource.next(\n          this.rowData.slice().sort((a, b) => {\n            const aSortValue =\n              (a[id] && a[id].value) || a[id];\n            const bSortValue =\n              (b[id] && b[id].value) || b[id];\n            let sortLeft = (\n              (direction === SortDirection.ASC\n                ? aSortValue\n                : bSortValue) || ''\n            ).toString();\n            let sortRight = (\n              (direction === SortDirection.ASC\n                ? bSortValue\n                : aSortValue) || ''\n            ).toString();\n\n            if (type === 'date') {\n              sortLeft = new Date(sortLeft)\n                .getTime()\n                .toString();\n              sortRight = new Date(sortRight)\n                .getTime()\n                .toString();\n            }\n\n            if (sortFn) {\n              return sortFn(sortLeft, sortRight, {\n                direction,\n                id,\n                type,\n              });\n            }\n\n            return collator.compare(sortLeft, sortRight);\n          })\n        );\n      }\n    });\n\n    // listen for pagination changes along w/ changes to the row data source\n    combineLatest([\n      this.paginatorStateChange$,\n      this._rowDataSource,\n    ]).subscribe(([page, dataset]: [PageEvent, any[]]) => {\n      if (\n        this.enableLocalSortPagination &&\n        this.paginator\n      ) {\n        const i = page.pageIndex * page.pageSize;\n        const pageDataset = dataset.slice(\n          i,\n          i + page.pageSize\n        );\n        this._tableDataSource.next(pageDataset);\n      } else {\n        this._tableDataSource.next(dataset);\n      }\n    });\n  }\n\n  ngAfterContentInit() {\n    if (\n      this.templateContainer &&\n      this.templateContainer.templateChildren\n    ) {\n      this.templateContainer.templateChildren\n        .toArray()\n        .forEach((child) => {\n          if (!this._templateMap.get(child.id)) {\n            this._templateMap.set(child.id, child.template);\n          }\n        });\n    }\n  }\n\n  ngAfterViewInit() {\n    this.element.nativeElement.querySelector(\n      'thead'\n    ).className = 'vds-thead';\n    this.element.nativeElement.querySelector(\n      'tbody'\n    ).className = 'vds-tbody';\n  }\n\n  ngOnDestroy() {\n    this._rowDataSource.complete();\n    this._columnDataSource.complete();\n    this._tableDataSource.complete();\n    this._expandStateChange.complete();\n    this._groupHeaderDataSource.complete();\n    this._groupHeaderTitleDataSource.complete();\n  }\n\n  handleCellActionSelect = (cell: any, row: any): void => {\n    this.cellActionEvent.emit({ cell, row });\n  };\n\n  handleFilterColumn(columnIndex) {\n    if (columnIndex !== null) {\n      const columnDataSource = this._columnDataSource\n        .getValue()\n        .slice();\n      columnDataSource[columnIndex] = {\n        ...columnDataSource[columnIndex],\n        isColumnFiltered: !columnDataSource[columnIndex]\n          .isColumnFiltered,\n      };\n\n      this._columnDataSource.next(columnDataSource);\n      this._groupHeaderDataSource.next(\n        this.__getGroupHeaderDataSource()\n      );\n      this.filterEvent.emit(\n        this._getDisplayedColumns(false)\n      );\n    }\n  }\n\n  _trackCell(id, cell) {\n    return cell;\n  }\n\n  _multiRowDetails(j, index, row) {\n    return (\n      Array.isArray(row[this._rowDetailTemplateId]) &&\n      (row[this._rowDetailTemplateId][j] !== undefined &&\n        row[this._rowDetailTemplateId][j] !== null)\n    );\n  }\n\n  _getDisplayedColumns(includeRowAction = true) {\n    if (Array.isArray(this._columnDataSource.getValue())) {\n      return this._columnDataSource\n        .getValue()\n        .filter((data) =>\n          !includeRowAction ? !data.isRowAction : true\n        )\n        .filter((data) => !data.isColumnFiltered)\n        .map((data) => data.id);\n    }\n\n    return [];\n  }\n\n  _getMaxNumOfExpandedRowArray() {\n    return Array.from(\n      { length: this.maxNumberOfExpandedRows },\n      (v, i) => i\n    );\n  }\n\n  _getCellTemplate(column, isExpanded = false) {\n    if (\n      isExpanded &&\n      (column.type === RowActionType.SINGLE ||\n        column.type === RowActionType.MULTI ||\n        column.type === RowActionType.EXPAND)\n    ) {\n      return (\n        this._templateMap.get(column.id) ||\n        this.factory.default\n      );\n    }\n\n    return (\n      this._templateMap.get(column.id) ||\n      this.factory[column.type] ||\n      this.factory.default\n    );\n  }\n\n  _getNumberOfOpenExpandedRows() {\n    let total = 0;\n\n    if (this.rowActionType === RowActionType.EXPAND) {\n      this.rowSelectionService.selection.forEach((row) => {\n        if (Array.isArray(row.__rowDetails__)) {\n          total += Math.min(\n            row.__rowDetails__.length,\n            this.maxNumberOfExpandedRows\n          );\n        } else if (row.__rowDetails__ !== null) {\n          total += 1;\n        }\n      });\n    }\n\n    return total;\n  }\n\n  __getGroupHeaderDataSource(): GroupHeaderItem[] {\n    let prevGroup;\n    let prevIndex;\n\n    const headerData = this._columnDataSource\n      .getValue()\n      .reduce((accum, curValue, i) => {\n        if (!curValue.isColumnFiltered) {\n          if (\n            curValue.hasOwnProperty('header') &&\n            curValue.header.length\n          ) {\n            if (\n              !accum[i] &&\n              prevGroup !== curValue.header\n            ) {\n              accum[i] = {\n                value: curValue.header,\n                span: 1,\n              };\n\n              prevGroup = curValue.header;\n              prevIndex = i;\n            } else if (prevGroup === curValue.header) {\n              accum[prevIndex].span += 1;\n            }\n          } else {\n            accum[i] = {\n              value: `___blank_${i}`,\n              span: 1,\n              ignore: true,\n            };\n          }\n        } else {\n          accum[i] = undefined;\n        }\n        return accum;\n      }, {});\n\n    const retArray = Object.values(headerData).filter(\n      Boolean\n    ) as GroupHeaderItem[];\n    this._groupHeaderTitleDataSource.next(\n      retArray.map(\n        (header: GroupHeaderItem) => header.value\n      )\n    );\n    this._displayHeader =\n      retArray.filter(\n        (val: GroupHeaderItem) =>\n          !val.value.includes(`__blank_`)\n      ).length > 0;\n\n    return retArray;\n  }\n\n  _createTemplateActionsArray(actions) {\n    if (actions === undefined || actions === null) {\n      return [];\n    }\n\n    if (Array.isArray(actions)) {\n      return [...actions];\n    }\n\n    return [actions];\n  }\n\n  _isRowSelected(row) {\n    return (\n      this.rowSelectionService.selection.indexOf(row) !== -1\n    );\n  }\n\n  _isColumnTypeAction(type, isHeader = false) {\n    if (isHeader) {\n      return (\n        type === RowActionType.EXPAND ||\n        type === RowActionType.MULTI\n      );\n    }\n\n    return (\n      type === RowActionType.EXPAND ||\n      type === RowActionType.MULTI ||\n      type === RowActionType.SINGLE\n    );\n  }\n\n  _updateRowService() {\n    this.rowSelectionService.updateState(\n      this._rowData,\n      this._rowActionType === RowActionType.SINGLE\n    );\n  }\n\n  _updateColumnDataSource() {\n    if (this._rowActionType !== RowActionType.NONE) {\n      // append rowAction object to columnDataSource\n      const rowAction = {\n        id: `__rowAction__${this._rowActionType}`,\n        type: this._rowActionType,\n        isRowAction: true,\n      } as ColumnDataItem;\n\n      this._columnDataSource.next(\n        [rowAction].concat(\n          this._columnDataSource.getValue().slice()\n        )\n      );\n    } else {\n      // remove rowAction object from columnDataSource\n      if (\n        this._columnDataSource.getValue()[0] &&\n        this._columnDataSource.getValue()[0].isRowAction\n      ) {\n        this._columnDataSource.next(\n          this._columnDataSource.getValue().slice(1)\n        );\n      }\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '~@angular/cdk/overlay-prebuilt.css';\n\n// Used for keyboard focus styles\ntd[role='gridcell'][data-dg-focus-disabled='false']:focus {\n  outline: 1px dashed #15195a;\n}\n\n// Used for keyboard focus styles\n.cdk-header-cell[role='columnheader']:focus {\n  outline: 1px dashed #15195a;\n}\n\n// Used to display the loader properly as it relies on position:absolute\n.vds-data-table {\n  &--relative {\n    position: relative;\n  }\n}\n\n// Used to style No Data text\n.vds-datatable-nodata {\n  width: 100%;\n  text-align: center;\n  font-weight: 700;\n  line-height: 3em;\n  font-size: 1.3em;\n}\n\n// Used to position filter button\n.vds-datatable-filter-button {\n  position: absolute;\n  top: 3px;\n  right: 0;\n\n  &--sticky {\n    position: sticky;\n    top: 5px;\n    z-index: 99999;\n\n    button {\n      float: right;\n    }\n  }\n}\n\n// Used to style filter dropdown\n.vds-datatable-filter-container {\n  background-color: #fff;\n  box-shadow: 0 3px 4px 2px rgba(0, 0, 0, 0.2);\n  min-width: 280px;\n  overflow: auto;\n  display: block;\n  position: absolute;\n  z-index: 398;\n}\n\n// Used to add white background when header is sticky so overlapping content\n// does not look out of place\n.vds-datatable-header--sticky {\n  th {\n    background-color: white;\n  }\n}\n\n// Used to position sortable icons properly\n.vds-btn-sortable .vds-btn-sortable-icon {\n  align-items: center;\n  justify-content: center;\n}\n\n// Used to position children inside an \"actions\" cell\n.vds-datatable-cell-actions {\n  display: flex;\n  justify-content: space-between;\n}\n\n// Used to style default loader\n.vds-datatable-loader {\n  position: absolute;\n  width: calc(100% + 15px);\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: white;\n  opacity: 0.88;\n  z-index: 888888;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    font-weight: 700;\n    text-transform: uppercase;\n    font-size: 18px;\n  }\n}\n\n// Used for zebra-striping that does not conflict w/ expandable rows\n.vds-tr {\n  &--odd {\n    background-color: #fff !important;\n  }\n\n  &--even {\n    background-color: #f2f4f8 !important;\n  }\n\n  &--expanded {\n    background-color: #fff !important;\n  }\n}\n",
          "styleUrl": "./datatable.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "rowSelectionService",
            "type": "RowSelectionService"
          },
          {
            "name": "element",
            "type": "ElementRef"
          }
        ],
        "line": 375,
        "jsdoctags": [
          {
            "name": "rowSelectionService",
            "type": "RowSelectionService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "element",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": [
        "OnInit",
        "AfterContentInit",
        "AfterViewInit",
        "OnDestroy"
      ],
      "accessors": {
        "rowData": {
          "name": "rowData",
          "setSignature": {
            "name": "rowData",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "[]"
              }
            ],
            "returnType": "void",
            "line": 119,
            "jsdoctags": [
              {
                "name": "value",
                "type": "[]",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "columnData": {
          "name": "columnData",
          "setSignature": {
            "name": "columnData",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "[]"
              }
            ],
            "returnType": "void",
            "line": 142,
            "jsdoctags": [
              {
                "name": "value",
                "type": "[]",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "loading": {
          "name": "loading",
          "setSignature": {
            "name": "loading",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 165,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "rowActionType": {
          "name": "rowActionType",
          "setSignature": {
            "name": "rowActionType",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 178,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "maxNumberOfExpandedRows": {
          "name": "maxNumberOfExpandedRows",
          "setSignature": {
            "name": "maxNumberOfExpandedRows",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 195,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableColumnFilter": {
          "name": "enableColumnFilter",
          "setSignature": {
            "name": "enableColumnFilter",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 233,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableLocalSortPagination": {
          "name": "enableLocalSortPagination",
          "setSignature": {
            "name": "enableLocalSortPagination",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 246,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableLocalExpandedRow": {
          "name": "enableLocalExpandedRow",
          "setSignature": {
            "name": "enableLocalExpandedRow",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 261,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableStickyHeader": {
          "name": "enableStickyHeader",
          "setSignature": {
            "name": "enableStickyHeader",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 276,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableCompactView": {
          "name": "enableCompactView",
          "setSignature": {
            "name": "enableCompactView",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 289,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableDividerLines": {
          "name": "enableDividerLines",
          "setSignature": {
            "name": "enableDividerLines",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 302,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<vds-datatable-cell-factory #factory [loadingMessage]=\"loadingMessage\">\n</vds-datatable-cell-factory>\n\n<table\n  cdk-table\n  vdsKeyboardFocusDatatable\n  vdsSortHeader\n  class=\"vds-data-table vds-data-table--relative\"\n  [ngClass]=\"{\n    'vds-state--compact': enableCompactView,\n    'vds-state--divider-lines': enableDividerLines,\n    'vds-data-table--border-left': _displayHeader\n  }\"\n  [attr.aria-rowcount]=\"_rowDataSource.getValue().length + _getNumberOfOpenExpandedRows()\"\n  [attr.aria-colcount]=\"_getDisplayedColumns(false).length\"\n  [attr.data-row-selection-count]=\"rowSelectionService.selection.length\"\n  [dataSource]=\"tableStateChange$\"\n  [multiTemplateDataRows]=\"rowActionType === 'expand'\"\n  [trackBy]=\"_trackCell\"\n  [sortActiveId]=\"sortActiveId\"\n  [sortDirection]=\"sortDirection\"\n  [sortStart]=\"sortStart\"\n  (sortEvent)=\"sortEvent.emit($event)\">\n\n  <!--  Column filter button and dialog  -->\n  <caption\n    class=\"vds-datatable-filter-button\"\n    [ngClass]=\"{'vds-datatable-filter-button--sticky': enableStickyHeader}\">\n    <vds-datatable-column-filter\n      *ngIf=\"enableColumnFilter\"\n      [disabled]=\"loading\"\n      [dataSource]=\"columnStateChange$ | async\"\n      (selectEvent)=\"handleFilterColumn($event)\">\n    </vds-datatable-column-filter>\n  </caption>\n\n  <!-- Generate Group Header -->\n  <tr\n    class=\"vds-tr\"\n    cdk-header-row\n    *cdkHeaderRowDef=\"_groupHeaderTitleDataSource | async; sticky: enableStickyHeader\"\n    [attr.role]=\"null\"\n    [attr.data-dg-focus-disabled]=\"!_displayHeader\"\n    [ngClass]=\"{ 'vds-state--hidden': !_displayHeader, 'vds-datatable-header--sticky': enableStickyHeader }\">\n  </tr>\n  <ng-container\n    *ngFor=\"let header of (_groupHeaderDataSource | async); let i = index\"\n    [cdkColumnDef]=\"header['value']\">\n    <ng-container *ngIf=\"!header['ignore']; else blankHeader\">\n      <th\n        cdk-header-cell\n        class=\"vds-th vds-data-table-color-background-alt\"\n        *cdkHeaderCellDef\n        [attr.colspan]=\"header['span']\">\n        {{ header['value'] }}\n      </th>\n    </ng-container>\n    <ng-template #blankHeader>\n      <th cdk-header-cell *cdkHeaderCellDef></th>\n    </ng-template>\n  </ng-container>\n\n  <!--  Generate table rows  -->\n  <ng-container *ngIf=\"_getDisplayedColumns() as filteredColumnDataSource\">\n    <tr\n      class=\"vds-tr\"\n      cdk-header-row\n      [attr.aria-rowindex]=\"1\"\n      [ngClass]=\"{'vds-datatable-header--sticky': enableStickyHeader}\"\n      *cdkHeaderRowDef=\"filteredColumnDataSource; sticky: enableStickyHeader\">\n    </tr>\n    <tr\n      class=\"vds-tr\"\n      cdk-row\n      *cdkRowDef=\"let row; columns: filteredColumnDataSource\"\n      [attr.aria-rowindex]=\"_rowDataSource.getValue().indexOf(row) + 2\"\n      [ngClass]=\"{\n        'vds-state--selected': _isRowSelected(row) && rowActionType !== 'none',\n        'vds-tr--odd': (_rowDataSource.getValue().indexOf(row) + 1) % 2 !== 0,\n        'vds-tr--even': (_rowDataSource.getValue().indexOf(row) + 1) % 2 === 0\n      }\">\n    </tr>\n  </ng-container>\n\n  <!--  Generate table rows for expanded content  -->\n  <ng-container *ngIf=\"rowActionType === 'expand'\">\n    <ng-container *ngIf=\"_templateMap.get(_rowDetailTemplateId); else defaultExpandHeader\">\n      <tr\n        class=\"vds-tr vds-tr--expanded\"\n        cdk-row\n        *cdkRowDef=\"let row; columns: ['expandedRowDetail']\">\n      </tr>\n    </ng-container>\n    <ng-template #defaultExpandHeader>\n      <ng-container *ngFor=\"let i of _getMaxNumOfExpandedRowArray()\">\n        <tr\n          class=\"vds-tr vds-tr--expanded\"\n          cdk-row\n          *cdkRowDef=\"let row; columns: ['expandedRowDetail_' + i]; when: _multiRowDetails.bind(this, i)\"\n          [ngClass]=\"{'vds-state--hidden': !_isRowSelected(row)}\">\n        </tr>\n      </ng-container>\n    </ng-template>\n  </ng-container>\n\n  <!--  Generate table cells  -->\n  <ng-container\n    *ngFor=\"let column of (columnStateChange$ | async); let i = index\"\n    [cdkColumnDef]=\"column['id']\">\n    <!--  Generate header cells  -->\n    <ng-container *ngIf=\"column['type'] !== 'single'; else singleHeader\">\n      <th\n        tabindex=\"-1\"\n        class=\"vds-th\"\n        cdk-header-cell\n        *cdkHeaderCellDef\n        [attr.aria-colindex]=\"i + 1\"\n        [vdsTooltip]=\"column['tooltipValue'] || ''\"\n        [vds-datatable-sort-header]=\"column['id']\"\n        [vds-datatable-sort-type]=\"column['type']\"\n        [vds-datatable-sort-fn]=\"column['sortFn']\"\n        [vds-datatable-sort-disabled]=\"loading\"\n        [isSortable]=\"column['isSortable']\">\n        <ng-container *ngIf=\"_isColumnTypeAction(column['type'], true)\"\n          [ngTemplateOutlet]=\"factory[column['type']]\"\n          [ngTemplateOutletContext]=\"{\n            $implicit:\n              rowSelectionService.isHeaderSelected,\n            action:\n              column['type'] === 'expand' &&\n              !enableLocalExpandedRow\n                ? rowSelectionService.handleHeaderLazySelect\n                : rowSelectionService.handleHeaderSelect,\n            index: column['type'],\n            disabled: loading\n          }\">\n        </ng-container>\n        {{ column['value'] }}\n      </th>\n    </ng-container>\n    <ng-template #singleHeader>\n      <th class=\"vds-th\" *cdkHeaderCellDef></th>\n    </ng-template>\n\n    <!--  Generate grid cells  -->\n    <td\n      tabindex=\"-1\"\n      class=\"vds-td\"\n      cdk-cell\n      *cdkCellDef=\"let row; let i = index\"\n      [attr.data-dg-focus-disabled]=\"\n        !_isColumnTypeAction(column['type']) &&\n        (row[column['id']] === undefined ||\n          row[column['id']] === null)\n      \">\n      <ng-container\n        *ngIf=\"_isColumnTypeAction(column['type']); else defaultTemplate\"\n        [ngTemplateOutlet]=\"factory[column['type']]\"\n        [ngTemplateOutletContext]=\"{\n          $implicit: _isRowSelected(row),\n          row: row,\n          action:\n            column['type'] === 'single'\n              ? rowSelectionService.handleRowSingleSelect\n              : column['type'] === 'expand' &&\n                !enableLocalExpandedRow\n              ? rowSelectionService.handleExpandLazySelect\n              : rowSelectionService.handleRowMultiSelect,\n          disabled: loading,\n          index: i\n        }\">\n      </ng-container>\n      <ng-template #defaultTemplate>\n        <ng-container\n          [ngTemplateOutlet]=\"_getCellTemplate(column)\"\n          [ngTemplateOutletContext]=\"{\n            $implicit: row[column['id']],\n            row: row,\n            action: handleCellActionSelect,\n            actionsArray:\n              column['type'] === 'actions' &&\n              _createTemplateActionsArray(\n                row[column['id']]\n              ),\n            isExpanded: false,\n            disabled: loading\n          }\">\n        </ng-container>\n      </ng-template>\n    </td>\n  </ng-container>\n\n  <!--  Generate expanded row content for `overall` view  -->\n  <ng-container\n    *ngIf=\"_templateMap.get(_rowDetailTemplateId); else defaultExpandContent\"\n    [cdkColumnDef]=\"'expandedRowDetail'\">\n    <ng-container *cdkCellDef=\"let row\">\n      <ng-container *ngIf=\"_isRowSelected(row)\">\n        <td\n          tabindex=\"-1\"\n          class=\"vds-td\"\n          [attr.data-dg-focus-disabled]=\"row[_rowDetailTemplateId] === undefined || row[_rowDetailTemplateId] === null\"\n          [attr.role]=\"\n            row[_rowDetailTemplateId] === undefined ||\n            row[_rowDetailTemplateId] === null\n              ? null\n              : 'gridcell'\n          \"\n          [attr.colspan]=\"_getDisplayedColumns().length\">\n          <vds-datatable-expandable-cell [isActive]=\"_isRowSelected(row)\">\n            <ng-container\n              [ngTemplateOutlet]=\"_templateMap.get(_rowDetailTemplateId)\"\n              [ngTemplateOutletContext]=\"{\n                $implicit: row['__rowDetails__'],\n                row: row,\n                action: handleCellActionSelect,\n                actionsArray: _createTemplateActionsArray(row['__rowDetails__']),\n                isExpanded: true,\n                disabled: loading\n              }\">\n            </ng-container>\n          </vds-datatable-expandable-cell>\n        </td>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n  <!--  Generate expanded row content for `per column` view  -->\n  <ng-template #defaultExpandContent>\n    <ng-container\n      *ngFor=\"let i of _getMaxNumOfExpandedRowArray()\"\n      [cdkColumnDef]=\"'expandedRowDetail_' + i\">\n      <ng-container *cdkCellDef=\"let row\">\n        <ng-container\n          *ngFor=\"let column of (columnStateChange$ | async)\"\n          [cdkColumnDef]=\"column['id']\">\n          <ng-container *ngIf=\"_getDisplayedColumns().includes(column['id'])\">\n            <td\n              tabindex=\"-1\"\n              class=\"vds-td\"\n              [attr.data-dg-focus-disabled]=\"\n                _isColumnTypeAction(column['type']) ||\n                (row[_rowDetailTemplateId][i][column['id']] === undefined ||\n                  row[_rowDetailTemplateId][i][column['id']] === null)\n              \"\n              [attr.role]=\"_isRowSelected(row) ? 'gridcell' : null\">\n              <vds-datatable-expandable-cell [isActive]=\"_isRowSelected(row)\">\n                <ng-container\n                  [ngTemplateOutlet]=\"_getCellTemplate(column, true)\"\n                  [ngTemplateOutletContext]=\"{\n                    $implicit: row[_rowDetailTemplateId][i][column['id']],\n                    row: row,\n                    action: handleCellActionSelect,\n                    actionsArray:\n                      column['type'] === 'actions' &&\n                      _createTemplateActionsArray(row[_rowDetailTemplateId][i][column['id']]),\n                    isExpanded: true,\n                    disabled: loading\n                  }\">\n                </ng-container>\n              </vds-datatable-expandable-cell>\n            </td>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-template>\n</table>\n\n<!--  Loader  -->\n<ng-container *ngIf=\"loading\">\n  <ng-container [ngTemplateOutlet]=\"_templateMap.get('__loader__') || factory.loader\"></ng-container>\n</ng-container>\n\n<!--  No Data Message  -->\n<ng-container *ngIf=\"_rowDataSource.getValue().length === 0\">\n  <div class=\"vds-datatable-nodata\">\n    {{ noDataMessage }}\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"_rowDataSource.getValue().length > 0\">\n  <ng-content select=\"vds-pagination\"></ng-content>\n  <ng-content select=\"vds-template-container\"></ng-content>\n</ng-container>\n"
    },
    {
      "name": "DialogComponent",
      "id": "component-DialogComponent-60141693bae3a852278bffe4f035fdd9",
      "file": "projects/vds-lib/src/lib/dialog/dialog.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-dialog",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./dialog.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "action",
          "description": "<p>Modal actions</p>\n",
          "line": 55,
          "type": "DialogActionConfig[]"
        },
        {
          "name": "id",
          "description": "<p>Id of dialog.</p>\n",
          "line": 32,
          "type": "string"
        },
        {
          "name": "messageType",
          "defaultValue": "DialogType.DEFAULT",
          "description": "<p>Type of dialog messaging. Default:\n<code>default. [error|default|success|warning]</code></p>\n",
          "line": 42
        },
        {
          "name": "title",
          "description": "<p>Modal header</p>\n",
          "line": 46,
          "type": "string"
        },
        {
          "name": "variant",
          "defaultValue": "DialogVariant.CALL_TO_ACTION",
          "description": "<p>Type of dialog. Default:\n<code>call-to-action. [call-to-action|closeable]</code></p>\n",
          "line": 37
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "actionButton",
          "type": "QueryList<ButtonComponent>",
          "optional": false,
          "description": "",
          "line": 26,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "'actionButton'"
            }
          ]
        },
        {
          "name": "dialogBodyTemplate",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "<p>Modal content or body</p>\n",
          "line": 51,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "TemplateRef"
            }
          ]
        },
        {
          "name": "firstButton",
          "type": "ButtonComponent",
          "optional": false,
          "description": "",
          "line": 25,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ButtonComponent"
            }
          ]
        },
        {
          "name": "firstFocusableElement",
          "type": "ButtonComponent | null",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [112]
        },
        {
          "name": "isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57,
          "modifierKind": [114]
        },
        {
          "name": "previouslyFocusedElement",
          "type": "Element | null",
          "optional": false,
          "description": "",
          "line": 58,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "hide",
          "args": [
            {
              "name": "index",
              "type": "number",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 110,
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65
        },
        {
          "name": "show",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 105
        },
        {
          "name": "tabFocus",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "description": "<p>We only care about circulating back and forth. Like a circle.\nWe address only the first and last and ignore all in between.</p>\n",
          "jsdoctags": [
            {
              "name": {
                "pos": 2128,
                "end": 2133,
                "flags": 0,
                "escapedText": "event"
              },
              "type": "",
              "tagName": {
                "pos": 2122,
                "end": 2127,
                "flags": 0,
                "escapedText": "param"
              },
              "comment": ""
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChildren,\n} from '@angular/core';\nimport { LocationStrategy } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\n\nimport {\n  DialogActionConfig,\n  DialogType,\n  DialogVariant,\n} from './dialog.constant';\n\n@Component({\n  selector: 'vds-dialog',\n  templateUrl: './dialog.component.html',\n})\nexport class DialogComponent implements AfterViewInit {\n  @ContentChild(ButtonComponent)\n  firstButton: ButtonComponent;\n  @ViewChildren('actionButton') actionButton: QueryList<\n    ButtonComponent\n  >;\n  /**\n   * Id of dialog.\n   */\n  @Input() id: string;\n  /**\n   * Type of dialog. Default:\n   * <code>call-to-action. [call-to-action|closeable]</code>\n   */\n  @Input() variant = DialogVariant.CALL_TO_ACTION;\n  /**\n   * Type of dialog messaging. Default:\n   * <code>default. [error|default|success|warning]</code>\n   */\n  @Input() messageType = DialogType.DEFAULT;\n  /**\n   * Modal header\n   */\n  @Input() title: string;\n  /**\n   * Modal content or body\n   */\n  @ContentChild(TemplateRef)\n  dialogBodyTemplate: TemplateRef<any>;\n  /**\n   * Modal actions\n   */\n  @Input() action: DialogActionConfig[];\n\n  public isOpen = false;\n  private previouslyFocusedElement: Element | null;\n  private firstFocusableElement: ButtonComponent | null;\n\n  constructor(private location: LocationStrategy) {\n    location.onPopState(() => this.hide());\n  }\n\n  ngAfterViewInit() {\n    this.firstFocusableElement = this.actionButton.first;\n    if (this.firstFocusableElement) {\n      // This will find the nested span element inside of the vds-button.\n      // Maybe we should just have a set focus method on vds button and delegate\n      // that responsibility to the component instead?\n      // This is presuming too much knowledge about the structure of the button\n      // component.\n      (this\n        .firstFocusableElement as ButtonComponent).setFocus();\n    }\n  }\n\n  /**\n   * We only care about circulating back and forth. Like a circle.\n   * We address only the first and last and ignore all in between.\n   * @param event\n   */\n  tabFocus(event) {\n    if (event.keyCode === 9 || event.key === 'Tab') {\n      // if shift + tab is pressed\n      if (event.shiftKey) {\n        if (this.actionButton.first.hasFocus()) {\n          event.preventDefault();\n          this.actionButton.last.setFocus();\n        }\n      } else {\n        if (this.actionButton.last.hasFocus()) {\n          event.preventDefault();\n          this.actionButton.first.setFocus();\n        }\n      }\n    } else if (\n      event.key === 'Esc' ||\n      event.keyCode === 27\n    ) {\n      this.hide();\n    }\n  }\n\n  show() {\n    this.previouslyFocusedElement = document.activeElement;\n    this.isOpen = true;\n  }\n\n  hide(index?: number) {\n    this.isOpen = false;\n    const previousFocusElement = this\n      .previouslyFocusedElement as HTMLElement;\n    if (previousFocusElement) {\n      previousFocusElement.focus();\n    }\n    if (index === undefined) {\n      return;\n    }\n    if (this.action[index] && this.action[index].callback) {\n      this.action[index].callback();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "location",
            "type": "LocationStrategy"
          }
        ],
        "line": 59,
        "jsdoctags": [
          {
            "name": "location",
            "type": "LocationStrategy",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit"],
      "templateData": "<!-- vds-dialog -->\n<div class=\"vds-dialog\"\n     [ngClass]=\"{\n      'vds-state--show': isOpen,\n      'vds-state--success': messageType === 'success',\n      'vds-state--warning': messageType === 'warning',\n      'vds-state--error': messageType === 'error'\n     }\"\n     id=\"testDialog\"\n     tabindex=\"-1\"\n     (keydown)=\"tabFocus($event)\"\n     #tabTrap>\n  <div class=\"vds-dialog-card\"\n       role=\"dialog\">\n    <div class=\"vds-dialog-card--close\" *ngIf=\"variant === 'closeable'\">\n      <div class=\"vds-btn-group vds-btn-group--right\">\n        <!-- vds-button -->\n        <vds-button ariaLabel=\"Close modal\"\n                    variant=\"icon\"\n                    iconType=\"light-tiny\"\n                    (click)=\"hide()\"\n                    #actionButton>\n          <vds-icon icon=\"visa_close\" tiny=\"true\"></vds-icon>\n        </vds-button>\n        <!--/ vds-button -->\n      </div>\n    </div>\n    <div class=\"vds-dialog-card--head\">\n       <span class=\"vds-dialog-card--head-icon\"\n             [ngClass] = \"{\n              'vds-state--hidden': messageType === 'default'\n             }\">\n        <!-- vds-icon -->\n        <svg class=\"vds-icon\" focusable=\"false\" tabindex=\"-1\">\n          <use *ngIf=\"messageType === 'default'\" href=\"#info--low\" xlink:href=\"#info--low\"></use>\n          <use *ngIf=\"messageType === 'success'\" href=\"#success--low\" xlink:href=\"#success--low\"></use>\n          <use *ngIf=\"messageType === 'warning'\" href=\"#warning--low\" xlink:href=\"#warning--low\"></use>\n          <use *ngIf=\"messageType === 'error'\" href=\"#error--low\" xlink:href=\"#error--low\"></use>\n        </svg>\n         <!--/ vds-icon -->\n       </span>\n      <h2 class=\"vds-dialog-card--head-title\">{{title}}</h2>\n    </div>\n    <div class=\"vds-dialog-card--body\">\n      <ng-container *ngTemplateOutlet=\"dialogBodyTemplate\"></ng-container>\n    </div>\n    <div class=\"vds-dialog-card--footer\">\n      <div class=\"vds-btn-group vds-btn-group--right\">\n        <ng-container *ngIf=\"action?.length\">\n          <ng-container *ngFor=\"let actionItem of action; let i = index\">\n            <vds-button\n              [colorScheme]=\"actionItem.colorScheme\"\n              (click)=\"hide(i)\"\n              #actionButton>\n              {{ actionItem.label }}\n            </vds-button>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n  <div class=\"vds-dialog-curtain\"></div>\n</div>\n<!--/ vds-dialog -->\n\n"
    },
    {
      "name": "DisclosureComponent",
      "id": "component-DisclosureComponent-5e177325ab5a193c539cd6224e1ffd42",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-disclosure",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./disclosure.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "containerProps",
          "description": "<p>provide id, extra class to disclosure container <br>\nDefault: <code>null</code></p>\n",
          "line": 100,
          "type": "DisclosureContainerConfig"
        },
        {
          "name": "contentProps",
          "description": "<p>provide id, extra class to disclosure content <br>\nDefault: <code>null</code></p>\n",
          "line": 116,
          "type": "DisclosureContentConfig"
        },
        {
          "name": "isDisabled",
          "description": "<p>Whether disclosure is disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 70,
          "type": "boolean"
        },
        {
          "name": "isExpanded",
          "description": "<p>Whether disclosure is expanded <br>\nDefault: <code>false</code></p>\n",
          "line": 51,
          "type": "boolean"
        },
        {
          "name": "isLazyLoading",
          "description": "<p>Whether disclosure is lazyLoading <br>\nDefault: <code>false</code></p>\n",
          "line": 86,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "toggleHeader",
          "defaultValue": "new EventEmitter<boolean>()",
          "description": "<p>Fires when header is clicked. <br>\nReturns the boolean to indicate the open state of disclosure</p>\n",
          "line": 138,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_containerProps",
          "type": "DisclosureContainerConfig",
          "optional": false,
          "description": "",
          "line": 109,
          "modifierKind": [112]
        },
        {
          "name": "_contentProps",
          "type": "DisclosureContentConfig",
          "optional": false,
          "description": "",
          "line": 132,
          "modifierKind": [112]
        },
        {
          "name": "_expanded",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 63,
          "modifierKind": [112]
        },
        {
          "name": "_isDisabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 79,
          "modifierKind": [112]
        },
        {
          "name": "_isLazyLoading",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 93,
          "modifierKind": [112]
        },
        {
          "name": "_lazyContent",
          "type": "DisclosureLazyContentDirective",
          "optional": false,
          "description": "<p>Content that will be rendered lazily. </p>\n",
          "line": 152,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "DisclosureLazyContentDirective"
            }
          ]
        },
        {
          "name": "_panelHeader",
          "type": "DisclosureHeaderComponent",
          "optional": false,
          "description": "",
          "line": 148,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "DisclosureHeaderComponent"
            }
          ]
        },
        {
          "name": "_portal",
          "type": "TemplatePortal",
          "optional": false,
          "description": "",
          "line": 159
        },
        {
          "name": "contentDirective",
          "type": "DisclosureContentDirective",
          "optional": false,
          "description": "",
          "line": 157,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "DisclosureContentDirective, {read: TemplateRef}"
            }
          ]
        },
        {
          "name": "lazyContentLoaded$",
          "defaultValue": "this.lazyContentLoadedSubject.asObservable()",
          "type": "Observable<boolean>",
          "optional": false,
          "description": "",
          "line": 143
        },
        {
          "name": "lazyContentLoadedSubject",
          "defaultValue": "new BehaviorSubject<boolean>(false)",
          "type": "BehaviorSubject<boolean>",
          "optional": false,
          "description": "",
          "line": 140
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 179
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 214
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 167
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "<p>DisclosureComponent use DisclosureHeaderComponent controls the visibility of content.\nIt can have use either DisclosureContentDirective or DisclosureLazyContentDirective</p>\n",
      "rawdescription": "DisclosureComponent use DisclosureHeaderComponent controls the visibility of content.\nIt can have use either DisclosureContentDirective or DisclosureLazyContentDirective",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  ViewEncapsulation,\n  ContentChild,\n  Input,\n  ViewContainerRef,\n  AfterContentInit,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  TemplateRef,\n  OnDestroy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  take,\n} from 'rxjs/operators';\nimport { DisclosureLazyContentDirective } from './disclosure-lazy-content.directive';\nimport { DisclosureHeaderComponent } from './disclosure-header/disclosure-header.component';\nimport { DisclosureContentDirective } from './disclosure-content.directive';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  DisclosureContainerConfig,\n  DisclosureContentConfig,\n  DISCLOSURE_ID_PREFIX,\n} from './disclosure.constants';\n/**\n * DisclosureComponent use DisclosureHeaderComponent controls the visibility of content.\n * It can have use either DisclosureContentDirective or DisclosureLazyContentDirective\n */\n\n@Component({\n  selector: 'vds-disclosure',\n  templateUrl: './disclosure.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DisclosureComponent\n  implements OnInit, AfterContentInit, OnDestroy {\n  /**\n   * Whether disclosure is expanded <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get isExpanded(): boolean {\n    return this._expanded;\n  }\n  set isExpanded(expanded: boolean) {\n    this._expanded = coerceBooleanProperty(expanded);\n    if (this._panelHeader) {\n      this._panelHeader.isOpen = this.isExpanded;\n    }\n    if (expanded) {\n      this.lazyContentLoadedSubject.next(true);\n    }\n  }\n  private _expanded = false;\n\n  /**\n   * Whether disclosure is disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n  set isDisabled(disabled: boolean) {\n    this._isDisabled = coerceBooleanProperty(disabled);\n    if (this._panelHeader) {\n      this._panelHeader.disabled = this.isDisabled;\n    }\n  }\n  private _isDisabled = false;\n\n  /**\n   * Whether disclosure is lazyLoading <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get isLazyLoading(): boolean {\n    return this._isLazyLoading;\n  }\n\n  set isLazyLoading(isLazy: boolean) {\n    this._isLazyLoading = coerceBooleanProperty(isLazy);\n  }\n  private _isLazyLoading = false;\n\n  /**\n   * provide id, extra class to disclosure container <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get containerProps(): DisclosureContainerConfig {\n    return this._containerProps;\n  }\n  set containerProps(props: DisclosureContainerConfig) {\n    this._containerProps = {\n      ...this._containerProps,\n      ...props,\n    };\n  }\n  private _containerProps: DisclosureContainerConfig;\n\n  /**\n   * provide id, extra class to disclosure content <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get contentProps(): DisclosureContentConfig {\n    return this._contentProps;\n  }\n  set contentProps(props: DisclosureContentConfig) {\n    this._contentProps = {\n      ...this._contentProps,\n      ...props,\n    };\n    if (\n      this._contentProps &&\n      this._contentProps.id &&\n      this._panelHeader\n    ) {\n      this._panelHeader.ariaControls = this._contentProps.id;\n    }\n  }\n  private _contentProps: DisclosureContentConfig;\n\n  /**\n   * Fires when header is clicked. <br>\n   * Returns the boolean to indicate the open state of disclosure\n   */\n  @Output() toggleHeader = new EventEmitter<boolean>();\n\n  lazyContentLoadedSubject: BehaviorSubject<\n    boolean\n  > = new BehaviorSubject<boolean>(false);\n  lazyContentLoaded$: Observable<\n    boolean\n  > = this.lazyContentLoadedSubject.asObservable();\n\n  @ContentChild(DisclosureHeaderComponent)\n  _panelHeader: DisclosureHeaderComponent;\n\n  /** Content that will be rendered lazily. */\n  @ContentChild(DisclosureLazyContentDirective)\n  _lazyContent: DisclosureLazyContentDirective;\n\n  @ContentChild(DisclosureContentDirective, {\n    read: TemplateRef,\n  })\n  contentDirective: DisclosureContentDirective;\n\n  _portal: TemplatePortal;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    private _changeDetectorRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {}\n\n  ngOnInit() {\n    if (!this.containerProps || !this.containerProps.id) {\n      const uuid = this.vdsLibService.getUUID(\n        DISCLOSURE_ID_PREFIX\n      );\n      if (!this.containerProps) {\n        this.containerProps = {};\n      }\n      this.containerProps.id = uuid;\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this._lazyContent) {\n      this.lazyContentLoaded$\n        .pipe(\n          distinctUntilChanged(),\n          filter(() => {\n            return this.isExpanded && !this._portal;\n          }),\n          take(1)\n        )\n        .subscribe(() => {\n          this._portal = new TemplatePortal(\n            this._lazyContent._template,\n            this._viewContainerRef\n          );\n        });\n    }\n\n    if (this._panelHeader) {\n      this._panelHeader.isOpen = this.isExpanded;\n      this._panelHeader.disabled = this.isDisabled;\n      if (this._contentProps && this._contentProps.id) {\n        this._panelHeader.ariaControls = this._contentProps.id;\n      }\n\n      this._panelHeader.toggleEventState$.subscribe(() => {\n        if (!this.isDisabled) {\n          this.isExpanded = !this.isExpanded;\n          this.toggleHeader.emit(this.isExpanded);\n          this._changeDetectorRef.markForCheck();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.lazyContentLoadedSubject.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_viewContainerRef",
            "type": "ViewContainerRef"
          },
          {
            "name": "_changeDetectorRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 159,
        "jsdoctags": [
          {
            "name": "_viewContainerRef",
            "type": "ViewContainerRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "_changeDetectorRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": [
        "OnInit",
        "AfterContentInit",
        "OnDestroy"
      ],
      "accessors": {
        "isExpanded": {
          "name": "isExpanded",
          "setSignature": {
            "name": "isExpanded",
            "type": "void",
            "args": [
              {
                "name": "expanded",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 54,
            "jsdoctags": [
              {
                "name": "expanded",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "isDisabled": {
          "name": "isDisabled",
          "setSignature": {
            "name": "isDisabled",
            "type": "void",
            "args": [
              {
                "name": "disabled",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 73,
            "jsdoctags": [
              {
                "name": "disabled",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "isLazyLoading": {
          "name": "isLazyLoading",
          "setSignature": {
            "name": "isLazyLoading",
            "type": "void",
            "args": [
              {
                "name": "isLazy",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 90,
            "jsdoctags": [
              {
                "name": "isLazy",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "containerProps": {
          "name": "containerProps",
          "setSignature": {
            "name": "containerProps",
            "type": "void",
            "args": [
              {
                "name": "props",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 103,
            "jsdoctags": [
              {
                "name": "props",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "contentProps": {
          "name": "contentProps",
          "setSignature": {
            "name": "contentProps",
            "type": "void",
            "args": [
              {
                "name": "props",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 119,
            "jsdoctags": [
              {
                "name": "props",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"vds-disclosure\"\n     [ngClass]=\"[containerProps?.class ? containerProps.class : '']\"\n     [attr.id]=\"containerProps?.id ? containerProps?.id : null\"\n     [class.vds-state--disabled]=\"isDisabled\"\n>\n  <ng-content select=\"vds-disclosure-header\"></ng-content>\n  <div class=\"vds-disclosure-content\"\n       [ngClass]=\"[contentProps?.class ? contentProps.class : '']\"\n       [attr.id]=\"contentProps?.id ? contentProps?.id : null\"\n       [class.vds-state--hidden]=\"!isExpanded\"\n       role=\"region\"\n  >\n    <ng-container *ngIf=\"isLazyLoading else content\">\n      <ng-template *cdkPortalOutlet=\"_portal\"></ng-template>\n    </ng-container>\n    <ng-template #content>\n      <ng-container [ngTemplateOutlet]=\"contentDirective\"></ng-container>\n    </ng-template>\n  </div>\n</div>\n\n\n"
    },
    {
      "name": "DisclosureHeaderComponent",
      "id": "component-DisclosureHeaderComponent-dc22cd5d55688700ec753a485d8b0415",
      "file": "projects/vds-lib/src/lib/disclosure/disclosure-header/disclosure-header.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-disclosure-header",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./disclosure-header.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaControls",
          "description": "<p>aria-controls for disclosure <br>\nDefault: <code>null</code></p>\n",
          "line": 71,
          "type": "string"
        },
        {
          "name": "blockChildEvent",
          "description": "<p>Whether disclosure should block child component event<br>\nDefault: <code>true</code></p>\n",
          "line": 106,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "<p>Whether disclosure is disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 57,
          "type": "boolean"
        },
        {
          "name": "focusHeaderAfterClick",
          "description": "<p>focus header after click<br>\nDefault: <code>false</code></p>\n",
          "line": 119,
          "type": "boolean"
        },
        {
          "name": "headerProps",
          "description": "<p>Header props for disclosure <br>\nDefault: <code> {\n   iconType: 'tiny',\n   openIcon: 'disclosure-collapse',\n   closeIcon: 'disclosure-expand',\n   iconRight: false\n} </code></p>\n",
          "line": 89,
          "type": "DisclosureHeaderConfig"
        },
        {
          "name": "isOpen",
          "description": "<p>Whether disclosure is open <br>\nDefault: <code>false</code></p>\n",
          "line": 31,
          "type": "boolean"
        },
        {
          "name": "showIcon",
          "description": "<p>Whether disclosure icon is diplayed <br>\nDefault: <code>true</code></p>\n",
          "line": 44,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_ariaControls",
          "defaultValue": "null",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 77
        },
        {
          "name": "_blockChildEvent",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 112
        },
        {
          "name": "_disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "_focusHeader",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 125
        },
        {
          "name": "_headerProps",
          "defaultValue": "{\n    iconType: 'tiny',\n    openIcon: 'disclosure-collapse',\n    closeIcon: 'disclosure-expand',\n  }",
          "type": "DisclosureHeaderConfig",
          "optional": false,
          "description": "",
          "line": 95
        },
        {
          "name": "_isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "_showIcon",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "el",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 134,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'header'"
            }
          ]
        },
        {
          "name": "toggleEvent",
          "defaultValue": "new Subject<void>()",
          "type": "Subject<void>",
          "optional": false,
          "description": "",
          "line": 131
        },
        {
          "name": "toggleEventState$",
          "defaultValue": "this.toggleEvent.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 132,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "handleEscape",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 149
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 138
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 136
        },
        {
          "name": "toggleHeader",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 142
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "<p>DisclosureHeaderComponent is a clickable component which controls visibility of content</p>\n",
      "rawdescription": "DisclosureHeaderComponent is a clickable component which controls visibility of content",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { DisclosureHeaderConfig } from '../disclosure.constants';\n/**\n * DisclosureHeaderComponent is a clickable component which controls visibility of content\n */\n@Component({\n  selector: 'vds-disclosure-header',\n  templateUrl: './disclosure-header.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DisclosureHeaderComponent\n  implements OnInit, OnDestroy {\n  /**\n   * Whether disclosure is open <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n  set isOpen(open: boolean) {\n    this._isOpen = coerceBooleanProperty(open);\n  }\n  _isOpen = false;\n\n  /**\n   * Whether disclosure icon is diplayed <br>\n   * Default: <code>true</code>\n   */\n  @Input()\n  get showIcon(): boolean {\n    return this._showIcon;\n  }\n  set showIcon(show: boolean) {\n    this._showIcon = coerceBooleanProperty(show);\n  }\n  _showIcon = true;\n\n  /**\n   * Whether disclosure is disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n    this._changeDetectorRef.markForCheck();\n  }\n  _disabled = false;\n\n  /**\n   * aria-controls for disclosure <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get ariaControls(): string {\n    return this._ariaControls;\n  }\n  set ariaControls(control: string) {\n    this._ariaControls = control;\n  }\n  _ariaControls: string = null;\n\n  /**\n   * Header props for disclosure <br>\n   * Default: <code> {\n   *   iconType: 'tiny',\n   *   openIcon: 'disclosure-collapse',\n   *   closeIcon: 'disclosure-expand',\n   *   iconRight: false\n   * } </code>\n   */\n  @Input()\n  get headerProps(): DisclosureHeaderConfig {\n    return this._headerProps;\n  }\n  set headerProps(props: DisclosureHeaderConfig) {\n    this._headerProps = { ...this._headerProps, ...props };\n  }\n  _headerProps: DisclosureHeaderConfig = {\n    iconType: 'tiny',\n    openIcon: 'disclosure-collapse',\n    closeIcon: 'disclosure-expand',\n  };\n\n  /**\n   * Whether disclosure should block child component event<br>\n   * Default: <code>true</code>\n   */\n  @Input()\n  get blockChildEvent(): boolean {\n    return this._blockChildEvent;\n  }\n  set blockChildEvent(block: boolean) {\n    this._blockChildEvent = coerceBooleanProperty(block);\n  }\n  _blockChildEvent = false;\n\n  /**\n   * focus header after click<br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get focusHeaderAfterClick(): boolean {\n    return this._focusHeader;\n  }\n  set focusHeaderAfterClick(focus: boolean) {\n    this._focusHeader = coerceBooleanProperty(focus);\n  }\n  _focusHeader = false;\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  toggleEvent: Subject<void> = new Subject<void>();\n  public toggleEventState$ = this.toggleEvent.asObservable();\n\n  @ViewChild('header') el: ElementRef;\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    this.toggleEvent.complete();\n  }\n\n  toggleHeader() {\n    this.toggleEvent.next();\n    if (this.focusHeaderAfterClick) {\n      this.el.nativeElement.focus();\n    }\n  }\n\n  handleEscape() {\n    if (this.isOpen) {\n      this.toggleEvent.next();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "_changeDetectorRef",
            "type": "ChangeDetectorRef"
          }
        ],
        "line": 125,
        "jsdoctags": [
          {
            "name": "_changeDetectorRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"],
      "accessors": {
        "isOpen": {
          "name": "isOpen",
          "setSignature": {
            "name": "isOpen",
            "type": "void",
            "args": [
              {
                "name": "open",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 34,
            "jsdoctags": [
              {
                "name": "open",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "showIcon": {
          "name": "showIcon",
          "setSignature": {
            "name": "showIcon",
            "type": "void",
            "args": [
              {
                "name": "show",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 47,
            "jsdoctags": [
              {
                "name": "show",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "disabled",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 60,
            "jsdoctags": [
              {
                "name": "disabled",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "ariaControls": {
          "name": "ariaControls",
          "setSignature": {
            "name": "ariaControls",
            "type": "void",
            "args": [
              {
                "name": "control",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 74,
            "jsdoctags": [
              {
                "name": "control",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "headerProps": {
          "name": "headerProps",
          "setSignature": {
            "name": "headerProps",
            "type": "void",
            "args": [
              {
                "name": "props",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 92,
            "jsdoctags": [
              {
                "name": "props",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "blockChildEvent": {
          "name": "blockChildEvent",
          "setSignature": {
            "name": "blockChildEvent",
            "type": "void",
            "args": [
              {
                "name": "block",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 109,
            "jsdoctags": [
              {
                "name": "block",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "focusHeaderAfterClick": {
          "name": "focusHeaderAfterClick",
          "setSignature": {
            "name": "focusHeaderAfterClick",
            "type": "void",
            "args": [
              {
                "name": "focus",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 122,
            "jsdoctags": [
              {
                "name": "focus",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<button #header\n  class=\"vds-disclosure-header\"\n  [ngClass]=\"[headerProps?.class ? headerProps.class : '']\"\n  [class.vds-disclosure-header--reversed]=\"headerProps?.iconRight\"\n  [attr.id]=\"headerProps?.id ? headerProps?.id : null\"\n  [attr.disabled]=\"disabled ? true : null\"\n  [attr.aria-expanded]=\"isOpen\"\n  [attr.aria-controls]=\"ariaControls? ariaControls : null\"\n  (click)=\"toggleHeader()\"\n  (keyup.escape)=\"handleEscape()\">\n  <ng-container *ngIf=\"showIcon\">\n    <span class=\"vds-disclosure-header-icon\">\n      <vds-icon\n        [icon]=\"isOpen ? headerProps?.openIcon: headerProps?.closeIcon\"\n        [tiny]=\"headerProps?.iconType === 'tiny' ? true : null\"\n        [low]=\"headerProps?.iconType === 'low' ? true : null\">\n      </vds-icon>\n    </span>\n  </ng-container>\n  <span class=\"vds-disclosure-header-wrapper\" vdsBlockChildEvent=\"{{blockChildEvent}}\">\n    <ng-content></ng-content>\n  </span>\n</button>"
    },
    {
      "name": "DividerComponent",
      "id": "component-DividerComponent-64e8a7dae89dd0ee9829ad90bbce7a67",
      "file": "projects/vds-lib/src/lib/divider/divider.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-divider",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./divider.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "section",
          "description": "<p>Set divider style to Section.\nDefaults to Standard.</p>\n",
          "line": 15,
          "type": "boolean"
        },
        {
          "name": "title",
          "description": "<p>Title for Divider.</p>\n",
          "line": 27,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_section",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "_title",
          "defaultValue": "DIVIDER.TITLE",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { DIVIDER } from './divider.constants';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-divider',\n  templateUrl: './divider.component.html',\n})\nexport class DividerComponent implements OnInit {\n  /**\n   * Set divider style to Section.\n   * Defaults to Standard.\n   */\n  @Input()\n  get section(): boolean {\n    return this._section;\n  }\n  set section(value) {\n    this._section = coerceBooleanProperty(value);\n  }\n  _section: boolean;\n\n  /**\n   * Title for Divider.\n   */\n  @Input()\n  get title(): string {\n    return this._title;\n  }\n  set title(value) {\n    this._title = value;\n  }\n  _title: string = DIVIDER.TITLE;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 33
      },
      "implements": ["OnInit"],
      "accessors": {
        "section": {
          "name": "section",
          "setSignature": {
            "name": "section",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 18,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "title": {
          "name": "title",
          "setSignature": {
            "name": "title",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 30,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<hr\n  [ngClass]=\"{\n    'vds-divider--standard': !section,\n    'vds-divider--section': section\n  }\"\n  role=\"presentation\"\n  [title]=\"title\"\n>\n"
    },
    {
      "name": "DotsComponent",
      "id": "component-DotsComponent-a96798f11dfd0785c0bde79a2a060e7f",
      "file": "projects/vds-lib/src/lib/dots/dots.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-dots",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./dots.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "comment",
          "description": "<p>Set Dots style to Comment.\nDefaults to Message.</p>\n",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "<p>Set to disabled.</p>\n",
          "line": 26,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>Label for Dots.</p>\n",
          "line": 38,
          "type": "string"
        },
        {
          "name": "screenReader",
          "description": "<p>Label for screen reader.</p>\n",
          "line": 50,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_comment",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "_disabled",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "_label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "_screenReader",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 56
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-dots',\n  templateUrl: './dots.component.html',\n})\nexport class DotsComponent implements OnInit {\n  /**\n   * Set Dots style to Comment.\n   * Defaults to Message.\n   */\n  @Input()\n  get comment(): boolean {\n    return this._comment;\n  }\n  set comment(value) {\n    this._comment = coerceBooleanProperty(value);\n  }\n  _comment: boolean;\n\n  /**\n   * Set to disabled.\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled: boolean;\n\n  /**\n   * Label for Dots.\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value) {\n    this._label = value;\n  }\n  _label: string;\n\n  /**\n   * Label for screen reader.\n   */\n  @Input()\n  get screenReader(): string {\n    return this._screenReader;\n  }\n  set screenReader(value) {\n    this._screenReader = value;\n  }\n  _screenReader: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 56
      },
      "implements": ["OnInit"],
      "accessors": {
        "comment": {
          "name": "comment",
          "setSignature": {
            "name": "comment",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 17,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 29,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 41,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "screenReader": {
          "name": "screenReader",
          "setSignature": {
            "name": "screenReader",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 53,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-dot--comment': comment,\n    'vds-dot--message': !comment,\n    'vds-state--disabled': disabled\n  }\"\n>\n  <div class=\"vds-dot--screen-reader\">{{ screenReader }}</div>\n  <div class=\"vds-dot-label\" aria-hidden=\"true\" role=\"presentation\">{{ label }}</div>\n</div>\n"
    },
    {
      "name": "DrawerComponent",
      "id": "component-DrawerComponent-1ccf19c16129ef8151fd182180f99089",
      "file": "projects/vds-lib/src/lib/panel/drawer/drawer.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-drawer",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./drawer.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "icon",
          "description": "<p>The icon associated with this drawer.</p>\n",
          "line": 12,
          "type": "string"
        },
        {
          "name": "subtitle",
          "description": "<p>The subtitle of the sub-panel.</p>\n",
          "line": 21,
          "type": "string"
        },
        {
          "name": "title",
          "description": "<p>The title of the sub-panel.</p>\n",
          "line": 16,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [114]
        },
        {
          "name": "isSelected",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { VdsLibService } from '../../vds-lib.service';\n\n@Component({\n  selector: 'vds-drawer',\n  templateUrl: './drawer.component.html',\n})\nexport class DrawerComponent implements OnInit {\n  /**\n   * The icon associated with this drawer.\n   */\n  @Input() icon: string;\n  /**\n   * The title of the sub-panel.\n   */\n  @Input() title: string;\n\n  /**\n   * The subtitle of the sub-panel.\n   */\n  @Input() subtitle: string;\n\n  public id: string;\n  public isSelected: boolean;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.vdsLibService.getUUID();\n    this.isSelected = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div \n  [ngClass]=\"{\n    'vds-panel-content': true,\n    'vds-state--show': isSelected\n  }\">\n  <h2 *ngIf=\"title\" class=\"vds-text--title\">{{ title }}</h2>\n  <h3 *ngIf=\"subtitle\" class=\"vds-text--subtitle\">{{ subtitle }}</h3>\n  <ng-content></ng-content>\n</div>"
    },
    {
      "name": "DresserComponent",
      "id": "component-DresserComponent-56b9d59dfbd66fc3e1b336ddd519e829",
      "file": "projects/vds-lib/src/lib/panel/dresser/dresser.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-dresser",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./dresser.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "isOpen",
          "description": "<p>If set to true, opens the panel.</p>\n",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "selectedDrawerIndex",
          "defaultValue": "0",
          "description": "<p>0 based index of the drawer to be opened by default.</p>\n",
          "line": 46
        }
      ],
      "outputsClass": [
        {
          "name": "close",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits close action to panel.</p>\n",
          "line": 26,
          "type": "EventEmitter<any>"
        },
        {
          "name": "open",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits open action to panel.</p>\n",
          "line": 30,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_drawers",
          "type": "Array<DrawerComponent>",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "_isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [112]
        },
        {
          "name": "_selectedDrawer",
          "type": "DrawerComponent",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "drawers",
          "type": "QueryList<DrawerComponent>",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "DrawerComponent"
            }
          ]
        },
        {
          "name": "ICONS",
          "defaultValue": "ARROW_ICON",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53
        },
        {
          "name": "select",
          "args": [
            {
              "name": "drawer",
              "type": "DrawerComponent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "jsdoctags": [
            {
              "name": "drawer",
              "type": "DrawerComponent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 88
        },
        {
          "name": "triggerClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83
        },
        {
          "name": "triggerOpen",
          "args": [
            {
              "name": "drawerIndex",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "jsdoctags": [
            {
              "name": "drawerIndex",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  EventEmitter,\n  Output,\n  Input,\n} from '@angular/core';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { ARROW_ICON } from './dresser.constants';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-dresser',\n  templateUrl: './dresser.component.html',\n})\nexport class DresserComponent implements AfterContentInit {\n  @ContentChildren(DrawerComponent) drawers: QueryList<\n    DrawerComponent\n  >;\n  /**\n   * Emits close action to panel.\n   */\n  @Output() close: EventEmitter<any> = new EventEmitter();\n  /**\n   * Emits open action to panel.\n   */\n  @Output() open: EventEmitter<any> = new EventEmitter();\n  /**\n   * If set to true, opens the panel.\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n  set isOpen(value) {\n    this._isOpen = coerceBooleanProperty(value);\n  }\n  private _isOpen = false;\n\n  /**\n   * 0 based index of the drawer to be opened by default.\n   */\n  @Input() selectedDrawerIndex = 0;\n\n  _drawers: Array<DrawerComponent>;\n  _selectedDrawer: DrawerComponent;\n  ICONS = ARROW_ICON;\n  constructor() {}\n\n  ngAfterContentInit() {\n    if (this.drawers) {\n      this._drawers = this.drawers.toArray();\n\n      // trigger open event if initial value of isOpen = true\n      if (\n        this.isOpen &&\n        this.selectedDrawerIndex >= 0 &&\n        this.selectedDrawerIndex < this._drawers.length\n      ) {\n        this.triggerOpen(this.selectedDrawerIndex);\n      }\n    }\n  }\n\n  select(drawer: DrawerComponent) {\n    if (this._selectedDrawer) {\n      this._selectedDrawer.isSelected = false;\n    }\n    drawer.isSelected = true;\n    this._selectedDrawer = drawer;\n  }\n\n  triggerOpen(drawerIndex: number) {\n    this.isOpen = true;\n    this.select(this._drawers[drawerIndex]);\n    this.selectedDrawerIndex = drawerIndex;\n    this.open.emit(this._drawers[drawerIndex]);\n  }\n\n  triggerClose() {\n    this.isOpen = false;\n    this.close.emit();\n  }\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n    if (this.isOpen) {\n      this.triggerOpen(this.selectedDrawerIndex);\n      return;\n    }\n    this.triggerClose();\n    if (this._selectedDrawer) {\n      this._selectedDrawer.isSelected = false;\n    }\n    this._selectedDrawer = null;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 50
      },
      "implements": ["AfterContentInit"],
      "accessors": {
        "isOpen": {
          "name": "isOpen",
          "setSignature": {
            "name": "isOpen",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 38,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"vds-panel-tabs\">\n  <ul class=\"vds-tab-list vds-tab--vertical\" role=\"tablist\">\n    <li\n      *ngFor=\"let drawer of _drawers; index as i\"\n      (click)=\"triggerOpen(i)\"\n      class=\"vds-tab-item\"\n    >\n      <button\n        [ngClass]=\"{\n          'vds-tab': true,\n          'vds-state--selected': _selectedDrawer\n            ? drawer.id === _selectedDrawer.id\n            : false\n        }\"\n      >\n        <vds-icon low=\"true\" [icon]=\"drawer.icon\">\n        </vds-icon>\n      </button>\n    </li>\n  </ul>\n  <ul\n    class=\"vds-tab-list vds-tab--vertical vds-panel-tabs-close\"\n    role=\"tablist\"\n  >\n    <li class=\"vds-tab-item\">\n      <button\n        (click)=\"toggle()\"\n        class=\"vds-tab\"\n        role=\"tab\"\n        type=\"button\"\n        aria-label=\"Toggle Panel\"\n      >\n        <vds-icon\n          low=\"true\"\n          [icon]=\"isOpen ? ICONS.OPEN : ICONS.CLOSE\"\n        >\n        </vds-icon>\n      </button>\n    </li>\n  </ul>\n</div>\n<div class=\"vds-panel-panel\">\n  <ng-content select=\"vds-drawer\"></ng-content>\n</div>\n"
    },
    {
      "name": "ErrorComponent",
      "id": "component-ErrorComponent-e0fb0db56bcb3fb32ffa64c03adf5007",
      "file": "projects/vds-lib/src/lib/error/error.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-error",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./error.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "defaultValue": "ERROR.ARIA_LABEL",
          "description": "<p>The aria label of the error element.</p>\n",
          "line": 13,
          "type": "string"
        },
        {
          "name": "icon",
          "defaultValue": "ERROR.ICON",
          "description": "<p>The icon for the error element.</p>\n",
          "line": 17,
          "type": "string"
        },
        {
          "name": "id",
          "description": "<p>The id of the error element.</p>\n",
          "line": 21,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { ERROR } from './error.constants';\n\n@Component({\n  selector: 'vds-error',\n  templateUrl: './error.component.html',\n})\nexport class ErrorComponent implements OnInit {\n  /**\n   * The aria label of the error element.\n   */\n  @Input() ariaLabel: string = ERROR.ARIA_LABEL;\n  /**\n   * The icon for the error element.\n   */\n  @Input() icon: string = ERROR.ICON;\n  /**\n   * The id of the error element.\n   */\n  @Input() id: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID('vds-error-');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<span\n  [id]=\"id\"\n  [ngClass]=\"{\n      'vds-input-message': true\n    }\"\n  aria-atomic=\"true\"\n  aria-live=\"assertive\"\n>\n  <vds-icon\n    [altText]=\"ariaLabel\"\n    [icon]=\"icon\"\n    tiny=\"true\">\n  </vds-icon>\n  <ng-content></ng-content>\n</span>\n"
    },
    {
      "name": "ExpandableCellComponent",
      "id": "component-ExpandableCellComponent-b6a057463a42926c6462fa5a4be56bc1",
      "file": "projects/vds-lib/src/lib/datatable/expandable-cell/expandable-cell.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-datatable-expandable-cell",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./expandable-cell.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "isActive",
          "defaultValue": "false",
          "line": 53
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nconst ANIM_STYLES = {\n  collapsed: {\n    maxHeight: '0px',\n    opacity: 0,\n    visibility: 'hidden',\n  },\n  expanded: {\n    maxHeight: '650px',\n    opacity: 1,\n    visibility: 'visible',\n  },\n  transition: animate('225ms cubic-bezier(0.4, 0, 0.2, 1)'),\n};\n\n@Component({\n  selector: 'vds-datatable-expandable-cell',\n  templateUrl: './expandable-cell.component.html',\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style(ANIM_STYLES.collapsed)),\n      state('expanded', style(ANIM_STYLES.expanded)),\n      transition(\n        'expanded <=> collapsed',\n        ANIM_STYLES.transition\n      ),\n      transition('void => expanded', [\n        style(ANIM_STYLES.collapsed),\n        animate(\n          '225ms cubic-bezier(0.4, 0, 0.2, 1)',\n          style(ANIM_STYLES.expanded)\n        ),\n      ]),\n    ]),\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ExpandableCellComponent {\n  @Input() isActive = false;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<div [@detailExpand]=\"isActive ? 'expanded' : 'collapsed'\">\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "FileUploadComponent",
      "id": "component-FileUploadComponent-bdab9864c6944991c2c757d10e517d89",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "FileUploadService"
        }
      ],
      "selector": "vds-fileupload",
      "styleUrls": ["./fileupload.component.scss"],
      "styles": [],
      "templateUrl": ["./fileupload.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "completeLabel",
          "description": "<p>Label for upload item &quot;Complete&quot; text <br>\nDefault: <code>'Complete'</code></p>\n",
          "line": 239,
          "type": "string"
        },
        {
          "name": "customControl",
          "description": "<p>If true, user controls when files are uploaded through component API <br>\nDefault: <code>true</code></p>\n",
          "line": 58,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "<p>If true, input and drop-zone are disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 45,
          "type": "boolean"
        },
        {
          "name": "dropzoneLabel",
          "description": "<p>Label for drop-zone <br>\nDefault: <code>'Drag and drop files here or'</code></p>\n",
          "line": 209,
          "type": "string"
        },
        {
          "name": "enableDropzone",
          "description": "<p>If true, drop-zone will be displayed <br>\nDefault: <code>false</code></p>\n",
          "line": 103,
          "type": "boolean"
        },
        {
          "name": "enableForm",
          "description": "<p>If true, input and drop-zone will be wrapped in a form <br>\nDefault: <code>true</code></p>\n",
          "line": 90,
          "type": "boolean"
        },
        {
          "name": "enableMiniTheme",
          "description": "<p>If true, list item will be displayed using &#39;Mini&#39; theme <br>\nDefault: <code>false</code></p>\n",
          "line": 116,
          "type": "boolean"
        },
        {
          "name": "errorInvalidGeneric",
          "description": "<p>&quot;INVALID_GENERIC&quot; Error type message <br>\nDefault: <code>'An unexpected error happened during upload.'</code></p>\n",
          "line": 290,
          "type": "UPLOAD_ERROR_MSG"
        },
        {
          "name": "errorInvalidName",
          "description": "<p>&quot;INVALID_NAME&quot; Error type message <br>\nDefault: <code>'The file name has characters that are not allowed: / \\ < > : * \" ? | '</code></p>\n",
          "line": 272,
          "type": "UPLOAD_ERROR_MSG"
        },
        {
          "name": "errorInvalidNetwork",
          "description": "<p>&quot;INVALID_NETWORK&quot; Error type message <br>\nDefault: <code>'Network issues interrupted the file upload.'</code></p>\n",
          "line": 308,
          "type": "UPLOAD_ERROR_MSG"
        },
        {
          "name": "errorSize",
          "description": "<p>&quot;SIZE&quot; Error type message <br>\nDefault: <code>'The file is too big. Upload a file less than 100MB in size.'</code></p>\n",
          "line": 254,
          "type": "UPLOAD_ERROR_MSG"
        },
        {
          "name": "formId",
          "description": "<p>ID for Form element <br>\nDefault: <code>null</code></p>\n",
          "line": 129,
          "type": "string | null"
        },
        {
          "name": "formName",
          "description": "<p>Name for Form element <br>\nDefault: <code>null</code></p>\n",
          "line": 144,
          "type": "string | null"
        },
        {
          "name": "httpOptions",
          "description": "<p>HTTP Options to accompany request <br>\nDefault: <code>null</code></p>\n",
          "line": 341,
          "type": "HttpRequestOptions"
        },
        {
          "name": "inputAccept",
          "description": "<p>One or more unique file type specifiers describing file types to allow <br>\nDefault: <code>''</code></p>\n",
          "line": 179,
          "type": "string"
        },
        {
          "name": "inputLabel",
          "description": "<p>Label for input element <br>\nDefault: <code>'Choose File'</code></p>\n",
          "line": 224,
          "type": "string"
        },
        {
          "name": "maxFilesize",
          "description": "<p>Max filesize (in MB) for upload <br>\nDefault: <code>100</code></p>\n",
          "line": 159,
          "type": "number"
        },
        {
          "name": "multipleUpload",
          "description": "<p>If true, multiple uploads are allowed <br>\nDefault: <code>false</code></p>\n",
          "line": 74,
          "type": "boolean"
        },
        {
          "name": "submitLabel",
          "description": "<p>Label for submit button <br>\nDefault: <code>Upload'</code></p>\n",
          "line": 194,
          "type": "string"
        },
        {
          "name": "URL",
          "description": "<p>URL for HTTP upload request <br>\nDefault: <code>null</code></p>\n",
          "line": 326,
          "type": "string | null"
        }
      ],
      "outputsClass": [
        {
          "name": "directoryDeleteEvent",
          "description": "<p>Returns an UploadItem when selected for your App to wire up <br></p>\n",
          "line": 360
        },
        {
          "name": "downloadEvent",
          "description": "<p>Returns an UploadItem when selected for your App to wire up <br></p>\n",
          "line": 356
        },
        {
          "name": "uploadEvent",
          "description": "<p>Fires an UPLOAD_STATUS returning a payload when user performs an action <br></p>\n",
          "line": 352
        }
      ],
      "propertiesClass": [
        {
          "name": "_btnActionId",
          "defaultValue": "FILEUPLOAD.TEMPLATES.BUTTON_ACTION",
          "type": "",
          "optional": false,
          "description": "",
          "line": 370
        },
        {
          "name": "_completeLabel",
          "defaultValue": "FILEUPLOAD.COMPLETE_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 247
        },
        {
          "name": "_customControl",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 67
        },
        {
          "name": "_disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "_dropzoneLabel",
          "defaultValue": "FILEUPLOAD.DROPZONE_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 217
        },
        {
          "name": "_enableDropzone",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 109
        },
        {
          "name": "_enableForm",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 96
        },
        {
          "name": "_enableMiniTheme",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 122
        },
        {
          "name": "_errorInvalidGeneric",
          "defaultValue": "UPLOAD_ERROR_MSG.INVALID_GENERIC",
          "type": "",
          "optional": false,
          "description": "",
          "line": 301
        },
        {
          "name": "_errorInvalidName",
          "defaultValue": "UPLOAD_ERROR_MSG.INVALID_NAME",
          "type": "",
          "optional": false,
          "description": "",
          "line": 283
        },
        {
          "name": "_errorInvalidNetwork",
          "defaultValue": "UPLOAD_ERROR_MSG.INVALID_NETWORK",
          "type": "",
          "optional": false,
          "description": "",
          "line": 319
        },
        {
          "name": "_errorSize",
          "defaultValue": "UPLOAD_ERROR_MSG.SIZE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 265
        },
        {
          "name": "_formId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 137
        },
        {
          "name": "_formName",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 152
        },
        {
          "name": "_httpOptions",
          "defaultValue": "{}",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 347
        },
        {
          "name": "_inputAccept",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 187
        },
        {
          "name": "_inputLabel",
          "defaultValue": "FILEUPLOAD.INPUT_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 232
        },
        {
          "name": "_listItemtId",
          "defaultValue": "FILEUPLOAD.TEMPLATES.LIST_ITEM",
          "type": "",
          "optional": false,
          "description": "",
          "line": 371
        },
        {
          "name": "_maxFilesize",
          "defaultValue": "FILEUPLOAD.MAX_FILESIZE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 172
        },
        {
          "name": "_multipleUpload",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 83
        },
        {
          "name": "_submitDisabled",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 369
        },
        {
          "name": "_submitLabel",
          "defaultValue": "FILEUPLOAD.SUBMIT_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 202
        },
        {
          "name": "_submitStream",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 368
        },
        {
          "name": "_templateMap",
          "defaultValue": "new Map()",
          "type": "Map<string | TemplateRef<any>>",
          "optional": false,
          "description": "",
          "line": 365
        },
        {
          "name": "_uploadStatus$",
          "type": "",
          "optional": false,
          "description": "",
          "line": 366
        },
        {
          "name": "_uploadSubmitComplete$",
          "type": "",
          "optional": false,
          "description": "",
          "line": 367
        },
        {
          "name": "_URL",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 334
        },
        {
          "name": "templateContainer",
          "type": "TemplateContainerComponent",
          "optional": false,
          "description": "",
          "line": 363,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "TemplateContainerComponent"
            }
          ]
        },
        {
          "name": "uploadService",
          "type": "FileUploadService",
          "optional": false,
          "description": "",
          "line": 375,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 450
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 465
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 382
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\nimport {\n  UPLOAD_ERROR_MSG,\n  FILEUPLOAD,\n  HttpRequestOptions,\n  UPLOAD_STATUS,\n  UploadEvent,\n} from './fileupload.constants';\nimport { FileUploadService } from './fileupload.service';\nimport { VdsLibService } from '../vds-lib.service';\nimport { isValidString } from '../combobox/utils';\nimport { TemplateContainerComponent } from '../custom-template/template-container.component';\n\n@Component({\n  selector: 'vds-fileupload',\n  templateUrl: './fileupload.component.html',\n  styleUrls: ['./fileupload.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [FileUploadService],\n})\nexport class FileUploadComponent\n  implements OnInit, AfterContentInit, OnDestroy {\n  /**\n   * If true, input and drop-zone are disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled = false;\n\n  /**\n   * If true, user controls when files are uploaded through component API <br>\n   * Default: <code>true</code>\n   */\n  @Input()\n  get customControl(): boolean {\n    return this._customControl;\n  }\n  set customControl(value) {\n    this._customControl = coerceBooleanProperty(value);\n    if (this.uploadService) {\n      this.uploadService.customControl = this._customControl;\n    }\n  }\n  _customControl = false;\n\n  /**\n   * If true, multiple uploads are allowed <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get multipleUpload(): boolean {\n    return this._multipleUpload;\n  }\n  set multipleUpload(value) {\n    this._multipleUpload = coerceBooleanProperty(value);\n    if (this.uploadService) {\n      this.uploadService.multiple = this._multipleUpload;\n    }\n  }\n  _multipleUpload = true;\n\n  /**\n   * If true, input and drop-zone will be wrapped in a form <br>\n   * Default: <code>true</code>\n   */\n  @Input()\n  get enableForm(): boolean {\n    return this._enableForm;\n  }\n  set enableForm(value) {\n    this._enableForm = coerceBooleanProperty(value);\n  }\n  _enableForm = false;\n\n  /**\n   * If true, drop-zone will be displayed <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableDropzone(): boolean {\n    return this._enableDropzone;\n  }\n  set enableDropzone(value) {\n    this._enableDropzone = coerceBooleanProperty(value);\n  }\n  _enableDropzone = false;\n\n  /**\n   * If true, list item will be displayed using 'Mini' theme <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableMiniTheme(): boolean {\n    return this._enableMiniTheme;\n  }\n  set enableMiniTheme(value) {\n    this._enableMiniTheme = coerceBooleanProperty(value);\n  }\n  _enableMiniTheme = false;\n\n  /**\n   * ID for Form element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get formId(): string | null {\n    return this._formId;\n  }\n  set formId(value) {\n    if (isValidString(value)) {\n      this._formId = value;\n    }\n  }\n  _formId = null;\n\n  /**\n   * Name for Form element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get formName(): string | null {\n    return this._formName;\n  }\n  set formName(value) {\n    if (isValidString(value)) {\n      this._formName = value;\n    }\n  }\n  _formName = null;\n\n  /**\n   * Max filesize (in MB) for upload <br>\n   * Default: <code>100</code>\n   */\n  @Input()\n  get maxFilesize(): number {\n    return this._maxFilesize;\n  }\n  set maxFilesize(value) {\n    this._maxFilesize = coerceNumberProperty(\n      value,\n      FILEUPLOAD.MAX_FILESIZE\n    );\n\n    if (this.uploadService) {\n      this.uploadService.maxFilesize = this._maxFilesize;\n    }\n  }\n  _maxFilesize = FILEUPLOAD.MAX_FILESIZE;\n\n  /**\n   * One or more unique file type specifiers describing file types to allow <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get inputAccept(): string {\n    return this._inputAccept;\n  }\n  set inputAccept(value) {\n    if (isValidString(value)) {\n      this._inputAccept = value;\n    }\n  }\n  _inputAccept = '';\n\n  /**\n   * Label for submit button <br>\n   * Default: <code>Upload'</code>\n   */\n  @Input()\n  get submitLabel(): string {\n    return this._submitLabel;\n  }\n  set submitLabel(value) {\n    if (isValidString(value)) {\n      this._submitLabel = value;\n    }\n  }\n  _submitLabel = FILEUPLOAD.SUBMIT_LABEL;\n\n  /**\n   * Label for drop-zone <br>\n   * Default: <code>'Drag and drop files here or'</code>\n   */\n  @Input()\n  get dropzoneLabel(): string {\n    return this._dropzoneLabel;\n  }\n  set dropzoneLabel(value) {\n    if (isValidString(value)) {\n      this._dropzoneLabel = value;\n    }\n  }\n  _dropzoneLabel = FILEUPLOAD.DROPZONE_LABEL;\n\n  /**\n   * Label for input element <br>\n   * Default: <code>'Choose File'</code>\n   */\n  @Input()\n  get inputLabel(): string {\n    return this._inputLabel;\n  }\n  set inputLabel(value) {\n    if (isValidString(value)) {\n      this._inputLabel = value;\n    }\n  }\n  _inputLabel = FILEUPLOAD.INPUT_LABEL;\n\n  /**\n   * Label for upload item \"Complete\" text <br>\n   * Default: <code>'Complete'</code>\n   */\n  @Input()\n  get completeLabel(): string {\n    return this._completeLabel;\n  }\n  set completeLabel(value) {\n    if (isValidString(value)) {\n      this._completeLabel = value;\n    }\n  }\n  _completeLabel = FILEUPLOAD.COMPLETE_LABEL;\n\n  /**\n   * \"SIZE\" Error type message <br>\n   * Default: <code>'The file is too big. Upload a file less than 100MB in size.'</code>\n   */\n  @Input()\n  get errorSize(): UPLOAD_ERROR_MSG {\n    return this._errorSize;\n  }\n  set errorSize(value) {\n    if (isValidString(value)) {\n      this._errorSize = value;\n      if (this.uploadService) {\n        this.uploadService.ERROR.SIZE = this._errorSize;\n      }\n    }\n  }\n  _errorSize = UPLOAD_ERROR_MSG.SIZE;\n\n  /**\n   * \"INVALID_NAME\" Error type message <br>\n   * Default: <code>'The file name has characters that are not allowed: / \\ < > : * \" ? | '</code>\n   */\n  @Input()\n  get errorInvalidName(): UPLOAD_ERROR_MSG {\n    return this._errorInvalidName;\n  }\n  set errorInvalidName(value) {\n    if (isValidString(value)) {\n      this._errorInvalidName = value;\n      if (this.uploadService) {\n        this.uploadService.ERROR.INVALID_NAME = this._errorInvalidName;\n      }\n    }\n  }\n  _errorInvalidName = UPLOAD_ERROR_MSG.INVALID_NAME;\n\n  /**\n   * \"INVALID_GENERIC\" Error type message <br>\n   * Default: <code>'An unexpected error happened during upload.'</code>\n   */\n  @Input()\n  get errorInvalidGeneric(): UPLOAD_ERROR_MSG {\n    return this._errorInvalidGeneric;\n  }\n  set errorInvalidGeneric(value) {\n    if (isValidString(value)) {\n      this._errorInvalidGeneric = value;\n      if (this.uploadService) {\n        this.uploadService.ERROR.INVALID_GENERIC = this._errorInvalidGeneric;\n      }\n    }\n  }\n  _errorInvalidGeneric = UPLOAD_ERROR_MSG.INVALID_GENERIC;\n\n  /**\n   * \"INVALID_NETWORK\" Error type message <br>\n   * Default: <code>'Network issues interrupted the file upload.'</code>\n   */\n  @Input()\n  get errorInvalidNetwork(): UPLOAD_ERROR_MSG {\n    return this._errorInvalidNetwork;\n  }\n  set errorInvalidNetwork(value) {\n    if (isValidString(value)) {\n      this._errorInvalidNetwork = value;\n      if (this.uploadService) {\n        this.uploadService.ERROR.INVALID_NETWORK = this._errorInvalidNetwork;\n      }\n    }\n  }\n  _errorInvalidNetwork = UPLOAD_ERROR_MSG.INVALID_NETWORK;\n\n  /**\n   * URL for HTTP upload request <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get URL(): string | null {\n    return this._URL;\n  }\n  set URL(value) {\n    if (isValidString(value)) {\n      this._URL = value;\n    }\n  }\n  _URL = null;\n\n  /**\n   * HTTP Options to accompany request <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get httpOptions(): HttpRequestOptions {\n    return this._httpOptions;\n  }\n  set httpOptions(value) {\n    this._httpOptions = value;\n  }\n  _httpOptions = {};\n\n  /**\n   * Fires an UPLOAD_STATUS returning a payload when user performs an action <br>\n   */\n  @Output() uploadEvent;\n  /**\n   * Returns an UploadItem when selected for your App to wire up <br>\n   */\n  @Output() downloadEvent;\n  /**\n   * Returns an UploadItem when selected for your App to wire up <br>\n   */\n  @Output() directoryDeleteEvent;\n\n  @ContentChild(TemplateContainerComponent)\n  templateContainer: TemplateContainerComponent;\n\n  _templateMap: Map<string, TemplateRef<any>> = new Map();\n  _uploadStatus$;\n  _uploadSubmitComplete$;\n  _submitStream = new Subject();\n  _submitDisabled = true;\n  _btnActionId = FILEUPLOAD.TEMPLATES.BUTTON_ACTION;\n  _listItemtId = FILEUPLOAD.TEMPLATES.LIST_ITEM;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    public uploadService: FileUploadService\n  ) {\n    this.uploadEvent = this.uploadService.uploadEvent;\n    this.downloadEvent = this.uploadService.downloadEvent;\n    this.directoryDeleteEvent = this.uploadService.directoryDeleteEvent;\n  }\n\n  ngOnInit() {\n    this.uploadService.ERROR = {\n      SIZE: this.errorSize,\n      INVALID_GENERIC: this.errorInvalidGeneric,\n      INVALID_NAME: this.errorInvalidName,\n      INVALID_NETWORK: this.errorInvalidNetwork,\n    };\n    if (!isValidString(this.formId)) {\n      this.formId = `vds-fileupload-${this.vdsLibService.getUUID()}`;\n    }\n\n    this.uploadService.multiple = this.multipleUpload;\n    this.uploadService.customControl = this.customControl;\n    this.uploadService.maxFilesize = this.maxFilesize;\n    this.uploadService.URL = this.URL;\n    this.uploadService.httpOptions = this.httpOptions;\n    this.uploadService.id = this.formId;\n\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n\n    this.customControl = this.vdsLibService.triageDisabledValue(\n      this.customControl\n    );\n\n    this.enableMiniTheme = this.vdsLibService.triageDisabledValue(\n      this.enableMiniTheme\n    );\n\n    this.enableDropzone = this.vdsLibService.triageDisabledValue(\n      this.enableDropzone\n    );\n\n    this.enableForm = this.vdsLibService.triageDisabledValue(\n      this.enableForm\n    );\n\n    this._uploadStatus$ = this.uploadService.uploadEvent.subscribe(\n      ({ type }: UploadEvent) => {\n        if (type === UPLOAD_STATUS.ADD) {\n          this._submitDisabled = false;\n        }\n      }\n    );\n\n    this._uploadSubmitComplete$ = this.uploadService.submitComplete$.subscribe(\n      (complete: boolean) => {\n        if (complete) {\n          if (this.enableForm) {\n            this.disabled = false;\n          }\n\n          this._submitDisabled = true;\n        }\n      }\n    );\n\n    this._submitStream\n      .asObservable()\n      .subscribe((e: any) => {\n        e.preventDefault();\n        this.disabled = true;\n        this._submitDisabled = true;\n        this.uploadService.submit();\n      });\n  }\n\n  ngAfterContentInit() {\n    if (\n      this.templateContainer &&\n      this.templateContainer.templateChildren\n    ) {\n      this.templateContainer.templateChildren\n        .toArray()\n        .forEach((child) => {\n          if (!this._templateMap.get(child.id)) {\n            this._templateMap.set(child.id, child.template);\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._uploadStatus$.unsubscribe();\n    this._uploadSubmitComplete$.unsubscribe();\n    this._submitStream.complete();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-fileupload {\n  &--error {\n    color: #d50000;\n    left: auto;\n    position: relative;\n    display: block;\n    margin: 0;\n    padding-top: 4px;\n\n    use {\n      fill: #d50000 !important;\n    }\n  }\n}\n\n.vds-fileupload-form {\n  .vds-btn-text--primary {\n    display: block;\n    margin-top: 10px;\n  }\n}\n\n.vds-progress-static {\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 4.57143px;\n\n  &--base {\n    background-color: #e0eafa;\n  }\n\n  &--complete {\n    background-color: #0842a6;\n  }\n}\n\n.vds-fileupload-input {\n  border: 0;\n  opacity: 0;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute !important;\n  white-space: nowrap;\n  box-sizing: border-box;\n}\n\n.vds-fileupload-label {\n  display: inline-block;\n\n  span {\n    padding: 0 16px;\n    line-height: 45.71429px;\n  }\n\n  &--focus {\n    outline: 1px dashed #15195a;\n    background-color: #e0eafa;\n    border-color: #0051dc;\n    color: #0051dc;\n  }\n}\n\n.vds-fileupload-list {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  max-width: 396px;\n\n  .vds-fileupload-list-item {\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    background-color: #ffffff;\n    border: 1px solid #d7d7de;\n    border-radius: 4px;\n    margin: 8px 0;\n    padding: 12px 20px 20px 20px;\n    width: 100%;\n\n    &--mini {\n      padding: 4px 8px 8px 8px;\n    }\n\n    &--top {\n      display: flex;\n      justify-content: space-between;\n      word-break: break-all;\n\n      div {\n        display: inline-flex;\n        align-items: center;\n      }\n    }\n\n    &--bottom {\n    }\n\n    use {\n      padding-right: 8px;\n    }\n  }\n}\n\n.vds-fileupload-list-item-wrapper {\n  width: 100%;\n}\n\n.vds-fileupload-list-item-icon {\n  padding-right: 8px;\n}\n\n.vds-fileupload-dropzone {\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  border: 2px dashed #d7d7de;\n  width: 396px;\n  height: 160px;\n  border-radius: 4px;\n  font: inherit;\n  text-align: center;\n\n  label {\n    display: block;\n  }\n\n  &--over {\n    border: 2px solid #0051dc;\n    background-color: #e0eafa;\n  }\n\n  &--disabled {\n    use {\n      fill: #d7d7de;\n    }\n  }\n}\n\n.vds-fileupload-dropzone-title {\n  &--disabled {\n    color: #d7d7de;\n  }\n}\n",
          "styleUrl": "./fileupload.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "uploadService",
            "type": "FileUploadService"
          }
        ],
        "line": 371,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "uploadService",
            "type": "FileUploadService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": [
        "OnInit",
        "AfterContentInit",
        "OnDestroy"
      ],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 48,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "customControl": {
          "name": "customControl",
          "setSignature": {
            "name": "customControl",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 61,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "multipleUpload": {
          "name": "multipleUpload",
          "setSignature": {
            "name": "multipleUpload",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 77,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableForm": {
          "name": "enableForm",
          "setSignature": {
            "name": "enableForm",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 93,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableDropzone": {
          "name": "enableDropzone",
          "setSignature": {
            "name": "enableDropzone",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 106,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "enableMiniTheme": {
          "name": "enableMiniTheme",
          "setSignature": {
            "name": "enableMiniTheme",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 119,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "formId": {
          "name": "formId",
          "setSignature": {
            "name": "formId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 132,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "formName": {
          "name": "formName",
          "setSignature": {
            "name": "formName",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 147,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "maxFilesize": {
          "name": "maxFilesize",
          "setSignature": {
            "name": "maxFilesize",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 162,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "inputAccept": {
          "name": "inputAccept",
          "setSignature": {
            "name": "inputAccept",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 182,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "submitLabel": {
          "name": "submitLabel",
          "setSignature": {
            "name": "submitLabel",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 197,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "dropzoneLabel": {
          "name": "dropzoneLabel",
          "setSignature": {
            "name": "dropzoneLabel",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 212,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "inputLabel": {
          "name": "inputLabel",
          "setSignature": {
            "name": "inputLabel",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 227,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "completeLabel": {
          "name": "completeLabel",
          "setSignature": {
            "name": "completeLabel",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 242,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "errorSize": {
          "name": "errorSize",
          "setSignature": {
            "name": "errorSize",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 257,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "errorInvalidName": {
          "name": "errorInvalidName",
          "setSignature": {
            "name": "errorInvalidName",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 275,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "errorInvalidGeneric": {
          "name": "errorInvalidGeneric",
          "setSignature": {
            "name": "errorInvalidGeneric",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 293,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "errorInvalidNetwork": {
          "name": "errorInvalidNetwork",
          "setSignature": {
            "name": "errorInvalidNetwork",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 311,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "URL": {
          "name": "URL",
          "setSignature": {
            "name": "URL",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 329,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "httpOptions": {
          "name": "httpOptions",
          "setSignature": {
            "name": "httpOptions",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 344,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"enableForm; else uploadContainer\">\n  <form\n    class=\"vds-fileupload-form\"\n    method=\"post\"\n    enctype=\"multipart/form-data\"\n    [id]=\"formId\"\n    [name]=\"formName\"\n    (submit)=\"_submitStream.next($event)\">\n    <ng-container [ngTemplateOutlet]=\"uploadContainer\"></ng-container>\n    <vds-button [disabled]=\"_submitDisabled\">\n      {{submitLabel}}\n    </vds-button>\n  </form>\n</ng-container>\n\n<ng-template #uploadContainer>\n  <div class=\"vds-fileupload\" [id]=\"formId\">\n    <vds-fileupload-dropzone\n      *ngIf=\"enableDropzone; else inputUpload\"\n      [disabled]=\"disabled\"\n      [label]=\"dropzoneLabel\"\n      [autoSubmit]=\"!enableForm\">\n      <ng-container [ngTemplateOutlet]=\"inputUpload\"></ng-container>\n    </vds-fileupload-dropzone>\n    <vds-fileupload-list\n      [buttonActionTemplate]=\"_templateMap.get(_btnActionId)\"\n      [listItemTemplate]=\"_templateMap.get(_listItemtId)\"\n      [completeLabel]=\"completeLabel\"\n      [enableMiniTheme]=\"enableMiniTheme\">\n    </vds-fileupload-list>\n  </div>\n</ng-template>\n\n<ng-template #inputUpload>\n  <vds-fileupload-input\n    [disabled]=\"disabled\"\n    [accept]=\"inputAccept\"\n    [multiple]=\"multipleUpload\"\n    [label]=\"inputLabel\"\n    [autoSubmit]=\"!enableForm\">\n  </vds-fileupload-input>\n</ng-template>\n"
    },
    {
      "name": "FileUploadDropzoneComponent",
      "id": "component-FileUploadDropzoneComponent-d360ca3b53150edebfaa665e7a8aa97b",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload-dropzone.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-fileupload-dropzone",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./fileupload-dropzone.component.html"
      ],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "autoSubmit",
          "description": "<p>If true, upload will begin immediately <br>\nDefault: <code>false</code></p>\n",
          "line": 38,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "<p>If true, dropzone is disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 25,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>Label for dropzone <br>\nDefault: <code>'Drag and drop files or'</code></p>\n",
          "line": 51,
          "type": "string | null"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_autoSubmit",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [112]
        },
        {
          "name": "_disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [112]
        },
        {
          "name": "_dragOver",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "_label",
          "defaultValue": "FILEUPLOAD.DROPZONE_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [112]
        },
        {
          "name": "uploadService",
          "type": "FileUploadService",
          "optional": false,
          "description": "",
          "line": 65,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "handleDragLeave",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 91,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleDragOver",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleDrop",
          "args": [
            {
              "name": "e",
              "type": "DragEvent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "jsdoctags": [
            {
              "name": "e",
              "type": "DragEvent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { isValidString } from '../combobox/utils';\nimport { FILEUPLOAD } from './fileupload.constants';\nimport { FileUploadService } from './fileupload.service';\n\n@Component({\n  selector: 'vds-fileupload-dropzone',\n  templateUrl: './fileupload-dropzone.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FileUploadDropzoneComponent {\n  /**\n   * If true, dropzone is disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * If true, upload will begin immediately <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get autoSubmit(): boolean {\n    return this._autoSubmit;\n  }\n  set autoSubmit(value) {\n    this._autoSubmit = coerceBooleanProperty(value);\n  }\n  private _autoSubmit = false;\n\n  /**\n   * Label for dropzone <br>\n   * Default: <code>'Drag and drop files or'</code>\n   */\n  @Input()\n  get label(): string | null {\n    return this._label;\n  }\n  set label(value) {\n    if (isValidString(value)) {\n      this._label = value;\n    }\n  }\n  private _label = FILEUPLOAD.DROPZONE_LABEL;\n\n  _dragOver = false;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    public uploadService: FileUploadService\n  ) {}\n\n  handleDrop(e: DragEvent) {\n    e.preventDefault();\n\n    if (!this.disabled) {\n      this._dragOver = false;\n      this.cdRef.detectChanges();\n\n      this.uploadService.add(\n        e.dataTransfer.files,\n        this.autoSubmit\n      );\n    }\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n\n    if (!this.disabled) {\n      this._dragOver = true;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  handleDragLeave(e) {\n    e.preventDefault();\n\n    if (!this.disabled) {\n      this._dragOver = false;\n      this.cdRef.detectChanges();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "uploadService",
            "type": "FileUploadService"
          }
        ],
        "line": 61,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "uploadService",
            "type": "FileUploadService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 28,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "autoSubmit": {
          "name": "autoSubmit",
          "setSignature": {
            "name": "autoSubmit",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 41,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 54,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  class=\"vds-fileupload-dropzone\"\n  [attr.data-disabled]=\"disabled\"\n  [ngClass]=\"{\n    'vds-fileupload-dropzone--over': _dragOver,\n    'vds-fileupload-dropzone--disabled': disabled\n  }\"\n  (drop)=\"handleDrop($event)\"\n  (dragover)=\"handleDragOver($event)\"\n  (dragleave)=\"handleDragLeave($event)\">\n  <div>\n    <vds-icon icon=\"visa_cloud-upload\"></vds-icon>\n    <label\n      [ngClass]=\"{'vds-fileupload-dropzone-title--disabled': disabled}\"\n      class=\"vds-fileupload-dropzone-title\">\n      {{label}}\n    </label>\n    <ng-content></ng-content>\n  </div>\n</div>\n"
    },
    {
      "name": "FileUploadInputComponent",
      "id": "component-FileUploadInputComponent-7458298d6d2b42aa5da738504cd1da10",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload-input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-fileupload-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./fileupload-input.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "accept",
          "description": "<p>One or more unique file type specifiers describing file types to allow <br>\nDefault: <code>''</code></p>\n",
          "line": 83,
          "type": "string"
        },
        {
          "name": "autoSubmit",
          "description": "<p>If true, upload will begin immediately <br>\nDefault: <code>true</code></p>\n",
          "line": 40,
          "type": "boolean"
        },
        {
          "name": "capture",
          "description": "<p>What source to use for capturing image or video data <br>\nDefault: <code>''</code></p>\n",
          "line": 98,
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "<p>If true, input is disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 27,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>ID for Input element <br>\nDefault: <code>null</code></p>\n",
          "line": 53,
          "type": "string | null"
        },
        {
          "name": "label",
          "description": "<p>Label for input element <br>\nDefault: <code>'Choose File'</code></p>\n",
          "line": 126,
          "type": "string | null"
        },
        {
          "name": "multiple",
          "description": "<p>If true, user may choose to upload more than one file <br>\nDefault: <code>false</code></p>\n",
          "line": 113,
          "type": "boolean"
        },
        {
          "name": "name",
          "description": "<p>Name for Input element <br>\nDefault: <code>null</code></p>\n",
          "line": 68,
          "type": "string | null"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_accept",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 91,
          "modifierKind": [112]
        },
        {
          "name": "_autoSubmit",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [112]
        },
        {
          "name": "_capture",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 106,
          "modifierKind": [112]
        },
        {
          "name": "_disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [112]
        },
        {
          "name": "_hasFocus",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 136
        },
        {
          "name": "_id",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [112]
        },
        {
          "name": "_label",
          "defaultValue": "FILEUPLOAD.INPUT_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 134,
          "modifierKind": [112]
        },
        {
          "name": "_multiple",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 119,
          "modifierKind": [112]
        },
        {
          "name": "_name",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 76,
          "modifierKind": [112]
        },
        {
          "name": "uploadService",
          "type": "FileUploadService",
          "optional": false,
          "description": "",
          "line": 141,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "handleBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 167
        },
        {
          "name": "handleChange",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 150,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 160
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 144
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { isValidString } from '../combobox/utils';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FileUploadService } from './fileupload.service';\nimport { FILEUPLOAD } from './fileupload.constants';\n\n@Component({\n  selector: 'vds-fileupload-input',\n  templateUrl: './fileupload-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FileUploadInputComponent implements OnInit {\n  /**\n   * If true, input is disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * If true, upload will begin immediately <br>\n   * Default: <code>true</code>\n   */\n  @Input()\n  get autoSubmit(): boolean {\n    return this._autoSubmit;\n  }\n  set autoSubmit(value) {\n    this._autoSubmit = coerceBooleanProperty(value);\n  }\n  private _autoSubmit = false;\n\n  /**\n   * ID for Input element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get id(): string | null {\n    return this._id;\n  }\n  set id(value) {\n    if (isValidString(value)) {\n      this._id = value;\n    }\n  }\n  private _id = null;\n\n  /**\n   * Name for Input element <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get name(): string | null {\n    return this._name;\n  }\n  set name(value) {\n    if (isValidString(value)) {\n      this._name = value;\n    }\n  }\n  private _name = null;\n\n  /**\n   * One or more unique file type specifiers describing file types to allow <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get accept(): string {\n    return this._accept;\n  }\n  set accept(value) {\n    if (isValidString(value)) {\n      this._accept = value;\n    }\n  }\n  private _accept = '';\n\n  /**\n   * What source to use for capturing image or video data <br>\n   * Default: <code>''</code>\n   */\n  @Input()\n  get capture(): string {\n    return this._capture;\n  }\n  set capture(value) {\n    if (isValidString(value)) {\n      this._capture = value;\n    }\n  }\n  private _capture = '';\n\n  /**\n   * If true, user may choose to upload more than one file <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get multiple(): boolean {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = coerceBooleanProperty(value);\n  }\n  private _multiple = false;\n\n  /**\n   * Label for input element <br>\n   * Default: <code>'Choose File'</code>\n   */\n  @Input()\n  get label(): string | null {\n    return this._label;\n  }\n  set label(value) {\n    if (isValidString(value)) {\n      this._label = value;\n    }\n  }\n  private _label = FILEUPLOAD.INPUT_LABEL;\n\n  _hasFocus = false;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private cdRef: ChangeDetectorRef,\n    public uploadService: FileUploadService\n  ) {}\n\n  ngOnInit() {\n    if (!isValidString(this.id)) {\n      this.id = `vds-fileupload-input-${this.vdsLibService.getUUID()}`;\n    }\n  }\n\n  handleChange(e) {\n    if (!this.disabled) {\n      this.uploadService.add(\n        e.target.files,\n        this.autoSubmit\n      );\n      e.target.value = null;\n    }\n  }\n\n  handleFocus() {\n    if (!this.disabled) {\n      this._hasFocus = true;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  handleBlur() {\n    if (!this.disabled) {\n      this._hasFocus = false;\n      this.cdRef.detectChanges();\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "uploadService",
            "type": "FileUploadService"
          }
        ],
        "line": 136,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "uploadService",
            "type": "FileUploadService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 30,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "autoSubmit": {
          "name": "autoSubmit",
          "setSignature": {
            "name": "autoSubmit",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 43,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 56,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "name": {
          "name": "name",
          "setSignature": {
            "name": "name",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 71,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "accept": {
          "name": "accept",
          "setSignature": {
            "name": "accept",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 86,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "capture": {
          "name": "capture",
          "setSignature": {
            "name": "capture",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 101,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "multiple": {
          "name": "multiple",
          "setSignature": {
            "name": "multiple",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 116,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 129,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<label\n  class=\"vds-fileupload-label vds-btn-text vds-btn-text--secondary\"\n  [htmlFor]=\"id\"\n  [ngClass]=\"{\n    'vds-fileupload-label--focus': _hasFocus,\n    'vds-state--disabled': disabled\n  }\">\n  <span>{{label}}</span>\n</label>\n<input\n  class=\"vds-fileupload-input\"\n  type=\"file\"\n  [name]=\"name\"\n  [id]=\"id\"\n  [attr.disabled]=\"disabled ? true : null\"\n  [attr.accept]=\"accept ? accept : null\"\n  [attr.capture]=\"capture ? capture : null\"\n  [multiple]=\"multiple ? multiple : null\"\n  (focus)=\"handleFocus()\"\n  (blur)=\"handleBlur()\"\n  (change)=\"handleChange($event)\"\n/>\n"
    },
    {
      "name": "FileUploadListComponent",
      "id": "component-FileUploadListComponent-48c9fc890c99396600a77ac8c2aa9b45",
      "file": "projects/vds-lib/src/lib/fileupload/fileupload-list.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-fileupload-list",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./fileupload-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "buttonActionTemplate",
          "line": 51,
          "type": "TemplateRef<any>"
        },
        {
          "name": "completeLabel",
          "description": "<p>Label for upload item &quot;Complete&quot; text <br>\nDefault: <code>'Complete'</code></p>\n",
          "line": 41,
          "type": "string | null"
        },
        {
          "name": "enableMiniTheme",
          "description": "<p>If true, list item will display using &quot;Mini&quot; theme <br>\nDefault: <code>false</code></p>\n",
          "line": 28,
          "type": "boolean"
        },
        {
          "name": "listItemTemplate",
          "line": 52,
          "type": "TemplateRef<any>"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_completeLabel",
          "defaultValue": "FILEUPLOAD.COMPLETE_LABEL",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [112]
        },
        {
          "name": "_enableMiniTheme",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "uploadService",
          "type": "FileUploadService",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "listItemCompareFn",
          "args": [
            {
              "name": "a",
              "type": ""
            },
            {
              "name": "b",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 60,
          "jsdoctags": [
            {
              "name": "a",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "b",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "trackFn",
          "args": [
            {
              "name": "index",
              "type": ""
            },
            {
              "name": "item",
              "type": "UploadItem"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 56,
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "item",
              "type": "UploadItem",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { FileUploadService } from './fileupload.service';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isValidString } from '../combobox/utils';\nimport {\n  FILEUPLOAD,\n  UploadItem,\n} from './fileupload.constants';\n\n@Component({\n  selector: 'vds-fileupload-list',\n  templateUrl: './fileupload-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class FileUploadListComponent {\n  /**\n   * If true, list item will display using \"Mini\" theme <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get enableMiniTheme(): boolean {\n    return this._enableMiniTheme;\n  }\n  set enableMiniTheme(value) {\n    this._enableMiniTheme = coerceBooleanProperty(value);\n  }\n  _enableMiniTheme = false;\n\n  /**\n   * Label for upload item \"Complete\" text <br>\n   * Default: <code>'Complete'</code>\n   */\n  @Input()\n  get completeLabel(): string | null {\n    return this._completeLabel;\n  }\n  set completeLabel(value) {\n    if (isValidString(value)) {\n      this._completeLabel = value;\n    }\n  }\n  private _completeLabel = FILEUPLOAD.COMPLETE_LABEL;\n\n  @Input() buttonActionTemplate: TemplateRef<any>;\n  @Input() listItemTemplate: TemplateRef<any>;\n\n  constructor(public uploadService: FileUploadService) {}\n\n  trackFn(index, item: UploadItem) {\n    return item.__id;\n  }\n\n  listItemCompareFn(a, b) {\n    return a.value.__id - b.value.__id;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "uploadService",
            "type": "FileUploadService"
          }
        ],
        "line": 52,
        "jsdoctags": [
          {
            "name": "uploadService",
            "type": "FileUploadService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "enableMiniTheme": {
          "name": "enableMiniTheme",
          "setSignature": {
            "name": "enableMiniTheme",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 31,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "completeLabel": {
          "name": "completeLabel",
          "setSignature": {
            "name": "completeLabel",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 44,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ul class=\"vds-fileupload-list\">\n  <ng-container *ngFor=\"let item of uploadService.fileMap$ | async | keyvalue: listItemCompareFn; trackBy: trackFn\">\n    <ng-container\n      [ngTemplateOutlet]=\"listItemTemplate || defaultListView\"\n      [ngTemplateOutletContext]=\"{\n        $implicit: item,\n        key: item.key,\n        file: item.value.file,\n        icon: item.value.icon,\n        complete: item.value.complete,\n        allowRetry: item.value.allowRetry,\n        hasError: item.value.hasError,\n        uploadInit: item.value.uploadInit,\n        error$: item.value.error$,\n        progress$: item.value.progress$,\n        services: {\n          add: uploadService.add,\n          remove: uploadService.remove,\n          submit: uploadService.submit,\n          retry: uploadService.retry,\n          download: uploadService.downloadEvent,\n          directoryDelete: uploadService.directoryDeleteEvent\n        }\n      }\">\n    </ng-container>\n  </ng-container>\n</ul>\n\n<ng-template\n  #defaultListView\n  let-item\n  let-key=\"key\"\n  let-file=\"file\"\n  let-icon=\"icon\"\n  let-complete=\"complete\"\n  let-allowRetry=\"allowRetry\"\n  let-hasError=\"hasError\"\n  let-uploadInit=\"uploadInit\"\n  let-error$=\"error$\"\n  let-progress$=\"progress$\"\n  let-services=\"services\">\n  <li class=\"vds-fileupload-list-item\">\n    <ng-container\n      [ngTemplateOutlet]=\"listIconHighRes\"\n      [ngTemplateOutletContext]=\"{$implicit: icon}\">\n    </ng-container>\n    <div class=\"vds-fileupload-list-item-wrapper\">\n      <div class=\"vds-fileupload-list-item--top\">\n        <div>\n          <ng-container\n            [ngTemplateOutlet]=\"listIconLowRes\"\n            [ngTemplateOutletContext]=\"{$implicit: icon}\">\n          </ng-container>\n          <span>{{key}}</span>\n        </div>\n        <div>\n          <ng-container\n            *ngIf=\"hasError && allowRetry\"\n            [ngTemplateOutlet]=\"retryBtn\"\n            [ngTemplateOutletContext]=\"{$implicit: key, services: services}\">\n          </ng-container>\n          <ng-container\n            *ngIf=\"hasError || !complete\"\n            [ngTemplateOutlet]=\"removeBtn\"\n            [ngTemplateOutletContext]=\"{$implicit: key, services: services}\">\n          </ng-container>\n\n          <ng-container *ngIf=\"!hasError && complete && !buttonActionTemplate; else btnActionTemplate\">\n            <ng-container\n              *ngIf=\"!hasError && complete\"\n              [ngTemplateOutlet]=\"downloadBtn\"\n              [ngTemplateOutletContext]=\"{$implicit: item, services: services}\">\n            </ng-container>\n            <ng-container\n              *ngIf=\"!hasError && complete\"\n              [ngTemplateOutlet]=\"deleteBtn\"\n              [ngTemplateOutletContext]=\"{$implicit: item, services: services}\">\n            </ng-container>\n          </ng-container>\n\n          <ng-template #btnActionTemplate>\n            <ng-container\n              *ngIf=\"!hasError && complete\"\n              [ngTemplateOutlet]=\"buttonActionTemplate\"\n              [ngTemplateOutletContext]=\"{\n                $implicit: item,\n                key: key,\n                file: file,\n                icon: icon,\n                services: {\n                  remove: services.remove,\n                  download: services.download,\n                  directoryDelete: services.directoryDelete\n                }\n              }\">\n            </ng-container>\n          </ng-template>\n        </div>\n      </div>\n      <div class=\"vds-fileupload-list-item--bottom\">\n        <!--      Error View      -->\n        <ng-container *ngIf=\"hasError; else progressView\">\n          <div class=\"vds-progress-static vds-progress-static--base\"></div>\n          <span\n            aria-atomic=\"true\"\n            aria-live=\"assertive\"\n            class=\"vds-input-message vds-fileupload--error\">\n            <vds-icon icon=\"error\" tiny=\"true\"></vds-icon>\n            {{ (error$ | async)?.message }}\n          </span>\n        </ng-container>\n\n        <!--      Progress View      -->\n        <ng-template #progressView>\n          <ng-container *ngIf=\"!complete && progress$ && (progress$ | async)?.loaded > 0; else completeView\">\n            <vds-linear-progress\n              determinate=\"true\"\n              [loaded]=\"(progress$ | async)?.loaded\"\n              [total]=\"(progress$ | async)?.total\">\n            </vds-linear-progress>\n          </ng-container>\n        </ng-template>\n\n        <!--      Complete View      -->\n        <ng-template #completeView>\n          <ng-container *ngIf=\"complete; else calculateView\">\n            <div class=\"vds-progress-static vds-progress-static--complete\"></div>\n            <div class=\"row\">\n              <div class=\"col\">\n                {{ (file?.size / 1000000).toFixed(2) }}MB\n              </div>\n              <div class=\"col vds-text--right\">{{completeLabel}}</div>\n            </div>\n          </ng-container>\n        </ng-template>\n\n        <!--      Calculate View      -->\n        <ng-template #calculateView>\n          <ng-container *ngIf=\"uploadInit\">\n            <vds-linear-progress></vds-linear-progress>\n            <div class=\"row\">\n              <div class=\"col\">Calculating...</div>\n            </div>\n          </ng-container>\n        </ng-template>\n      </div>\n    </div>\n  </li>\n</ng-template>\n\n<!--      Icons      -->\n<ng-template #listIconHighRes let-icon>\n  <div class=\"vds-fileupload-list-item-icon\" *ngIf=\"!enableMiniTheme\" [attr.data-visa-icon]=\"icon\">\n    <vds-icon [icon]=\"icon\"></vds-icon>\n  </div>\n</ng-template>\n<ng-template #listIconLowRes let-icon>\n  <div class=\"vds-fileupload-list-item-icon\" *ngIf=\"enableMiniTheme\" [attr.data-visa-icon]=\"icon\">\n    <vds-icon [icon]=\"icon\" low=\"true\"></vds-icon>\n  </div>\n</ng-template>\n\n<!--      Buttons      -->\n<ng-template #retryBtn let-key let-services=\"services\">\n  <vds-button\n    ariaLabel=\"retry upload\"\n    variant=\"icon\"\n    iconType=\"light-tiny\"\n    (click)=\"services.retry(key)\">\n    <vds-icon icon=\"refresh\" tiny=\"true\"></vds-icon>\n  </vds-button>\n</ng-template>\n<ng-template #removeBtn let-key let-services=\"services\">\n  <vds-button\n    ariaLabel=\"remove upload\"\n    variant=\"icon\"\n    iconType=\"light-tiny\"\n    (click)=\"services.remove(key)\">\n    <vds-icon icon=\"close\" tiny=\"true\"></vds-icon>\n  </vds-button>\n</ng-template>\n<ng-template #downloadBtn let-item let-services=\"services\">\n  <vds-button\n    ariaLabel=\"download\"\n    variant=\"icon\"\n    iconType=\"light-tiny\"\n    (click)=\"services.download.emit(item)\">\n    <vds-icon icon=\"file-download\" tiny=\"true\"></vds-icon>\n  </vds-button>\n</ng-template>\n<ng-template #deleteBtn let-item let-services=\"services\">\n  <vds-button\n    ariaLabel=\"download\"\n    variant=\"icon\"\n    iconType=\"light-tiny\"\n    (click)=\"services.directoryDelete.emit(item)\">\n    <vds-icon icon=\"delete\" tiny=\"true\"></vds-icon>\n  </vds-button>\n</ng-template>\n"
    },
    {
      "name": "FooterComponent",
      "id": "component-FooterComponent-c82e1cc3011a518b1642aa14ad53617b",
      "file": "projects/vds-lib/src/lib/footer/footer.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-footer",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./footer.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "alt",
          "defaultValue": "FOOTER.DEFAULT.ALT",
          "description": "<p>Alternative text for accessibility (Defaults to &#39;Visa Logo&#39;)</p>\n",
          "line": 13,
          "type": "string"
        },
        {
          "name": "copyright",
          "defaultValue": "FOOTER.DEFAULT.COPYRIGHT",
          "description": "<p>Displayed text for copyright</p>\n",
          "line": 17,
          "type": "string"
        },
        {
          "name": "country",
          "defaultValue": "FOOTER.DEFAULT.COUNTRY",
          "description": "<p>Displayed text for country (Defaults to &#39;United States&#39;)</p>\n",
          "line": 21,
          "type": "string"
        },
        {
          "name": "fixed",
          "description": "<p>Sets positioning of footer as fixed</p>\n",
          "line": 25,
          "type": "boolean"
        },
        {
          "name": "language",
          "defaultValue": "FOOTER.DEFAULT.LANGUAGE",
          "description": "<p>Displayed text for language (Defaults to &#39;English&#39;)</p>\n",
          "line": 29,
          "type": "string"
        },
        {
          "name": "relative",
          "description": "<p>Sets positioning of footer as relative</p>\n",
          "line": 33,
          "type": "boolean"
        },
        {
          "name": "src",
          "defaultValue": "''",
          "description": "<p>Source for image</p>\n",
          "line": 37
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { FOOTER } from './footer.constants';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-footer',\n  templateUrl: './footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n  /**\n   * Alternative text for accessibility (Defaults to 'Visa Logo')\n   */\n  @Input() alt: string = FOOTER.DEFAULT.ALT;\n  /**\n   * Displayed text for copyright\n   */\n  @Input() copyright: string = FOOTER.DEFAULT.COPYRIGHT;\n  /**\n   * Displayed text for country (Defaults to 'United States')\n   */\n  @Input() country: string = FOOTER.DEFAULT.COUNTRY;\n  /**\n   * Sets positioning of footer as fixed\n   */\n  @Input() fixed: boolean;\n  /**\n   * Displayed text for language (Defaults to 'English')\n   */\n  @Input() language: string = FOOTER.DEFAULT.LANGUAGE;\n  /**\n   * Sets positioning of footer as relative\n   */\n  @Input() relative: boolean;\n  /**\n   * Source for image\n   */\n  @Input() src = '';\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.fixed = this.vdsLibService.triageDisabledValue(\n      this.fixed\n    );\n    this.relative = this.vdsLibService.triageDisabledValue(\n      this.relative\n    );\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 37,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<footer\n  role=\"contentinfo\"\n  [ngClass]=\"{\n    'vds-footer': !fixed && !relative,\n    'vds-footer--relative': !fixed && relative,\n    'vds-footer--fixed': fixed && !relative\n  }\"\n>\n  <div class=\"vds-grid\">\n    <div class=\"row col--no-gutter\">\n      <div\n        class=\"vds-footer-logo-col col col--xs-4 col--md-4 col--lg-6\"\n      >\n        <img\n          [src]=\"src\"\n          [alt]=\"alt\"\n          class=\"vds-footer-logo\"\n          *ngIf=\"src.length > 0\"\n        />\n      </div>\n      <div\n        class=\"vds-footer-region-col\n        col col--xs-4 col--lg-6 col--valign-center\n        col--lg-text-right col--xl-text-right col--xxl-text-right\"\n      >\n        <div class=\"vds-footer-region\">\n          <span class=\"vds-footer-region-icon\">\n            <svg class=\"vds-icon\" focusable=\"false\" tabindex=\"-1\"><use href=\"#global--low\"></use></svg>\n          </span>\n          <p\n            class=\"vds-footer-region-label vds-text--caption\"\n          >\n            {{ country }} - {{ language }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"row col--no-gutter\">\n      <div\n        class=\"col col--xs-4 col--md-3 col--lg-4 col--xl-3\"\n      >\n        <p class=\"vds-footer-copyright vds-text--caption\">\n          {{ copyright }}\n        </p>\n      </div>\n      <div\n        class=\"col col--xs-4 col--md-5 col--lg-8 col--xl-9\"\n      >\n        <p class=\"vds-footer-links vds-text--caption\">\n          <ng-content select=\"a\"></ng-content>\n        </p>\n      </div>\n    </div>\n  </div>\n</footer>\n"
    },
    {
      "name": "FormControlComponent",
      "id": "component-FormControlComponent-e626e4bcd23be717904ba575a8f14d07",
      "file": "projects/vds-lib/src/lib/form-control/form-control.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-form-control",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./form-control.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "split",
          "description": "<p>Split value of the form control.\nRefer to: <code>enum FormControlSplit</code></p>\n",
          "line": 18,
          "type": "FormControlSplit"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_split",
          "defaultValue": "null",
          "type": "FormControlSplit",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "FormControlSplit",
          "defaultValue": "FormControlSplit",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  FORM_CONTROL,\n  FormControlSplit,\n} from './form-control.constants';\n\n@Component({\n  selector: 'vds-form-control',\n  templateUrl: './form-control.component.html',\n})\nexport class FormControlComponent implements OnInit {\n  /**\n   * Split value of the form control.\n   * Refer to: <code>enum FormControlSplit</code>\n   */\n  @Input()\n  get split(): FormControlSplit {\n    return this._split;\n  }\n  set split(value) {\n    this._split = coerceNumberProperty(value);\n  }\n  _split: FormControlSplit = null;\n\n  FormControlSplit = FormControlSplit;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.split && !FormControlSplit[this.split]) {\n      console.warn(\n        '%c' + FORM_CONTROL.MESSAGING.SPLIT_INVALID,\n        'background: #222; color: #bada55'\n      );\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 26
      },
      "implements": ["OnInit"],
      "accessors": {
        "split": {
          "name": "split",
          "setSignature": {
            "name": "split",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 21,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-form-control': true,\n    'vds-input--split-field': (split) ? true : null,\n    'vds-form-control--thirty': (split === FormControlSplit.THIRTY),\n    'vds-form-control--forty': (split === FormControlSplit.FORTY),\n    'vds-form-control--fifty': (split === FormControlSplit.FIFTY),\n    'vds-form-control--sixty': (split === FormControlSplit.SIXTY),\n    'vds-form-control--seventy': (split === FormControlSplit.SEVENTY)\n  }\"\n>\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "IconComponent",
      "id": "component-IconComponent-7759d5949ead7150b6f3618dfa861e4a",
      "file": "projects/vds-lib/src/lib/icon/icon.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./icon.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "altText",
          "defaultValue": "''",
          "description": "<p>Alternative text to provide information for screen readers.\n<code>#a11y</code></p>\n",
          "line": 15
        },
        {
          "name": "icon",
          "defaultValue": "''",
          "description": "<p>Icon value to be used. Defaults to high resolution icons.</p>\n",
          "line": 19
        },
        {
          "name": "low",
          "defaultValue": "false",
          "description": "<p>Set to true for low resolution icons.</p>\n",
          "line": 23
        },
        {
          "name": "presentation",
          "description": "<p>Informs screenreaders that this icon is\nvisual only.</p>\n",
          "line": 28,
          "type": "boolean"
        },
        {
          "name": "tiny",
          "defaultValue": "false",
          "description": "<p>Set to true for tiny resolution icons.</p>\n",
          "line": 32
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "getIconReference",
          "args": [
            {
              "name": "icon",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 47,
          "jsdoctags": [
            {
              "name": "icon",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { IconLibraryComponent } from '../icon-library/icon-library.component';\nimport { ICON } from './icon.constant';\n\n@Component({\n  selector: 'vds-icon',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent implements OnInit {\n  /**\n   * Alternative text to provide information for screen readers.\n   * <code>#a11y</code>\n   */\n  @Input() altText = '';\n  /**\n   * Icon value to be used. Defaults to high resolution icons.\n   */\n  @Input() icon = '';\n  /**\n   * Set to true for low resolution icons.\n   */\n  @Input() low = false;\n  /**\n   * Informs screenreaders that this icon is\n   * visual only.\n   */\n  @Input() presentation: boolean;\n  /**\n   * Set to true for tiny resolution icons.\n   */\n  @Input() tiny = false;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.vdsLibService.insertGlobalComponent(\n      IconLibraryComponent,\n      'vds-icon-library'\n    );\n\n    this.presentation = this.vdsLibService.triageDisabledValue(\n      this.presentation\n    );\n  }\n\n  getIconReference(icon: string): string {\n    if (icon) {\n      if (this.tiny) {\n        return `#${icon\n          .replace(ICON.PREFIX.VISA, '')\n          .replace(/_/g, '-')}${ICON.SUFFIX.TINY}`;\n      }\n      if (this.low) {\n        return `#${icon\n          .replace(ICON.PREFIX.VISA, '')\n          .replace(/_/g, '-')}${ICON.SUFFIX.LOW}`;\n      }\n      return `#${icon\n        .replace(ICON.PREFIX.VISA, '')\n        .replace(/_/g, '-')}${ICON.SUFFIX.HIGH}`;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 32,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<svg\n  [ngClass]=\"{\n    'vds-icon': low && !tiny,\n    'vds-icon--high': !low && !tiny,\n    'vds-icon--tiny': tiny\n    }\"\n  [attr.aria-label]=\"(altText) ? altText : null\"\n  [attr.focusable]=\"(altText) ? null : false\"\n  [attr.role]=\"(presentation) ? 'presentation' : (altText) ? 'img' : null\"\n  [attr.tabindex]=\"(altText) ? null : -1\">\n  <use\n    [attr.href]=\"getIconReference(icon)\"\n    [attr.xlink:href]=\"getIconReference(icon)\">\n  </use>\n</svg>\n"
    },
    {
      "name": "IconLibraryComponent",
      "id": "component-IconLibraryComponent-576e43471a8511bb2da97f4b7023762e",
      "file": "projects/vds-lib/src/lib/icon-library/icon-library.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-icon-library",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./icon-library.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vds-icon-library',\n  templateUrl: './icon-library.component.html',\n})\nexport class IconLibraryComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 7
      },
      "implements": ["OnInit"],
      "templateData": "<svg class=\"vds-icons\">\n    <symbol id=\"account-add--low\" viewBox=\"0 0 24 24\"><path d=\"M22.91,18h-3V15a1,1,0,1,0-2,0v3h-3a1,1,0,1,0,0,2h3v3a1,1,0,0,0,2,0V20h3a1,1,0,0,0,0-2m-11-5A6.53,6.53,0,1,0,8,11.66,11.73,11.73,0,0,0,0,21.73a1.89,1.89,0,0,0,.42,1.55A2,2,0,0,0,2,24h7.9a1,1,0,0,0,0-2H2A9.85,9.85,0,0,1,11.91,13ZM7.41,6.5a4.5,4.5,0,1,1,4.5,4.5A4.51,4.51,0,0,1,7.41,6.5Z\"/></symbol>\n    <symbol id=\"account-favorite--low\" viewBox=\"0 0 24 24\"><path d=\"M16,16a2,2,0,1,0,2-2A2,2,0,0,0,16,16Zm5.14,2.48A5,5,0,0,1,24,23a1,1,0,0,1-2,0,3,3,0,0,0-3-3H17a3,3,0,0,0-3,3,1,1,0,0,1-2,0,5,5,0,0,1,2.86-4.52,4,4,0,1,1,6.28,0ZM9.48,20.19A1,1,0,0,1,10.34,22L6.63,23.77a1.89,1.89,0,0,1-2.74-2l1-6.33L.55,11A1.93,1.93,0,0,1,1.6,7.72l6-.91,2.7-5.72a1.86,1.86,0,0,1,3.38,0l2.7,5.73,6,.91a1.94,1.94,0,0,1,1,3.27l-.83.82a1,1,0,0,1-1.41-1.42l.72-.72L16,8.77A1.87,1.87,0,0,1,14.6,7.71L12,2.19,9.4,7.71A1.87,1.87,0,0,1,8,8.77l-5.91.9,4.3,4.4a1.94,1.94,0,0,1,.53,1.67l-1,6.17Z\"/></symbol>\n    <symbol id=\"account-lock--low\" viewBox=\"0 0 24 24\"><path d=\"M11.91,13A6.53,6.53,0,1,0,8,11.66,11.73,11.73,0,0,0,0,21.73a1.89,1.89,0,0,0,.42,1.55A2,2,0,0,0,2,24h7.9a1,1,0,0,0,0-2H2a9.85,9.85,0,0,1,9.9-9M7.41,6.5a4.5,4.5,0,1,1,4.5,4.5,4.51,4.51,0,0,1-4.5-4.5M22,17V15.5a3.5,3.5,0,0,0-7,0V17a1.93,1.93,0,0,0-2,2v3a1.93,1.93,0,0,0,2,2h7a1.93,1.93,0,0,0,2-2V19A1.93,1.93,0,0,0,22,17Zm-5-1.5a1.5,1.5,0,0,1,3,0V17H17ZM22,22H15V19h7Z\"/></symbol>\n    <symbol id=\"account-remove--low\" viewBox=\"0 0 24 24\"><path d=\"M11.91,13A6.53,6.53,0,1,0,8,11.66,11.73,11.73,0,0,0,0,21.73a1.89,1.89,0,0,0,.42,1.55A2,2,0,0,0,2,24h7.9a1,1,0,0,0,0-2H2a9.85,9.85,0,0,1,9.9-9M7.41,6.5a4.5,4.5,0,1,1,4.5,4.5,4.51,4.51,0,0,1-4.5-4.5m13,12.5,2.3,2.29a1,1,0,0,1-1.42,1.42L19,20.41l-2.29,2.3a1,1,0,0,1-1.42-1.42L17.59,19l-2.3-2.29a1,1,0,0,1,1.42-1.42L19,17.59l2.29-2.3a1,1,0,0,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"account--low\" viewBox=\"0 0 24 24\"><path d=\"M15.79,11.7a6.5,6.5,0,1,0-7.58,0A11.86,11.86,0,0,0,.06,21.8a2,2,0,0,0,.51,1.55A2,2,0,0,0,2.06,24H22a2,2,0,0,0,1.49-.65A2,2,0,0,0,24,21.8,11.88,11.88,0,0,0,15.79,11.7ZM7.5,6.46A4.46,4.46,0,1,1,12,10.92,4.46,4.46,0,0,1,7.5,6.46ZM2.05,22a9.93,9.93,0,0,1,10-8.92A9.93,9.93,0,0,1,22,22Z\"/></symbol>\n    <symbol id=\"add-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M12,22A10,10,0,1,0,2,12,10,10,0,0,0,12,22Zm4-11a1,1,0,0,1,0,2H13v3a1,1,0,0,1-2,0V13H8a1,1,0,0,1,0-2h3V8a1,1,0,0,1,2,0v3ZM12,0A12,12,0,1,1,0,12,12,12,0,0,1,12,0Z\"/></symbol>\n    <symbol id=\"add--low\" viewBox=\"0 0 24 24\"><path d=\"M11,13H1a1,1,0,0,1,0-2H11V1a1,1,0,0,1,2,0V11H23a1,1,0,0,1,0,2H13V23a1,1,0,0,1-2,0Z\"/></symbol>\n    <symbol id=\"analytics--low\" viewBox=\"0 0 24 24\"><path d=\"M22,17V7H20V17ZM22,5a2,2,0,0,1,2,2V17a2,2,0,0,1-2,2H20a2,2,0,0,1-2-2V7a2,2,0,0,1,2-2ZM11,11v6h2V11Zm0,8a2,2,0,0,1-2-2V11a2,2,0,0,1,2-2h2a2,2,0,0,1,2,2v6a2,2,0,0,1-2,2ZM2,2V17H4V2ZM2,19a2,2,0,0,1-2-2V2A2,2,0,0,1,2,0H4A2,2,0,0,1,6,2V17a2,2,0,0,1-2,2Zm21,3a1,1,0,0,1,0,2H1a1,1,0,0,1,0-2Z\"/></symbol>\n    <symbol id=\"arrow-back--low\" viewBox=\"0 0 24 24\"><path d=\"M3.41,13l9.3,9.29a1,1,0,0,1-1.42,1.42l-11-11a1,1,0,0,1,0-1.42l11-11a1,1,0,1,1,1.42,1.42L3.41,11H23a1,1,0,0,1,0,2Z\"/></symbol>\n    <symbol id=\"arrow-collapse--low\" viewBox=\"0 0 24 24\"><path d=\"M12,7.41,1.71,17.71A1,1,0,0,1,.29,16.29l11-11a1,1,0,0,1,1.42,0l11,11a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"arrow-down--low\" viewBox=\"0 0 24 24\"><path d=\"M11,17.59V4a1,1,0,0,1,2,0V17.59l3.29-3.3a1,1,0,0,1,1.42,1.42l-5,5a1,1,0,0,1-1.42,0l-5-5a1,1,0,0,1,1.42-1.42Z\"/></symbol>\n    <symbol id=\"arrow-end--low\" viewBox=\"0 0 24 24\"><path d=\"M24,23a1,1,0,0,1-2,0V1a1,1,0,0,1,2,0ZM10.59,12,.29,1.71A1,1,0,0,1,1.71.29l11,11a1,1,0,0,1,0,1.42l-11,11A1,1,0,0,1,.29,22.29Z\"/></symbol>\n    <symbol id=\"arrow-expand--low\" viewBox=\"0 0 24 24\"><path d=\"M12,18.59,22.29,8.29a1,1,0,0,1,1.42,1.42l-11,11a1,1,0,0,1-1.42,0l-11-11A1,1,0,0,1,1.71,8.29Z\"/></symbol>\n    <symbol id=\"arrow-forward--low\" viewBox=\"0 0 24 24\"><path d=\"M20.59,11l-9.3-9.29A1,1,0,0,1,12.71.29l11,11a1,1,0,0,1,0,1.42l-11,11a1,1,0,0,1-1.42-1.42L20.59,13H1a1,1,0,0,1,0-2Z\"/></symbol>\n    <symbol id=\"arrow-left--low\" viewBox=\"0 0 24 24\"><path d=\"M6.41,11H20a1,1,0,0,1,0,2H6.41l3.3,3.29a1,1,0,0,1-1.42,1.42l-5-5a1,1,0,0,1,0-1.42l5-5A1,1,0,1,1,9.71,7.71Z\"/></symbol>\n    <symbol id=\"arrow-next--low\" viewBox=\"0 0 24 24\"><path d=\"M16.09,12,5.79,1.71A1,1,0,0,1,7.21.29l11,11a1,1,0,0,1,0,1.42l-11,11a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"arrow-previous--low\" viewBox=\"0 0 24 24\"><path d=\"M7.91,12l10.3,10.29a1,1,0,0,1-1.42,1.42l-11-11a1,1,0,0,1,0-1.42l11-11a1,1,0,1,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"arrow-right--low\" viewBox=\"0 0 24 24\"><path d=\"M17.59,13H4a1,1,0,0,1,0-2H17.59l-3.3-3.29a1,1,0,0,1,1.42-1.42l5,5a1,1,0,0,1,0,1.42l-5,5a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"arrow-start--low\" viewBox=\"0 0 24 24\"><path d=\"M0,1A1,1,0,0,1,2,1V23a1,1,0,0,1-2,0ZM13.41,12l10.3,10.29a1,1,0,0,1-1.42,1.42l-11-11a1,1,0,0,1,0-1.42l11-11a1,1,0,1,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"arrow-up--low\" viewBox=\"0 0 24 24\"><path d=\"M13,6.41V20a1,1,0,0,1-2,0V6.41L7.71,9.71A1,1,0,0,1,6.29,8.29l5-5a1,1,0,0,1,1.42,0l5,5a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"atm--low\" viewBox=\"0 0 24 24\"><path d=\"M1,2A1,1,0,0,1,1,0H23a1,1,0,0,1,0,2ZM8,15a1,1,0,0,1,2,0v4a1,1,0,0,1-2,0Zm7,7V7a1,1,0,0,1,2,0V22h2V7a1,1,0,0,1,2,0V22a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V7A1,1,0,0,1,5,7V22Z\"/></symbol>\n    <symbol id=\"attachment--low\" viewBox=\"0 0 24 24\"><path d=\"M15.92,4.61a1,1,0,0,1,1.41,0,1,1,0,0,1,0,1.42L7.66,15.7a1.15,1.15,0,0,0,0,1.64,1.16,1.16,0,0,0,1.64,0L19,7.67A3.32,3.32,0,0,0,14.28,3L4.6,12.65a5.48,5.48,0,0,0,7.75,7.75q6.87-6.84,8.94-8.93a1,1,0,1,1,1.42,1.42l-9,8.92A7.48,7.48,0,0,1,3.19,11.23l9.67-9.67a5.32,5.32,0,1,1,7.53,7.52l-9.68,9.67a3.16,3.16,0,0,1-4.47-4.46Z\"/></symbol>\n    <symbol id=\"auth-face--low\" viewBox=\"0 0 24 24\"><path d=\"M8,9A1,1,0,0,1,6,9V7A1,1,0,0,1,8,7Zm8-2a1,1,0,0,1,2,0V9a1,1,0,0,1-2,0Zm.33,7.79a1,1,0,0,1,1.41,0,1,1,0,0,1,0,1.42,8.07,8.07,0,0,1-11.41,0,1,1,0,0,1,0-1.42,1,1,0,0,1,1.41,0A6.08,6.08,0,0,0,16.33,14.79ZM22,0a1.93,1.93,0,0,1,2,2V6a1,1,0,0,1-2,0V2H18a1,1,0,0,1,0-2Zm1,17a1,1,0,0,1,1,1v4a1.93,1.93,0,0,1-2,2H18a1,1,0,0,1,0-2h4V18A1,1,0,0,1,23,17ZM6,22a1,1,0,0,1,0,2H2a1.93,1.93,0,0,1-2-2V18a1,1,0,0,1,2,0v4ZM6,0A1,1,0,0,1,6,2H2V6A1,1,0,0,1,0,6V2A2.07,2.07,0,0,1,2,0Zm6,13a1,1,0,0,1-1-1V9a1,1,0,0,1,2,0v2h1a1,1,0,0,1,0,2Z\"/></symbol>\n    <symbol id=\"auth-one-time-code--low\" viewBox=\"0 0 24 24\"><path d=\"M19.19,3.31a10.24,10.24,0,0,1-6.48-3,1,1,0,0,0-1.42,0,10.24,10.24,0,0,1-6.48,3A2,2,0,0,0,3,5.3v9.64a9,9,0,1,0,18,0V5.3A2,2,0,0,0,19.19,3.31ZM19,14.94a7,7,0,1,1-14,0V5.3a12.21,12.21,0,0,0,7-2.93A12.21,12.21,0,0,0,19,5.3Z\"/><path d=\"M14,17h2a1,1,0,0,0,0-2H14a1,1,0,0,0,0,2Z\"/><path d=\"M10,15H8a1,1,0,0,0,0,2h2a1,1,0,0,0,0-2Z\"/><path d=\"M11.71,8.29a1,1,0,0,0-1.42,0l-.79.8-.79-.8A1,1,0,1,0,7.29,9.71l.8.79-.8.79a1,1,0,1,0,1.42,1.42l.79-.8.79.8a1,1,0,0,0,1.42-1.42l-.8-.79.8-.79A1,1,0,0,0,11.71,8.29Z\"/></symbol>\n    <symbol id=\"auth-reauthorize--low\" viewBox=\"0 0 24 24\"><path d=\"M22.27,10.32a1,1,0,1,1,1.46,1.36L17,19l-3.76-4.35a1,1,0,1,1,1.52-1.3L17,16ZM2,11H6.5a4.5,4.5,0,0,0,0-9H2Zm0,3.33V23a1,1,0,0,1-2,0V1A1,1,0,0,1,1,0H6.5a6.5,6.5,0,0,1,0,13h-3l9.21,9.21a1,1,0,0,1,0,1.41,1,1,0,0,1-1.42,0Z\"/></symbol>\n    <symbol id=\"auth-voice--low\" viewBox=\"0 0 24 24\"><path d=\"M22,0a1.93,1.93,0,0,1,2,2V6a1,1,0,0,1-2,0V2H18a1,1,0,0,1,0-2Zm1,17a1,1,0,0,1,1,1v4a1.93,1.93,0,0,1-2,2H18a1,1,0,0,1,0-2h4V18A1,1,0,0,1,23,17ZM6,22a1,1,0,0,1,0,2H2a1.93,1.93,0,0,1-2-2V18a1,1,0,0,1,2,0v4ZM6,0A1,1,0,0,1,6,2H2V6A1,1,0,0,1,0,6V2A2.07,2.07,0,0,1,2,0Zm8,8a1,1,0,0,1,1,1v6a1,1,0,0,1-2,0V9A1,1,0,0,1,14,8ZM10,6a1,1,0,0,1,1,1V17a1,1,0,0,1-2,0V7A1,1,0,0,1,10,6ZM6,10a1,1,0,0,1,1,1v2a1,1,0,0,1-2,0V11A1,1,0,0,1,6,10Zm12,4a1,1,0,0,1-1-1V11a1,1,0,0,1,2,0v2A1,1,0,0,1,18,14Z\"/></symbol>\n    <symbol id=\"balance--low\" viewBox=\"0 0 24 24\"><path d=\"M12,6a2,2,0,1,0,2,2A2,2,0,0,0,12,6Zm0,6a4,4,0,1,1,4-4A4,4,0,0,1,12,12ZM2,22V20H22v2ZM22,2V14H2V2ZM2,16H22v2H2ZM22.09,0H1.91A1.92,1.92,0,0,0,0,1.91V22.08A1.92,1.92,0,0,0,1.92,24H22.09A1.91,1.91,0,0,0,24,22.09V1.91A1.91,1.91,0,0,0,22.09,0Z\"/></symbol>\n    <symbol id=\"bill-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M10.5,12H11V11h-.5a.5.5,0,0,0,0,1ZM13,14v1h.5a.5.5,0,0,0,0-1ZM9,15h2V14h-.5a2.5,2.5,0,0,1,0-5H11V8a1,1,0,0,1,2,0V9h2a.94.94,0,0,1,1,1,.94.94,0,0,1-1,1H13v1h.5a2.5,2.5,0,0,1,0,5H13v1a1,1,0,0,1-2,0V17H9a1,1,0,0,1,0-2ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"bill--low\" viewBox=\"0 0 24 24\"><path d=\"M10.5,11a.5.5,0,0,1,0-1H11v1ZM13,13h.5a.5.5,0,0,1,0,1H13ZM9,14a1,1,0,0,0,0,2h2v1a1,1,0,0,0,2,0V16h.5a2.5,2.5,0,0,0,0-5H13V10h2a.94.94,0,0,0,1-1,.94.94,0,0,0-1-1H13V7a1,1,0,0,0-2,0V8h-.5a2.5,2.5,0,0,0,0,5H11v1Zm6.55,9.83a1,1,0,0,1-1.1,0L12,22.2,9.55,23.83a1,1,0,0,1-1.1,0L6,22.2,3.56,23.83A1,1,0,0,1,2,23V1A1,1,0,0,1,3,0H21a1,1,0,0,1,1,1V23a1,1,0,0,1-1.56.83L18,22.2Zm-.55-2,2.45-1.63a1,1,0,0,1,1.11,0l1.44,1V2H4V21.11l1.37-.94a1,1,0,0,1,1.11,0L9,21.8l2.46-1.63a1,1,0,0,1,1.1,0Z\"/></symbol>\n    <symbol id=\"bonus-points--low\" viewBox=\"0 0 24 24\"><path d=\"M19,4.5c0-.34-.61-1-1.77-1.48A12.93,12.93,0,0,0,12,2,12.93,12.93,0,0,0,6.77,3C5.61,3.55,5,4.16,5,4.5s.61,1,1.77,1.48A12.93,12.93,0,0,0,12,7a12.93,12.93,0,0,0,5.23-1C18.39,5.45,19,4.84,19,4.5Zm0,12.61A12.77,12.77,0,0,1,12,19a12.77,12.77,0,0,1-7-1.89V19c0,1.34,3.21,3,7,3s7-1.66,7-3Zm0-5A12.77,12.77,0,0,1,12,14a12.77,12.77,0,0,1-7-1.89V14c0,1.34,3.21,3,7,3s7-1.66,7-3ZM19,7.3A13.82,13.82,0,0,1,12,9,13.82,13.82,0,0,1,5,7.3V9c0,1.34,3.21,3,7,3s7-1.66,7-3Zm2-2.5A1.23,1.23,0,0,1,21,5V19c0,2.8-4.25,5-9,5s-9-2.2-9-5V5a1.23,1.23,0,0,1,0-.2c0-.1,0-.2,0-.3C3,2,7.28,0,12,0s9,2,9,4.5C21,4.6,21,4.7,21,4.8Z\"/></symbol>\n    <symbol id=\"bookmark--low\" viewBox=\"0 0 24 24\"><path d=\"M12,15.41l-8.29,8.3A1,1,0,0,1,2,23V1A1,1,0,0,1,3,0H21a1,1,0,0,1,1,1V23a1,1,0,0,1-1.71.71ZM4,2V20.58l7.29-7.29a1,1,0,0,1,1.42,0L20,20.58V2Z\"/></symbol>\n    <symbol id=\"bug-debug--low\" viewBox=\"0 0 24 24\"><path d=\"M23.71.29a1,1,0,0,0-1.42,0L16.73,5.85A6.44,6.44,0,0,0,16,5.24s0-.06,0-.1a3.62,3.62,0,0,1,.1-.45,5.16,5.16,0,0,1,.38-1,3.2,3.2,0,0,1,.33-.55,2.69,2.69,0,0,1,.59-.57,4.79,4.79,0,0,1,.71-.46,2.64,2.64,0,0,1,.3-.15A1,1,0,0,0,18.92.6,1,1,0,0,0,17.6.08a7.45,7.45,0,0,0-1.43.86,4.81,4.81,0,0,0-1.49,1.82,7.39,7.39,0,0,0-.57,1.57A7.05,7.05,0,0,0,12,4a7,7,0,0,0-2.11.33,7.2,7.2,0,0,0-.57-1.57A4.81,4.81,0,0,0,7.83.94,7.45,7.45,0,0,0,6.4.08a1,1,0,0,0-.8,1.84l.3.15a4.79,4.79,0,0,1,.71.46,2.69,2.69,0,0,1,.59.57,3.2,3.2,0,0,1,.33.55,5.16,5.16,0,0,1,.38,1,3.62,3.62,0,0,1,.1.45.32.32,0,0,0,0,.09A7,7,0,0,0,5.2,9.36L1.51,7.14a1,1,0,0,0-1,1.72L5,11.57V14H1a1,1,0,0,0,0,2H5v1.59L.29,22.29a1,1,0,0,0,1.42,1.42l22-22A1,1,0,0,0,23.71.29ZM7,15.59V12h3.59ZM12.59,10H7.1A5,5,0,0,1,12,6a4.94,4.94,0,0,1,3.32,1.27Z\"/><path d=\"M19,16h4a1,1,0,0,0,0-2H19V12a1,1,0,0,0-2,0v3h0v2a5,5,0,0,1-4,4.9V18a1,1,0,0,0-2,0v3.89a5,5,0,0,1-2.08-.95,1,1,0,0,0-1.4.17,1,1,0,0,0,.17,1.41,7,7,0,0,0,10.5-2.24l4.3,2.58a1,1,0,0,0,1-1.72l-4.64-2.78A7.65,7.65,0,0,0,19,17Z\"/></symbol>\n    <symbol id=\"bug--low\" viewBox=\"0 0 24 24\"><path d=\"M23.51,21.14l-4.64-2.79A7.45,7.45,0,0,0,19,17V16h4a1,1,0,0,0,0-2H19V11.57l4.51-2.71a1,1,0,0,0-1-1.72L18.8,9.36A7,7,0,0,0,16,5.23a.32.32,0,0,0,0-.09,3.62,3.62,0,0,1,.1-.45,5.16,5.16,0,0,1,.38-1,3.2,3.2,0,0,1,.33-.55,2.69,2.69,0,0,1,.59-.57,4.79,4.79,0,0,1,.71-.46,2.64,2.64,0,0,1,.3-.15A1,1,0,0,0,18.92.6,1,1,0,0,0,17.6.08a7.45,7.45,0,0,0-1.43.86,4.81,4.81,0,0,0-1.49,1.82,7.2,7.2,0,0,0-.57,1.57,6.91,6.91,0,0,0-4.22,0,7.2,7.2,0,0,0-.57-1.57A4.81,4.81,0,0,0,7.83.94,7.45,7.45,0,0,0,6.4.08a1,1,0,0,0-.8,1.84l.3.15a4.79,4.79,0,0,1,.71.46,2.69,2.69,0,0,1,.59.57,3.2,3.2,0,0,1,.33.55,5.16,5.16,0,0,1,.38,1,3.62,3.62,0,0,1,.1.45.32.32,0,0,0,0,.09A7,7,0,0,0,5.2,9.36L1.51,7.14a1,1,0,0,0-1,1.72L5,11.57V14H1a1,1,0,0,0,0,2H5v1a7.45,7.45,0,0,0,.13,1.35L.49,21.14a1,1,0,1,0,1,1.72l4.31-2.58a7,7,0,0,0,12.36,0l4.31,2.58a1,1,0,0,0,1-1.72ZM16.9,10H7.1a5,5,0,0,1,9.8,0ZM7,17V12h4v9.9A5,5,0,0,1,7,17Zm6,4.9V12h4v3h0v2A5,5,0,0,1,13,21.9Z\"/></symbol>\n    <symbol id=\"business-user--low\" viewBox=\"0 0 24 24\"><path d=\"M15.5,2l-3,3.42L14.5,19,12,22,9.5,19l2-13.58L8.5,2h7m0-2h-7A2,2,0,0,0,7,3.32L9.38,6.05,7.52,18.71A2,2,0,0,0,8,20.28l2.5,3a2,2,0,0,0,3.08,0l2.5-3a2,2,0,0,0,.44-1.57L14.62,6.05,17,3.32A2,2,0,0,0,15.5,0\"/></symbol>\n    <symbol id=\"calculator--low\" viewBox=\"0 0 24 24\"><path d=\"M23,16a1,1,0,0,1,0,2H15a1,1,0,0,1,0-2Zm0,6a1,1,0,0,1,0,2H15a1,1,0,0,1,0-2ZM9,4A1,1,0,0,1,9,6H6V9A1,1,0,0,1,4,9V6H1A1,1,0,0,1,1,4H4V1A1,1,0,0,1,6,1V4Zm6,2a1,1,0,0,1,0-2h8a1,1,0,0,1,0,2ZM5,18.59l2.29-2.3a1,1,0,0,1,1.42,1.42L6.41,20l2.3,2.29a1,1,0,0,1-1.42,1.42L5,21.41l-2.29,2.3a1,1,0,0,1-1.42-1.42L3.59,20l-2.3-2.29a1,1,0,0,1,1.42-1.42Z\"/></symbol>\n    <symbol id=\"calendar--low\" viewBox=\"0 0 24 24\"><path d=\"M2,22H22V9H2ZM8,12a1,1,0,0,1,0,2H6a1,1,0,0,1,0-2Zm5,0a1,1,0,0,1,0,2H11a1,1,0,0,1,0-2Zm5,0a1,1,0,0,1,0,2H16a1,1,0,0,1,0-2ZM8,17a1,1,0,0,1,0,2H6a1,1,0,0,1,0-2Zm5,0a1,1,0,0,1,0,2H11a1,1,0,0,1,0-2Zm5,0a1,1,0,0,1,0,2H16a1,1,0,0,1,0-2ZM7,4H2V7H22V4H17V5a1,1,0,0,1-2,0V4H9V5A1,1,0,0,1,7,5ZM22,2a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V4A2,2,0,0,1,2,2H7V1A1,1,0,0,1,9,1V2h6V1a1,1,0,0,1,2,0V2Z\"/></symbol>\n    <symbol id=\"camera-flash--low\" viewBox=\"0 0 24 24\"><path d=\"M15.31,11H19a1,1,0,0,1,.68,1.74l-12,11a1,1,0,0,1-1.64-1L8.69,13H5a1,1,0,0,1-.68-1.74l12-11a1,1,0,0,1,1.64,1Zm1.12,2H14a1,1,0,0,1-1-1.26l2.08-7.66L7.57,11H10a1,1,0,0,1,1,1.26L8.88,19.92Z\"/></symbol>\n    <symbol id=\"camera--low\" viewBox=\"0 0 24 24\"><path d=\"M16,13.5a4,4,0,1,1-4-4A4,4,0,0,1,16,13.5Zm-2,0a2,2,0,1,0-2,2A2,2,0,0,0,14,13.5Zm-7.2-9L8.44,2a1,1,0,0,1,.84-.46h5.61a1,1,0,0,1,.84.46L17.37,4.5H22a2,2,0,0,1,2,2v14a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V6.39A1.85,1.85,0,0,1,2.08,4.5Zm3-1L8.18,6a1,1,0,0,1-.84.46H2v14H22V6.5H16.83A1,1,0,0,1,16,6L14.35,3.5Z\"/></symbol>\n    <symbol id=\"card-corporate--low\" viewBox=\"0 0 24 24\"><path d=\"M13.83,10h.44c.49,0,.71.21.84.83a7.48,7.48,0,0,0,.32,1.11h.89A8.27,8.27,0,0,1,16,10.59a1.21,1.21,0,0,0-.66-.91v0a1.25,1.25,0,0,0,.85-1.18,1.2,1.2,0,0,0-.4-1,2.24,2.24,0,0,0-1.46-.37,9,9,0,0,0-1.3.09v4.66h.85Zm0-2.12a2.69,2.69,0,0,1,.54,0c.56,0,.92.23.92.75s-.36.78-.95.78h-.51Z\"/><path d=\"M17.82,10.13a2.5,2.5,0,0,0,.42,0,2,2,0,0,0,1.49-.51,1.44,1.44,0,0,0,.4-1.07,1.32,1.32,0,0,0-.46-1,2.14,2.14,0,0,0-1.39-.38A8.37,8.37,0,0,0,17,7.25v4.66h.86Zm0-2.27a1.77,1.77,0,0,1,.49-.05c.6,0,1,.28,1,.81s-.39.87-1,.87a1.56,1.56,0,0,1-.42,0Z\"/><path d=\"M21,3H3A3,3,0,0,0,0,6V18a3,3,0,0,0,3,3H21a3,3,0,0,0,3-3V6A3,3,0,0,0,21,3ZM3,5H21a1,1,0,0,1,1,1v9H2V6A1,1,0,0,1,3,5ZM21,19H3a1,1,0,0,1-1-1V17H22v1A1,1,0,0,1,21,19Z\"/><path d=\"M6.28,12a3.06,3.06,0,0,0,1.22-.21l-.14-.68a2.51,2.51,0,0,1-.94.17,1.55,1.55,0,0,1-1.64-1.7A1.57,1.57,0,0,1,6.43,7.83,2.23,2.23,0,0,1,7.35,8l.19-.69a2.71,2.71,0,0,0-1.15-.21,2.38,2.38,0,0,0-2.52,2.5A2.23,2.23,0,0,0,6.28,12Z\"/><path d=\"M10,12A2.24,2.24,0,0,0,12.24,9.5a2.18,2.18,0,0,0-2.19-2.39A2.26,2.26,0,0,0,7.81,9.58,2.19,2.19,0,0,0,10,12Zm0-4.18c.86,0,1.3.84,1.3,1.73s-.47,1.75-1.3,1.75-1.31-.76-1.31-1.72S9.17,7.81,10,7.81Z\"/></symbol>\n    <symbol id=\"card-debit--low\" viewBox=\"0 0 24 24\"><path d=\"M21,3H3A3,3,0,0,0,0,6V18a3,3,0,0,0,3,3H21a3,3,0,0,0,3-3V6A3,3,0,0,0,21,3ZM3,5H21a1,1,0,0,1,1,1v9H2V6A1,1,0,0,1,3,5ZM21,19H3a1,1,0,0,1-1-1V17H22v1A1,1,0,0,1,21,19Z\"/><polygon points=\"18.7 11.91 19.56 11.91 19.56 7.91 20.91 7.91 20.91 7.19 17.35 7.19 17.35 7.91 18.7 7.91 18.7 11.91\"/><path d=\"M6.82,11.31a2.41,2.41,0,0,0,.74-1.87A2.1,2.1,0,0,0,6.82,7.7,2.88,2.88,0,0,0,4.9,7.16a9.06,9.06,0,0,0-1.37.09v4.64A8.2,8.2,0,0,0,4.69,12,3.12,3.12,0,0,0,6.82,11.31ZM4.39,7.88a2.6,2.6,0,0,1,.59,0A1.49,1.49,0,0,1,6.65,9.47a1.62,1.62,0,0,1-1.79,1.8,3.32,3.32,0,0,1-.47,0Z\"/><rect width=\"0.86\" height=\"4.72\" x=\"15.94\" y=\"7.19\"/><polygon points=\"11.16 11.2 9.17 11.2 9.17 9.82 10.95 9.82 10.95 9.12 9.17 9.12 9.17 7.9 11.05 7.9 11.05 7.19 8.31 7.19 8.31 11.91 11.16 11.91 11.16 11.2\"/><path d=\"M14.72,11.52a1.25,1.25,0,0,0,.45-1,1.19,1.19,0,0,0-.95-1.17h0a1.11,1.11,0,0,0,.79-1,1,1,0,0,0-.49-.88,2.22,2.22,0,0,0-1.35-.3,8.09,8.09,0,0,0-1.26.09v4.64A7.74,7.74,0,0,0,13,12,2.66,2.66,0,0,0,14.72,11.52Zm-2-3.69a2.24,2.24,0,0,1,.49,0c.54,0,.88.21.88.65s-.34.68-.93.68h-.44Zm0,1.92h.42c.6,0,1.07.22,1.07.77s-.49.79-1,.79l-.45,0Z\"/></symbol>\n    <symbol id=\"card-generic--low\" viewBox=\"0 0 24 24\"><path d=\"M13,15a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2ZM9,11a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2ZM21,3a3,3,0,0,1,3,3V18a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V6A3,3,0,0,1,3,3Zm1,6H2v9a1,1,0,0,0,1,1H21a1,1,0,0,0,1-1Zm0-2V6a1,1,0,0,0-1-1H3A1,1,0,0,0,2,6V7Z\"/></symbol>\n    <symbol id=\"card-manage-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M5,12.5a1,1,0,0,1,0-2H9a1,1,0,0,1,0,2Zm17,0v-8a1,1,0,0,0-1-1H7a1,1,0,0,0-1,1v1H17a3,3,0,0,1,3,3v5h1A1,1,0,0,0,22,12.5Zm-5,8a1,1,0,0,0,1-1v-1H2v1a1,1,0,0,0,1,1ZM3,7.5a1,1,0,0,0-1,1v8H18v-8a1,1,0,0,0-1-1Zm18-6a3,3,0,0,1,3,3v8a3,3,0,0,1-3,3H20v4a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V8.5a3,3,0,0,1,3-3H4v-1a3,3,0,0,1,3-3Z\"/></symbol>\n    <symbol id=\"card-manage--low\" viewBox=\"0 0 24 24\"><path d=\"M21,3H3A3,3,0,0,0,0,6V18a3,3,0,0,0,3,3H21a3,3,0,0,0,3-3V6A3,3,0,0,0,21,3ZM3,5H21a1,1,0,0,1,1,1v9H2V6A1,1,0,0,1,3,5ZM21,19H3a1,1,0,0,1-1-1V17H22v1A1,1,0,0,1,21,19Z\"/><path d=\"M5,10h6a1,1,0,0,0,0-2H5a1,1,0,0,0,0,2Z\"/></symbol>\n    <symbol id=\"card-number--low\" viewBox=\"0 0 24 24\"><path d=\"M13,15a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2ZM9,11a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2ZM21,5H3A1,1,0,0,0,2,6V18a1,1,0,0,0,1,1H21a1,1,0,0,0,1-1V6A1,1,0,0,0,21,5Zm0-2a3,3,0,0,1,3,3V18a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V6A3,3,0,0,1,3,3Z\"/></symbol>\n    <symbol id=\"card-off--low\" viewBox=\"0 0 24 24\"><path d=\"M11,8a1,1,0,0,1,0,2H5A1,1,0,0,1,5,8ZM1.82,20.76A3,3,0,0,1,0,18V6A3,3,0,0,1,3,3H19.59L22.29.29a1,1,0,1,1,1.42,1.42l-22,22A1,1,0,0,1,.29,22.29ZM22,17H14a1,1,0,0,1,0-2h8V7a1,1,0,0,1,2,0V18a3,3,0,0,1-3,3H10a1,1,0,0,1,0-2H21a1,1,0,0,0,1-1ZM7.47,15.12,17.59,5H3A1,1,0,0,0,2,6v9H7A.94.94,0,0,1,7.47,15.12ZM5.59,17H2v1a1,1,0,0,0,1,1h.59Z\"/></symbol>\n    <symbol id=\"card-prepaid--low\" viewBox=\"0 0 24 24\"><polygon points=\"17.49 11.29 15.5 11.29 15.5 9.91 17.28 9.91 17.28 9.21 15.5 9.21 15.5 7.99 17.39 7.99 17.39 7.28 14.64 7.28 14.64 12 17.49 12 17.49 11.29\"/><path d=\"M21,3H3A3,3,0,0,0,0,6V18a3,3,0,0,0,3,3H21a3,3,0,0,0,3-3V6A3,3,0,0,0,21,3ZM3,5H21a1,1,0,0,1,1,1v9H2V6A1,1,0,0,1,3,5ZM21,19H3a1,1,0,0,1-1-1V17H22v1A1,1,0,0,1,21,19Z\"/><path d=\"M11.51,10.06H12c.49,0,.71.21.84.83A7.48,7.48,0,0,0,13.11,12H14a8.27,8.27,0,0,1-.37-1.32A1.21,1.21,0,0,0,13,9.77v0a1.25,1.25,0,0,0,.85-1.18,1.2,1.2,0,0,0-.4-1A2.24,2.24,0,0,0,12,7.25a9,9,0,0,0-1.3.09V12h.85Zm0-2.12a2.69,2.69,0,0,1,.54,0c.56,0,.92.24.92.75s-.36.78-1,.78h-.51Z\"/><path d=\"M7.6,10.22a2.5,2.5,0,0,0,.42,0,2.08,2.08,0,0,0,1.49-.5,1.45,1.45,0,0,0,.41-1.08,1.32,1.32,0,0,0-.46-1,2.19,2.19,0,0,0-1.4-.38,8.13,8.13,0,0,0-1.31.09V12H7.6ZM7.6,8a2.31,2.31,0,0,1,.5,0c.59,0,1,.28,1,.81s-.4.87-1,.87a1.66,1.66,0,0,1-.42,0Z\"/></symbol>\n    <symbol id=\"card-suspend--low\" viewBox=\"0 0 24 24\"><rect width=\"2\" height=\"4\" x=\"14\" y=\"5\"/><rect width=\"2\" height=\"4\" x=\"18\" y=\"5\"/><path d=\"M24,7A7,7,0,0,0,10,7H3a3.15,3.15,0,0,0-3,3V21a3.15,3.15,0,0,0,3,3H19a3.15,3.15,0,0,0,3-3V12a.29.29,0,0,0,0-.09A6.94,6.94,0,0,0,24,7ZM20,21a1.17,1.17,0,0,1-1,1H3a1.17,1.17,0,0,1-1-1V20H20Zm0-3H2V10A1.17,1.17,0,0,1,3,9h7.29A7,7,0,0,0,20,13.32Zm-3-6a5,5,0,1,1,5-5A5,5,0,0,1,17,12Z\"/><path d=\"M9,12H5a1,1,0,0,0,0,2H9a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"card-verify--low\" viewBox=\"0 0 24 24\"><path d=\"M24,7A7,7,0,0,0,10,7H3a3.15,3.15,0,0,0-3,3V21a3.15,3.15,0,0,0,3,3H19a3.15,3.15,0,0,0,3-3V12a.29.29,0,0,0,0-.09A6.94,6.94,0,0,0,24,7ZM20,21a1.17,1.17,0,0,1-1,1H3a1.17,1.17,0,0,1-1-1V20H20Zm0-3H2V10A1.17,1.17,0,0,1,3,9h7.29A7,7,0,0,0,20,13.32Zm-3-6a5,5,0,1,1,5-5A5,5,0,0,1,17,12Z\"/><path d=\"M18.2,4.4,15.89,7.48,14.71,6.29a1,1,0,0,0-1.42,1.42l2,2A1,1,0,0,0,16.8,9.6l3-4a1,1,0,1,0-1.6-1.2Z\"/><path d=\"M9,12H5a1,1,0,0,0,0,2H9a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"cart--low\" viewBox=\"0 0 24 24\"><path d=\"M6,4H21.73a2,2,0,0,1,1.83,2.81l-3.11,7A2,2,0,0,1,18.62,15H10.87A2,2,0,0,1,9.1,14L2.67,2H1.27a1,1,0,0,1,0-2h2a1,1,0,0,1,.88.53ZM8.27,20a2,2,0,1,0,2-2A2,2,0,0,0,8.27,20Zm-2,0a4,4,0,1,1,4,4A4,4,0,0,1,6.27,20Zm11,0a2,2,0,1,0,2-2A2,2,0,0,0,17.27,20Zm-2,0a4,4,0,1,1,4,4A4,4,0,0,1,15.27,20ZM7.1,6l3.77,7h7.75l3.11-7Z\"/></symbol>\n    <symbol id=\"cash--low\" viewBox=\"0 0 24 24\"><path d=\"M3,20H21a3,3,0,0,0,3-3V7a3,3,0,0,0-3-3H3A3,3,0,0,0,0,7V17a3,3,0,0,0,3,3M3,6A1,1,0,1,1,2,7,1,1,0,0,1,3,6m0,4A3,3,0,0,0,5.82,6H18.18A3,3,0,0,0,21,10a2.78,2.78,0,0,0,1-.19v4.37A3,3,0,0,0,18.18,18H5.82A3,3,0,0,0,2,14.18V9.81A2.78,2.78,0,0,0,3,10M22,7a1,1,0,1,1-1-1,1,1,0,0,1,1,1M21,18a1,1,0,1,1,1-1,1,1,0,0,1-1,1M3,16a1,1,0,1,1-1,1,1,1,0,0,1,1-1\"/></symbol>\n    <symbol id=\"category--low\" viewBox=\"0 0 24 24\"><path d=\"M19,7a2,2,0,0,0-4,0,2,2,0,0,0,4,0Zm2,0a4,4,0,0,1-8,0,4,4,0,0,1,8,0ZM12.38,2,2,12.4,11.56,22,22,11.58,22,2ZM11.26.29A1,1,0,0,1,12,0H23a1,1,0,0,1,1,1L24,12a1,1,0,0,1-.3.71L13,23.42a2,2,0,0,1-2.83,0L.55,13.82A2,2,0,0,1,.55,11Z\"/></symbol>\n    <symbol id=\"check-international--low\" viewBox=\"0 0 24 24\"><path d=\"M13,15h1V12H13ZM12,9.28l-.9.72h1.8ZM10,15h1V12H10ZM7,15H8V12.48l-.38.3A1,1,0,0,1,7,13a1,1,0,0,1-.78-.38,1,1,0,0,1,.16-1.4l5-4,.08,0a.56.56,0,0,1,.17-.09A.64.64,0,0,1,11.81,7L12,7l.19,0a.64.64,0,0,1,.18.06l.18.09.07,0,5,4a1,1,0,0,1,.16,1.4A1,1,0,0,1,17,13a1,1,0,0,1-.62-.22l-.38-.3V15h1a1,1,0,0,1,0,2H7a1,1,0,0,1,0-2Zm15,4V5H2V19ZM22,3a2,2,0,0,1,2,2V19a1.93,1.93,0,0,1-2,2H2a1.93,1.93,0,0,1-2-2V5A2,2,0,0,1,2,3Z\"/></symbol>\n    <symbol id=\"check--low\" viewBox=\"0 0 24 24\"><path d=\"M5,16a1,1,0,0,1,0-2H7a1,1,0,0,1,0,2Zm0-3a1,1,0,0,1,0-2H9a1,1,0,0,1,0,2Zm9.5-2a.5.5,0,0,1,0-1H15v1ZM17,13h.5a.5.5,0,0,1,0,1H17Zm-4,1a1,1,0,0,0,0,2h2v1a1,1,0,0,0,2,0V16h.5a2.5,2.5,0,0,0,0-5H17V10h2a.94.94,0,0,0,1-1,.94.94,0,0,0-1-1H17V7a1,1,0,0,0-2,0V8h-.5a2.5,2.5,0,0,0,0,5H15v1Zm9,5V5H2V19ZM22,3a2,2,0,0,1,2,2V19a1.93,1.93,0,0,1-2,2H2a1.93,1.93,0,0,1-2-2V5A2,2,0,0,1,2,3Z\"/></symbol>\n    <symbol id=\"checked-multiple--low\" viewBox=\"0 0 24 24\"><path d=\"M12.27,5.32a1,1,0,1,1,1.46,1.36L7,14,3.24,9.65a1,1,0,0,1,1.52-1.3L7,11ZM21,10a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2H8a2,2,0,0,1-2-2V21a1,1,0,0,1,2,0v1H22V10ZM18,2V16a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V2A2,2,0,0,1,2,0H16A2,2,0,0,1,18,2ZM16,2H2V16H16Z\"/></symbol>\n    <symbol id=\"checkmark--low\" viewBox=\"0 0 24 24\"><path d=\"M8,17.89,22.29,3.58a1,1,0,0,1,1.42,0,1,1,0,0,1,0,1.41L8,20.72.29,13a1,1,0,0,1,0-1.41,1,1,0,0,1,1.42,0Z\"/></symbol>\n    <symbol id=\"clear--low\" viewBox=\"0 0 24 24\"><path d=\"M6,3H22a2,2,0,0,1,2,2V19a2,2,0,0,1-2,2H6a1,1,0,0,1-.85-.47l-5-8a1,1,0,0,1,0-1.06l5-8A1,1,0,0,1,6,3Zm8,7.59-3.29-3.3A1,1,0,1,0,9.29,8.71L12.59,12l-3.3,3.29a1,1,0,0,0,1.42,1.42L14,13.41l3.29,3.3a1,1,0,0,0,1.42-1.42L15.41,12l3.3-3.29a1,1,0,1,0-1.42-1.42ZM6.55,5,2.18,12l4.37,7H22V5Z\"/></symbol>\n    <symbol id=\"close--low\" viewBox=\"0 0 24 24\"><path d=\"M13.41,12l8.3,8.29a1,1,0,0,1-1.42,1.42L12,13.41l-8.29,8.3a1,1,0,0,1-1.42-1.42L10.59,12,2.29,3.71A1,1,0,0,1,3.71,2.29L12,10.59l8.29-8.3a1,1,0,1,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"cloud-upload--low\" viewBox=\"0 0 24 24\"><path d=\"M18,22H6a1,1,0,0,0,0,2H18a1,1,0,0,0,0-2Z\"/><path d=\"M19.94,5.1A5.67,5.67,0,0,0,14,0c-1.8,0-3.08.93-4.25,2.57A3.22,3.22,0,0,0,8,2,4,4,0,0,0,4.11,5.09,5,5,0,0,0,5,15a1,1,0,0,0,0-2A3,3,0,0,1,5,7,1,1,0,0,0,6,6,2,2,0,0,1,8,4a2.52,2.52,0,0,1,1.35.76l.07,0,.06.06.11,0L9.78,5A.58.58,0,0,0,10,5h.19l.18-.06.17-.07.16-.13.09-.07s0-.05,0-.07l.06-.06C11.86,2.85,12.81,2,14,2a3.73,3.73,0,0,1,4,4,1,1,0,0,0,1,1,3,3,0,0,1,0,6,1,1,0,0,0,0,2,5,5,0,0,0,.94-9.9Z\"/><path d=\"M12,19a1,1,0,0,0,1-1V9.41l2.29,2.33a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.42l-4-4a1,1,0,0,0-1.42,0l-4,4a1,1,0,0,0,0,1.41,1,1,0,0,0,1.42,0L11,9.45V18A1,1,0,0,0,12,19Z\"/></symbol>\n    <symbol id=\"cloud--low\" viewBox=\"0 0 24 24\"><path d=\"M19.94,9.6A5.67,5.67,0,0,0,14,4.5c-1.8,0-3.08.93-4.25,2.57A3.22,3.22,0,0,0,8,6.5,4,4,0,0,0,4.11,9.59,5,5,0,0,0,5,19.5H19a5,5,0,0,0,.94-9.9ZM19,17.5H5a3,3,0,0,1,0-6,1,1,0,0,0,1-1,2,2,0,0,1,2-2,2.52,2.52,0,0,1,1.35.76l.07,0,.06.06.11,0,.19.06a.58.58,0,0,0,.19,0h.19l.18-.06.17-.07.16-.13.09-.07s0-.05,0-.07L10.86,9c1-1.67,2-2.52,3.14-2.52a3.73,3.73,0,0,1,4,4,1,1,0,0,0,1,1,3,3,0,0,1,0,6Z\"/></symbol>\n    <symbol id=\"code-fork-code-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M13.29,11.71a1,1,0,0,1,1.42-1.42l3,3a1,1,0,0,1,0,1.42l-3,3a1,1,0,0,1-1.42-1.42L15.59,14Zm-2.58,4.58a1,1,0,0,1-1.42,1.42l-3-3a1,1,0,0,1,0-1.42l3-3a1,1,0,0,1,1.42,1.42L8.41,14ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"code-fork-code--low\" viewBox=\"0 0 24 24\"><path d=\"M24,4a4,4,0,1,0-5,3.86V10a1,1,0,0,1-1,1H5V7.86a4,4,0,1,0-2,0v8.28a4,4,0,1,0,2,0V13H18a3,3,0,0,0,3-3V7.86A4,4,0,0,0,24,4ZM2,4A2,2,0,1,1,4,6,2,2,0,0,1,2,4ZM6,20a2,2,0,1,1-2-2H4A2,2,0,0,1,6,20ZM20,6a2,2,0,1,1,2-2A2,2,0,0,1,20,6Z\"/></symbol>\n    <symbol id=\"code-run--low\" viewBox=\"0 0 24 24\"><path d=\"M7.71,10.29a1,1,0,0,0-1.42,1.42L8.59,14l-2.3,2.29a1,1,0,0,0,1.42,1.42l3-3a1,1,0,0,0,0-1.42Z\"/><path d=\"M12,17a1,1,0,0,0,1,1h4a1,1,0,0,0,0-2H13A1,1,0,0,0,12,17Z\"/><path d=\"M22,0H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V2A2,2,0,0,0,22,0ZM2,2H22V5H2ZM22,22H2V7H22Z\"/></symbol>\n    <symbol id=\"company--low\" viewBox=\"0 0 24 24\"><path d=\"M14,14h2a1,1,0,0,0,0-2H14a1,1,0,0,0,0,2Z\"/><path d=\"M19.08,7H16V5a2,2,0,0,0-2-2H13V1a1,1,0,0,0-2,0V3H10A2,2,0,0,0,8,5V7H4.91A1.9,1.9,0,0,0,3,8.91V23a1,1,0,0,0,1,1H20a1,1,0,0,0,1-1V8.92A1.92,1.92,0,0,0,19.08,7ZM10,5h4V7H10Zm9,17H5V9H19Z\"/><path d=\"M14,19h2a1,1,0,0,0,0-2H14a1,1,0,0,0,0,2Z\"/><path d=\"M8,14h2a1,1,0,0,0,0-2H8a1,1,0,0,0,0,2Z\"/><path d=\"M8,19h2a1,1,0,0,0,0-2H8a1,1,0,0,0,0,2Z\"/></symbol>\n    <symbol id=\"contact--low\" viewBox=\"0 0 24 24\"><path d=\"M14.55,12.64A3.14,3.14,0,0,0,15,11a2.91,2.91,0,0,0-3-3,2.91,2.91,0,0,0-3,3,3.14,3.14,0,0,0,.45,1.64A4.82,4.82,0,0,0,7,17a1,1,0,0,0,1,1h8a1,1,0,0,0,1-1A4.76,4.76,0,0,0,14.55,12.64ZM11,11a.92.92,0,0,1,1-1,.92.92,0,0,1,1,1,.92.92,0,0,1-1,1A.92.92,0,0,1,11,11ZM9.14,16A2.76,2.76,0,0,1,12,14a2.77,2.77,0,0,1,2.87,2Z\"/><path d=\"M22,4H18a1,1,0,0,0-2,0H8A1,1,0,0,0,6,4H2A2,2,0,0,0,0,6V19a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4Zm0,15H2V6H6V8A1,1,0,0,0,8,8V6h8V8a1,1,0,0,0,2,0V6h4Z\"/></symbol>\n    <symbol id=\"controls--low\" viewBox=\"0 0 24 24\"><path d=\"M10,6A2,2,0,1,0,8,4,2,2,0,0,0,10,6Zm7,8a2,2,0,1,0-2-2A2,2,0,0,0,17,14Zm-7,8a2,2,0,1,0-2-2A2,2,0,0,0,10,22ZM6.13,19a4,4,0,0,1,7.74,0H23a1,1,0,0,1,0,2H13.87a4,4,0,0,1-7.74,0H1a1,1,0,0,1,0-2Zm7-8a4,4,0,0,1,7.74,0H23a1,1,0,0,1,0,2H20.87a4,4,0,0,1-7.74,0H1a1,1,0,0,1,0-2Zm-7-8a4,4,0,0,1,7.74,0H23a1,1,0,0,1,0,2H13.87A4,4,0,0,1,6.13,5H1A1,1,0,0,1,1,3Z\"/></symbol>\n    <symbol id=\"copy--low\" viewBox=\"0 0 24 24\"><polygon points=\"20 3.71 20 5 21.23 5 20 3.71\"/><path d=\"M19,7a1,1,0,0,1-1-1V2H12V16H22V7Z\"/><path d=\"M13,20a1,1,0,0,0-1,1v1H2V8H7A1,1,0,0,0,7,6H2A2,2,0,0,0,0,8V22a2,2,0,0,0,2,2H12a2,2,0,0,0,2-2V21A1,1,0,0,0,13,20Z\"/><path d=\"M23.45,4.42,19.8.61A2,2,0,0,0,18.38,0H12a2,2,0,0,0-2,2V16a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V5.79A2,2,0,0,0,23.45,4.42ZM20,3.71,21.23,5H20ZM12,16V2h6V6a1,1,0,0,0,1,1h3v9Z\"/></symbol>\n    <symbol id=\"currencty-usd--low\" viewBox=\"0 0 24 24\"><path d=\"M10.5,11a.5.5,0,0,1,0-1H11v1ZM13,13h.5a.5.5,0,0,1,0,1H13ZM9,14a1,1,0,0,0,0,2h2v1a1,1,0,0,0,2,0V16h.5a2.5,2.5,0,0,0,0-5H13V10h2a.94.94,0,0,0,1-1,.94.94,0,0,0-1-1H13V7a1,1,0,0,0-2,0V8h-.5a2.5,2.5,0,0,0,0,5H11v1Zm15-2A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"currency-convert-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M3,11.41l-1.29,1.3A1,1,0,0,1,.29,11.29l3-3a1,1,0,0,1,1.42,0l3,3a1,1,0,1,1-1.42,1.42L5,11.41V12A7,7,0,0,0,17,17a1,1,0,0,1,1.41,1.41A9,9,0,0,1,3,12Zm18,1.18,1.29-1.3a1,1,0,0,1,1.42,1.42l-3,3a1,1,0,0,1-1.42,0l-3-3a1,1,0,0,1,1.42-1.42L19,12.59V12A7,7,0,0,0,7.05,7.05,1,1,0,0,1,5.64,5.64,9,9,0,0,1,21,12ZM9,13a1,1,0,0,1,0-2v-.92a3,3,0,0,1,3-3h0a3,3,0,0,1,3,3,1,1,0,1,1-2,0,1,1,0,0,0-1-1h0a1,1,0,0,0-1,1V11h1a1,1,0,0,1,0,2H11v1.12a1,1,0,0,0,1,1h0a1,1,0,0,0,1-1,1,1,0,1,1,2,0,3,3,0,0,1-3,3h0a3,3,0,0,1-3-3Z\"/></symbol>\n    <symbol id=\"currency-convert--low\" viewBox=\"0 0 24 24\"><path d=\"M10.5,11H11V10h-.5a.5.5,0,0,0,0,1ZM13,13v1h.5a.5.5,0,0,0,0-1ZM9,14h2V13h-.5a2.5,2.5,0,0,1,0-5H11V7a1,1,0,0,1,2,0V8h2a.94.94,0,0,1,1,1,.94.94,0,0,1-1,1H13v1h.5a2.5,2.5,0,0,1,0,5H13v1a1,1,0,0,1-2,0V16H9a1,1,0,0,1,0-2ZM3,11.41l-1.29,1.3A1,1,0,0,1,.29,11.29l3-3a1,1,0,0,1,1.42,0l3,3a1,1,0,1,1-1.42,1.42L5,11.41V12A7,7,0,0,0,17,17a1,1,0,0,1,1.41,1.41A9,9,0,0,1,3,12Zm18,1.18,1.29-1.3a1,1,0,0,1,1.42,1.42l-3,3a1,1,0,0,1-1.42,0l-3-3a1,1,0,0,1,1.42-1.42L19,12.59V12A7,7,0,0,0,7.05,7.05,1,1,0,0,1,5.64,5.64,9,9,0,0,1,21,12Z\"/></symbol>\n    <symbol id=\"currency-eur--low\" viewBox=\"0 0 24 24\"><path d=\"M16,10a1,1,0,0,1-2,0,2,2,0,0,0-4,0v4a2,2,0,0,0,4,0,1,1,0,0,1,2,0,4,4,0,0,1-8,0V10a4,4,0,0,1,8,0Zm-5,2a1,1,0,0,1,0,2H7a1,1,0,0,1,0-2Zm0-3a1,1,0,0,1,0,2H7A1,1,0,0,1,7,9Zm13,3A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"currency--low\" viewBox=\"0 0 24 24\"><path d=\"M6.5,7a.5.5,0,0,1,0-1H7V7ZM9,9h.5a.5.5,0,0,1,0,1H9ZM5,10a.94.94,0,0,0-1,1,.94.94,0,0,0,1,1H7a.94.94,0,0,0,1,1,.94.94,0,0,0,1-1h.5a2.5,2.5,0,0,0,0-5H9V6h2a.94.94,0,0,0,1-1,.94.94,0,0,0-1-1H9A.94.94,0,0,0,8,3,.94.94,0,0,0,7,4H6.5a2.5,2.5,0,0,0,0,5H7v1ZM16,8a8,8,0,1,1-8,8,8,8,0,1,1,8-8Zm-3,7v-.76a7.86,7.86,0,0,1-3,1.51A1.07,1.07,0,0,1,10,16a6,6,0,1,0,6-6,1.07,1.07,0,0,1-.25,0,7,7,0,0,1-.36,1.09A2.88,2.88,0,0,1,16,11h0a3,3,0,0,1,3,3,1,1,0,0,1-2,0,1,1,0,0,0-1-1h0a1,1,0,0,0-1,1v1h1a1,1,0,0,1,0,2H15v1a1,1,0,0,0,1,1h0a1,1,0,0,0,1-1,1,1,0,1,1,2,0,3,3,0,0,1-3,3h0a3,3,0,0,1-3-3V17a1,1,0,0,1,0-2ZM2,8A6,6,0,1,0,8,2,6,6,0,0,0,2,8Z\"/></symbol>\n    <symbol id=\"customer-support--low\" viewBox=\"0 0 24 24\"><path d=\"M13,0H11A11,11,0,0,0,0,11H0v7a1,1,0,0,0,1,1H2v.51C2,21.42,4,23,6,23H8.48a2.42,2.42,0,0,0,1.95,1h3.14A2.43,2.43,0,0,0,16,21.57v-.14A2.43,2.43,0,0,0,13.57,19H10.43A2.44,2.44,0,0,0,8,21H6c-1,0-2-.81-2-1.49v-.68A3,3,0,0,0,6,16V13a3,3,0,0,0-3-3h-1A9,9,0,0,1,11,2h2a9,9,0,0,1,8.94,8H21a3,3,0,0,0-3,3V16a3,3,0,0,0,3,3h2a1,1,0,0,0,1-1V11A11,11,0,0,0,13,0ZM10,21.43a.43.43,0,0,1,.43-.43h3.14a.43.43,0,0,1,.43.43v.14a.43.43,0,0,1-.43.43H10.43a.43.43,0,0,1-.43-.43ZM4,13V16a.94.94,0,0,1-.92.95H3l-.11,0H2V12H3A1,1,0,0,1,4,13Zm18,4H21a1,1,0,0,1-1-1V13a1,1,0,0,1,1-1h1Z\"/></symbol>\n    <symbol id=\"delete--low\" viewBox=\"0 0 24 24\"><path d=\"M16,19a1,1,0,0,1-2,0V10a1,1,0,0,1,2,0ZM8,10a1,1,0,0,1,2,0v9a1,1,0,0,1-2,0ZM19,7H5V22H19ZM14,5V2H10V5Zm2,0h7a1,1,0,0,1,0,2H21V22a2.06,2.06,0,0,1-2,2H5a2.07,2.07,0,0,1-2-2V7H1A1,1,0,0,1,1,5H8V2a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2Z\"/></symbol>\n    <symbol id=\"device-keyboard--low\" viewBox=\"0 0 24 24\"><path d=\"M10,15h4a1,1,0,0,0,0-2H10a1,1,0,0,0,0,2m8,0a1,1,0,1,0-1-1,1,1,0,0,0,1,1m-8-4a1,1,0,1,0-1-1,1,1,0,0,0,1,1m4,0a1,1,0,1,0-1-1,1,1,0,0,0,1,1m4,0a1,1,0,1,0-1-1,1,1,0,0,0,1,1M6,15a1,1,0,1,0-1-1,1,1,0,0,0,1,1m0-4a1,1,0,1,0-1-1,1,1,0,0,0,1,1M3,20H21a3,3,0,0,0,3-3V7a3,3,0,0,0-3-3H3A3,3,0,0,0,0,7V17A3,3,0,0,0,3,20ZM2,7A1,1,0,0,1,3,6H21a1,1,0,0,1,1,1V17a1,1,0,0,1-1,1H3a1,1,0,0,1-1-1Z\"/></symbol>\n    <symbol id=\"device-laptop--low\" viewBox=\"0 0 24 24\"><path d=\"M22,21H2a2,2,0,0,1-2-2V15a1,1,0,0,1,1-1H23a1,1,0,0,1,1,1v4A2,2,0,0,1,22,21ZM2,16v3H22V16Zm19,0H3a1,1,0,0,1-1-1V5A2,2,0,0,1,4,3H20a2,2,0,0,1,2,2V15A1,1,0,0,1,21,16Zm-1-2V5H4v9Z\"/></symbol>\n    <symbol id=\"device-mobile--low\" viewBox=\"0 0 24 24\"><path d=\"M4,3A3.08,3.08,0,0,1,7.15,0h9.7A3.08,3.08,0,0,1,20,3V21a3.08,3.08,0,0,1-3.15,3H7.15A3.08,3.08,0,0,1,4,21ZM18,20H6v1a1.09,1.09,0,0,0,1.15,1h9.7A1.09,1.09,0,0,0,18,21ZM18,4V3a1.09,1.09,0,0,0-1.15-1H7.15A1.09,1.09,0,0,0,6,3V4Zm0,2H6V18H18Z\"/></symbol>\n    <symbol id=\"device-monitor--low\" viewBox=\"0 0 24 24\"><path d=\"M3,20h8v2H9a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2H13V20h8a3,3,0,0,0,3-3V3a3,3,0,0,0-3-3H3A3,3,0,0,0,0,3V17A3,3,0,0,0,3,20ZM2,3A1,1,0,0,1,3,2H21a1,1,0,0,1,1,1V14H2ZM22,16v1a1,1,0,0,1-1,1H3a1,1,0,0,1-1-1V16Z\"/></symbol>\n    <symbol id=\"device-mouse--low\" viewBox=\"0 0 24 24\"><path d=\"M20,16V8A8,8,0,0,0,4,8v8a8,8,0,0,0,16,0M6,16V8a6,6,0,0,1,5-5.91V9a1,1,0,0,0,2,0V2.09A6,6,0,0,1,18,8v8A6,6,0,0,1,6,16\"/></symbol>\n    <symbol id=\"device-printer--low\" viewBox=\"0 0 24 24\"><path d=\"M22,14H20V11a2,2,0,0,0-2-2H6a2,2,0,0,0-2,2v3H2V6H22Zm-4,8H6V11H18V22ZM6,2H18V4H6ZM22,4H20V2a2,2,0,0,0-2-2H6A2,2,0,0,0,4,2V4H2A2,2,0,0,0,0,6v8a2,2,0,0,0,2,2H4v6a2,2,0,0,0,2,2H18a2,2,0,0,0,2-2V16h2a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM12,18a1,1,0,0,1,0,2H9a1,1,0,0,1,0-2Zm3-4a1,1,0,0,1,0,2H9a1,1,0,0,1,0-2Z\"/></symbol>\n    <symbol id=\"device-secure--low\" viewBox=\"0 0 24 24\"><path d=\"M10,15h4V12H10Zm1.5-5h1V9.54a.5.5,0,1,0-1,0Zm-2,0V9.54a2.5,2.5,0,1,1,5,0V10H15a1,1,0,0,1,1,1v5a1,1,0,0,1-1,1H9a1,1,0,0,1-1-1V11a1,1,0,0,1,1-1ZM4,3A3.08,3.08,0,0,1,7.15,0h9.7A3.08,3.08,0,0,1,20,3V21a3.08,3.08,0,0,1-3.15,3H7.15A3.08,3.08,0,0,1,4,21ZM18,20H6v1a1.09,1.09,0,0,0,1.15,1h9.7A1.09,1.09,0,0,0,18,21ZM18,4V3a1.09,1.09,0,0,0-1.15-1H7.15A1.09,1.09,0,0,0,6,3V4Zm0,2H6V18H18Z\"/></symbol>\n    <symbol id=\"device-servers--low\" viewBox=\"0 0 24 24\"><path d=\"M7,7.5h6a1,1,0,0,0,0-2H7a1,1,0,0,0,0,2m10,0a1,1,0,1,0-1-1,1,1,0,0,0,1,1m-4,9H7a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2m4,0a1,1,0,1,0,1,1,1,1,0,0,0-1-1m4.41,6.92A2,2,0,0,0,22,22V3a3,3,0,0,0-3-3H5A3,3,0,0,0,2,3V22a2,2,0,0,0,2,2H20A2,2,0,0,0,21.41,23.42ZM5,2H19a1,1,0,0,1,1,1v8H4V3A1,1,0,0,1,5,2ZM4,22V13H20v9H4Z\"/></symbol>\n    <symbol id=\"device-tablet--low\" viewBox=\"0 0 24 24\"><path d=\"M19,24a3,3,0,0,0,3-3V3a3,3,0,0,0-3-3H5A3,3,0,0,0,2,3V21a3,3,0,0,0,3,3ZM4,3A1,1,0,0,1,5,2H19a1,1,0,0,1,1,1V4H4ZM4,18H20V6H4Zm0,3V20H20v1a1,1,0,0,1-1,1H5A1,1,0,0,1,4,21Z\"/></symbol>\n    <symbol id=\"device-tv--low\" viewBox=\"0 0 24 24\"><path d=\"M23,3H1A1,1,0,0,0,0,4V17a1,1,0,0,0,1,1H3.13l-1,1.45a1,1,0,1,0,1.66,1.1L5.54,18H18.46l1.71,2.55a1,1,0,0,0,1.66-1.1l-1-1.45H23a1,1,0,0,0,1-1V4A1,1,0,0,0,23,3ZM22,16H2V5H22Z\"/><circle cx=\"19\" cy=\"13\" r=\"1\"/></symbol>\n    <symbol id=\"document-add--low\" viewBox=\"0 0 24 24\"><path d=\"M18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59ZM13,13h3a1,1,0,0,1,0,2H13v3a1,1,0,0,1-2,0V15H8a1,1,0,0,1,0-2h3V10a1,1,0,0,1,2,0Z\"/></symbol>\n    <symbol id=\"document-avi--low\" viewBox=\"0 0 24 24\"><path d=\"M15.7,10.21h.86v4.72H15.7Zm-2.14,4.72h-1l-1.52-4.72H12l.64,2.14c.18.6.34,1.15.46,1.72h0a16.1,16.1,0,0,1,.48-1.7l.68-2.16h.92Zm-5-2H9.74l-.37-1.16c-.09-.29-.17-.61-.24-.88h0c-.07.27-.14.6-.23.88Zm1.36.65H8.39L8,14.93H7.09l1.52-4.72H9.7l1.54,4.72h-.93ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-jpg--low\" viewBox=\"0 0 24 24\"><path d=\"M17.27,12.32v2.39a4.64,4.64,0,0,1-1.51.27,2.58,2.58,0,0,1-1.85-.63,2.33,2.33,0,0,1-.66-1.74,2.39,2.39,0,0,1,2.62-2.45,3,3,0,0,1,1.26.23l-.19.69a2.6,2.6,0,0,0-1.07-.2,1.58,1.58,0,0,0-1.72,1.69,1.56,1.56,0,0,0,1.64,1.71,1.55,1.55,0,0,0,.65-.1V13h-.83v-.68Zm-6.83-1.44v1.59a1.56,1.56,0,0,0,.42,0c.64,0,1-.32,1-.87s-.36-.81-1-.81A1.71,1.71,0,0,0,10.44,10.88Zm-.86,4V10.27a8.37,8.37,0,0,1,1.32-.09,2.14,2.14,0,0,1,1.39.38,1.32,1.32,0,0,1,.46,1,1.44,1.44,0,0,1-.4,1.07,2.08,2.08,0,0,1-1.49.51,2.42,2.42,0,0,1-.42,0v1.78Zm-1.8-1.69v-3h.86v3.06C8.64,14.57,8,15,7.07,15a2.26,2.26,0,0,1-.72-.12l.1-.69a2,2,0,0,0,.53.08C7.47,14.28,7.78,14.06,7.78,13.24ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-json--low\" viewBox=\"0 0 24 24\"><path d=\"M16,10v3h1a1,1,0,0,1,0,2H16v3a1,1,0,0,1-1,1H14a1,1,0,0,1,0-2V11a1,1,0,0,1,0-2h1A1,1,0,0,1,16,10Zm-6,1v6a1,1,0,0,1,0,2H9a1,1,0,0,1-1-1V15H7a1,1,0,0,1,0-2H8V10A1,1,0,0,1,9,9h1a1,1,0,0,1,0,2Zm8.6-6L17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-mov--low\" viewBox=\"0 0 24 24\"><path d=\"M17.62,14.93h-1L15.1,10.21H16l.65,2.14c.18.6.33,1.15.46,1.72h0c.13-.56.3-1.13.49-1.7l.68-2.16h.92Zm-4.82-4.1c-.86,0-1.31.79-1.31,1.76s.48,1.72,1.31,1.72,1.3-.77,1.3-1.75S13.66,10.83,12.8,10.83Zm0-.7A2.18,2.18,0,0,1,15,12.52,2.24,2.24,0,0,1,12.75,15a2.19,2.19,0,0,1-2.17-2.41A2.26,2.26,0,0,1,12.82,10.13Zm-3.51,4.8L9.22,13c0-.61-.06-1.34-.06-2h0c-.15.58-.35,1.21-.56,1.81l-.68,2H7.23l-.63-2c-.18-.61-.35-1.25-.48-1.84h0c0,.62-.05,1.37-.08,2l-.11,1.9h-.8l.31-4.72H6.57l.61,1.9c.17.55.32,1.11.43,1.64h0c.12-.52.28-1.1.46-1.65l.66-1.89H9.88l.27,4.72ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-pdf--low\" viewBox=\"0 0 24 24\"><path d=\"M15.06,14.93V10.21h2.73v.71H15.92v1.3h1.74v.71H15.92v2Zm-3.92-4v3.37a3.4,3.4,0,0,0,.48,0,1.61,1.61,0,0,0,1.78-1.8,1.49,1.49,0,0,0-1.67-1.64A2.66,2.66,0,0,0,11.14,10.9Zm-.86,4V10.27a9.16,9.16,0,0,1,1.37-.09,2.91,2.91,0,0,1,1.93.54,2.12,2.12,0,0,1,.73,1.74,2.41,2.41,0,0,1-.73,1.87,3.15,3.15,0,0,1-2.14.65A8.31,8.31,0,0,1,10.28,14.91Zm-3.06-4v1.59a1.66,1.66,0,0,0,.42,0c.65,0,1-.32,1-.87s-.37-.81-1-.81A1.8,1.8,0,0,0,7.22,10.88Zm-.85,4V10.27a8.22,8.22,0,0,1,1.31-.09,2.17,2.17,0,0,1,1.4.38,1.32,1.32,0,0,1,.46,1,1.41,1.41,0,0,1-.41,1.07,2,2,0,0,1-1.49.51,2.5,2.5,0,0,1-.42,0v1.78ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-png--low\" viewBox=\"0 0 24 24\"><path d=\"M18.27,12.32v2.39a4.71,4.71,0,0,1-1.52.27,2.58,2.58,0,0,1-1.85-.63,2.37,2.37,0,0,1-.66-1.74,2.4,2.4,0,0,1,2.63-2.45,3,3,0,0,1,1.25.23l-.19.69a2.57,2.57,0,0,0-1.07-.2,1.57,1.57,0,0,0-1.71,1.69,1.56,1.56,0,0,0,1.63,1.71,1.64,1.64,0,0,0,.66-.1V13H16.6v-.68Zm-7.72,2.61H9.76V10.21h1l1.21,2a12.56,12.56,0,0,1,.81,1.59h0c0-.63-.07-1.24-.07-2V10.21h.79v4.72h-.88l-1.24-2.07a16.79,16.79,0,0,1-.84-1.63h0c0,.61,0,1.23,0,2Zm-3.85-4v1.59a1.56,1.56,0,0,0,.42,0c.64,0,1-.32,1-.87s-.36-.81-1-.81A1.77,1.77,0,0,0,6.7,10.88Zm-.86,4V10.27a8.37,8.37,0,0,1,1.32-.09,2.14,2.14,0,0,1,1.39.38,1.32,1.32,0,0,1,.46,1,1.44,1.44,0,0,1-.4,1.07,2,2,0,0,1-1.49.51,2.5,2.5,0,0,1-.42,0v1.78ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-xls--low\" viewBox=\"0 0 24 24\"><path d=\"M14.28,14.78l.18-.72a2.4,2.4,0,0,0,1.15.3c.55,0,.86-.26.86-.64s-.24-.57-.84-.79c-.78-.28-1.28-.69-1.28-1.37S15,10.21,16,10.21a2.56,2.56,0,0,1,1.13.23l-.21.7a1.9,1.9,0,0,0-.94-.23c-.54,0-.78.3-.78.57s.27.53.9.78c.82.3,1.22.72,1.22,1.4s-.57,1.41-1.79,1.41A2.8,2.8,0,0,1,14.28,14.78ZM11,15V10.28h.86v4h1.94V15Zm-.63,0h-1l-.51-.94c-.2-.36-.33-.61-.47-.89h0a8.7,8.7,0,0,1-.43.89L7.51,15h-1l1.4-2.39L6.57,10.28h1l.51,1c.16.3.27.53.39.8h0c.13-.3.22-.51.37-.8l.5-1h1L9,12.58ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document-xml--low\" viewBox=\"0 0 24 24\"><path d=\"M15.74,15V10.28h.87v4h1.93V15ZM14,15l-.09-1.93c0-.6-.06-1.34-.06-2h0c-.15.58-.35,1.22-.56,1.81l-.68,2H12l-.63-2c-.18-.6-.35-1.25-.47-1.84h0c0,.62-.05,1.37-.08,2L10.64,15h-.8l.31-4.72h1.14l.61,1.9c.17.55.32,1.11.44,1.64h0c.12-.51.28-1.1.47-1.65l.65-1.89H14.6L14.87,15ZM9.32,15h-1l-.51-.94c-.2-.36-.33-.61-.46-.89h0a8.4,8.4,0,0,1-.42.89L6.43,15h-1l1.4-2.39L5.5,10.28h1l.51,1c.16.3.27.53.4.8h0c.13-.3.22-.51.37-.8l.51-1h1l-1.38,2.3ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"document--low\" viewBox=\"0 0 24 24\"><path d=\"M18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"drag--low\" viewBox=\"0 0 24 24\"><path d=\"M11.29.29a1,1,0,0,1,1.42,0l3,3a1,1,0,0,1-1.42,1.42L13,3.41V9a1,1,0,0,1-2,0V3.41L9.71,4.71A1,1,0,0,1,8.29,3.29Zm1.42,23.42a1,1,0,0,1-1.42,0l-3-3a1,1,0,0,1,1.42-1.42L11,20.59V15a1,1,0,0,1,2,0v5.59l1.29-1.3a1,1,0,0,1,1.42,1.42ZM.29,12.71a1,1,0,0,1,0-1.42l3-3A1,1,0,0,1,4.71,9.71L3.41,11H9a1,1,0,0,1,0,2H3.41l1.3,1.29a1,1,0,1,1-1.42,1.42Zm23.42-1.42a1,1,0,0,1,0,1.42l-3,3a1,1,0,0,1-1.42-1.42L20.59,13H15a1,1,0,0,1,0-2h5.59l-1.3-1.29a1,1,0,0,1,1.42-1.42Z\"/></symbol>\n    <symbol id=\"edit--low\" viewBox=\"0 0 24 24\"><path d=\"M23.71,4.41,19.59.29a1,1,0,0,0-1.42,0L.36,18.17a1,1,0,0,0-.29.69L0,23a1,1,0,0,0,1,1H5.19a1,1,0,0,0,.71-.29l13.91-14h0l3.89-3.9A1,1,0,0,0,23.71,4.41ZM4.77,22H2l0-2.71L15,6.31,17.7,9ZM19.11,7.61l-2.7-2.72,2.47-2.47,2.71,2.7Z\"/></symbol>\n    <symbol id=\"email--low\" viewBox=\"0 0 24 24\"><path d=\"M21,3H3A3,3,0,0,0,0,6V18a3,3,0,0,0,3,3H21a3,3,0,0,0,3-3V6A3,3,0,0,0,21,3Zm-4.09,8.5L22,6.41V16.59ZM2,16.59V6.41L7.09,11.5ZM3.41,5H20.59l-7.9,7.89a.93.93,0,0,1-1.38,0ZM3,19a1,1,0,0,1-.5-.16.92.92,0,0,0,.21-.13l5.79-5.8,1.39,1.4a2.94,2.94,0,0,0,4.22,0l1.39-1.4,5.79,5.8a.92.92,0,0,0,.21.13A1,1,0,0,1,21,19Z\"/></symbol>\n    <symbol id=\"error--low\" viewBox=\"0 0 24 24\"><path d=\"M13,18a1,1,0,0,1-2,0V17a1,1,0,0,1,2,0Zm0-5a1,1,0,0,1-2,0V6a1,1,0,0,1,2,0Zm11-1A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"export--low\" viewBox=\"0 0 24 24\"><path d=\"M14,20a1,1,0,0,1,2,0v2a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V2A2,2,0,0,1,2,0H14a2,2,0,0,1,2,2V4a1,1,0,0,1-2,0V2H2V22H14Zm6.59-7H7a1,1,0,0,1,0-2H20.59l-3.3-3.29a1,1,0,0,1,1.42-1.42l5,5a1,1,0,0,1,0,1.42l-5,5a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"eyedropper--low\" viewBox=\"0 0 24 24\"><path d=\"M22.85,1.15a3.92,3.92,0,0,0-5.54,0l-2,2.05-.4-.41A1,1,0,1,0,13.46,4.2l.41.42L.29,18.3A1,1,0,0,0,0,19v4a1,1,0,0,0,1,1H5a1,1,0,0,0,.71-.29L19.37,10.14l.44.43a1,1,0,1,0,1.42-1.41l-.44-.43,2.07-2.05A3.91,3.91,0,0,0,22.85,1.15ZM4.59,22H2V19.41L15.29,6,18,8.72ZM21.44,5.26,19.38,7.31l-2.69-2.7,2-2.05a1.91,1.91,0,0,1,2.71,2.7Z\"/></symbol>\n    <symbol id=\"favorite-star-border--low\" viewBox=\"0 0 24 24\"><path d=\"M7.61,6.81l2.7-5.73a1.86,1.86,0,0,1,3.38,0l2.7,5.73,6,.91A1.93,1.93,0,0,1,23.45,11l-4.38,4.47,1,6.32a1.89,1.89,0,0,1-2.74,2l-5.37-3-5.37,3a1.89,1.89,0,0,1-2.74-2l1-6.32L.55,11A1.93,1.93,0,0,1,1.6,7.72ZM12,2.19,9.4,7.71A1.87,1.87,0,0,1,8,8.77l-5.91.9,4.3,4.4a1.94,1.94,0,0,1,.53,1.67l-1,6.15L11.11,19a1.82,1.82,0,0,1,1.78,0l5.21,2.87-1-6.15a1.94,1.94,0,0,1,.53-1.67l4.3-4.4L16,8.77A1.87,1.87,0,0,1,14.6,7.71Z\"/></symbol>\n    <symbol id=\"favorite-star--low\" viewBox=\"0 0 24 24\"><path d=\"M7.61,6.81l2.7-5.73a1.86,1.86,0,0,1,3.38,0l2.7,5.73,6,.91A1.93,1.93,0,0,1,23.45,11l-4.38,4.47,1,6.32a1.89,1.89,0,0,1-2.74,2l-5.37-3-5.37,3a1.89,1.89,0,0,1-2.74-2l1-6.32L.55,11A1.93,1.93,0,0,1,1.6,7.72Z\"/></symbol>\n    <symbol id=\"file-download--low\" viewBox=\"0 0 24 24\"><path d=\"M22,17a1,1,0,0,1,2,0v5a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V17a1,1,0,0,1,2,0v5H22ZM11,14.59V1a1,1,0,0,1,2,0V14.59l3.29-3.3a1,1,0,0,1,1.42,1.42l-5,5a1,1,0,0,1-1.42,0l-5-5a1,1,0,0,1,1.42-1.42Z\"/></symbol>\n    <symbol id=\"file-upload--low\" viewBox=\"0 0 24 24\"><path d=\"M22,17a1,1,0,0,1,2,0v5a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V17a1,1,0,0,1,2,0v5H22ZM13,3.41V17a1,1,0,0,1-2,0V3.41L7.71,6.71A1,1,0,0,1,6.29,5.29l5-5a1,1,0,0,1,1.42,0l5,5a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"filter-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M15,13.41V23a1,1,0,0,1-1.6.8l-4-3A1,1,0,0,1,9,20V13.41L.29,4.71A1.05,1.05,0,0,1,0,4V2A2,2,0,0,1,2,0H22a2,2,0,0,1,2,2V4a1.05,1.05,0,0,1-.29.71ZM13,21V13a1,1,0,0,1,.29-.71L22,3.58V2H2V3.58l8.71,8.71A1,1,0,0,1,11,13v6.5Z\"/></symbol>\n    <symbol id=\"filter-applied--low\" viewBox=\"0 0 24 24\"><path d=\"M15.29.29a1,1,0,1,1,1.42,1.42l-5,5a1,1,0,0,1-1.42,0l-3-3A1,1,0,1,1,8.71,2.29L11,4.59ZM18,10a2,2,0,1,0,2-2A2,2,0,0,0,18,10Zm-8,7a2,2,0,1,0,2-2A2,2,0,0,0,10,17ZM2,10A2,2,0,1,0,4,8,2,2,0,0,0,2,10ZM5,6.13a4,4,0,0,1,0,7.74V23a1,1,0,0,1-2,0V13.87A4,4,0,0,1,3,6.13V4A1,1,0,0,1,5,4Zm8,7a4,4,0,0,1,0,7.74V23a1,1,0,0,1-2,0V20.87a4,4,0,0,1,0-7.74V11a1,1,0,0,1,2,0Zm8-7a4,4,0,0,1,0,7.74V23a1,1,0,0,1-2,0V13.87a4,4,0,0,1,0-7.74V4a1,1,0,0,1,2,0Z\"/></symbol>\n    <symbol id=\"filter--low\" viewBox=\"0 0 24 24\"><path d=\"M18,10a2,2,0,1,0,2-2A2,2,0,0,0,18,10Zm-8,7a2,2,0,1,0,2-2A2,2,0,0,0,10,17ZM2,10A2,2,0,1,0,4,8,2,2,0,0,0,2,10ZM5,6.13a4,4,0,0,1,0,7.74V23a1,1,0,0,1-2,0V13.87A4,4,0,0,1,3,6.13V1A1,1,0,0,1,5,1Zm8,7a4,4,0,0,1,0,7.74V23a1,1,0,0,1-2,0V20.87a4,4,0,0,1,0-7.74V1a1,1,0,0,1,2,0Zm8-7a4,4,0,0,1,0,7.74V23a1,1,0,0,1-2,0V13.87a4,4,0,0,1,0-7.74V1a1,1,0,0,1,2,0Z\"/></symbol>\n    <symbol id=\"fingerprint--low\" viewBox=\"0 0 24 24\"><path d=\"M11.08,15.05a.93.93,0,1,1,1.86,0,5.54,5.54,0,0,0,1.39,3.71,3.92,3.92,0,0,0,3.45.81A.93.93,0,0,1,18,21.46a5.75,5.75,0,0,1-5-1.33A7.32,7.32,0,0,1,11.08,15.05Zm-.53,7.11a.93.93,0,0,1-1.32,1.31C5.76,20,4.76,12.38,9,9.49s8.87.59,8.87,5.75a.93.93,0,1,1-1.86,0c0-3.79-3.23-6.09-6-4.22C7,13.12,7.8,19.43,10.55,22.16Zm4.84-7.07A1.79,1.79,0,0,0,16.93,17a1.78,1.78,0,0,0,1.54-1.94c0-4-2.78-7.55-6.47-7.55-4.51,0-7.63,4.78-5.79,11.62a.93.93,0,0,1-1.8.48c-2.14-8,1.77-14,7.59-14,4.83,0,8.33,4.45,8.33,9.41a3.61,3.61,0,0,1-3.4,3.8,3.6,3.6,0,0,1-3.4-3.63s0-.06,0-.09A1.78,1.78,0,0,0,12,13.23c-.79,0-1.49.83-1.54,2a7.24,7.24,0,0,0,4.66,7A.93.93,0,1,1,14.48,24a9.07,9.07,0,0,1-5.89-8.82A3.65,3.65,0,0,1,12,11.37,3.59,3.59,0,0,1,15.39,15ZM20.88,8.3a.93.93,0,1,1-1.63.9C16,3.41,8.43,3,4.74,9.28a.93.93,0,0,1-1.61-.94C7.57.81,17,1.29,20.88,8.3ZM18.15,2a.94.94,0,0,1,.18,1.31.93.93,0,0,1-1.3.18,8.46,8.46,0,0,0-10,0A.93.93,0,1,1,5.93,2,10.34,10.34,0,0,1,18.15,2Z\"/></symbol>\n    <symbol id=\"folder-a-z--low\" viewBox=\"0 0 24 24\"><path d=\"M22,4H13V2a2,2,0,0,0-2-2H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM2,2h9V4H2ZM22,22H2V6H22Z\"/><rect width=\"1.79\" height=\"0.6\" x=\"11.35\" y=\"13.84\"/><polygon points=\"17.1 15.29 14.69 15.29 14.69 15.26 17.07 11.79 17.07 11.28 13.75 11.28 13.75 12 15.95 12 15.95 12.02 13.53 15.52 13.53 16 17.1 16 17.1 15.29\"/><path d=\"M8.35,11.28,6.84,16h.89l.4-1.34h1.5L10.06,16H11L9.45,11.28ZM8.27,14l.37-1.16c.08-.28.15-.61.22-.88h0c.07.27.15.59.24.88L9.48,14Z\"/></symbol>\n    <symbol id=\"folder-account--low\" viewBox=\"0 0 24 24\"><path d=\"M8,12a3.93,3.93,0,0,0,.89,2.48A5,5,0,0,0,6,19a1,1,0,0,0,2,0,3,3,0,0,1,3-3h2a3,3,0,0,1,3,3,1,1,0,0,0,2,0,5,5,0,0,0-2.89-4.52A3.93,3.93,0,0,0,16,12a4,4,0,0,0-8,0Zm6,0a2,2,0,1,1-2-2A2,2,0,0,1,14,12Z\"/><path d=\"M22,4H13V2a2,2,0,0,0-2-2H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM2,2h9V4H2ZM22,22H2V6H22Z\"/></symbol>\n    <symbol id=\"folder-drilldown--low\" viewBox=\"0 0 24 24\"><path d=\"M22,4H13V2a2,2,0,0,0-2-2H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM2,2h9V4H2ZM22,22H2V6H22Z\"/><path d=\"M10.29,9.29l-3,3a1,1,0,1,0,1.42,1.42L10,12.41V18a1,1,0,0,0,1,1h5a1,1,0,0,0,0-2H12V12.41l1.29,1.3a1,1,0,0,0,1.42-1.42l-3-3A1,1,0,0,0,10.29,9.29Z\"/></symbol>\n    <symbol id=\"folder-multiple--low\" viewBox=\"0 0 24 24\"><path d=\"M22,10H21a1,1,0,0,0,0,2h1V22H8V21a1,1,0,0,0-2,0v1a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V12A2,2,0,0,0,22,10Z\"/><path d=\"M18,16V6a2,2,0,0,0-2-2H11V2A2,2,0,0,0,9,0H2A2,2,0,0,0,0,2V16a2,2,0,0,0,2,2H16A2,2,0,0,0,18,16ZM2,2H9V4H2ZM2,6H16V16H2Z\"/></symbol>\n    <symbol id=\"folder--low\" viewBox=\"0 0 24 24\"><path d=\"M22,4H13V2a2,2,0,0,0-2-2H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM2,2h9V4H2ZM22,22H2V6H22Z\"/></symbol>\n    <symbol id=\"gender-female--low\" viewBox=\"0 0 24 24\"><path d=\"M11,21v2.1a1,1,0,0,0,2,0V21h3a1,1,0,0,0,0-2H13V15.88a8,8,0,1,0-2,0V19H8a1,1,0,1,0,0,2ZM6,8a6,6,0,1,1,6,6A6,6,0,0,1,6,8Z\"/></symbol>\n    <symbol id=\"gift--low\" viewBox=\"0 0 24 24\"><path d=\"M22,4H18.82A3,3,0,0,0,13.88.88,21.4,21.4,0,0,0,12,3.25,21.4,21.4,0,0,0,10.12.88,3,3,0,0,0,5.18,4H2A2,2,0,0,0,0,6V9a2,2,0,0,0,2,2H3V22a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V11h1a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM16.7,2.29A1,1,0,0,1,16,4H13.92a17.14,17.14,0,0,1,1.37-1.71A1,1,0,0,1,16.7,2.29ZM7.29,3.71A1,1,0,1,1,8.71,2.29,16,16,0,0,1,10.07,4H8A1,1,0,0,1,7.29,3.71ZM2,6h9V9H2Zm3,5h6V22H5ZM19,22H13V11h6ZM22,9H13V6h9Z\"/></symbol>\n    <symbol id=\"global--low\" viewBox=\"0 0 24 24\"><path d=\"M24,12A12,12,0,0,0,12.07,0h-.14a12,12,0,0,0,0,24h.14A12,12,0,0,0,24,12ZM9.12,14a16.73,16.73,0,0,1,0-4h5.75a16.73,16.73,0,0,1,0,4Zm5.39,2A15.21,15.21,0,0,1,12,21.38,15.16,15.16,0,0,1,9.49,16Zm-5-8A15.16,15.16,0,0,1,12,2.62,15.21,15.21,0,0,1,14.51,8Zm7.39,2H21.8a10.1,10.1,0,0,1,0,4H16.88A19.1,19.1,0,0,0,16.88,10Zm4.28-2H16.55a17.62,17.62,0,0,0-2.38-5.76A10,10,0,0,1,21.16,8ZM9.82,2.25A17.5,17.5,0,0,0,7.43,8H2.84A10,10,0,0,1,9.82,2.25ZM7.11,14H2.2a10.1,10.1,0,0,1,0-4H7.11A17.83,17.83,0,0,0,7.11,14ZM2.84,16H7.43a17.5,17.5,0,0,0,2.39,5.75A10,10,0,0,1,2.84,16Zm11.33,5.76A17.62,17.62,0,0,0,16.55,16h4.61A10,10,0,0,1,14.17,21.76Z\"/></symbol>\n    <symbol id=\"glossary--low\" viewBox=\"0 0 24 24\"><path d=\"M2,20H8a3,3,0,0,1,3,3,1,1,0,0,0,2,0,3,3,0,0,1,3-3h6a2,2,0,0,0,2-2V2a2,2,0,0,0-2-2H2A2,2,0,0,0,0,2V18A2,2,0,0,0,2,20Zm20-2H16a4.92,4.92,0,0,0-3,1V2h9ZM2,2h9V19a4.92,4.92,0,0,0-3-1H2ZM16,7a1,1,0,0,1,0-2h3a1,1,0,0,1,0,2Zm0,4a1,1,0,0,1,0-2h3a1,1,0,0,1,0,2Zm3,2a1,1,0,0,1,0,2H16a1,1,0,0,1,0-2ZM5,7A1,1,0,0,1,5,5H8A1,1,0,0,1,8,7Zm0,4A1,1,0,0,1,5,9H8a1,1,0,0,1,0,2Zm4,3a1,1,0,0,1-1,1H5a1,1,0,0,1,0-2H8A1,1,0,0,1,9,14Z\"/></symbol>\n    <symbol id=\"guide--low\" viewBox=\"0 0 24 24\"><path d=\"M19,0H6.5A3.5,3.5,0,0,0,3,3.5a3.44,3.44,0,0,0,.39,1.57A1,1,0,0,0,3,5.84V22a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V2A2,2,0,0,0,19,0Zm0,22H5V6.65A3.4,3.4,0,0,0,6.5,7H19ZM19,5H6.5a1.5,1.5,0,0,1,0-3H19Z\"/></symbol>\n    <symbol id=\"help--low\" viewBox=\"0 0 24 24\"><path d=\"M20.49,20.48a12,12,0,0,0,0-17h0a12,12,0,0,0-17,0h0a12,12,0,0,0,0,17h0a12,12,0,0,0,17,0h0Zm-.75-2.15-2.13-2.14a7,7,0,0,0,0-8.38l2.13-2.14a10,10,0,0,1,0,12.66ZM18.33,4.26,16.19,6.39a7,7,0,0,0-8.38,0L5.67,4.26a10,10,0,0,1,12.66,0ZM17,12a5,5,0,1,1-5-5A5,5,0,0,1,17,12ZM4.26,5.67,6.39,7.81a7,7,0,0,0,0,8.38L4.26,18.33a10,10,0,0,1,0-12.66ZM5.67,19.74l2.14-2.13a7,7,0,0,0,8.38,0l2.14,2.13a10,10,0,0,1-12.66,0Z\"/></symbol>\n    <symbol id=\"home--low\" viewBox=\"0 0 24 24\"><path d=\"M12,2.37,2,11.73V22H22V11.73ZM11.32.27a1,1,0,0,1,1.36,0l11,10.3a1,1,0,0,1,.32.73V23a1,1,0,0,1-1,1H1a1,1,0,0,1-1-1V11.3a1,1,0,0,1,.32-.73Z\"/></symbol>\n    <symbol id=\"id-number--low\" viewBox=\"0 0 24 24\"><path d=\"M17,15a1,1,0,0,1,0,2H13a1,1,0,0,1,0-2ZM9,15a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2ZM21,5H3A1,1,0,0,0,2,6V18a1,1,0,0,0,1,1H21a1,1,0,0,0,1-1V6A1,1,0,0,0,21,5Zm0-2a3,3,0,0,1,3,3V18a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V6A3,3,0,0,1,3,3ZM7,8.6,8.33,7.29a1,1,0,0,1,1.41,0,1,1,0,0,1,0,1.42L8.43,10l1.31,1.31a1,1,0,0,1-1.41,1.41L7,11.43l-1.3,1.29a1,1,0,0,1-1.41,0,1,1,0,0,1,0-1.41L5.6,10,4.29,8.71A1,1,0,1,1,5.71,7.29Z\"/></symbol>\n    <symbol id=\"info--low\" viewBox=\"0 0 24 24\"><path d=\"M13,5.83a1,1,0,0,0-1,1,.86.86,0,0,0,.86.94,1,1,0,0,0,1-1,.85.85,0,0,0-.23-.66A.84.84,0,0,0,13,5.83ZM10.09,18h1.5l1.67-8.71H11.77ZM24,12A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"issuer--low\" viewBox=\"0 0 24 24\"><path d=\"M2,20H2v2H22V20ZM19.92,8,12,2.24,4.08,8ZM13,10v8h4V10ZM5,10H1A1,1,0,0,1,.41,8.19l11-8a1,1,0,0,1,1.18,0l11,8A1,1,0,0,1,23,10H19v8h3a2,2,0,0,1,2,2v2a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V20a2,2,0,0,1,2-2H5Zm2,0v8h4V10Z\"/></symbol>\n    <symbol id=\"key-change--low\" viewBox=\"0 0 24 24\"><path d=\"M10.58,17a1,1,0,0,1-.91-.6,4,4,0,1,0,0,3.2,1,1,0,0,1,.91-.6H12a1,1,0,0,1,.71.29L14,20.59l1.29-1.3A1,1,0,0,1,16,19h1a1,1,0,0,1,.71.29L19,20.59,21.59,18l-1-1ZM21,15a1,1,0,0,1,.71.29l2,2a1,1,0,0,1,0,1.42l-4,4a1,1,0,0,1-1.42,0L16.59,21h-.18l-1.7,1.71a1,1,0,0,1-1.42,0L11.59,21H11.2a6,6,0,1,1,0-6ZM18,8a2,2,0,1,0-2-2A2,2,0,0,0,18,8ZM6,20a2,2,0,1,0-2-2A2,2,0,0,0,6,20ZM3.41,7h10a1,1,0,0,1,.91.6,4,4,0,1,0,0-3.2,1,1,0,0,1-.91.6H12a1,1,0,0,1-.71-.29L10,3.41,8.71,4.71A1,1,0,0,1,8,5H7a1,1,0,0,1-.71-.29L5,3.41,2.41,6ZM12.8,9H3a1,1,0,0,1-.71-.29l-2-2a1,1,0,0,1,0-1.42l4-4a1,1,0,0,1,1.42,0L7.41,3h.18l1.7-1.71a1,1,0,0,1,1.42,0L12.41,3h.39a6,6,0,1,1,0,6Z\"/></symbol>\n    <symbol id=\"key--low\" viewBox=\"0 0 24 24\"><path d=\"M16.5,10A2.5,2.5,0,1,1,19,7.5,2.5,2.5,0,0,1,16.5,10Zm0-2a.5.5,0,1,0-.5-.5A.5.5,0,0,0,16.5,8ZM2,19.41V22H5V19a1,1,0,0,1,1-1H9V14a1,1,0,0,1,1-1h6.5A5.5,5.5,0,1,0,11,7.5V10a1,1,0,0,1-.29.71ZM7,20v3a1,1,0,0,1-1,1H1a1,1,0,0,1-1-1V19a1,1,0,0,1,.08-.39,1,1,0,0,1,.21-.32L9,9.59V7.5A7.5,7.5,0,1,1,16.5,15H11v4a1,1,0,0,1-1,1Z\"/></symbol>\n    <symbol id=\"like--low\" viewBox=\"0 0 24 24\"><path d=\"M20.56,11.8a5.62,5.62,0,0,0,.19-7.29,4.17,4.17,0,0,0-6.37-.06L12.76,6.22a1,1,0,0,1-1.48,0L9.8,4.59a4.29,4.29,0,0,0-6.39-.21,5.49,5.49,0,0,0-.06,7.28l8.38,9.19a.37.37,0,0,0,.59,0ZM12,4.06l.88-1a6.17,6.17,0,0,1,9.36.09,7.64,7.64,0,0,1-.22,10l-8.24,9a2.36,2.36,0,0,1-3.55,0L1.87,13A7.48,7.48,0,0,1,2,3a6.28,6.28,0,0,1,9.32.23Z\"/></symbol>\n    <symbol id=\"link--low\" viewBox=\"0 0 24 24\"><path d=\"M17,0A7,7,0,0,1,22,11.94l-3.24,3.24a6.95,6.95,0,0,1-11.27-2,1,1,0,1,1,1.82-.84,4.88,4.88,0,0,0,1,1.42,5,5,0,0,0,7.07,0l3.24-3.24a5,5,0,0,0-7.07-7.07,1,1,0,0,1-1.43,0,1,1,0,0,1,0-1.39A7.09,7.09,0,0,1,17,0ZM7,24A7,7,0,0,1,2.05,12.06L5.29,8.82a6.95,6.95,0,0,1,11.27,2,1,1,0,0,1-1.82.84,4.88,4.88,0,0,0-1-1.42,5,5,0,0,0-7.07,0L3.46,13.47a5,5,0,0,0,7.07,7.07,1,1,0,0,1,1.43,0,1,1,0,0,1,0,1.39A7.09,7.09,0,0,1,7,24Z\"/></symbol>\n    <symbol id=\"log-completed--low\" viewBox=\"0 0 24 24\"><path d=\"M14,17a1,1,0,0,1,0-2h4a1,1,0,0,1,0,2Zm0-8a1,1,0,0,1,0-2h4a1,1,0,0,1,0,2ZM9.2,13.4a1,1,0,1,1,1.6,1.2l-3,4a1,1,0,0,1-1.51.11l-2-2a1,1,0,0,1,1.42-1.42l1.18,1.19Zm0-8a1,1,0,1,1,1.6,1.2l-3,4a1,1,0,0,1-1.51.11l-2-2A1,1,0,1,1,5.71,7.29L6.89,8.48ZM1,0H23a1,1,0,0,1,1,1V23a1,1,0,0,1-1,1H1a1,1,0,0,1-1-1V1A1,1,0,0,1,1,0ZM2,2V22H22V2Z\"/></symbol>\n    <symbol id=\"log--low\" viewBox=\"0 0 24 24\"><path d=\"M8,17V15H6v2Zm.5,2h-3A1.5,1.5,0,0,1,4,17.5v-3A1.5,1.5,0,0,1,5.5,13h3A1.5,1.5,0,0,1,10,14.5v3A1.5,1.5,0,0,1,8.5,19ZM8,9V7H6V9Zm.5,2h-3A1.5,1.5,0,0,1,4,9.5v-3A1.5,1.5,0,0,1,5.5,5h3A1.5,1.5,0,0,1,10,6.5v3A1.5,1.5,0,0,1,8.5,11ZM14,17a1,1,0,0,1,0-2h4a1,1,0,0,1,0,2Zm0-8a1,1,0,0,1,0-2h4a1,1,0,0,1,0,2ZM1,0H23a1,1,0,0,1,1,1V23a1,1,0,0,1-1,1H1a1,1,0,0,1-1-1V1A1,1,0,0,1,1,0ZM2,2V22H22V2Z\"/></symbol>\n    <symbol id=\"map-directions-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M7.35,10.38a1,1,0,0,1,.72-.3H13.7l-1.3-1.3a1,1,0,1,1,1.42-1.43l3,3a1,1,0,0,1,0,1.43l-3,3a1,1,0,1,1-1.42-1.42l1.3-1.31H9.08v2a1,1,0,0,1-2,0v-3A1,1,0,0,1,7.35,10.38ZM10.57.59a2,2,0,0,1,2.86,0l10,10a2,2,0,0,1,0,2.86l-10,10a2,2,0,0,1-2.86,0l-10-10a2,2,0,0,1,0-2.86ZM12,2,2,12,12,22,22,12Z\"/></symbol>\n    <symbol id=\"map-directions--low\" viewBox=\"0 0 24 24\"><polygon points=\"16 3.08 13 5.48 13 20.92 16 18.52 16 3.08\"/><polygon points=\"6 2.87 2 5.53 2 21.13 6 18.46 6 2.87\"/><polygon points=\"8 18.52 11 20.92 11 5.48 8 3.08 8 18.52\"/><polygon points=\"18 18.46 22 21.13 22 5.53 18 2.87 18 18.46\"/><path d=\"M23.55,4.17l-6-4A.41.41,0,0,0,17.4.1h0a1,1,0,0,0-1,.13L12,3.72,7.62.22a1,1,0,0,0-1-.13h0a.41.41,0,0,0-.15.07l-6,4A1,1,0,0,0,0,5V23a1,1,0,0,0,1.55.83L7,20.24l4.43,3.54.07,0a.46.46,0,0,0,.15.09l.14.05.12,0h.28l.12,0,.14-.05a.46.46,0,0,0,.15-.09l.07,0,4.43-3.54,5.4,3.59A1,1,0,0,0,24,23V5A1,1,0,0,0,23.55,4.17ZM11,20.92l-3-2.4V3.08l3,2.4ZM2,5.53,6,2.87V18.46L2,21.13Zm11,0,3-2.4V18.52l-3,2.4Zm9,15.65-4-2.67V2.87l4,2.66Z\"/></symbol>\n    <symbol id=\"map-location-current--low\" viewBox=\"0 0 24 24\"><path d=\"M9.44,14.56l-7.8-1.42a2,2,0,0,1-.47-3.79l20-9.16a2,2,0,0,1,2.65,2.65l-9.16,20a2,2,0,0,1-3.79-.47ZM12.83,22,22,2,2,11.17l9.16,1.67Z\"/></symbol>\n    <symbol id=\"map-location-off--low\" viewBox=\"0 0 24 24\"><path d=\"M17.66,15.66a8,8,0,0,0,2.18-7.27,1,1,0,0,1,2-.41,10,10,0,0,1-2.71,9.08l-6.37,6.63a1,1,0,0,1-1.44,0L8.34,20.63a1,1,0,1,1,1.44-1.38L12,21.56Zm-6.4-4.34,2.16-2.15a1.6,1.6,0,0,0-3,.74A1.57,1.57,0,0,0,11.26,11.32Zm6.68-6.68-.28-.3A8,8,0,1,0,6.36,15.67l.27.29,3.19-3.19a3.6,3.6,0,1,1,5-5Zm2,.81-4.69,4.69v0l-3,3v0L7.32,18.09h0L1.71,23.71A1,1,0,0,1,.29,22.29l4.93-4.92-.29-.3A10,10,0,0,1,19.07,2.93l.29.3L22.29.29a1,1,0,1,1,1.42,1.42L20,5.39Z\"/></symbol>\n    <symbol id=\"map-location--low\" viewBox=\"0 0 24 24\"><path d=\"M12,8a2,2,0,1,0,2,2A2,2,0,0,0,12,8Zm0,6a4,4,0,1,1,4-4A4,4,0,0,1,12,14Zm5.7,1.85a8.17,8.17,0,0,0,0-11.48,8,8,0,0,0-11.34,0,8.17,8.17,0,0,0,0,11.48L12,21.58ZM4.91,17.26A10.15,10.15,0,0,1,4.91,3,10,10,0,0,1,19.09,3a10.15,10.15,0,0,1,0,14.29L12.71,23.7a1,1,0,0,1-1.42,0Z\"/></symbol>\n    <symbol id=\"map--low\" viewBox=\"0 0 24 24\"><path d=\"M15,9.68a1,1,0,0,0-.63-.63l-6-2A1,1,0,0,0,7.05,8.32l2,6a1,1,0,0,0,.63.63l6,2A1,1,0,0,0,17,15.68Zm-4.16,3.53L9.58,9.58l3.63,1.21,1.21,3.63Z\"/><path d=\"M24,12h0A12,12,0,0,0,12,0h0A12,12,0,0,0,0,12H0a12,12,0,0,0,24,0ZM13,22V20a1,1,0,0,0-2,0V22A10,10,0,0,1,2.05,13H4a1,1,0,0,0,0-2H2.05a10,10,0,0,1,9-8.95V4a1,1,0,0,0,2,0V2.05a10,10,0,0,1,9,9H20a1,1,0,0,0,0,2H22A10,10,0,0,1,13,22Z\"/></symbol>\n    <symbol id=\"maximize--low\" viewBox=\"0 0 24 24\"><path d=\"M10,5a1,1,0,0,1,0,2H2V22H17V15a1,1,0,0,1,2,0v7a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V7A2,2,0,0,1,2,5ZM22,3.61l-6.6,6.6a1,1,0,0,1-1.41,0,1,1,0,0,1,0-1.42L20.78,2H18a1,1,0,0,1,0-2h5a1,1,0,0,1,1,1V6a1,1,0,0,1-2,0Z\"/></symbol>\n    <symbol id=\"media-fast-forward--low\" viewBox=\"0 0 24 24\"><path d=\"M10.59,12,.29,1.71A1,1,0,0,1,1.71.29l11,11a1,1,0,0,1,0,1.42l-11,11A1,1,0,0,1,.29,22.29Zm11,0L11.29,1.71A1,1,0,0,1,12.71.29l11,11a1,1,0,0,1,0,1.42l-11,11a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"media-pause-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M14,8a1,1,0,0,1,2,0v8a1,1,0,0,1-2,0ZM8,8a1,1,0,0,1,2,0v8a1,1,0,0,1-2,0Zm16,4A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"media-pause--low\" viewBox=\"0 0 24 24\"><path d=\"M19,1a1,1,0,0,1,2,0V23a1,1,0,0,1-2,0ZM3,1A1,1,0,0,1,5,1V23a1,1,0,0,1-2,0Z\"/></symbol>\n    <symbol id=\"media-play-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M10,9.38v5.07l4.45-2.54ZM8,8.57a1.53,1.53,0,0,1,2.29-1.33l5.87,3.34a1.54,1.54,0,0,1,0,2.67l-5.87,3.34A1.53,1.53,0,0,1,8,15.26ZM24,12A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"media-play--low\" viewBox=\"0 0 24 24\"><path d=\"M4,24a2,2,0,0,1-1-.25A2,2,0,0,1,2,22V2A2,2,0,0,1,5.06.31l16,10a2,2,0,0,1,0,3.4l-16,10A1.93,1.93,0,0,1,4,24ZM4,2V22L20,12Z\"/></symbol>\n    <symbol id=\"media-replay--low\" viewBox=\"0 0 24 24\"><path d=\"M12,5H5.91l3.3-3.29A1,1,0,0,0,7.79.29l-5,5a1.15,1.15,0,0,0-.21.33,1,1,0,0,0,0,.76,1,1,0,0,0,.21.33l5,5a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42L5.91,7H12a7.5,7.5,0,1,1-7.5,7.5,1,1,0,0,0-2,0A9.5,9.5,0,1,0,12,5\"/></symbol>\n    <symbol id=\"media-rewind--low\" viewBox=\"0 0 24 24\"><path d=\"M2.41,12l10.3,10.29a1,1,0,0,1-1.42,1.42l-11-11a1,1,0,0,1,0-1.42l11-11a1,1,0,1,1,1.42,1.42Zm11,0,10.3,10.29a1,1,0,0,1-1.42,1.42l-11-11a1,1,0,0,1,0-1.42l11-11a1,1,0,1,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"media-stop-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M14,14V10H10v4ZM9,16a1,1,0,0,1-1-1V9A1,1,0,0,1,9,8h6a1,1,0,0,1,1,1v6a1,1,0,0,1-1,1Zm15-4A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"media-stop--low\" viewBox=\"0 0 24 24\"><path d=\"M20,4V20H4V4H20m0-2H4A2,2,0,0,0,2,4V20a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V4a2,2,0,0,0-2-2Z\"/></symbol>\n    <symbol id=\"menu--low\" viewBox=\"0 0 24 24\"><path d=\"M3,4A1,1,0,0,1,3,2H21a1,1,0,0,1,0,2Zm0,9a1,1,0,0,1,0-2H21a1,1,0,0,1,0,2Zm0,9a1,1,0,0,1,0-2H21a1,1,0,0,1,0,2Z\"/></symbol>\n    <symbol id=\"merchant--low\" viewBox=\"0 0 24 24\"><path d=\"M15,17h2V16H15Zm-1,2a1,1,0,0,1-1-1V15a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v3a1,1,0,0,1-1,1Zm9-7V22a2,2,0,0,1-2,2H4a2,2,0,0,1-2-2V12H1a1,1,0,0,1-1-1V8a1,1,0,0,1,.09-.41l3.17-7A1,1,0,0,1,4.17,0H19.83a1,1,0,0,1,.91.59l3.17,7A1,1,0,0,1,24,8v3A1,1,0,0,1,23,12ZM10,22V16H8v6ZM21,12H4V22H6V15a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v7h9ZM6,2H4.81L2,8.22V10H5a.49.49,0,0,1,0-.12ZM8,2a.49.49,0,0,1,0,.12L7,10h4V2ZM18,2l1,7.88A.49.49,0,0,1,19,10h3V8.22L19.19,2ZM16,2H13v8h4L16,2.12A.49.49,0,0,1,16,2Z\"/></symbol>\n    <symbol id=\"message--low\" viewBox=\"0 0 24 24\"><path d=\"M18.5,12A1.5,1.5,0,1,0,17,10.5,1.5,1.5,0,0,0,18.5,12Zm-6,0A1.5,1.5,0,1,0,11,10.5,1.5,1.5,0,0,0,12.5,12Zm-6,0A1.5,1.5,0,1,0,5,10.5,1.5,1.5,0,0,0,6.5,12ZM22,16a2,2,0,0,1-2,2H10a.91.91,0,0,0-.7.3L7,20.6V19a.94.94,0,0,0-1-1H4a2,2,0,0,1-2-2V4A2,2,0,0,1,4,2H20a2,2,0,0,1,2,2ZM20,0H4A4,4,0,0,0,0,4V16a4,4,0,0,0,4,4H5v3a1,1,0,0,0,1,1,.91.91,0,0,0,.7-.3L10.4,20H20a4,4,0,0,0,4-4V4A4,4,0,0,0,20,0Z\"/></symbol>\n    <symbol id=\"money-add--low\" viewBox=\"0 0 24 24\"><path d=\"M16,10V8H14V6h2V4h2V6h2V8H18v2Zm6-3a5,5,0,1,0-5,5A5,5,0,0,0,22,7Zm2,0a7,7,0,1,1-7-7A7,7,0,0,1,24,7Zm-4,5a1,1,0,0,1,2,0v9a3.15,3.15,0,0,1-3,3H3a3.15,3.15,0,0,1-3-3V10A3.15,3.15,0,0,1,3,7h8a1,1,0,0,1,0,2H3a1.17,1.17,0,0,0-1,1V21a1.17,1.17,0,0,0,1,1H19a1.17,1.17,0,0,0,1-1Z\"/></symbol>\n    <symbol id=\"money-request--low\" viewBox=\"0 0 24 24\"><path d=\"M12,13a2,2,0,1,0,2,2A2,2,0,0,0,12,13Zm0,6a4,4,0,1,1,4-4A4,4,0,0,1,12,19ZM2,24a2,2,0,0,1-2-2V8A2,2,0,0,1,2,6H6A1,1,0,0,1,6,8H2V22H22V8H18a1,1,0,0,1,0-2h4a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2ZM11,4.59V1a1,1,0,0,1,2,0V4.59l1.29-1.3a1,1,0,1,1,1.42,1.42l-3,3a1,1,0,0,1-1.42,0l-3-3A1,1,0,0,1,9.71,3.29Z\"/></symbol>\n    <symbol id=\"money-send--low\" viewBox=\"0 0 24 24\"><path d=\"M12,13a2,2,0,1,0,2,2A2,2,0,0,0,12,13Zm0,6a4,4,0,1,1,4-4A4,4,0,0,1,12,19ZM2,24a2,2,0,0,1-2-2V8A2,2,0,0,1,2,6H6A1,1,0,0,1,6,8H2V22H22V8H18a1,1,0,0,1,0-2h4a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2ZM13,3.41V7a1,1,0,0,1-2,0V3.41L9.71,4.71A1,1,0,0,1,8.29,3.29l3-3a1,1,0,0,1,1.42,0l3,3a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"money-withdraw--low\" viewBox=\"0 0 24 24\"><path d=\"M12,10a2,2,0,1,0,2,2A2,2,0,0,0,12,10Zm0,6a4,4,0,1,1,4-4A4,4,0,0,1,12,16ZM1,2A1,1,0,0,1,1,0H23a1,1,0,0,1,0,2ZM19,7a1,1,0,0,1,2,0V22a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V7A1,1,0,0,1,5,7V22H19Z\"/></symbol>\n    <symbol id=\"nfc--low\" viewBox=\"0 0 24 24\"><path d=\"M3.3,9.69a1,1,0,0,1,1.42,0,3.25,3.25,0,0,1,0,4.55A1,1,0,1,1,3.3,12.84a1.25,1.25,0,0,0,0-1.74A1,1,0,0,1,3.3,9.69ZM8.54,6.55h0a7.71,7.71,0,0,1,0,10.84A1,1,0,1,1,7.12,16a5.71,5.71,0,0,0,0-8A1,1,0,0,1,8.54,6.55Zm3.83-3.14h0a12.19,12.19,0,0,1,0,17.12,1,1,0,0,1-1,.27,1,1,0,0,1-.71-.71,1,1,0,0,1,.26-1A10.19,10.19,0,0,0,11,4.82a1,1,0,0,1,0-1.41A1,1,0,0,1,12.37,3.41ZM16.2.27a16.68,16.68,0,0,1,0,23.4,1,1,0,0,1-1,.27,1,1,0,0,1-.71-.71,1,1,0,0,1,.26-1,14.68,14.68,0,0,0,0-20.59A1,1,0,0,1,14.84.32,1,1,0,0,1,16.2.27Z\"/></symbol>\n    <symbol id=\"note--low\" viewBox=\"0 0 24 24\"><path d=\"M16,17H15a1,1,0,0,0,0,2h1a1,1,0,0,0,0-2Z\"/><path d=\"M11,17H8a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/><path d=\"M19,2H17V1a1,1,0,0,0-2,0V2H13V1a1,1,0,0,0-2,0V2H9V1A1,1,0,0,0,7,1V2H5A2,2,0,0,0,3,4V22a2,2,0,0,0,2,2H19a2,2,0,0,0,2-2V4A2,2,0,0,0,19,2ZM7,4V5A1,1,0,0,0,9,5V4h2V5a1,1,0,0,0,2,0V4h2V5a1,1,0,0,0,2,0V4h2V7H5V4ZM5,22V9H19V22Z\"/><path d=\"M16,13H8a1,1,0,0,0,0,2h8a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"notifications--low\" viewBox=\"0 0 24 24\"><path d=\"M11,20v1a1,1,0,0,0,2,0V20ZM9,20H4a1,1,0,0,1-1-1V17a1,1,0,0,1,.3-.71L5,14.62V10a7,7,0,0,1,6-6.93V1a1,1,0,0,1,2,0V3.07A7,7,0,0,1,19,10v4.59l1.71,1.7A1,1,0,0,1,21,17v2a1,1,0,0,1-1,1H15v1a3,3,0,0,1-6,0Zm10-2.59-1.71-1.7A1,1,0,0,1,17,15V10A5,5,0,0,0,7,10v5a1,1,0,0,1-.3.71L5,17.42V18H19Z\"/></symbol>\n    <symbol id=\"offers-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M14.65,12.65a.49.49,0,0,1,.7.7l-6,6a.49.49,0,0,1-.7-.7ZM14,18.5a.5.5,0,1,0-.5-.5A.5.5,0,0,0,14,18.5Zm0,1A1.5,1.5,0,1,1,15.5,18,1.5,1.5,0,0,1,14,19.5Zm-4-5a.5.5,0,1,0-.5-.5A.5.5,0,0,0,10,14.5Zm0,1A1.5,1.5,0,1,1,11.5,14,1.5,1.5,0,0,1,10,15.5ZM10,9A1,1,0,0,1,8,9V4.06A4,4,0,0,1,11.86,0h.28A4,4,0,0,1,16,4.06V9a1,1,0,0,1-2,0V4.06A2,2,0,0,0,12.14,2h-.28A2,2,0,0,0,10,4.06ZM5,5H19a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V7A2,2,0,0,1,5,5ZM5,7V22H19V7Z\"/></symbol>\n    <symbol id=\"offers-deals--low\" viewBox=\"0 0 24 24\"><path d=\"M16.29,6.29a1,1,0,1,1,1.42,1.42l-10,10a1,1,0,0,1-1.42-1.42ZM9,10A1,1,0,1,0,8,9,1,1,0,0,0,9,10Zm0,2a3,3,0,1,1,3-3A3,3,0,0,1,9,12Zm6,4a1,1,0,1,0-1-1A1,1,0,0,0,15,16Zm0,2a3,3,0,1,1,3-3A3,3,0,0,1,15,18ZM2.68,13.5l-.55.88a.84.84,0,0,0,.44,1.24l1,.4a2.87,2.87,0,0,1,1.81,2.41l.1,1a.94.94,0,0,0,1.18.78l1-.23a3,3,0,0,1,2.88.91l.7.77a1,1,0,0,0,1.48,0l.7-.77A3,3,0,0,1,16.32,20l1,.23a.94.94,0,0,0,1.18-.78l.09-1A2.9,2.9,0,0,1,20.45,16l1-.4a.84.84,0,0,0,.44-1.24l-.55-.88a2.82,2.82,0,0,1,0-3l.55-.87a.84.84,0,0,0-.44-1.24l-1-.4a2.9,2.9,0,0,1-1.82-2.41l-.09-1a.94.94,0,0,0-1.18-.78l-1,.23a3,3,0,0,1-2.88-.91l-.7-.77a1,1,0,0,0-1.48,0l-.7.77A3,3,0,0,1,7.68,4l-1-.23a.94.94,0,0,0-1.18.78l-.1,1A2.87,2.87,0,0,1,3.55,8l-1,.4a.84.84,0,0,0-.44,1.24l.55.88A2.8,2.8,0,0,1,2.68,13.5ZM1,12.44a.82.82,0,0,0,0-.88l-.55-.87A2.85,2.85,0,0,1,1.82,6.52l1-.39a.9.9,0,0,0,.57-.74l.09-1A3,3,0,0,1,7.07,1.81l1,.24a1,1,0,0,0,1-.3L9.78,1a3,3,0,0,1,4.44,0l.7.77a1,1,0,0,0,1,.3l1-.24a3,3,0,0,1,3.61,2.56l.09,1a.88.88,0,0,0,.57.74l1,.39a2.85,2.85,0,0,1,1.38,4.17l-.55.87a.82.82,0,0,0,0,.88l.55.87a2.85,2.85,0,0,1-1.38,4.17l-1,.39a.9.9,0,0,0-.57.74l-.09,1a3,3,0,0,1-3.61,2.56l-1-.24a1,1,0,0,0-1,.3l-.7.77a3,3,0,0,1-4.44,0l-.7-.77a1,1,0,0,0-1-.3l-1,.23a3,3,0,0,1-3.61-2.55l-.09-1a.9.9,0,0,0-.57-.74l-1-.39A2.85,2.85,0,0,1,.44,13.31Z\"/></symbol>\n    <symbol id=\"offers--low\" viewBox=\"0 0 24 24\"><path d=\"M10,9A1,1,0,0,1,8,9V4.06A4,4,0,0,1,11.86,0h.28A4,4,0,0,1,16,4.06V9a1,1,0,0,1-2,0V4.06A2,2,0,0,0,12.14,2h-.28A2,2,0,0,0,10,4.06ZM5,5H19a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V7A2,2,0,0,1,5,5ZM5,7V22H19V7Z\"/></symbol>\n    <symbol id=\"options--low\" viewBox=\"0 0 24 24\"><path d=\"M18,13.5A1.5,1.5,0,1,1,19.5,12,1.5,1.5,0,0,1,18,13.5Zm-6,0A1.5,1.5,0,1,1,13.5,12,1.5,1.5,0,0,1,12,13.5Zm-6,0A1.5,1.5,0,1,1,7.5,12,1.5,1.5,0,0,1,6,13.5Z\"/></symbol>\n    <symbol id=\"password-hide--low\" viewBox=\"0 0 24 24\"><path d=\"M13.93,11.48l-2.45,2.45A1.81,1.81,0,0,0,12,14a2,2,0,0,0,2-2A1.81,1.81,0,0,0,13.93,11.48Zm-1.41-1.41A1.81,1.81,0,0,0,12,10a2,2,0,0,0-2,2,1.81,1.81,0,0,0,.07.52Zm5.31-2.49L15.45,10A4,4,0,0,1,10,15.45L7.91,17.5a9.07,9.07,0,0,0,4.09,1c3.64,0,7.11-2.3,9.82-6.5A16.78,16.78,0,0,0,17.83,7.58ZM16.09,6.5A9.07,9.07,0,0,0,12,5.5C8.36,5.5,4.89,7.8,2.18,12a16.78,16.78,0,0,0,4,4.42L8.55,14A4,4,0,0,1,14,8.55ZM6.43,19,1.71,23.71A1,1,0,0,1,.29,22.29l4.45-4.44A19.46,19.46,0,0,1,.15,12.52a1,1,0,0,1,0-1c3.12-5.15,7.33-8,11.85-8A11.19,11.19,0,0,1,17.57,5L22.29.29a1,1,0,1,1,1.42,1.42L19.26,6.15a19.63,19.63,0,0,1,4.59,5.33,1,1,0,0,1,0,1c-3.12,5.15-7.33,8-11.85,8A11.19,11.19,0,0,1,6.43,19Z\"/></symbol>\n    <symbol id=\"password-show--low\" viewBox=\"0 0 24 24\"><path d=\"M12,10a2,2,0,1,0,2,2A2,2,0,0,0,12,10Zm0,6a4,4,0,1,1,4-4A4,4,0,0,1,12,16ZM2.18,12c2.71,4.2,6.18,6.5,9.82,6.5s7.11-2.3,9.82-6.5C19.11,7.8,15.64,5.5,12,5.5S4.89,7.8,2.18,12ZM12,20.5c-4.52,0-8.73-2.83-11.85-8a1,1,0,0,1,0-1c3.12-5.15,7.33-8,11.85-8s8.73,2.83,11.85,8a1,1,0,0,1,0,1C20.73,17.67,16.52,20.5,12,20.5Z\"/></symbol>\n    <symbol id=\"phone--low\" viewBox=\"0 0 24 24\"><path d=\"M6.06.61,10.24,4.8a2,2,0,0,1,0,2.82L7.57,10.29a.11.11,0,0,0,0,.13l6,6a.11.11,0,0,0,.13,0l2.67-2.67a2,2,0,0,1,2.82,0l4.19,4.18a2.1,2.1,0,0,1,0,2.92,10.59,10.59,0,0,1-15,0L3.1,15.58a10.59,10.59,0,0,1,0-15A2.12,2.12,0,0,1,6.06.61ZM22,19.36l-4.18-4.19-2.67,2.67a2.08,2.08,0,0,1-2.95,0l-6-6a2.08,2.08,0,0,1,0-2.95L8.83,6.21,4.64,2a.08.08,0,0,0-.12,0,8.58,8.58,0,0,0,0,12.14l5.31,5.32a8.59,8.59,0,0,0,12.12,0C22,19.45,22,19.39,22,19.36Z\"/></symbol>\n    <symbol id=\"photo--low\" viewBox=\"0 0 24 24\"><path d=\"M13,8A4,4,0,1,1,9,4,4,4,0,0,1,13,8ZM11,8a2,2,0,1,0-2,2A2,2,0,0,0,11,8ZM1.71,16.71A1,1,0,0,1,.29,15.29l2-2a1,1,0,0,1,1.42,0L9,18.59,20.29,7.29a1,1,0,0,1,1.42,0l2,2a1,1,0,0,1-1.42,1.42L21,9.41,9.71,20.71a1,1,0,0,1-1.42,0L3,15.41ZM22,24H2a2,2,0,0,1-2-2V2A2,2,0,0,1,2,0H22a2,2,0,0,1,2,2V22A2,2,0,0,1,22,24Zm0-2V2H2V22Z\"/></symbol>\n    <symbol id=\"pos-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M10.5,17H11V16h-.5a.5.5,0,0,0,0,1ZM13,19v1h.5a.5.5,0,0,0,0-1ZM9,20h2V19h-.5a2.5,2.5,0,0,1,0-5H11V13a1,1,0,0,1,2,0v1h2a1,1,0,0,1,0,2H13v1h.5a2.5,2.5,0,0,1,0,5H13v1a1,1,0,0,1-2,0V22H9a1,1,0,0,1,0-2ZM6,8H8V2H6ZM20,8h3a1,1,0,0,1,0,2H1A1,1,0,0,1,1,8H4V2A2,2,0,0,1,6,0H18a2,2,0,0,1,2,2ZM18,8V2H10V8h3V5a1,1,0,0,1,2,0V8Z\"/></symbol>\n    <symbol id=\"pos--low\" viewBox=\"0 0 24 24\"><path d=\"M19,12a1,1,0,0,1,0,2H17a1,1,0,0,1,0-2Zm-6,0a1,1,0,0,1,0,2H11a1,1,0,0,1,0-2ZM7,12a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2Zm12,4a1,1,0,0,1,0,2H5a1,1,0,0,1,0-2Zm-5,6a1,1,0,0,1-2,0V17a1,1,0,0,1,2,0Zm2-4H8v4h8Zm1-2a1,1,0,0,1,1,1v5a2,2,0,0,1-2,2H8a2,2,0,0,1-2-2V17a1,1,0,0,1,1-1Zm1-6H6A2,2,0,0,1,4,8V6A2,2,0,0,1,6,4H18a2,2,0,0,1,2,2V8A2,2,0,0,1,18,10Zm0-2V6H6V8ZM17,22a1,1,0,0,1,0-2h4a1,1,0,0,0,1-1V3a1,1,0,0,0-1-1H3A1,1,0,0,0,2,3V19a1,1,0,0,0,1,1H7a1,1,0,0,1,0,2H3a3,3,0,0,1-3-3V3A3,3,0,0,1,3,0H21a3,3,0,0,1,3,3V19a3,3,0,0,1-3,3Z\"/></symbol>\n    <symbol id=\"power--low\" viewBox=\"0 0 24 24\"><path d=\"M11,1.05a1,1,0,0,1,2,0v8a1,1,0,0,1-2,0Zm6.5,2.4A11,11,0,1,1,1,13a10.92,10.92,0,0,1,5.5-9.5,1.08,1.08,0,0,1,1.4.3,1.27,1.27,0,0,1-.4,1.5,9,9,0,1,0,9,0,1,1,0,1,1,1-1.8Z\"/></symbol>\n    <symbol id=\"qr-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M9,9V2H2V9ZM2,11A2,2,0,0,1,0,9V2A2,2,0,0,1,2,0H9a2,2,0,0,1,2,2V9a2,2,0,0,1-2,2ZM9,22V15H2v7ZM2,24a2,2,0,0,1-2-2V15a2,2,0,0,1,2-2H9a2,2,0,0,1,2,2v7a2,2,0,0,1-2,2Zm20-9a.76.76,0,0,1,0-.27V15Zm-3,1A1.92,1.92,0,0,1,21,17.92V22h1s0,0,0,0V15l-.07,0H15v1Zm-4.16,2A1.92,1.92,0,0,1,13,16.08V14.91A1.91,1.91,0,0,1,14.91,13h7.17l.24,0a2.81,2.81,0,0,1,.68.26,1.57,1.57,0,0,1,1,1.44V22a2,2,0,0,1-1.76,2H20.09a1.36,1.36,0,0,1-1.15-1.46A2.59,2.59,0,0,1,19,22s0,0,0-.08V18ZM15,22h1V21H15Zm-1,2a1,1,0,0,1-1-1V20a1,1,0,0,1,1-1h3a1,1,0,0,1,1,1v3a1,1,0,0,1-1,1ZM22,9V2H15V9Zm-7,2a2,2,0,0,1-2-2V2a2,2,0,0,1,2-2h7a2,2,0,0,1,2,2V9a2,2,0,0,1-2,2ZM5,19H6V18H5ZM4,21a1,1,0,0,1-1-1V17a1,1,0,0,1,1-1H7a1,1,0,0,1,1,1v3a1,1,0,0,1-1,1ZM18,6h1V5H18ZM17,8a1,1,0,0,1-1-1V4a1,1,0,0,1,1-1h3a1,1,0,0,1,1,1V7a1,1,0,0,1-1,1ZM5,6H6V5H5ZM4,8A1,1,0,0,1,3,7V4A1,1,0,0,1,4,3H7A1,1,0,0,1,8,4V7A1,1,0,0,1,7,8Z\"/></symbol>\n    <symbol id=\"question--low\" viewBox=\"0 0 24 24\"><path d=\"M11,19a1,1,0,0,0,.71-1.71,1,1,0,0,0-1.09-.21.9.9,0,0,0-.54.54.94.94,0,0,0,0,.76,1.15,1.15,0,0,0,.21.33,1,1,0,0,0,.33.21A1,1,0,0,0,11,19Zm0-3a1,1,0,0,0,1-1V14A4.5,4.5,0,1,0,7.5,9.5a1,1,0,0,0,2,0A2.5,2.5,0,1,1,12,12H11a1,1,0,0,0-1,1v2A1,1,0,0,0,11,16Zm13-4A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"receipt--low\" viewBox=\"0 0 24 24\"><path d=\"M8,9A1,1,0,0,1,8,7h8a1,1,0,0,1,0,2Zm0,4a1,1,0,0,1,0-2h4a1,1,0,0,1,0,2ZM4.55,23.83A1,1,0,0,1,3,23V1A1,1,0,0,1,4.55.17L7,1.76,8.88.22a1,1,0,0,1,1.24,0L12,1.72,13.93.21a1,1,0,0,1,1.25,0l1.88,1.53L19.45.17A1,1,0,0,1,21,1V23a1,1,0,0,1-1.55.83l-2.4-1.59-1.93,1.54a1,1,0,0,1-1.24,0L12,22.28l-1.85,1.5a1,1,0,0,1-1.25,0L7,22.24ZM5,2.87V21.13l1.45-1a1,1,0,0,1,1.17,0l1.89,1.5,1.86-1.5a1,1,0,0,1,1.25,0l1.88,1.5,1.88-1.5a1,1,0,0,1,1.17,0l1.45,1V2.87l-1.45,1a1,1,0,0,1-1.18-.06L14.54,2.28,12.62,3.79a1,1,0,0,1-1.25,0L9.5,2.28,7.62,3.78a1,1,0,0,1-1.17.05Z\"/></symbol>\n    <symbol id=\"redo--low\" viewBox=\"0 0 24 24\"><path d=\"M9.5,5H20.59l-3.3-3.29A1,1,0,0,1,18.71.29l5,5a1.15,1.15,0,0,1,.21.33,1,1,0,0,1,0,.76,1,1,0,0,1-.21.33l-5,5a1,1,0,0,1-1.42,0,1,1,0,0,1,0-1.42L20.59,7H9.5a7.5,7.5,0,0,0,0,15H18a1,1,0,0,1,0,2H9.5a9.5,9.5,0,0,1,0-19Z\"/></symbol>\n    <symbol id=\"refresh--low\" viewBox=\"0 0 24 24\"><path d=\"M3,11.41l-1.29,1.3A1,1,0,0,1,.29,11.29l3-3a1,1,0,0,1,1.42,0l3,3a1,1,0,1,1-1.42,1.42L5,11.41V12A7,7,0,0,0,17,17a1,1,0,0,1,1.41,1.41A9,9,0,0,1,3,12Zm18,1.18,1.29-1.3a1,1,0,0,1,1.42,1.42l-3,3a1,1,0,0,1-1.42,0l-3-3a1,1,0,0,1,1.42-1.42L19,12.59V12A7,7,0,0,0,7.05,7.05,1,1,0,0,1,5.64,5.64,9,9,0,0,1,21,12Z\"/></symbol>\n    <symbol id=\"reload--low\" viewBox=\"0 0 24 24\"><path d=\"M9.5,21.5a9.45,9.45,0,0,0,4.12-.94,1,1,0,1,0-.87-1.8A7.5,7.5,0,1,1,17,12v1.09l-3.29-3.3a1,1,0,0,0-1.42,1.42l5,5a1,1,0,0,0,.33.21.94.94,0,0,0,.76,0,1.15,1.15,0,0,0,.33-.21l5-5a1,1,0,0,0-1.42-1.42L19,13.09V12a9.5,9.5,0,1,0-9.5,9.5\"/></symbol>\n    <symbol id=\"reward--low\" viewBox=\"0 0 24 24\"><path d=\"M12,9a.94.94,0,0,1-1-1,1,1,0,0,1,2,0A.94.94,0,0,1,12,9Zm0-4A3,3,0,0,0,9,8a3,3,0,0,0,6,0A3,3,0,0,0,12,5Zm0,9a6,6,0,1,1,6-6A6,6,0,0,1,12,14Zm2,5.2a2.9,2.9,0,0,0-4,0V17h4ZM16,15h-.1A8,8,0,1,0,4,8a8.16,8.16,0,0,0,4.1,7H8v9l3.3-3.3a1,1,0,0,1,1.4,0L16,24\"/></symbol>\n    <symbol id=\"roadsign--low\" viewBox=\"0 0 24 24\"><path d=\"M23.8,16.4l-3-4A1,1,0,0,0,20,12H13V10h7a2,2,0,0,0,2-2V2a2,2,0,0,0-2-2H4a1,1,0,0,0-.8.4l-3,4a1,1,0,0,0,0,1.2l3,4A1,1,0,0,0,4,10h7v2H4a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h7v1a1,1,0,0,0,2,0V22h7a1,1,0,0,0,.8-.4l3-4A1,1,0,0,0,23.8,16.4ZM4.5,8,2.25,5,4.5,2H20V8Zm15,12H4V14H19.5l2.25,3Z\"/></symbol>\n    <symbol id=\"save--low\" viewBox=\"0 0 24 24\"><path d=\"M11,10v5.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l3,3a1,1,0,0,0,1.42,0l3-3a1,1,0,0,0-1.42-1.42L13,15.59V10a1,1,0,0,0-2,0Z\"/><path d=\"M22,4H13V2a2,2,0,0,0-2-2H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V6A2,2,0,0,0,22,4ZM2,2h9V4H2ZM22,22H2V6H22Z\"/></symbol>\n    <symbol id=\"savings-account--low\" viewBox=\"0 0 24 24\"><path d=\"M13,16a4,4,0,1,0-4-4A4,4,0,0,0,13,16Zm0-6a2,2,0,1,1-2,2A2,2,0,0,1,13,10Z\"/><path d=\"M22,1H4A2,2,0,0,0,2,3V7H1A1,1,0,0,0,1,9H2v6H1a1,1,0,0,0,0,2H2v4a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V3A2,2,0,0,0,22,1ZM4,9H5v6H4ZM8,7H7V6H19V18H7V17H8a1,1,0,0,0,0-2H7V9H8A1,1,0,0,0,8,7ZM22,21H4V17H5v2a1,1,0,0,0,1,1H20a1,1,0,0,0,1-1V5a1,1,0,0,0-1-1H6A1,1,0,0,0,5,5V7H4V3H22Z\"/></symbol>\n    <symbol id=\"scale--low\" viewBox=\"0 0 24 24\"><path d=\"M23,0H1A1,1,0,0,0,1,2H11V5.05A10,10,0,0,0,2,15v7a2,2,0,0,0,2,2H20a2,2,0,0,0,2-2V15a10,10,0,0,0-9-9.95V2H23a1,1,0,0,0,0-2ZM20,15v7H4V15a8,8,0,0,1,16,0Z\"/><path d=\"M6,15a6,6,0,1,0,6-6A6,6,0,0,0,6,15Zm10,0a4,4,0,0,1-8,0,4,4,0,0,1,.57-2l2.72,2.73a1,1,0,0,0,1.42-1.42L10,11.57A4,4,0,0,1,12,11,4,4,0,0,1,16,15Z\"/></symbol>\n    <symbol id=\"scan-card--low\" viewBox=\"0 0 24 24\"><path d=\"M5,12H19v2H5Zm13,6H6a2,2,0,0,1-2-2V8A2,2,0,0,1,6,6H18a2,2,0,0,1,2,2v8A2,2,0,0,1,18,18Zm0-2V8H6v8ZM22,0a1.93,1.93,0,0,1,2,2V6a1,1,0,0,1-2,0V2H18a1,1,0,0,1,0-2Zm1,17a1,1,0,0,1,1,1v4a1.93,1.93,0,0,1-2,2H18a1,1,0,0,1,0-2h4V18A1,1,0,0,1,23,17ZM6,22a1,1,0,0,1,0,2H2a1.93,1.93,0,0,1-2-2V18a1,1,0,0,1,2,0v4ZM6,0A1,1,0,0,1,6,2H2V6A1,1,0,0,1,0,6V2A2.07,2.07,0,0,1,2,0Z\"/></symbol>\n    <symbol id=\"scan-qr-emvco--low\" viewBox=\"0 0 24 24\"><path d=\"M24.72,23.52h.39v.09H25V24h-.1v-.39h-.14Zm.83,0-.11.26,0,0v0l-.11-.26h-.12V24h.1v-.27l.12.27h.05l.12-.27V24h.1v-.48ZM24,10h-.92V1.86c0-.28,0-.94-.53-.94H14V0h8.57C23.22,0,24,.49,24,1.86ZM.92,1.86c0-.28,0-.94.53-.94H10V0H1.45C.78,0,0,.49,0,1.86V10H.92ZM24,22.14V14h-.92v8.17c0,.28,0,.94-.53.94H14V24h8.57C23.22,24,24,23.51,24,22.14ZM1.45,24H10v-.92H1.45c-.48,0-.53-.66-.53-.94V14H0v8.17C0,23.51.78,24,1.45,24Zm11-20.26h-.92v7.8H3.75v.92h8.71ZM14,12.46h6.21v-.92H14Zm-2.47,7.8h.92V14h-.92ZM4.66,9.11H9.1V4.67H4.66ZM3.74,10V3.74H10V10ZM14.9,9.11h4.44V4.67H14.9ZM14,10V3.74h6.29V10ZM4.66,19.34H9.1V14.9H4.66Zm-.92.92V14H10v6.28Zm10.23-2h.93V14H14ZM20.26,14h-.92v5.36H14v.92h6.27Zm-3.6,2.91h.92V14h-.92Z\"/></symbol>\n    <symbol id=\"search--low\" viewBox=\"0 0 24 24\"><path d=\"M18,10a8,8,0,1,0-8,8A8,8,0,0,0,18,10Zm-.26,6.33,6,6a1,1,0,0,1-1.42,1.42l-6-6a10,10,0,1,1,1.41-1.41Z\"/></symbol>\n    <symbol id=\"security-lock--low\" viewBox=\"0 0 24 24\"><path d=\"M15,8V5A3,3,0,0,0,9,5V8ZM8,10H5V22H19V10H8ZM7,8V5A5,5,0,0,1,17,5V8h2.08A1.92,1.92,0,0,1,21,9.92V22.09A1.9,1.9,0,0,1,19.09,24H4.91A1.92,1.92,0,0,1,3,22.09V9.91A1.9,1.9,0,0,1,4.91,8Z\"/></symbol>\n    <symbol id=\"security-protection--low\" viewBox=\"0 0 24 24\"><path d=\"M15.29,9.29a1,1,0,0,1,1.42,1.42l-5,5a1,1,0,0,1-1.42,0l-3-3a1,1,0,1,1,1.42-1.42L11,13.59ZM3,14.94V5.3a2,2,0,0,1,1.81-2,10.24,10.24,0,0,0,6.48-3,1,1,0,0,1,1.42,0,10.24,10.24,0,0,0,6.48,3A2,2,0,0,1,21,5.3v9.64a9,9,0,1,1-18,0Zm2,0a7,7,0,1,0,14,0V5.3a12.21,12.21,0,0,1-7-2.93A12.21,12.21,0,0,1,5,5.3Z\"/></symbol>\n    <symbol id=\"security-unlock--low\" viewBox=\"0 0 24 24\"><path d=\"M9,16a1,1,0,0,0,1,1h4a1,1,0,0,0,0-2H10a1,1,0,0,0-1,1M7,8V5A5,5,0,0,1,17,5a1,1,0,0,1-2,0A3,3,0,1,0,9,5V8H19.08A1.92,1.92,0,0,1,21,9.91V22.08A1.91,1.91,0,0,1,19.09,24H4.91A1.92,1.92,0,0,1,3,22.08V9.9A1.91,1.91,0,0,1,4.91,8ZM5,22H19V10H5Z\"/></symbol>\n    <symbol id=\"security--low\" viewBox=\"0 0 24 24\"><path d=\"M10,15V12h4v3Zm-7-.06V5.3a2,2,0,0,1,1.81-2,10.24,10.24,0,0,0,6.48-3,1,1,0,0,1,1.42,0,10.24,10.24,0,0,0,6.48,3A2,2,0,0,1,21,5.3v9.64a9,9,0,1,1-18,0ZM11.5,10V9.53a.5.5,0,1,1,1,0V10Zm-2,0H9a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V11a1,1,0,0,0-1-1h-.5V9.53a2.5,2.5,0,1,0-5,0ZM5,14.94a7,7,0,1,0,14,0V5.3a12.21,12.21,0,0,1-7-2.93A12.21,12.21,0,0,1,5,5.3Z\"/></symbol>\n    <symbol id=\"settings--low\" viewBox=\"0 0 24 24\"><path d=\"M18,12a6,6,0,1,1-6-6A6,6,0,0,1,18,12Zm-2,0a4,4,0,1,0-4,4A4,4,0,0,0,16,12ZM4,12a3.23,3.23,0,0,1-1.87,2.93L3,16.88A3.25,3.25,0,0,1,7.12,21l2,.81a3.23,3.23,0,0,1,5.86,0L16.88,21A3.25,3.25,0,0,1,21,16.88l.81-1.95a3.23,3.23,0,0,1,0-5.86L21,7.12A3.25,3.25,0,0,1,16.88,3l-1.95-.81a3.23,3.23,0,0,1-5.86,0L7.12,3A3.25,3.25,0,0,1,3,7.12l-.81,2A3.23,3.23,0,0,1,4,12ZM1.33,5.87a1.49,1.49,0,0,1,2.12-.73A1.23,1.23,0,0,0,5.14,3.45a1.49,1.49,0,0,1,.73-2.12L8.79.11a1.49,1.49,0,0,1,2,1,1.24,1.24,0,0,0,2.4,0,1.49,1.49,0,0,1,2-1l2.92,1.22a1.49,1.49,0,0,1,.73,2.12,1.23,1.23,0,0,0,1.69,1.69,1.49,1.49,0,0,1,2.12.73l1.21,2.92a1.48,1.48,0,0,1-1,2,1.24,1.24,0,0,0,0,2.4,1.49,1.49,0,0,1,1,2l-1.22,2.93a1.49,1.49,0,0,1-2.12.72,1.23,1.23,0,0,0-1.69,1.69,1.5,1.5,0,0,1-.73,2.13l-2.92,1.21a1.49,1.49,0,0,1-2-1,1.24,1.24,0,0,0-2.4,0,1.49,1.49,0,0,1-2,1L5.86,22.67a1.49,1.49,0,0,1-.72-2.12,1.23,1.23,0,0,0-1.69-1.69,1.49,1.49,0,0,1-2.12-.73L.11,15.21a1.49,1.49,0,0,1,1-2,1.24,1.24,0,0,0,0-2.4,1.49,1.49,0,0,1-1-2Z\"/></symbol>\n    <symbol id=\"share--low\" viewBox=\"0 0 24 24\"><path d=\"M20,10a1,1,0,0,1,0-2h2a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V10A2,2,0,0,1,2,8H4a1,1,0,0,1,0,2H2V22H22V10ZM13,3.41V17a1,1,0,0,1-2,0V3.41L7.71,6.71A1,1,0,0,1,6.29,5.29l5-5a1,1,0,0,1,1.42,0l5,5a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"shipping--low\" viewBox=\"0 0 24 24\"><path d=\"M3.16,17.75a3.48,3.48,0,0,0,6.68,0h5.32a3.48,3.48,0,0,0,6.68,0H24V13.09a2.81,2.81,0,0,0-.49-1.58L20.94,7.73a2.25,2.25,0,0,0-1.86-1H16V5.89a2.08,2.08,0,0,0-2-2.14H2A2.08,2.08,0,0,0,0,5.89V16.72l0,1Zm3.34.5A1.5,1.5,0,1,1,8,16.75,1.5,1.5,0,0,1,6.5,18.25Zm12,0a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,18.5,18.25Zm.58-9.5a.25.25,0,0,1,.2.1l2.58,3.79a.8.8,0,0,1,.14.45v2.66h-.16A3.48,3.48,0,0,0,16,14.31V8.75ZM2,5.89c0-.08,0-.14,0-.14H14a.2.2,0,0,1,.05.15v9.86H9.84a3.48,3.48,0,0,0-6.68,0H2Z\"/></symbol>\n    <symbol id=\"sign-in--low\" viewBox=\"0 0 24 24\"><path d=\"M17,2a1,1,0,0,1,0-2h5a2,2,0,0,1,2,2V22a2,2,0,0,1-2,2H17a1,1,0,0,1,0-2h5V2ZM14.59,13H1a1,1,0,0,1,0-2H14.59l-3.3-3.29a1,1,0,0,1,1.42-1.42l5,5a1,1,0,0,1,0,1.42l-5,5a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"sign-out--low\" viewBox=\"0 0 24 24\"><path d=\"M7,22a1,1,0,0,1,0,2H2a2,2,0,0,1-2-2V2A2,2,0,0,1,2,0H7A1,1,0,0,1,7,2H2V22Zm13.59-9H7a1,1,0,0,1,0-2H20.59l-3.3-3.29a1,1,0,0,1,1.42-1.42l5,5a1,1,0,0,1,0,1.42l-5,5a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"signature-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M1,22.5a1,1,0,0,1,0-2H23a1,1,0,0,1,0,2Zm11.83-17a3.14,3.14,0,0,0,.49-1.39.64.64,0,0,0-.26-.59c-.27-.09-.82.46-1.15,1.4A21.54,21.54,0,0,0,11,8.7C11.64,7.67,12.26,6.6,12.83,5.5Zm5.66,5.78h0ZM11.2,14.59a2.59,2.59,0,0,0,1.39.78A5.05,5.05,0,0,0,17,14.29a5.64,5.64,0,0,1-.28-2.13c.1-1.61.93-2.82,2.42-2.62,1.06.14,1.44,1,1.39,2.08A5.42,5.42,0,0,1,20,13.51a5.71,5.71,0,0,1-.58,1,3.75,3.75,0,0,0,3.3.51,1,1,0,0,1,.5,1.94,5.65,5.65,0,0,1-5.18-1,7,7,0,0,1-6,1.32,4.51,4.51,0,0,1-2.46-1.45A4,4,0,0,1,9,14.65c-.75.84-1.52,1.63-2.31,2.36a1,1,0,0,1-1.36-1.47A32.7,32.7,0,0,0,8.69,11.9,25.47,25.47,0,0,1,10,4.26c.65-1.84,2-3.2,3.68-2.63a2.54,2.54,0,0,1,1.62,2.52,4.84,4.84,0,0,1-.71,2.28,42.36,42.36,0,0,1-3.92,6.16A3.21,3.21,0,0,0,11.2,14.59ZM.59,15.5l-.3-.29a1,1,0,0,1,1.42-1.42l.29.3.29-.3a1,1,0,0,1,1.42,1.42l-.3.29.3.29a1,1,0,1,1-1.42,1.42L2,16.91l-.29.3A1,1,0,0,1,.29,15.79Z\"/></symbol>\n    <symbol id=\"signature--low\" viewBox=\"0 0 24 24\"><path d=\"M2,19.29l13-13L17.7,9,4.77,22H2ZM18.88,2.41l2.71,2.71L19.11,7.61l-2.7-2.73ZM23,22H7.6L19.81,9.74l3.89-3.9a1,1,0,0,0,0-1.41L19.59.29a1,1,0,0,0-1.41,0L.29,18.17a1,1,0,0,0-.29.71V23a1,1,0,0,0,1,1H23a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"stack-exchange--low\" viewBox=\"0 0 24 24\"><path d=\"M14.41,5l2.3,2.29a1,1,0,0,1-1.42,1.42l-3-3a1,1,0,0,1,0-1.42l3-3a1,1,0,1,1,1.42,1.42ZM14,6a1,1,0,0,1,0-2h1.5a8.5,8.5,0,0,1,0,17H14a1,1,0,0,1,0-2h1.5a6.5,6.5,0,0,0,0-13ZM0,22V17a2,2,0,0,1,2-2H7a2,2,0,0,1,2,2v5a2,2,0,0,1-2,2H2A2,2,0,0,1,0,22Zm2,0H7V17H2ZM0,7V2A2,2,0,0,1,2,0H7A2,2,0,0,1,9,2V7A2,2,0,0,1,7,9H2A2,2,0,0,1,0,7ZM2,7H7V2H2Z\"/></symbol>\n    <symbol id=\"statistics--low\" viewBox=\"0 0 24 24\"><path d=\"M15,2.06V9h6.94A8,8,0,0,0,15,2.06ZM24,10a1,1,0,0,1-1,1H14a1,1,0,0,1-1-1V1a1,1,0,0,1,1-1A10,10,0,0,1,24,10ZM11,13h8a1,1,0,0,1,0,2H10a1,1,0,0,1-1-1V5a1,1,0,0,1,2,0Zm7,1a1,1,0,0,1,2,0A10,10,0,0,1,9.72,24,10.11,10.11,0,0,1,0,14.28,10,10,0,0,1,10,4a1,1,0,0,1,0,2,8,8,0,0,0-8,8.23A8.12,8.12,0,0,0,9.77,22,8,8,0,0,0,18,14Z\"/></symbol>\n    <symbol id=\"subtract-alt--low\" viewBox=\"0 0 24 24\"><path d=\"M8,13a1,1,0,0,1,0-2h8a1,1,0,0,1,0,2Zm16-1A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"subtract--low\" viewBox=\"0 0 24 24\"><path d=\"M1,13a1,1,0,0,1,0-2H23a1,1,0,0,1,0,2Z\"/></symbol>\n    <symbol id=\"success--low\" viewBox=\"0 0 24 24\"><path d=\"M15.29,9.29a1,1,0,0,1,1.42,1.42l-5,5a1,1,0,0,1-1.42,0l-3-3a1,1,0,1,1,1.42-1.42L11,13.59ZM24,12A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"support-ticket--low\" viewBox=\"0 0 24 24\"><path d=\"M16,8a3.49,3.49,0,0,1-.61-4.14L14,2.41,10.41,6l1.3,1.29a1,1,0,0,1-1.42,1.42L9,7.41,2.41,14l1.43,1.42a3.5,3.5,0,0,1,4.74,4.75L10,21.59,16.59,15l-1.3-1.29a1,1,0,0,1,1.42-1.42L18,13.59,21.59,10,20.17,8.58A3.5,3.5,0,0,1,16,8Zm-1.32,3.73a1,1,0,0,1-1.42,0l-1-1a1,1,0,0,1,1.42-1.42l1,1A1,1,0,0,1,14.71,11.71Z\"/><path d=\"M13.71,9.29a1,1,0,0,0-1.42,1.42l1,1a1,1,0,0,0,1.42-1.42Z\"/><path d=\"M23.71,9.29,21,6.56a1,1,0,0,0-1.42,0,1.5,1.5,0,0,1-2.12-2.12,1,1,0,0,0,0-1.41L14.71.29a1,1,0,0,0-1.42,0l-13,13a1,1,0,0,0,0,1.42L3,17.44a1,1,0,0,0,1.41,0,1.5,1.5,0,0,1,2.12,2.12,1,1,0,0,0,0,1.42l2.73,2.73a1,1,0,0,0,1.42,0l8-8h0l5-5A1,1,0,0,0,23.71,9.29ZM18,13.59l-1.29-1.3a1,1,0,0,0-1.42,1.42L16.59,15,10,21.59,8.58,20.17a3.5,3.5,0,0,0-4.74-4.75L2.41,14,9,7.41l1.29,1.3a1,1,0,0,0,1.42-1.42L10.41,6,14,2.41l1.42,1.43a3.5,3.5,0,0,0,4.75,4.74L21.59,10Z\"/></symbol>\n    <symbol id=\"table--low\" viewBox=\"0 0 24 24\"><path d=\"M12.05,10a1,1,0,0,0-1,1v3h-6a1,1,0,0,0,0,2h6v3a1,1,0,0,0,2,0V16h6a1,1,0,0,0,0-2h-6V11A1,1,0,0,0,12.05,10Z\"/><path d=\"M22,0H2A2,2,0,0,0,0,2V22a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V2A2,2,0,0,0,22,0ZM2,2H22V6H2ZM22,22H2V8H22Z\"/></symbol>\n    <symbol id=\"time--low\" viewBox=\"0 0 24 24\"><path d=\"M13,11h5a1,1,0,0,1,0,2H12a1,1,0,0,1-1-1V6a1,1,0,0,1,2,0Zm11,1A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12Z\"/></symbol>\n    <symbol id=\"to-top--low\" viewBox=\"0 0 24 24\"><path d=\"M2,2V23a1,1,0,0,1-2,0V1A1,1,0,0,1,1,0H23a1,1,0,0,1,1,1V23a1,1,0,0,1-2,0V2ZM13,9.41V18a1,1,0,0,1-2,0V9.45L8.71,11.74a1,1,0,0,1-1.42,0,1,1,0,0,1,0-1.41l4-4a1,1,0,0,1,1.42,0l4,4a1,1,0,0,1,0,1.42,1,1,0,0,1-1.41,0Z\"/></symbol>\n    <symbol id=\"token--low\" viewBox=\"0 0 24 24\"><path d=\"M24,12A12,12,0,1,1,12,0,12,12,0,0,1,24,12Zm-2,0A10,10,0,1,0,12,22,10,10,0,0,0,22,12ZM16.72,8l-3.35,8H11.18L9.53,9.62A.87.87,0,0,0,9,8.91a8.86,8.86,0,0,0-2-.68l0-.23h3.52a1,1,0,0,1,1,.82l.87,4.63L14.55,8Z\"/></symbol>\n    <symbol id=\"topic--low\" viewBox=\"0 0 24 24\"><path d=\"M8,10h8a1,1,0,0,1,0,2H13v6a1,1,0,0,1-2,0V12H8a1,1,0,0,1,0-2ZM18.6,5,17,3.41V5ZM20,22V7H16a1,1,0,0,1-1-1V2H4.06L4,22ZM21.41,5A1.9,1.9,0,0,1,22,6.4V22a1.93,1.93,0,0,1-2,2H4a1.93,1.93,0,0,1-2-2V2A2.07,2.07,0,0,1,4,0H15.6A1.9,1.9,0,0,1,17,.59Z\"/></symbol>\n    <symbol id=\"transactions-new--low\" viewBox=\"0 0 24 24\"><path d=\"M8.5,13H9V12H8.5a.5.5,0,0,0,0,1ZM11,15v1h.5a.5.5,0,0,0,0-1ZM7,16H9V15H8.5a2.5,2.5,0,0,1,0-5H9V9a.94.94,0,0,1,1-1,.94.94,0,0,1,1,1v1h2a.94.94,0,0,1,1,1,.94.94,0,0,1-1,1H11v1h.5a2.5,2.5,0,0,1,0,5H11v1a.94.94,0,0,1-1,1,.94.94,0,0,1-1-1V18H7a1,1,0,0,1,0-2ZM18,3.41l-2.29,2.3a1,1,0,0,1-1.42-1.42l4-4a1,1,0,0,1,1.42,0l4,4a1,1,0,0,1-1.42,1.42L20,3.41V22a2,2,0,0,1-2,2H2a2,2,0,0,1-2-2V6A2,2,0,0,1,2,4H9A1,1,0,0,1,9,6H2V22H18Z\"/></symbol>\n    <symbol id=\"transactions--low\" viewBox=\"0 0 24 24\"><path d=\"M20.59,7H1A1,1,0,0,1,1,5H20.59l-3.3-3.29A1,1,0,0,1,18.71.29l5,5a1,1,0,0,1,0,1.42l-5,5a1,1,0,0,1-1.42-1.42ZM3.41,17H23a1,1,0,0,1,0,2H3.41l3.3,3.29a1,1,0,1,1-1.42,1.42l-5-5a1,1,0,0,1,0-1.42l5-5a1,1,0,0,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"travel-notifications--low\" viewBox=\"0 0 24 24\"><path d=\"M22,5H17V3a2,2,0,0,0-2-2H9A2,2,0,0,0,7,3V5H2A2,2,0,0,0,0,7V21a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V7A2,2,0,0,0,22,5ZM9,3h6V5H9ZM2,21V7H5V21Zm5,0V7H17V21Zm15,0H19V7h3Z\"/></symbol>\n    <symbol id=\"undo--low\" viewBox=\"0 0 24 24\"><path d=\"M14.5,5H3.41l3.3-3.29A1,1,0,0,0,5.29.29l-5,5a1.15,1.15,0,0,0-.21.33,1,1,0,0,0,0,.76,1,1,0,0,0,.21.33l5,5a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42L3.41,7H14.5a7.5,7.5,0,0,1,0,15H6a1,1,0,0,0,0,2h8.5a9.5,9.5,0,0,0,0-19\"/></symbol>\n    <symbol id=\"view-grid--low\" viewBox=\"0 0 24 24\"><path d=\"M22,22V16H16v6Zm0,2H16a2,2,0,0,1-2-2V16a2,2,0,0,1,2-2h6a2,2,0,0,1,2,2v6A2,2,0,0,1,22,24ZM8,22V16H2v6Zm0,2H2a2,2,0,0,1-2-2V16a2,2,0,0,1,2-2H8a2,2,0,0,1,2,2v6A2,2,0,0,1,8,24ZM22,8V2H16V8Zm0,2H16a2,2,0,0,1-2-2V2a2,2,0,0,1,2-2h6a2,2,0,0,1,2,2V8A2,2,0,0,1,22,10ZM8,8V2H2V8Zm0,2H2A2,2,0,0,1,0,8V2A2,2,0,0,1,2,0H8a2,2,0,0,1,2,2V8A2,2,0,0,1,8,10Z\"/></symbol>\n    <symbol id=\"view-list--low\" viewBox=\"0 0 24 24\"><path d=\"M23,20a1,1,0,0,1,0,2H10a1,1,0,0,1,0-2Zm0-9a1,1,0,0,1,0,2H10a1,1,0,0,1,0-2Zm0-9a1,1,0,0,1,0,2H10a1,1,0,0,1,0-2ZM4,22V20H2v2Zm.5,2h-3A1.5,1.5,0,0,1,0,22.5v-3A1.5,1.5,0,0,1,1.5,18h3A1.5,1.5,0,0,1,6,19.5v3A1.5,1.5,0,0,1,4.5,24ZM4,13V11H2v2Zm.5,2h-3A1.5,1.5,0,0,1,0,13.5v-3A1.5,1.5,0,0,1,1.5,9h3A1.5,1.5,0,0,1,6,10.5v3A1.5,1.5,0,0,1,4.5,15ZM4,4V2H2V4Zm.5,2h-3A1.5,1.5,0,0,1,0,4.5v-3A1.5,1.5,0,0,1,1.5,0h3A1.5,1.5,0,0,1,6,1.5v3A1.5,1.5,0,0,1,4.5,6Z\"/></symbol>\n    <symbol id=\"wallet-default--low\" viewBox=\"0 0 24 24\"><path d=\"M22,6.5H19v-4a1,1,0,0,0-1-1H3.5A3.5,3.5,0,0,0,0,5V20.5a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V8.5A2,2,0,0,0,22,6.5ZM3.5,3.5H17v3H3.5a1.5,1.5,0,0,1,0-3ZM22,20.5H2V8.15a3.45,3.45,0,0,0,1.5.35H22Z\"/><path d=\"M16.05,12.5H13.77L13,10.18a1,1,0,0,0-1.9,0l-.77,2.32H8.05a1,1,0,0,0-.71,1.71L8.9,15.77l-.8,2.41a1,1,0,0,0,1.5,1.15l2.45-1.63,2.44,1.63A1,1,0,0,0,16,18.18l-.81-2.41,1.56-1.56A1,1,0,0,0,16.05,12.5Zm-2.71,2.29a1,1,0,0,0-.24,1l.08.23-.58-.38a1,1,0,0,0-1.11,0l-.57.38.08-.23a1,1,0,0,0-.25-1l-.29-.29h.59a1,1,0,0,0,.95-.68l.05-.16,0,.16a1,1,0,0,0,1,.68h.58Z\"/></symbol>\n    <symbol id=\"wallet--low\" viewBox=\"0 0 24 24\"><path d=\"M22,6.5H19v-4a1,1,0,0,0-1-1H3.5A3.5,3.5,0,0,0,0,5V20.5a2,2,0,0,0,2,2H22a2,2,0,0,0,2-2V8.5A2,2,0,0,0,22,6.5ZM3.5,3.5H17v3H3.5a1.5,1.5,0,0,1,0-3ZM22,20.5H2V8.15a3.45,3.45,0,0,0,1.5.35H22Z\"/></symbol>\n    <symbol id=\"warning--low\" viewBox=\"0 0 24 24\"><path d=\"M13,18a1,1,0,0,1-2,0V17a1,1,0,1,1,2,0Zm0-4a1,1,0,1,1-2,0V9a1,1,0,0,1,2,0ZM12,4,3,20H21ZM10.26,3a2,2,0,0,1,3.48,0l9,16A2,2,0,0,1,21,22H3a2,2,0,0,1-1-.26A2,2,0,0,1,1.29,19Z\"/></symbol>\n    <symbol id=\"wrench--low\" viewBox=\"0 0 24 24\"><path d=\"M16.41,2.09a5.5,5.5,0,0,0-5.5,5.5v2.5a1,1,0,0,1-.29.7l-8,8a1.83,1.83,0,1,0,2.59,2.59l8-8a1,1,0,0,1,.7-.29h2.5a5.51,5.51,0,0,0,5.41-6.5l-4.2,4.2a1,1,0,0,1-1.41,0l-3-3a1,1,0,0,1,0-1.41l3-3,1.2-1.2A5.55,5.55,0,0,0,16.41,2.09Zm-2.08,13-7.71,7.7a3.83,3.83,0,0,1-5.41-5.41l7.7-7.71V7.59A7.52,7.52,0,0,1,19.7.84,1,1,0,0,1,20,2.45l-.35.34-4.29,4.3,1.58,1.58,2.3-2.29,2-2L21.55,4a1,1,0,0,1,1.61.27,7.52,7.52,0,0,1-6.75,10.79Z\"/></symbol>\n    <symbol id=\"zoom-in--low\" viewBox=\"0 0 24 24\"><path d=\"M18,10a8,8,0,1,0-8,8A8,8,0,0,0,18,10ZM9,9V6h2V9h3v2H11v3H9V11H6V9Zm8.74,7.33,6,6a1,1,0,0,1-1.42,1.42l-6-6a10,10,0,1,1,1.41-1.41Z\"/></symbol>\n    <symbol id=\"zoom-out--low\" viewBox=\"0 0 24 24\"><path d=\"M6,11V9h8v2Zm12-1a8,8,0,1,0-8,8A8,8,0,0,0,18,10Zm-.26,6.33,6,6a1,1,0,0,1-1.42,1.42l-6-6a10,10,0,1,1,1.41-1.41Z\"/></symbol>\n    <symbol id=\"Artboard 125--high\" viewBox=\"0 0 48 48\"><path d=\"M41.93,23.93a11.54,11.54,0,0,0,.39-15.22,9.23,9.23,0,0,0-13.87-.14l-3.31,3.54a1.49,1.49,0,0,1-2.19,0l-3-3.26A9.47,9.47,0,0,0,6,8.43,11.25,11.25,0,0,0,5.9,23.65L23,42a1.35,1.35,0,0,0,2.05,0Zm-17.88-15,2.2-2.37a12.24,12.24,0,0,1,18.31.19C49.34,12,49.09,20.64,44.12,26L27.27,44.08a4.37,4.37,0,0,1-6.44,0L3.7,25.69A14.24,14.24,0,0,1,3.87,6.35a12.46,12.46,0,0,1,18.24.46Z\"/></symbol>\n    <symbol id=\"Artboard 126--high\" viewBox=\"0 0 48 48\"><path d=\"M26.73,36.1a1.5,1.5,0,0,1,2.17,2.08l-.17.18L23.08,44A13.51,13.51,0,0,1,4,24.92l5.66-5.65a13.53,13.53,0,0,1,19.09,0,13.2,13.2,0,0,1,3.21,5.18,1.5,1.5,0,0,1-2.84,1,10.41,10.41,0,0,0-9.91-7.08,10.41,10.41,0,0,0-7.43,3.06L6.11,27A10.5,10.5,0,0,0,21,41.89ZM44,4a13.53,13.53,0,0,1,0,19.1l-5.66,5.65a13.51,13.51,0,0,1-19.09,0,13.22,13.22,0,0,1-3.2-5.16,1.5,1.5,0,0,1,2.84-1,10.27,10.27,0,0,0,2.48,4,10.54,10.54,0,0,0,14.85,0L41.89,21a10.54,10.54,0,0,0,0-14.85A10.54,10.54,0,0,0,27,6.11l-5.65,5.65a1.5,1.5,0,1,1-2.12-2.12L24.92,4A13.53,13.53,0,0,1,44,4Z\"/></symbol>\n    <symbol id=\"Artboard 127--high\" viewBox=\"0 0 48 48\"><path d=\"M23,34a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Zm0-9a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Zm0-9a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2ZM14,34h2V32H14Zm-1,2a1,1,0,0,1-1-1V31a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1Zm1-11h2V23H14Zm-1,2a1,1,0,0,1-1-1V22a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1Zm1-11h2V14H14Zm-1,2a1,1,0,0,1-1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1ZM0,44.5V3.5A3.5,3.5,0,0,1,3.5,0h41A3.5,3.5,0,0,1,48,3.5v41A3.5,3.5,0,0,1,44.5,48H3.5A3.5,3.5,0,0,1,0,44.5Zm3,0a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5V3.5a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5Z\"/></symbol>\n    <symbol id=\"Artboard 128--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,3H3.5a.5.5,0,0,0-.5.5v41a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5V3.5A.5.5,0,0,0,44.5,3ZM18.71,31.71l-4,4a1,1,0,0,1-1.42,0l-2-2a1,1,0,0,1,1.42-1.42L14,33.59l3.29-3.3a1,1,0,0,1,1.42,1.42Zm0-9-4,4a1,1,0,0,1-1.42,0l-2-2a1,1,0,0,1,1.42-1.42L14,24.59l3.29-3.3a1,1,0,0,1,1.42,1.42Zm0-9-4,4a1,1,0,0,1-1.42,0l-2-2a1,1,0,0,1,1.42-1.42L14,15.59l3.29-3.3a1,1,0,0,1,1.42,1.42ZM35,34H23a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Zm0-9H23a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Zm0-9H23a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Z\"/><path d=\"M35,23H23a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M35,14H23a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M35,32H23a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M44.5,0H3.5A3.5,3.5,0,0,0,0,3.5v41A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5V3.5A3.5,3.5,0,0,0,44.5,0ZM45,44.5a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,3.5,3h41a.5.5,0,0,1,.5.5Z\"/><path d=\"M17.29,21.29,14,24.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z\"/><path d=\"M17.29,12.29,14,15.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z\"/><path d=\"M17.29,30.29,14,33.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z\"/></symbol>\n    <symbol id=\"Artboard 86--high\" viewBox=\"0 0 48 48\"><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86Zm-8-3.8L42.9,9H39ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5Zm42,9a.5.5,0,0,1-.5.5h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45Z\"/><rect width=\"1.11\" height=\"6.07\" x=\"24.44\" y=\"25.93\"/><path d=\"M21.36,28.71c-.24.73-.46,1.47-.62,2.19h0c-.16-.74-.36-1.45-.59-2.21l-.83-2.76H18.1l2,6.07h1.27l2.09-6.07H22.24Z\"/><path d=\"M14.59,25.93,12.65,32h1.14l.53-1.72h1.92L16.79,32H18l-2-6.07Zm-.09,3.51L15,28c.11-.36.2-.78.29-1.13h0c.09.35.19.76.31,1.13l.47,1.49Z\"/></symbol>\n    <symbol id=\"account-add--high\" viewBox=\"0 0 48 48\"><path d=\"M46.5,37H41V31.5a1.5,1.5,0,0,0-3,0V37H32.5a1.5,1.5,0,0,0,0,3H38v5.5a1.5,1.5,0,0,0,3,0V40h5.5a1.5,1.5,0,0,0,0-3Z\"/><path d=\"M26.5,45H3.5a.5.5,0,0,1-.5-.5A18.5,18.5,0,0,1,21.5,26h5a18.32,18.32,0,0,1,8.37,1.83,1.5,1.5,0,0,0,1.35-2.68,19.76,19.76,0,0,0-4.62-1.62,13,13,0,1,0-15.1.08A21.48,21.48,0,0,0,0,44.5,3.5,3.5,0,0,0,3.5,48h23a1.5,1.5,0,0,0,0-3ZM14,13A10,10,0,1,1,24,23,10,10,0,0,1,14,13Z\"/></symbol>\n    <symbol id=\"account-favorite--high\" viewBox=\"0 0 48 48\"><path d=\"M46.81,35H42l-1.92-3.94a1,1,0,0,0-1.82,0L36.58,35H31.81a1,1,0,0,0-.7,1.72l3.64,3.53-2.47,5.33a1,1,0,0,0,1.42,1.28l5.49-3.2,5.5,3.2a1,1,0,0,0,1.42-1.25l-2.26-5.35,3.65-3.54A1,1,0,0,0,46.81,35ZM42,39.31a1,1,0,0,0-.22,1.1l1.36,3.21-3.4-2a1,1,0,0,0-1,0l-3.26,1.89,1.43-3.09a1,1,0,0,0-.21-1.13L34.27,37h3a1,1,0,0,0,.92-.6l1.09-2.51,1.24,2.55a1,1,0,0,0,.9.56h3Z\"/><path d=\"M26.69,45h-23a.5.5,0,0,1-.5-.5A18.5,18.5,0,0,1,21.69,26h5a18.32,18.32,0,0,1,8.37,1.83,1.5,1.5,0,0,0,1.35-2.68,19.84,19.84,0,0,0-4.61-1.62,13,13,0,1,0-15.11.08A21.48,21.48,0,0,0,.19,44.5,3.5,3.5,0,0,0,3.69,48h23a1.5,1.5,0,0,0,0-3ZM14.19,13a10,10,0,1,1,10,10A10,10,0,0,1,14.19,13Z\"/></symbol>\n    <symbol id=\"account-lock--high\" viewBox=\"0 0 48 48\"><path d=\"M26.5,45H3.5a.5.5,0,0,1-.5-.5A18.5,18.5,0,0,1,21.5,26h5a18.32,18.32,0,0,1,8.37,1.83,1.5,1.5,0,0,0,1.35-2.68,19.76,19.76,0,0,0-4.62-1.62,13,13,0,1,0-15.1.08A21.48,21.48,0,0,0,0,44.5,3.5,3.5,0,0,0,3.5,48h23a1.5,1.5,0,0,0,0-3ZM14,13A10,10,0,1,1,24,23,10,10,0,0,1,14,13Z\"/><path d=\"M44.75,36H44V34a5,5,0,0,0-10,0v2h-.75A3.26,3.26,0,0,0,30,39.25v5.5A3.26,3.26,0,0,0,33.25,48h11.5A3.26,3.26,0,0,0,48,44.75v-5.5A3.26,3.26,0,0,0,44.75,36ZM37,34a2,2,0,0,1,4,0v2H37Zm8,10.75a.25.25,0,0,1-.25.25H33.25a.26.26,0,0,1-.25-.25v-5.5a.25.25,0,0,1,.25-.25h11.5a.26.26,0,0,1,.25.25Z\"/></symbol>\n    <symbol id=\"account-remove--high\" viewBox=\"0 0 48 48\"><path d=\"M41.07,38l4.5-4.5a1.46,1.46,0,0,0-2.07-2.07L39,35.93l-4.5-4.5a1.46,1.46,0,0,0-2.07,2.07l4.5,4.5-4.5,4.5a1.46,1.46,0,0,0,2.07,2.07l4.5-4.5,4.5,4.5a1.46,1.46,0,0,0,2.07-2.07Z\"/><path d=\"M26.5,45H3.5a.5.5,0,0,1-.5-.5A18.5,18.5,0,0,1,21.5,26h5a18.32,18.32,0,0,1,8.37,1.83,1.5,1.5,0,0,0,1.35-2.68,19.76,19.76,0,0,0-4.62-1.62,13,13,0,1,0-15.1.08A21.48,21.48,0,0,0,0,44.5,3.5,3.5,0,0,0,3.5,48h23a1.5,1.5,0,0,0,0-3ZM14,13A10,10,0,1,1,24,23,10,10,0,0,1,14,13Z\"/></symbol>\n    <symbol id=\"account--high\" viewBox=\"0 0 48 48\"><path d=\"M31.5,23.61a13,13,0,1,0-15,0A21.48,21.48,0,0,0,0,44.5,3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5,21.48,21.48,0,0,0,31.5,23.61ZM14,13A10,10,0,1,1,24,23,10,10,0,0,1,14,13ZM44.5,45H3.5a.5.5,0,0,1-.5-.5A18.5,18.5,0,0,1,21.5,26h5A18.5,18.5,0,0,1,45,44.5.5.5,0,0,1,44.5,45Z\"/></symbol>\n    <symbol id=\"add-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M24,45A21,21,0,1,0,3,24,21,21,0,0,0,24,45ZM24,0A24,24,0,1,1,0,24,24,24,0,0,1,24,0ZM23,25H16a1,1,0,0,1,0-2h7V16a1,1,0,0,1,2,0v7h7a1,1,0,0,1,0,2H25v7a1,1,0,0,1-2,0Z\"/></symbol>\n    <symbol id=\"add--high\" viewBox=\"0 0 48 48\"><path d=\"M41.5,22H25V6.5a1.5,1.5,0,0,0-3,0V22H6.5a1.5,1.5,0,0,0,0,3H22V41.5a1.5,1.5,0,0,0,3,0V25H41.5a1.5,1.5,0,0,0,0-3Z\"/></symbol>\n    <symbol id=\"analytics--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,38a.5.5,0,0,0,.5-.5V31.41L38.41,38Zm-7-26a.5.5,0,0,0-.5.5v6.09L43.59,12ZM37,36.59l8-8V22.41l-8,8Zm8-23.18-8,8v6.17l8-8ZM44.5,9A3.5,3.5,0,0,1,48,12.5v25A3.5,3.5,0,0,1,44.5,41h-7A3.5,3.5,0,0,1,34,37.5v-25A3.5,3.5,0,0,1,37.5,9Zm-24,13a.5.5,0,0,0-.5.5v5.09L25.59,22Zm7,16a.5.5,0,0,0,.5-.5V31.41L21.41,38ZM28,22.43l-8,8v6.18l8-8V22.43ZM20.5,41A3.5,3.5,0,0,1,17,37.5v-15A3.5,3.5,0,0,1,20.5,19h7A3.5,3.5,0,0,1,31,22.5v15A3.5,3.5,0,0,1,27.5,41ZM3.5,3a.5.5,0,0,0-.5.5V9.59L9.59,3Zm7,35a.5.5,0,0,0,.5-.5V31.41L4.41,38ZM11,4.41l-8,8v6.17l8-8ZM3,36.59l8-8V22.41l-8,8ZM3,21.41v6.17l8-8V13.41ZM3.5,41A3.5,3.5,0,0,1,0,37.5V3.5A3.5,3.5,0,0,1,3.5,0h7A3.5,3.5,0,0,1,14,3.5v34A3.5,3.5,0,0,1,10.5,41Zm43,4a1.5,1.5,0,0,1,0,3H1.5a1.5,1.5,0,0,1,0-3Z\"/></symbol>\n    <symbol id=\"arrow-back--high\" viewBox=\"0 0 48 48\"><path d=\"M5.05,22.5H46.5a1.5,1.5,0,0,1,0,3H5.05l14.53,15a1.5,1.5,0,1,1-2.16,2.08L.42,25A1.5,1.5,0,0,1,.42,23l17-17.5a1.5,1.5,0,1,1,2.16,2.08Z\"/></symbol>\n    <symbol id=\"arrow-collapse--high\" viewBox=\"0 0 48 48\"><path d=\"M7.55,33.58a1.51,1.51,0,0,1-2.1-2.16l17.5-17a1.52,1.52,0,0,1,2.1,0l17.5,17a1.5,1.5,0,0,1-2.09,2.16L24,17.59Z\"/></symbol>\n    <symbol id=\"arrow-down--high\" viewBox=\"0 0 48 48\"><path d=\"M22.5,36.74V7.5a1.5,1.5,0,0,1,3,0V36.75l6.91-7.28a1.5,1.5,0,1,1,2.18,2.06l-9.5,10a1.48,1.48,0,0,1-2.17,0l-9.51-10a1.5,1.5,0,1,1,2.18-2.06Z\"/></symbol>\n    <symbol id=\"arrow-end--high\" viewBox=\"0 0 48 48\"><path d=\"M40,41.5a1.5,1.5,0,0,1-3,0V6.5a1.5,1.5,0,0,1,3,0ZM8.42,7.54a1.5,1.5,0,1,1,2.16-2.08l17,17.5a1.5,1.5,0,0,1,0,2.08l-17,17.5a1.5,1.5,0,1,1-2.16-2.08L24.41,24Z\"/></symbol>\n    <symbol id=\"arrow-expand--high\" viewBox=\"0 0 48 48\"><path d=\"M40.45,14.42a1.51,1.51,0,0,1,2.1,2.16l-17.5,17a1.52,1.52,0,0,1-2.1,0l-17.5-17a1.51,1.51,0,0,1,2.1-2.16L24,30.41Z\"/></symbol>\n    <symbol id=\"arrow-forward--high\" viewBox=\"0 0 48 48\"><path d=\"M43,25.5H1.5a1.5,1.5,0,0,1,0-3H43l-14.53-15a1.5,1.5,0,1,1,2.16-2.08l17,17.5a1.5,1.5,0,0,1,0,2.08l-17,17.5a1.5,1.5,0,1,1-2.16-2.08Z\"/></symbol>\n    <symbol id=\"arrow-left--high\" viewBox=\"0 0 48 48\"><path d=\"M11.26,22.5H40.5a1.5,1.5,0,0,1,0,3H11.25l7.28,6.91a1.5,1.5,0,0,1-2.06,2.18l-10-9.5a1.48,1.48,0,0,1,0-2.17l10-9.51a1.5,1.5,0,1,1,2.06,2.18Z\"/></symbol>\n    <symbol id=\"arrow-next--high\" viewBox=\"0 0 48 48\"><path d=\"M14.42,7.54a1.5,1.5,0,1,1,2.16-2.08l17,17.5a1.5,1.5,0,0,1,0,2.08l-17,17.5a1.5,1.5,0,1,1-2.16-2.08L30.41,24Z\"/></symbol>\n    <symbol id=\"arrow-next-1--high\" viewBox=\"0 0 48 48\"><path d=\"M14.42,7.54a1.5,1.5,0,1,1,2.16-2.08l17,17.5a1.5,1.5,0,0,1,0,2.08l-17,17.5a1.5,1.5,0,1,1-2.16-2.08L30.41,24Z\"/></symbol>\n    <symbol id=\"arrow-previous--high\" viewBox=\"0 0 48 48\"><path d=\"M33.58,40.46a1.5,1.5,0,1,1-2.16,2.08L14.42,25a1.5,1.5,0,0,1,0-2.08l17-17.5a1.5,1.5,0,1,1,2.16,2.08L17.59,24Z\"/></symbol>\n    <symbol id=\"arrow-right--high\" viewBox=\"0 0 48 48\"><path d=\"M36.74,25.5H7.5a1.5,1.5,0,0,1,0-3H36.75l-7.28-6.91a1.5,1.5,0,0,1,2.06-2.18l10,9.5a1.48,1.48,0,0,1,0,2.17l-10,9.51a1.5,1.5,0,1,1-2.06-2.18Z\"/></symbol>\n    <symbol id=\"arrow-start--high\" viewBox=\"0 0 48 48\"><path d=\"M8,6.5a1.5,1.5,0,0,1,3,0v35a1.5,1.5,0,0,1-3,0Zm31.58,34a1.5,1.5,0,1,1-2.16,2.08L20.42,25a1.5,1.5,0,0,1,0-2.08l17-17.5a1.5,1.5,0,1,1,2.16,2.08L23.59,24Z\"/></symbol>\n    <symbol id=\"arrow-up--high\" viewBox=\"0 0 48 48\"><path d=\"M25.5,11.26V40.5a1.5,1.5,0,0,1-3,0V11.25l-6.91,7.28a1.5,1.5,0,1,1-2.18-2.06l9.5-10a1.48,1.48,0,0,1,2.17,0l9.51,10a1.5,1.5,0,1,1-2.18,2.06Z\"/></symbol>\n    <symbol id=\"atm--high\" viewBox=\"0 0 48 48\"><path d=\"M1.5,3a1.5,1.5,0,0,1,0-3h45a1.5,1.5,0,0,1,0,3ZM16,40h3V34H16Zm-2-6a2,2,0,0,1,2-2h3a2,2,0,0,1,2,2v6a2,2,0,0,1-2,2H16a2,2,0,0,1-2-2ZM32,45V7a1,1,0,0,1,2,0V45h3.54a.45.45,0,0,0,.46-.46V7.5a1.5,1.5,0,0,1,3,0v37A3.46,3.46,0,0,1,37.54,48H10.46A3.46,3.46,0,0,1,7,44.54V7.5a1.5,1.5,0,0,1,3,0v37a.45.45,0,0,0,.46.46Z\"/></symbol>\n    <symbol id=\"attachment--high\" viewBox=\"0 0 48 48\"><path d=\"M13.39,48A13.27,13.27,0,0,1,0,34.43a14.05,14.05,0,0,1,4.15-9.74L28.52,2.81A9.76,9.76,0,0,1,42.1,2.68a9.28,9.28,0,0,1,2.74,6.65,9.84,9.84,0,0,1-2.92,7L16.81,39a5.58,5.58,0,0,1-3.88,1.63A5.42,5.42,0,0,1,9,39a5.59,5.59,0,0,1,.09-7.89L34.19,8.49a1.5,1.5,0,0,1,2,2.23l-25,22.6a2.58,2.58,0,0,0,0,3.59,2.43,2.43,0,0,0,1.78.71,2.66,2.66,0,0,0,1.86-.8l25-22.65a6.84,6.84,0,0,0,2-4.83A6.36,6.36,0,0,0,40,4.81a6.75,6.75,0,0,0-9.4.18L6.25,26.87A10.75,10.75,0,0,0,6,42a10.72,10.72,0,0,0,15.16-.27L45.53,19.84a1.5,1.5,0,0,1,2,2.23L23.26,43.9A13.89,13.89,0,0,1,13.39,48Z\"/></symbol>\n    <symbol id=\"auth-face--high\" viewBox=\"0 0 48 48\"><path d=\"M31.53,30.36a1.5,1.5,0,1,1,1.94,2.28,15,15,0,0,1-18.94,0,1.5,1.5,0,1,1,1.94-2.28A12.06,12.06,0,0,0,31.53,30.36ZM34,18.5a1.5,1.5,0,0,1-3,0v-3a1.5,1.5,0,0,1,3,0ZM25,25h1.5a1.5,1.5,0,0,1,0,3h-3A1.5,1.5,0,0,1,22,26.5v-6a1.5,1.5,0,0,1,3,0Zm-8-6.5a1.5,1.5,0,0,1-3,0v-3a1.5,1.5,0,0,1,3,0ZM14.5,0A1.54,1.54,0,0,1,16,1.5,1.54,1.54,0,0,1,14.5,3H3.5a.47.47,0,0,0-.5.5v11A1.54,1.54,0,0,1,1.5,16,1.54,1.54,0,0,1,0,14.5V3.5A3.54,3.54,0,0,1,3.5,0Zm30,0A3.54,3.54,0,0,1,48,3.5v11a1.5,1.5,0,0,1-3,0V3.5a.47.47,0,0,0-.5-.5h-11A1.54,1.54,0,0,1,32,1.5,1.54,1.54,0,0,1,33.5,0Zm2,32A1.54,1.54,0,0,1,48,33.5v11A3.54,3.54,0,0,1,44.5,48h-11a1.5,1.5,0,0,1,0-3h11a.47.47,0,0,0,.5-.5v-11A1.54,1.54,0,0,1,46.5,32Zm-32,13a1.5,1.5,0,0,1,0,3H3.5A3.54,3.54,0,0,1,0,44.5v-11A1.54,1.54,0,0,1,1.5,32,1.54,1.54,0,0,1,3,33.5v11a.47.47,0,0,0,.5.5Z\"/></symbol>\n    <symbol id=\"auth-one-time-code--high\" viewBox=\"0 0 48 48\"><path d=\"M17,28H13a1,1,0,0,0,0,2h4a1,1,0,0,0,0-2Z\"/><path d=\"M40.84,7.91A27.7,27.7,0,0,1,25.56.44,1.5,1.5,0,0,0,24.5,0h-1a1.5,1.5,0,0,0-1.06.44A27.7,27.7,0,0,1,7.16,7.91,3.5,3.5,0,0,0,4,11.39V28a20,20,0,0,0,40,0V11.39A3.5,3.5,0,0,0,40.84,7.91ZM41,28A17,17,0,0,1,7,28V11.39a.51.51,0,0,1,.48-.5A30.65,30.65,0,0,0,24,3.1a30.65,30.65,0,0,0,16.52,7.79.51.51,0,0,1,.48.5Z\"/><path d=\"M26.71,18.29a1,1,0,0,0-1.42,0L24,19.59l-1.29-1.3a1,1,0,0,0-1.42,1.42L22.59,21l-1.3,1.29a1,1,0,0,0,1.42,1.42L24,22.41l1.29,1.3a1,1,0,0,0,1.42-1.42L25.41,21l1.3-1.29A1,1,0,0,0,26.71,18.29Z\"/><path d=\"M35,28H31a1,1,0,0,0,0,2h4a1,1,0,0,0,0-2Z\"/><path d=\"M17.71,18.29a1,1,0,0,0-1.42,0L15,19.59l-1.29-1.3a1,1,0,0,0-1.42,1.42L13.59,21l-1.3,1.29a1,1,0,0,0,1.42,1.42L15,22.41l1.29,1.3a1,1,0,0,0,1.42-1.42L16.41,21l1.3-1.29A1,1,0,0,0,17.71,18.29Z\"/><path d=\"M26,28H22a1,1,0,0,0,0,2h4a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"auth-reauthorize--high\" viewBox=\"0 0 48 48\"><path d=\"M33.28,36.33,45.37,22.51a1.5,1.5,0,1,1,2.26,2l-13.13,15a1.5,1.5,0,0,1-2.16.1l-7.87-7.5a1.5,1.5,0,0,1,2.06-2.18ZM4.34,25.45a1.5,1.5,0,0,1,2.32-1.9l13,16a1.5,1.5,0,1,1-2.32,1.9ZM1.5,26a1.5,1.5,0,0,1,0-3h8.57A6.93,6.93,0,0,0,17,16.07v-.14A6.93,6.93,0,0,0,10.07,9H1.5a1.5,1.5,0,0,1,0-3h8.57A9.94,9.94,0,0,1,20,15.93v.14A9.94,9.94,0,0,1,10.07,26ZM3,40.5a1.5,1.5,0,0,1-3,0V7.5a1.5,1.5,0,0,1,3,0Z\"/></symbol>\n    <symbol id=\"auth-voice--high\" viewBox=\"0 0 48 48\"><path d=\"M32,19.5v10a1.5,1.5,0,0,1-3,0v-10a1.5,1.5,0,0,1,3,0ZM18.5,13A1.54,1.54,0,0,1,20,14.5v20a1.5,1.5,0,0,1-3,0v-20A1.54,1.54,0,0,1,18.5,13ZM14,26.5a1.5,1.5,0,0,1-3,0v-4a1.5,1.5,0,0,1,3,0Zm24,0a1.5,1.5,0,0,1-3,0v-4a1.5,1.5,0,0,1,3,0ZM24.5,21A1.54,1.54,0,0,1,26,22.5v4a1.5,1.5,0,0,1-3,0v-4A1.54,1.54,0,0,1,24.5,21ZM14.5,0A1.54,1.54,0,0,1,16,1.5,1.54,1.54,0,0,1,14.5,3H3.5a.47.47,0,0,0-.5.5v11A1.54,1.54,0,0,1,1.5,16,1.54,1.54,0,0,1,0,14.5V3.5A3.54,3.54,0,0,1,3.5,0Zm30,0A3.54,3.54,0,0,1,48,3.5v11a1.5,1.5,0,0,1-3,0V3.5a.47.47,0,0,0-.5-.5h-11A1.54,1.54,0,0,1,32,1.5,1.54,1.54,0,0,1,33.5,0Zm2,32A1.54,1.54,0,0,1,48,33.5v11A3.54,3.54,0,0,1,44.5,48h-11a1.5,1.5,0,0,1,0-3h11a.47.47,0,0,0,.5-.5v-11A1.54,1.54,0,0,1,46.5,32Zm-32,13a1.5,1.5,0,0,1,0,3H3.5A3.54,3.54,0,0,1,0,44.5v-11A1.54,1.54,0,0,1,1.5,32,1.54,1.54,0,0,1,3,33.5v11a.47.47,0,0,0,.5.5Z\"/></symbol>\n    <symbol id=\"balance--high\" viewBox=\"0 0 48 48\"><path d=\"M24,21a6,6,0,1,0-6-6A6,6,0,0,0,24,21Zm0-10a4,4,0,1,1-4,4A4,4,0,0,1,24,11Z\"/><path d=\"M44.5,0H3.5A3.6,3.6,0,0,0,0,3.5v41A3.6,3.6,0,0,0,3.5,48h41A3.6,3.6,0,0,0,48,44.5V3.5A3.61,3.61,0,0,0,44.5,0ZM3,31H45v6H3ZM3.5,3h41a.66.66,0,0,1,.5.5V29H3V3.5A.64.64,0,0,1,3.5,3Zm41,42H3.5a.64.64,0,0,1-.5-.5V39H45v5.5A.64.64,0,0,1,44.5,45Z\"/></symbol>\n    <symbol id=\"bill-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H7.5A3.5,3.5,0,0,0,4,3.5v41A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V11.32A3.48,3.48,0,0,0,43,8.86ZM38.9,9H35V5.06Zm1.6,36H7.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,7.5,3H32v7.5A1.5,1.5,0,0,0,33.5,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/><path d=\"M29,24a1,1,0,0,0,0-2H25V20a1,1,0,0,0-2,0v2H22a4,4,0,0,0,0,8h1v4H19a1,1,0,0,0,0,2h4v2a1,1,0,0,0,2,0V36h1a4,4,0,0,0,0-8H25V24Zm-6,4H22a2,2,0,0,1,0-4h1Zm3,2a2,2,0,0,1,0,4H25V30Z\"/></symbol>\n    <symbol id=\"bill--high\" viewBox=\"0 0 48 48\"><path d=\"M19,28a1,1,0,0,0,0,2h4v2a1,1,0,0,0,2,0V30h1a4,4,0,0,0,0-8H25V18h4a1,1,0,0,0,0-2H25V14a1,1,0,0,0-2,0v2H22a4,4,0,0,0,0,8h1v4Zm3-6a2,2,0,0,1,0-4h1v4Zm3,2h1a2,2,0,0,1,0,4H25Z\"/><path d=\"M42.5,0H5.5A1.5,1.5,0,0,0,4,1.5v45a1.5,1.5,0,0,0,2.41,1.19L12,43.42,17,47.65a1.51,1.51,0,0,0,1.92,0l5-4.2,5,4.2a1.51,1.51,0,0,0,1.92,0L36,43.42l5.55,4.27A1.5,1.5,0,0,0,44,46.5V1.5A1.5,1.5,0,0,0,42.5,0ZM41,43.45l-4.09-3.14a1.49,1.49,0,0,0-1.87,0l-5,4.2-5-4.2a1.48,1.48,0,0,0-1.92,0l-5,4.2-5-4.2a1.49,1.49,0,0,0-1.87,0L7,43.45V3H41Z\"/></symbol>\n    <symbol id=\"bonus-points--high\" viewBox=\"0 0 48 48\"><path d=\"M23.87,14.81h0Zm2.21-7.42,2.51.36a1.49,1.49,0,0,1,.82,2.54L27.6,12.06l.43,2.5a1.49,1.49,0,0,1-2.16,1.56l-2.24-1.18-2.24,1.18a1.49,1.49,0,0,1-2.16-1.57l.43-2.49-1.81-1.77a1.48,1.48,0,0,1,.82-2.53l2.51-.37L22.3,5.12a1.48,1.48,0,0,1,2.66,0ZM22.85,8.52a1.48,1.48,0,0,1-1.12.81L20,9.58l1.26,1.23a1.51,1.51,0,0,1,.43,1.32l-.3,1.73L22.94,13a1.47,1.47,0,0,1,1.38,0l1.56.82-.3-1.73A1.51,1.51,0,0,1,26,10.81l1.26-1.23-1.74-.25a1.46,1.46,0,0,1-1.12-.81l-.78-1.58ZM40.5,25.17c-3.56,3.06-9.91,5-16.87,5a33.11,33.11,0,0,1-8.13-1v6a29,29,0,0,0,8.13,1.12c9.16,0,16.87-3.94,16.87-7.84Zm0-8.93a19.86,19.86,0,0,1-7,3.75v5.63c4.22-1.47,7-3.79,7-6.12Zm-7,27.48c4.29-1.29,7-3.43,7-5.74a1.94,1.94,0,0,1,0-.24,1.94,1.94,0,0,1,0-.24V34.21a20,20,0,0,1-7,3.68ZM24.5,45a35.48,35.48,0,0,0,7-.76v-5.8a33.92,33.92,0,0,1-7,.89ZM7.5,34.38V38c0,3.54,6.35,6.67,15,7V39.32C16.23,39.12,10.72,37.23,7.5,34.38Zm0-9V28.5c0,2.29,2.32,4.52,6,6V28.63A18,18,0,0,1,7.5,25.34Zm0-8.92V19.5c0,4,7.05,7.7,16.13,7.7a31.7,31.7,0,0,0,7.87-1V20.55a33.15,33.15,0,0,1-7.87.93C16.92,21.48,10.92,19.49,7.5,16.42Zm-3-5.92C4.5,4.42,13.34,0,24,0S43.5,4.42,43.5,10.5v27a1.94,1.94,0,0,1,0,.24,1.94,1.94,0,0,1,0,.24c0,6-8.63,10-19.5,10h-.59C12.82,47.85,4.5,43.9,4.5,38Zm36,0C40.5,6.64,33.22,3,24,3S7.5,6.64,7.5,10.5c0,4,7.15,8,16.13,8S40.5,14.43,40.5,10.5Z\"/></symbol>\n    <symbol id=\"bookmark--high\" viewBox=\"0 0 48 48\"><path d=\"M6.23,47.81A1.5,1.5,0,0,1,4,46.5V3.5A3.5,3.5,0,0,1,7.5,0h33A3.5,3.5,0,0,1,44,3.5v43a1.5,1.5,0,0,1-2.2,1.33L23.52,38.2ZM41,44V3.5a.5.5,0,0,0-.5-.5H7.5a.5.5,0,0,0-.5.5V44l15.77-8.76a1.51,1.51,0,0,1,1.43,0ZM31.61,16a1,1,0,0,1,.7,1.72l-3.66,3.54,2.27,5.35a1,1,0,0,1-1.42,1.25L24,24.66l-5.5,3.2a1,1,0,0,1-1.41-1.28l2.47-5.33-3.64-3.53A1,1,0,0,1,16.61,16h4.78l1.69-3.9a1,1,0,0,1,1.82,0L26.82,16Zm-5.42,2a1,1,0,0,1-.9-.56l-1.24-2.55L23,17.4A1,1,0,0,1,22,18h-3l2.38,2.3a1,1,0,0,1,.21,1.14l-1.43,3.09,3.26-1.9a1,1,0,0,1,1,0l3.4,2-1.36-3.21a1,1,0,0,1,.23-1.11L29.15,18Z\"/></symbol>\n    <symbol id=\"bug-debug--high\" viewBox=\"0 0 48 48\"><path d=\"M44,16a1,1,0,1,0-2,0,6,6,0,0,1-4.62,5.84c0-.18,0-.36-.07-.55A1.51,1.51,0,0,0,35.59,20a1.49,1.49,0,0,0-1.26,1.7,13.51,13.51,0,0,1,.16,1.77v11A10.5,10.5,0,0,1,25,45V33a1,1,0,0,0-2,0V45a10.48,10.48,0,0,1-6.8-3.43,1.49,1.49,0,0,0-2.12-.11A1.51,1.51,0,0,0,14,43.54a13.5,13.5,0,0,0,23.43-7.37A6,6,0,0,1,42,42a1,1,0,0,0,2,0,8,8,0,0,0-6.5-7.86V30H43a1,1,0,0,0,0-2h-5.5V23.87A8,8,0,0,0,44,16Z\"/><path d=\"M47.57.43a1.52,1.52,0,0,0-2.13,0L32.7,13.18A13.62,13.62,0,0,0,31,12c0-4.15,3.28-10,6-10a1,1,0,0,0,1-1,1,1,0,0,0-1-1c-3.87,0-7.49,6-8,11A13.6,13.6,0,0,0,19,11c-.46-5-4.08-11-8-11a1,1,0,0,0,0,2c2.73,0,6,5.8,6,10a13.49,13.49,0,0,0-6.39,9.88A6,6,0,0,1,6,16a1,1,0,1,0-2,0,8,8,0,0,0,6.5,7.86V28H5a1,1,0,1,0,0,2h5.5v5.37L.43,45.44a1.52,1.52,0,0,0,0,2.13,1.52,1.52,0,0,0,2.13,0l45-45A1.52,1.52,0,0,0,47.57.43Zm-34.08,32V24h8.38ZM23.87,22H13.6a10.51,10.51,0,0,1,17-6.7Z\"/></symbol>\n    <symbol id=\"bug--high\" viewBox=\"0 0 48 48\"><path d=\"M43,30a1,1,0,0,0,0-2H37V23.93A8,8,0,0,0,44,16a1,1,0,0,0-2,0,6,6,0,0,1-5,5.92,13,13,0,0,0-6-9.86V12c0-4.15,3.27-10,6-10a1,1,0,0,0,0-2c-3.89,0-7.51,6.05-7.95,11A13,13,0,0,0,19,11c-.44-5-4.06-11-7.95-11a1,1,0,0,0,0,2c2.73,0,6,5.85,6,10v.06a13,13,0,0,0-5.95,9.86A6,6,0,0,1,6,16a1,1,0,0,0-2,0,8,8,0,0,0,7,7.93V28H5a1,1,0,0,0,0,2h6v4.07A8,8,0,0,0,4,42a1,1,0,0,0,2,0,6,6,0,0,1,5.05-5.92A13,13,0,0,0,23,48v0h2v0A13,13,0,0,0,37,36.08,6,6,0,0,1,42,42a1,1,0,0,0,2,0,8,8,0,0,0-7-7.93V30ZM24,13a10,10,0,0,1,10,9H14.05A10,10,0,0,1,24,13ZM14,35V24h9V45A10,10,0,0,1,14,35ZM25,45V24h9V35A10,10,0,0,1,25,45Z\"/></symbol>\n    <symbol id=\"business-user--high\" viewBox=\"0 0 48 48\"><path d=\"M30.3,23.36a12.5,12.5,0,1,0-12.39,0A21.53,21.53,0,0,0,0,44.5,3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5,21.52,21.52,0,0,0,30.3,23.36ZM14.63,12.5a9.5,9.5,0,1,1,9.5,9.5A9.5,9.5,0,0,1,14.63,12.5ZM27.69,45H20.31l3-16.76L21.72,26l-1.41-2h7.38l-1.41,2-1.59,2.24,3,16.76ZM3,44.5A18.5,18.5,0,0,1,19.36,26.14l1.83,2.57L18.34,44.65a2.06,2.06,0,0,0,0,.35H3.5A.5.5,0,0,1,3,44.5Zm41.5.5H29.68a2.06,2.06,0,0,0,0-.35L26.81,28.71l1.83-2.57A18.5,18.5,0,0,1,45,44.5.5.5,0,0,1,44.5,45Z\"/></symbol>\n    <symbol id=\"calculator--high\" viewBox=\"0 0 48 48\"><path d=\"M34,38H28a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Z\"/><path d=\"M34,24H28a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Z\"/><path d=\"M35.5,6h-23A2.5,2.5,0,0,0,10,8.5v6A2.5,2.5,0,0,0,12.5,17h23A2.5,2.5,0,0,0,38,14.5v-6A2.5,2.5,0,0,0,35.5,6ZM35,14H13V9H35Z\"/><path d=\"M39.5,0H8.5A4.5,4.5,0,0,0,4,4.5v39A4.5,4.5,0,0,0,8.5,48h31A4.5,4.5,0,0,0,44,43.5V4.5A4.5,4.5,0,0,0,39.5,0ZM41,43.5A1.5,1.5,0,0,1,39.5,45H8.5A1.5,1.5,0,0,1,7,43.5V4.5A1.5,1.5,0,0,1,8.5,3h31A1.5,1.5,0,0,1,41,4.5Z\"/><path d=\"M20,24H18V22a1,1,0,0,0-2,0v2H14a1,1,0,0,0,0,2h2v2a1,1,0,0,0,2,0V26h2a1,1,0,0,0,0-2Z\"/><path d=\"M34,34H28a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Z\"/><path d=\"M20.21,33.79a1,1,0,0,0-1.42,0L17,35.59l-1.79-1.8a1,1,0,0,0-1.42,1.42L15.59,37l-1.8,1.79a1,1,0,0,0,1.42,1.42L17,38.41l1.79,1.8a1,1,0,0,0,1.42-1.42L18.41,37l1.8-1.79A1,1,0,0,0,20.21,33.79Z\"/></symbol>\n    <symbol id=\"calendar--high\" viewBox=\"0 0 48 48\"><path d=\"M14,39H10V35h4Zm1-6H9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V34A1,1,0,0,0,15,33Zm8.42,6L26,36.41V39Zm1.17-4L22,37.59V35Zm2.79-1.92A1,1,0,0,0,27,33H21a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V34A1,1,0,0,0,27.38,33.08ZM38,39H34V35h4Zm1-6H33a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V34A1,1,0,0,0,39,33Zm-1-6H34V23h4Zm1-6H33a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V22A1,1,0,0,0,39,21ZM26,27H22V23h4Zm1-6H21a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V22A1,1,0,0,0,27,21ZM11.42,27,14,24.41V27Zm1.17-4L10,25.59V23Zm2.79-1.92A1,1,0,0,0,15,21H9a1,1,0,0,0-1,1v6a1,1,0,0,0,1,1h6a1,1,0,0,0,1-1V22A1,1,0,0,0,15.38,21.08ZM44.5,45H3.5a.5.5,0,0,1-.5-.5V17H45V44.5A.5.5,0,0,1,44.5,45ZM3.5,8H13v2.5a1.5,1.5,0,0,0,3,0V8H31v2.5a1.5,1.5,0,0,0,3,0V8H44.5a.5.5,0,0,1,.5.5V14H3V8.5A.5.5,0,0,1,3.5,8Zm41-3H34V1.5a1.5,1.5,0,0,0-3,0V5H16V1.5a1.5,1.5,0,0,0-3,0V5H3.5A3.5,3.5,0,0,0,0,8.5v36A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5V8.5A3.5,3.5,0,0,0,44.5,5Z\"/></symbol>\n    <symbol id=\"camera-flash--high\" viewBox=\"0 0 48 48\"><path d=\"M28.88,22H39a1.5,1.5,0,0,1,1.06,2.56l-23,23a1.49,1.49,0,0,1-2.52-1.37L19.14,25H9a1.5,1.5,0,0,1-1-2.58l23-22a1.5,1.5,0,0,1,2.5,1.42Zm6.5,3H27a1.49,1.49,0,0,1-1.46-1.83L29.43,6,12.74,22H21a1.5,1.5,0,0,1,1.47,1.82l-3.92,18Z\"/></symbol>\n    <symbol id=\"camera--high\" viewBox=\"0 0 48 48\"><path d=\"M38,21.5a2,2,0,1,1,2-2A2,2,0,0,1,38,21.5ZM45,40V13a.47.47,0,0,0-.46-.46H34.42a1.51,1.51,0,0,1-1.3-.75l-2.33-4a.47.47,0,0,0-.4-.23H17.49a.47.47,0,0,0-.4.23l-2.33,4a1.51,1.51,0,0,1-1.3.75h-10A.47.47,0,0,0,3,13V40a.46.46,0,0,0,.13.32.47.47,0,0,0,.33.14H44.54a.47.47,0,0,0,.33-.14A.46.46,0,0,0,45,40ZM24,33.5a6,6,0,1,1,6-6A6,6,0,0,1,24,33.5Zm20.54-24A3.45,3.45,0,0,1,48,13V40a3.45,3.45,0,0,1-3.46,3.46H3.46A3.46,3.46,0,0,1,0,40V13A3.46,3.46,0,0,1,3.46,9.5h9.16l1.89-3.28a3.47,3.47,0,0,1,3-1.72H30.38a3.47,3.47,0,0,1,3,1.72l1.9,3.28ZM24,18.5a9,9,0,1,0,9,9A9,9,0,0,0,24,18.5Z\"/></symbol>\n    <symbol id=\"card-corporate--high\" viewBox=\"0 0 48 48\"><path d=\"M15.32,24.09a3.94,3.94,0,0,0,1.57-.27L16.71,23a3.23,3.23,0,0,1-1.21.22A2,2,0,0,1,13.39,21a2,2,0,0,1,2.12-2.23A2.87,2.87,0,0,1,16.7,19l.24-.89a3.54,3.54,0,0,0-1.47-.27A3.05,3.05,0,0,0,12.23,21,2.86,2.86,0,0,0,15.32,24.09Z\"/><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7Zm-41,3h41a.58.58,0,0,1,.5.64V32H3V10.64A.58.58,0,0,1,3.5,10Zm41,28H3.5a.58.58,0,0,1-.5-.64V34H45v3.36A.58.58,0,0,1,44.5,38Z\"/><path d=\"M20.44,24.1c1.67,0,2.9-1.16,2.9-3.2a2.8,2.8,0,0,0-2.81-3.07A2.91,2.91,0,0,0,17.65,21,2.81,2.81,0,0,0,20.44,24.1Zm.06-5.37c1.11,0,1.67,1.08,1.67,2.22s-.6,2.26-1.67,2.26-1.68-1-1.68-2.22S19.4,18.73,20.5,18.73Z\"/><path d=\"M34.76,24.1a.67.67,0,0,0,.68-.71.66.66,0,0,0-.68-.71.71.71,0,0,0,0,1.42Z\"/><path d=\"M31.24,21.71a2.77,2.77,0,0,0,.54,0,2.67,2.67,0,0,0,1.91-.65,1.84,1.84,0,0,0,.53-1.38,1.73,1.73,0,0,0-.6-1.34,2.77,2.77,0,0,0-1.79-.49,8.72,8.72,0,0,0-1.69.13v6h1.1Zm0-2.92a2.7,2.7,0,0,1,.64-.06c.76,0,1.23.36,1.23,1s-.51,1.12-1.33,1.12a2,2,0,0,1-.54-.05Z\"/><path d=\"M25.76,21.51h.55c.63,0,.92.27,1.09,1.06A8.46,8.46,0,0,0,27.81,24H29a11.62,11.62,0,0,1-.48-1.69,1.52,1.52,0,0,0-.84-1.17v0a1.63,1.63,0,0,0,1.09-1.52,1.49,1.49,0,0,0-.52-1.21,2.76,2.76,0,0,0-1.87-.49,9.5,9.5,0,0,0-1.67.13v6h1.1Zm0-2.73a3,3,0,0,1,.68-.05c.72,0,1.19.3,1.19,1s-.47,1-1.22,1h-.65Z\"/></symbol>\n    <symbol id=\"card-debit--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7Zm-41,3h41a.58.58,0,0,1,.5.64V32H3V10.64A.58.58,0,0,1,3.5,10Zm41,28H3.5a.58.58,0,0,1-.5-.64V34H45v3.36A.58.58,0,0,1,44.5,38Z\"/><polygon points=\"22.38 23.09 19.82 23.09 19.82 21.31 22.11 21.31 22.11 20.41 19.82 20.41 19.82 18.84 22.24 18.84 22.24 17.93 18.71 17.93 18.71 24 22.38 24 22.38 23.09\"/><path d=\"M16.44,23.23a3.12,3.12,0,0,0,.95-2.41,2.71,2.71,0,0,0-.95-2.23,3.66,3.66,0,0,0-2.47-.7,10,10,0,0,0-1.76.13v6a11.11,11.11,0,0,0,1.49.08A4,4,0,0,0,16.44,23.23Zm-3.13-4.41a3.29,3.29,0,0,1,.76-.07,1.93,1.93,0,0,1,2.15,2.11,2.08,2.08,0,0,1-2.3,2.32,3.76,3.76,0,0,1-.61,0Z\"/><path d=\"M27.32,23.5a1.58,1.58,0,0,0,.58-1.26,1.53,1.53,0,0,0-1.22-1.5v0a1.41,1.41,0,0,0,1-1.31,1.29,1.29,0,0,0-.63-1.13,2.88,2.88,0,0,0-1.74-.39,8.46,8.46,0,0,0-1.61.13v6a10,10,0,0,0,1.36.08A3.45,3.45,0,0,0,27.32,23.5Zm-2.51-4.75a3.66,3.66,0,0,1,.63,0c.7,0,1.13.26,1.13.83s-.43.87-1.2.87h-.56Zm0,2.47h.54c.77,0,1.38.29,1.38,1s-.63,1-1.34,1a4.3,4.3,0,0,1-.58,0Z\"/><polygon points=\"33.15 24 34.26 24 34.26 18.86 36 18.86 36 17.93 31.42 17.93 31.42 18.86 33.15 18.86 33.15 24\"/><rect width=\"1.11\" height=\"6.07\" x=\"29.25\" y=\"17.93\"/></symbol>\n    <symbol id=\"card-generic--high\" viewBox=\"0 0 48 48\"><path d=\"M25,32H7a1,1,0,0,0,0,2H25a1,1,0,0,0,0-2Z\"/><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7Zm-41,3h41a.58.58,0,0,1,.5.64V14H3V10.64A.58.58,0,0,1,3.5,10Zm41,28H3.5a.58.58,0,0,1-.5-.64V16H45V37.36A.58.58,0,0,1,44.5,38Z\"/><path d=\"M40,27H34a2,2,0,0,0-2,2v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V29A2,2,0,0,0,40,27Zm0,5H34V29h6Z\"/><path d=\"M7,29h7a1,1,0,0,0,0-2H7a1,1,0,0,0,0,2Z\"/></symbol>\n    <symbol id=\"card-manage-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,5h-32A3.5,3.5,0,0,0,9,8.5V14H3.5A3.5,3.5,0,0,0,0,17.5v22A3.5,3.5,0,0,0,3.5,43h32A3.5,3.5,0,0,0,39,39.5V34h5.5A3.5,3.5,0,0,0,48,30.5V8.5A3.5,3.5,0,0,0,44.5,5ZM3.5,17h32a.5.5,0,0,1,.5.5V32H3V17.5A.5.5,0,0,1,3.5,17Zm32,23H3.5a.5.5,0,0,1-.5-.5V34H36v5.5A.5.5,0,0,1,35.5,40ZM45,30.5a.5.5,0,0,1-.5.5H39V17.5A3.5,3.5,0,0,0,35.5,14H12V8.5a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5Z\"/><path d=\"M8,28h6a2,2,0,0,0,2-2V23a2,2,0,0,0-2-2H8a2,2,0,0,0-2,2v3A2,2,0,0,0,8,28Zm0-5h6v3H8Z\"/></symbol>\n    <symbol id=\"card-manage--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7Zm-41,3h41a.58.58,0,0,1,.5.64V32H3V10.64A.58.58,0,0,1,3.5,10Zm41,28H3.5a.58.58,0,0,1-.5-.64V34H45v3.36A.58.58,0,0,1,44.5,38Z\"/><path d=\"M8,21h6a2,2,0,0,0,2-2V16a2,2,0,0,0-2-2H8a2,2,0,0,0-2,2v3A2,2,0,0,0,8,21Zm0-5h6v3H8Z\"/></symbol>\n    <symbol id=\"card-number--high\" viewBox=\"0 0 48 48\"><path d=\"M41,32a1,1,0,0,1,0,2H7a1,1,0,0,1,0-2ZM14,27a1,1,0,0,1,0,2H7a1,1,0,0,1,0-2ZM34,16v3h6V16Zm6-2a2,2,0,0,1,2,2v3a2,2,0,0,1-2,2H34a2,2,0,0,1-2-2V16a2,2,0,0,1,2-2Zm4.5,27H3.5A3.57,3.57,0,0,1,0,37.36V10.64A3.57,3.57,0,0,1,3.5,7h41A3.57,3.57,0,0,1,48,10.64V37.36A3.57,3.57,0,0,1,44.5,41Zm0-3a.58.58,0,0,0,.5-.64V10.64a.58.58,0,0,0-.5-.64H3.5a.58.58,0,0,0-.5.64V37.36a.58.58,0,0,0,.5.64Z\"/></symbol>\n    <symbol id=\"card-off--high\" viewBox=\"0 0 48 48\"><path d=\"M46.37,7.53A1.5,1.5,0,1,0,44.61,10c.32.23.39.38.39,1V37.33c0,.52-.3.67-.59.67H16.5a1.5,1.5,0,0,0,0,3h28A3.56,3.56,0,0,0,48,37.3V11A3.86,3.86,0,0,0,46.37,7.53Z\"/><path d=\"M34,27a2,2,0,0,0-2,2v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V29a2,2,0,0,0-2-2Zm6,5H34V29h6Z\"/><path d=\"M47.56.44a1.49,1.49,0,0,0-2.12,0L38.88,7H3.59A3.57,3.57,0,0,0,0,10.62V37a3.63,3.63,0,0,0,4,4h.93L.44,45.44a1.5,1.5,0,0,0,2.12,2.12l45-45A1.49,1.49,0,0,0,47.56.44ZM3.59,10H35.88l-4,4H3V10.78C3,10.37,3.13,10,3.59,10ZM7.5,38h-3c-.81,0-1.5.23-1.5-.74V16H29.88l-22,22A1.86,1.86,0,0,0,7.5,38Z\"/></symbol>\n    <symbol id=\"card-prepaid--high\" viewBox=\"0 0 48 48\"><path d=\"M13.16,21.51h.55c.63,0,.92.27,1.09,1.06A8.46,8.46,0,0,0,15.21,24h1.14a11.62,11.62,0,0,1-.48-1.69A1.52,1.52,0,0,0,15,21.14v0a1.63,1.63,0,0,0,1.09-1.52,1.49,1.49,0,0,0-.52-1.21,2.76,2.76,0,0,0-1.87-.49,9.5,9.5,0,0,0-1.67.13v6h1.1Zm0-2.73a3,3,0,0,1,.68-.05c.72,0,1.19.3,1.19,1s-.47,1-1.22,1h-.65Z\"/><polygon points=\"21.2 23.09 18.64 23.09 18.64 21.31 20.93 21.31 20.93 20.41 18.64 20.41 18.64 18.84 21.07 18.84 21.07 17.93 17.54 17.93 17.54 24 21.2 24 21.2 23.09\"/><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7Zm-41,3h41a.58.58,0,0,1,.5.64V32H3V10.64A.58.58,0,0,1,3.5,10Zm41,28H3.5a.58.58,0,0,1-.5-.64V34H45v3.36A.58.58,0,0,1,44.5,38Z\"/><path d=\"M7.76,21.71a2.9,2.9,0,0,0,.54,0,2.68,2.68,0,0,0,1.92-.65,1.84,1.84,0,0,0,.52-1.38,1.72,1.72,0,0,0-.59-1.34,2.77,2.77,0,0,0-1.79-.49A8.72,8.72,0,0,0,6.67,18v6H7.76Zm0-2.92a2.84,2.84,0,0,1,.64-.06c.77,0,1.24.36,1.24,1s-.51,1.12-1.34,1.12a2.06,2.06,0,0,1-.54-.05Z\"/><path d=\"M28.5,22.28h1.93L31,24h1.19l-2-6.07H28.78L26.84,24H28ZM29.15,20c.11-.36.2-.78.29-1.13h0c.09.35.19.76.31,1.13l.48,1.49H28.68Z\"/><path d=\"M40.34,23.23a3.12,3.12,0,0,0,.95-2.41,2.71,2.71,0,0,0-.95-2.23,3.66,3.66,0,0,0-2.47-.7A10.24,10.24,0,0,0,36.1,18v6a11.39,11.39,0,0,0,1.5.08A4,4,0,0,0,40.34,23.23Zm-3.13-4.41a3.23,3.23,0,0,1,.76-.07,1.93,1.93,0,0,1,2.15,2.11,2.08,2.08,0,0,1-2.3,2.32,3.7,3.7,0,0,1-.61,0Z\"/><rect width=\"1.11\" height=\"6.07\" x=\"33.37\" y=\"17.93\"/><path d=\"M23.63,21.71a2.83,2.83,0,0,0,.54,0,2.69,2.69,0,0,0,1.92-.65,1.84,1.84,0,0,0,.52-1.38A1.72,1.72,0,0,0,26,18.38a2.8,2.8,0,0,0-1.8-.49,8.87,8.87,0,0,0-1.69.13v6h1.1Zm0-2.92a2.77,2.77,0,0,1,.64-.06c.76,0,1.23.36,1.23,1s-.5,1.12-1.33,1.12a2.06,2.06,0,0,1-.54-.05Z\"/></symbol>\n    <symbol id=\"card-suspend--high\" viewBox=\"0 0 48 48\"><path d=\"M40,12a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V13A1,1,0,0,0,40,12Z\"/><path d=\"M48,15.5A10.49,10.49,0,0,0,27.12,14H3.5A3.5,3.5,0,0,0,0,17.5v22A3.5,3.5,0,0,0,3.5,43h32A3.5,3.5,0,0,0,39,39.5V25.88A10.49,10.49,0,0,0,48,15.5Zm-12,24a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V34H36ZM3,32V17.5a.5.5,0,0,1,.5-.5H27.12A10.48,10.48,0,0,0,36,25.88V32Zm34.5-9A7.5,7.5,0,1,1,45,15.5,7.5,7.5,0,0,1,37.5,23Z\"/><path d=\"M14,21H8a2,2,0,0,0-2,2v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V23A2,2,0,0,0,14,21Zm0,5H8V23h6Z\"/><path d=\"M35,12a1,1,0,0,0-1,1v5a1,1,0,0,0,2,0V13A1,1,0,0,0,35,12Z\"/></symbol>\n    <symbol id=\"card-verify--high\" viewBox=\"0 0 48 48\"><path d=\"M48,15.5A10.49,10.49,0,0,0,27.12,14H3.5A3.5,3.5,0,0,0,0,17.5v22A3.5,3.5,0,0,0,3.5,43h32A3.5,3.5,0,0,0,39,39.5V25.88A10.49,10.49,0,0,0,48,15.5Zm-12,24a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V34H36ZM3,32V17.5a.5.5,0,0,1,.5-.5H27.12A10.48,10.48,0,0,0,36,25.88V32Zm34.5-9A7.5,7.5,0,1,1,45,15.5,7.5,7.5,0,0,1,37.5,23Z\"/><path d=\"M40.61,12.27,37,16.57l-1.8-1.79a1,1,0,1,0-1.41,1.41l2.57,2.57a1,1,0,0,0,1.47-.06l4.29-5.15a1,1,0,0,0-.13-1.4A1,1,0,0,0,40.61,12.27Z\"/><path d=\"M14,21H8a2,2,0,0,0-2,2v3a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V23A2,2,0,0,0,14,21Zm0,5H8V23h6Z\"/></symbol>\n    <symbol id=\"cart--high\" viewBox=\"0 0 48 48\"><path d=\"M34.5,40.5A4.51,4.51,0,1,0,39,36,4.41,4.41,0,0,0,34.5,40.5Zm-3,0A7.51,7.51,0,1,1,39,48,7.41,7.41,0,0,1,31.5,40.5Zm-15,0A4.5,4.5,0,1,0,21,36,4.41,4.41,0,0,0,16.5,40.5Zm-3,0A7.5,7.5,0,1,1,21,48,7.4,7.4,0,0,1,13.5,40.5ZM11.48,8H44a3.5,3.5,0,0,1,3.19,4.93L40.37,28.11A1.49,1.49,0,0,1,39,29H21a1.52,1.52,0,0,1-1.3-.75L5.13,3H2A1.5,1.5,0,0,1,2,0H6A1.51,1.51,0,0,1,7.3.75ZM21.87,26H38l6.42-14.3A.49.49,0,0,0,44,11H13.21Z\"/></symbol>\n    <symbol id=\"cash--high\" viewBox=\"0 0 48 48\"><path d=\"M24,19a5,5,0,1,0,5,5,5,5,0,0,0-5-5m0,8a3,3,0,1,1,3-3,3,3,0,0,1-3,3M37.59,13H10.41A6.49,6.49,0,0,1,5,18.42V29.58A6.49,6.49,0,0,1,10.41,35H37.59A6.49,6.49,0,0,1,43,29.58V18.42A6.49,6.49,0,0,1,37.59,13ZM41,28.05a8.46,8.46,0,0,0-5,4.95H12A8.46,8.46,0,0,0,7,28.05V20A8.46,8.46,0,0,0,12,15h24.1A8.46,8.46,0,0,0,41,20ZM44,8H4a4,4,0,0,0-4,4V36a4,4,0,0,0,4,4H44a4,4,0,0,0,4-4V12A4,4,0,0,0,44,8Zm1,28a1,1,0,0,1-1,1H4a1,1,0,0,1-1-1V12a1,1,0,0,1,1-1H44a1,1,0,0,1,1,1Z\"/></symbol>\n    <symbol id=\"category--high\" viewBox=\"0 0 48 48\"><path d=\"M23.41,34,22,35.41,12.59,26,14,24.59Zm4-4L26,31.41,16.59,22,18,20.59ZM40,15a6.31,6.31,0,0,1-6,6c-4.09,0-7-2.91-7-6a6.73,6.73,0,0,1,7-7C37.09,8,40,10.91,40,15Zm-3,0c0-2.43-1.57-4-3-4a3.75,3.75,0,0,0-4,4c0,1.43,1.57,3,4,3A3.35,3.35,0,0,0,37,15Zm10,8.52L23.52,47a3.52,3.52,0,0,1-5,0L1,29.45a3.52,3.52,0,0,1,0-5L24.48,1A3.5,3.5,0,0,1,27,0H44.48A3.51,3.51,0,0,1,48,3.52V21A3.5,3.5,0,0,1,47,23.52ZM44.85,21.4A.49.49,0,0,0,45,21V3.52A.52.52,0,0,0,44.48,3H27a.53.53,0,0,0-.36.15L3.15,26.6a.52.52,0,0,0,0,.73L20.67,44.85a.52.52,0,0,0,.73,0Z\"/></symbol>\n    <symbol id=\"check-international--high\" viewBox=\"0 0 48 48\"><path d=\"M41,26a1,1,0,0,0,.62-1.78l-5-4a1,1,0,0,0-1.24,0l-5,4A1,1,0,0,0,31,26h1v4H31a1,1,0,0,0,0,2H41a1,1,0,0,0,0-2H40V26Zm-5-3.72L38.15,24h-4.3ZM34,30V26h1v4Zm4,0H37V26h1Z\"/><path d=\"M44.54,8H3.46A3.46,3.46,0,0,0,0,11.46V36.54A3.46,3.46,0,0,0,3.46,40H44.54A3.46,3.46,0,0,0,48,36.54V11.46A3.46,3.46,0,0,0,44.54,8ZM45,36.54a.45.45,0,0,1-.46.46H3.46A.45.45,0,0,1,3,36.54V11.46A.45.45,0,0,1,3.46,11H44.54a.45.45,0,0,1,.46.46Z\"/><rect width=\"14\" height=\"2\" x=\"28\" y=\"14\"/><rect width=\"7\" height=\"2\" x=\"6\" y=\"30\"/><rect width=\"12\" height=\"2\" x=\"6\" y=\"24\"/><rect width=\"7\" height=\"2\" x=\"21\" y=\"24\"/><rect width=\"12\" height=\"2\" x=\"16\" y=\"30\"/></symbol>\n    <symbol id=\"check--high\" viewBox=\"0 0 48 48\"><path d=\"M41,24a1,1,0,0,0,0-2H38V21a1,1,0,0,0-2,0v1H35a3,3,0,0,0,0,6h1v2H33a1,1,0,0,0,0,2h3v1a1,1,0,0,0,2,0V32h1a3,3,0,0,0,0-6H38V24Zm-2,4a1,1,0,0,1,0,2H38V28Zm-3-2H35a1,1,0,0,1,0-2h1Z\"/><path d=\"M44.54,8H3.46A3.46,3.46,0,0,0,0,11.46V36.54A3.46,3.46,0,0,0,3.46,40H44.54A3.46,3.46,0,0,0,48,36.54V11.46A3.46,3.46,0,0,0,44.54,8ZM45,36.54a.45.45,0,0,1-.46.46H3.46A.45.45,0,0,1,3,36.54V11.46A.45.45,0,0,1,3.46,11H44.54a.45.45,0,0,1,.46.46Z\"/><rect width=\"14\" height=\"2\" x=\"28\" y=\"14\"/><rect width=\"7\" height=\"2\" x=\"21\" y=\"24\"/><rect width=\"12\" height=\"2\" x=\"6\" y=\"24\"/><rect width=\"7\" height=\"2\" x=\"6\" y=\"30\"/><rect width=\"12\" height=\"2\" x=\"16\" y=\"30\"/></symbol>\n    <symbol id=\"checked-multiple--high\" viewBox=\"0 0 48 48\"><path d=\"M25.29,12.29a1,1,0,0,1,1.42,1.42l-10,10a1,1,0,0,1-1.42,0l-5-5a1,1,0,0,1,1.42-1.42L16,21.59ZM12,41.5a1.5,1.5,0,0,1,3,0V44a1,1,0,0,0,1,1H44a1,1,0,0,0,1-1V16a1,1,0,0,0-1-1H41.5a1.5,1.5,0,0,1,0-3H44a4,4,0,0,1,4,4V44a4,4,0,0,1-4,4H16a4,4,0,0,1-4-4ZM32.5,36H3.5A3.5,3.5,0,0,1,0,32.5V3.5A3.5,3.5,0,0,1,3.5,0h29A3.5,3.5,0,0,1,36,3.5v29A3.5,3.5,0,0,1,32.5,36Zm0-3a.5.5,0,0,0,.5-.5V3.5a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5v29a.5.5,0,0,0,.5.5Z\"/></symbol>\n    <symbol id=\"checkmark--high\" viewBox=\"0 0 48 48\"><path d=\"M41.44,10.43a1.53,1.53,0,0,1,2.12,0,1.43,1.43,0,0,1,0,2.07L17.5,38,4.44,25.22a1.43,1.43,0,0,1,0-2.07,1.51,1.51,0,0,1,2.12,0L17.5,33.85Z\"/></symbol>\n    <symbol id=\"clear--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,4H11.74A3.5,3.5,0,0,0,8.61,5.93L.15,23.34a1.53,1.53,0,0,0,0,1.32L8.6,42.05a3.51,3.51,0,0,0,3.14,2H44.5A3.5,3.5,0,0,0,48,40.5V7.5A3.5,3.5,0,0,0,44.5,4ZM45,40.5a.5.5,0,0,1-.5.5H11.74a.5.5,0,0,1-.45-.28L3.17,24,11.3,7.26A.49.49,0,0,1,11.74,7H44.5a.5.5,0,0,1,.5.5Z\"/><path d=\"M36.71,15.29a1,1,0,0,0-1.42,0L28,22.59l-7.29-7.3a1,1,0,0,0-1.42,1.42L26.59,24l-7.3,7.29a1,1,0,0,0,1.42,1.42L28,25.41l7.29,7.3a1,1,0,0,0,1.42-1.42L29.41,24l7.3-7.29A1,1,0,0,0,36.71,15.29Z\"/></symbol>\n    <symbol id=\"close--high\" viewBox=\"0 0 48 48\"><path d=\"M26.12,24,42.56,40.44a1.5,1.5,0,0,1-2.12,2.12L24,26.12,7.56,42.56a1.5,1.5,0,0,1-2.12-2.12L21.88,24,5.44,7.56A1.5,1.5,0,0,1,7.56,5.44L24,21.88,40.44,5.44a1.5,1.5,0,0,1,2.12,2.12Z\"/></symbol>\n    <symbol id=\"cloud-upload--high\" viewBox=\"0 0 48 48\"><path d=\"M37.5,45a1.5,1.5,0,0,1,0,3h-27a1.5,1.5,0,0,1,0-3ZM48,19.5C48,25.37,43.71,30,38,30a1.5,1.5,0,1,1,0-3c4,0,7-3.23,7-7.5S42,12,38,12a1.5,1.5,0,0,1-1.5-1.5A7.51,7.51,0,0,0,22.54,6.64,1.5,1.5,0,0,1,20.23,7a4.68,4.68,0,0,0-7.75,3.54A1.5,1.5,0,0,1,11,12H10.5a7.5,7.5,0,0,0,0,15,1.5,1.5,0,0,1,0,3A10.5,10.5,0,0,1,9.62,9a7.68,7.68,0,0,1,7.54-6.23,7.59,7.59,0,0,1,3.74,1,10.5,10.5,0,0,1,18.48,5.3A10.16,10.16,0,0,1,48,19.5ZM25.5,17.26V37.5a1.5,1.5,0,0,1-3,0V17.25l-6.91,7.28a1.5,1.5,0,1,1-2.18-2.06l9.5-10a1.48,1.48,0,0,1,2.17,0l9.51,10a1.5,1.5,0,1,1-2.18,2.06Z\"/></symbol>\n    <symbol id=\"cloud--high\" viewBox=\"0 0 48 48\"><path d=\"M39.38,18.09A10.49,10.49,0,0,0,29,9a10.68,10.68,0,0,0-8.12,3.76,7.6,7.6,0,0,0-3.7-.95A7.68,7.68,0,0,0,9.62,18a10.5,10.5,0,0,0,.88,21H38c5.73,0,10-4.63,10-10.5A10.16,10.16,0,0,0,39.38,18.09ZM38,36H10.5a7.5,7.5,0,0,1,0-15H11a1.5,1.5,0,0,0,1.5-1.5,4.69,4.69,0,0,1,7.74-3.56,1.49,1.49,0,0,0,2.24-.33A7.78,7.78,0,0,1,29,12a7.5,7.5,0,0,1,7.5,7.5A1.5,1.5,0,0,0,38,21c4,0,7,3.23,7,7.5S42,36,38,36Z\"/></symbol>\n    <symbol id=\"code-fork-code-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M31.71,22.29a1,1,0,0,0-1.42,1.42L34.59,28l-4.3,4.29a1,1,0,0,0,1.42,1.42l5-5a1,1,0,0,0,0-1.42Z\"/><path d=\"M26.37,22.07a1,1,0,0,0-1.3.56l-4,10a1,1,0,1,0,1.86.74l4-10A1,1,0,0,0,26.37,22.07Z\"/><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H7.5A3.5,3.5,0,0,0,4,3.5v41A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V11.32A3.5,3.5,0,0,0,43,8.86ZM38.9,9H35V5.06Zm1.6,36H7.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,7.5,3H32v7.5A1.5,1.5,0,0,0,33.5,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/><path d=\"M17.71,22.29a1,1,0,0,0-1.42,0l-5,5a1,1,0,0,0,0,1.42l5,5a1,1,0,0,0,1.42-1.42L13.41,28l4.3-4.29A1,1,0,0,0,17.71,22.29Z\"/></symbol>\n    <symbol id=\"code-fork-code--high\" viewBox=\"0 0 48 48\"><path d=\"M44,7a7,7,0,1,0-8.5,6.83V18A4.51,4.51,0,0,1,31,22.5H17A7.47,7.47,0,0,0,12.5,24V13.83a7,7,0,1,0-3,0V34.17a7,7,0,1,0,3,0V30A4.51,4.51,0,0,1,17,25.5H31A7.5,7.5,0,0,0,38.5,18V13.83A7,7,0,0,0,44,7ZM7,7a4,4,0,1,1,4,4A4,4,0,0,1,7,7Zm8,34a4,4,0,1,1-4-4A4,4,0,0,1,15,41ZM37,11a4,4,0,1,1,4-4A4,4,0,0,1,37,11Z\"/></symbol>\n    <symbol id=\"code-run--high\" viewBox=\"0 0 48 48\"><path d=\"M13.71,22.29a1,1,0,0,0-1.42,1.42L16.61,28,12.3,32.29a1,1,0,1,0,1.4,1.42l5-5a1,1,0,0,0,0-1.42Z\"/><path d=\"M44.5,0H3.5A3.5,3.5,0,0,0,0,3.5v41A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5V3.5A3.5,3.5,0,0,0,44.5,0ZM3.5,3h41a.5.5,0,0,1,.5.5V9H3V3.5A.5.5,0,0,1,3.5,3Zm41,42H3.5a.5.5,0,0,1-.5-.5V12H45V44.5A.5.5,0,0,1,44.5,45Z\"/><path d=\"M35.5,32h-11a1,1,0,0,0,0,2h11a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"company--high\" viewBox=\"0 0 48 48\"><path d=\"M41,36H36a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V37A1,1,0,0,0,41,36Zm-1,5H37V38h3Z\"/><path d=\"M33,27H28a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V28A1,1,0,0,0,33,27Zm-1,5H29V29h3Z\"/><path d=\"M33,36H28a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V37A1,1,0,0,0,33,36Zm-1,5H29V38h3Z\"/><path d=\"M41,27H36a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V28A1,1,0,0,0,41,27Zm-1,5H37V29h3Z\"/><path d=\"M42.5,22H25V17.5A4.5,4.5,0,0,0,20.5,13H19V11.5A5.51,5.51,0,0,0,14,6V1.5a1.5,1.5,0,0,0-3,0V6A5.51,5.51,0,0,0,6,11.5V13H4.5A4.5,4.5,0,0,0,0,17.5v29A1.5,1.5,0,0,0,1.5,48h44A1.5,1.5,0,0,0,47,46.5v-20A4.5,4.5,0,0,0,42.5,22ZM9,11.5A2.5,2.5,0,0,1,11.5,9h2A2.5,2.5,0,0,1,16,11.5V13H9Zm-6,6A1.5,1.5,0,0,1,4.5,16h16A1.5,1.5,0,0,1,22,17.5V45H3ZM44,45H25V25H42.5A1.5,1.5,0,0,1,44,26.5Z\"/><path d=\"M19,27H14a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V28A1,1,0,0,0,19,27Zm-1,5H15V29h3Z\"/><path d=\"M11,36H6a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V37A1,1,0,0,0,11,36Zm-1,5H7V38h3Z\"/><path d=\"M11,27H6a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V28A1,1,0,0,0,11,27Zm-1,5H7V29h3Z\"/><path d=\"M19,36H14a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V37A1,1,0,0,0,19,36Zm-1,5H15V38h3Z\"/><path d=\"M11,18H6a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V19A1,1,0,0,0,11,18Zm-1,5H7V20h3Z\"/><path d=\"M19,18H14a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1h5a1,1,0,0,0,1-1V19A1,1,0,0,0,19,18Zm-1,5H15V20h3Z\"/></symbol>\n    <symbol id=\"contact--high\" viewBox=\"0 0 48 48\"><path d=\"M43.5,9H34V6.5a1.5,1.5,0,0,0-3,0V9H17V6.5a1.5,1.5,0,0,0-3,0V9H4.5A4.5,4.5,0,0,0,0,13.5v25A4.5,4.5,0,0,0,4.5,43h39A4.5,4.5,0,0,0,48,38.5v-25A4.5,4.5,0,0,0,43.5,9ZM45,38.5A1.5,1.5,0,0,1,43.5,40H4.5A1.5,1.5,0,0,1,3,38.5v-25A1.5,1.5,0,0,1,4.5,12H14v2.5a1.5,1.5,0,0,0,3,0V12H31v2.5a1.5,1.5,0,0,0,3,0V12h9.5A1.5,1.5,0,0,1,45,13.5Z\"/><path d=\"M27.44,25.61A4.94,4.94,0,0,0,29,22a5,5,0,0,0-10,0,4.94,4.94,0,0,0,1.56,3.61,10,10,0,0,0-6.48,8.14,2,2,0,0,0,2,2.25H31.93a2,2,0,0,0,2-2.25A10,10,0,0,0,27.44,25.61ZM24,19a3,3,0,1,1-3,3A3,3,0,0,1,24,19ZM16.06,34a8,8,0,0,1,15.87,0Z\"/></symbol>\n    <symbol id=\"controls--high\" viewBox=\"0 0 48 48\"><path d=\"M41.5,22.5H35.29a5.49,5.49,0,0,0-10.58,0l-.21,0H6.5a1.5,1.5,0,0,0,0,3h18l.21,0a5.49,5.49,0,0,0,10.58,0H41.5a1.5,1.5,0,0,0,0-3ZM30,26.5A2.5,2.5,0,1,1,32.5,24,2.5,2.5,0,0,1,30,26.5Z\"/><path d=\"M6.5,8h7.71A5.5,5.5,0,0,0,24.79,8H41.5a1.5,1.5,0,0,0,0-3H24.79A5.5,5.5,0,0,0,14.21,5H6.5a1.5,1.5,0,0,0,0,3Zm13-4A2.5,2.5,0,1,1,17,6.5,2.5,2.5,0,0,1,19.5,4Z\"/><path d=\"M41.5,40H24.79a5.5,5.5,0,0,0-10.58,0H6.5a1.5,1.5,0,0,0,0,3h7.71a5.5,5.5,0,0,0,10.58,0H41.5a1.5,1.5,0,0,0,0-3Zm-22,4A2.5,2.5,0,1,1,22,41.5,2.5,2.5,0,0,1,19.5,44Z\"/></symbol>\n    <symbol id=\"copy--high\" viewBox=\"0 0 48 48\"><path d=\"M31.5,41A1.5,1.5,0,0,0,30,42.5v2a.5.5,0,0,1-.5.5H7.5a.5.5,0,0,1-.5-.5v-31a.5.5,0,0,1,.5-.5h3a1.5,1.5,0,0,0,0-3h-3A3.5,3.5,0,0,0,4,13.5v31A3.5,3.5,0,0,0,7.5,48h22A3.5,3.5,0,0,0,33,44.5v-2A1.5,1.5,0,0,0,31.5,41Z\"/><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H18.5A3.5,3.5,0,0,0,15,3.5v31A3.5,3.5,0,0,0,18.5,38h22A3.5,3.5,0,0,0,44,34.5V11.32A3.5,3.5,0,0,0,43,8.86ZM38.9,9H35V5.06Zm1.6,26h-22a.5.5,0,0,1-.5-.5V3.5a.5.5,0,0,1,.5-.5H32v7.5A1.5,1.5,0,0,0,33.5,12H41V34.5A.5.5,0,0,1,40.5,35Z\"/></symbol>\n    <symbol id=\"currency-convert-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M47.56,21.44a1.49,1.49,0,0,0-2.12,0L42,24.88V24a17.9,17.9,0,0,0-5.27-12.73,18,18,0,0,0-25.46,0,1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0,15.13,15.13,0,0,1,4.77-3.21,15,15,0,0,1,11.68,0,15,15,0,0,1,8,8A14.83,14.83,0,0,1,39,24v.88l-3.44-3.44a1.5,1.5,0,0,0-2.12,2.12l6,6a1.49,1.49,0,0,0,2.12,0l6-6A1.49,1.49,0,0,0,47.56,21.44Z\"/><path d=\"M17,25a1,1,0,0,0,0,2h1a6,6,0,0,0,12,0V26a1,1,0,0,0-2,0v1a4,4,0,0,1-8,0h1a1,1,0,0,0,0-2H20V23h1a1,1,0,0,0,0-2H20a4,4,0,0,1,8,0v1a1,1,0,0,0,2,0V21a6,6,0,0,0-12,0H17a1,1,0,0,0,0,2h1v2Z\"/><path d=\"M34.61,34.61a15.13,15.13,0,0,1-4.77,3.21,15,15,0,0,1-11.68,0,15,15,0,0,1-8-8A14.83,14.83,0,0,1,9,24V22.12l3.44,3.44a1.5,1.5,0,0,0,2.12-2.12l-6-6a1.49,1.49,0,0,0-2.12,0l-6,6a1.5,1.5,0,0,0,2.12,2.12L6,22.12V24a17.9,17.9,0,0,0,5.27,12.73,18,18,0,0,0,25.46,0,1.51,1.51,0,0,0,0-2.12A1.49,1.49,0,0,0,34.61,34.61Z\"/></symbol>\n    <symbol id=\"currency-convert--high\" viewBox=\"0 0 48 48\"><path d=\"M47.56,21.44a1.49,1.49,0,0,0-2.12,0L42,24.88V24a17.9,17.9,0,0,0-5.27-12.73,18,18,0,0,0-25.46,0,1.51,1.51,0,0,0,0,2.12,1.49,1.49,0,0,0,2.12,0,15.13,15.13,0,0,1,4.77-3.21,15,15,0,0,1,11.68,0,15,15,0,0,1,8,8A14.83,14.83,0,0,1,39,24v.88l-3.44-3.44a1.5,1.5,0,0,0-2.12,2.12l6,6a1.49,1.49,0,0,0,2.12,0l6-6A1.49,1.49,0,0,0,47.56,21.44Z\"/><path d=\"M34.61,34.61a15.13,15.13,0,0,1-4.77,3.21,15,15,0,0,1-11.68,0,15,15,0,0,1-8-8A14.83,14.83,0,0,1,9,24V22.12l3.44,3.44a1.5,1.5,0,0,0,2.12-2.12l-6-6a1.49,1.49,0,0,0-2.12,0l-6,6a1.5,1.5,0,0,0,2.12,2.12L6,22.12V24a17.9,17.9,0,0,0,5.27,12.73,18,18,0,0,0,25.46,0,1.51,1.51,0,0,0,0-2.12A1.49,1.49,0,0,0,34.61,34.61Z\"/><path d=\"M19,29a1,1,0,0,0,0,2h4v2a1,1,0,1,0,2,0V31h1a4,4,0,0,0,0-8H25V19h4a1,1,0,0,0,0-2H25V15a1,1,0,1,0-2,0v2H22a4,4,0,0,0,0,8h1v4Zm6-4h1a2,2,0,0,1,0,4H25Zm-3-2a2,2,0,0,1,0-4h1v4Z\"/></symbol>\n    <symbol id=\"currency-eur--high\" viewBox=\"0 0 48 48\"><path d=\"M24,45A21,21,0,1,0,3,24,21,21,0,0,0,24,45ZM24,0A24,24,0,1,1,0,24,24,24,0,0,1,24,0ZM18,25V23H17a1,1,0,0,1,0-2h1a6,6,0,0,1,12,0v1a1,1,0,0,1-2,0V21a4,4,0,0,0-8,0h1a1,1,0,0,1,0,2H20v2h1a1,1,0,0,1,0,2H20a4,4,0,0,0,8,0V26a1,1,0,0,1,2,0v1a6,6,0,0,1-12,0H17a1,1,0,0,1,0-2Z\"/></symbol>\n    <symbol id=\"currency-usd--high\" viewBox=\"0 0 48 48\"><path d=\"M24,45A21,21,0,1,0,3,24,21,21,0,0,0,24,45ZM24,0A24,24,0,1,1,0,24,24,24,0,0,1,24,0ZM23,19H22a2,2,0,0,0,0,4h1Zm2,10h1a2,2,0,0,0,0-4H25Zm-2,0V25H22a4,4,0,0,1,0-8h1V15a1,1,0,1,1,2,0v2h4a1,1,0,0,1,0,2H25v4h1a4,4,0,0,1,0,8H25v2a1,1,0,1,1-2,0V31H19a1,1,0,0,1,0-2Z\"/></symbol>\n    <symbol id=\"currency--high\" viewBox=\"0 0 48 48\"><path d=\"M18,24.5V23h1a4,4,0,0,0,0-8H18V13h3.5a1.5,1.5,0,0,0,0-3H18V8.5a1.5,1.5,0,0,0-3,0V10H14a4,4,0,0,0,0,8h1v2H11.5a1.5,1.5,0,0,0,0,3H15v1.5a1.5,1.5,0,0,0,3,0ZM14,15a1,1,0,0,1,0-2h1v2Zm4,3h1a1,1,0,0,1,0,2H18Z\"/><path d=\"M32.93,15.07A16.5,16.5,0,1,0,15.07,32.93,16.5,16.5,0,1,0,32.93,15.07ZM3,16.5A13.5,13.5,0,1,1,16.5,30,13.49,13.49,0,0,1,3,16.5ZM27,29.21c0,.1,0,.19,0,.29V30H26C26.33,29.75,26.68,29.49,27,29.21ZM31.5,45A13.49,13.49,0,0,1,18.08,32.92a16.29,16.29,0,0,0,6-1.76,1.86,1.86,0,0,0,0,.34A1.5,1.5,0,0,0,25.5,33H27v1.5a5.5,5.5,0,0,0,11,0,1.5,1.5,0,0,0-3,0,2.5,2.5,0,0,1-5,0V33h2.5a1.5,1.5,0,0,0,0-3H30v-.5a2.5,2.5,0,0,1,5,0,1.5,1.5,0,0,0,3,0,5.48,5.48,0,0,0-6.91-5.31,16.45,16.45,0,0,0,1.83-6.11A13.5,13.5,0,0,1,31.5,45Z\"/></symbol>\n    <symbol id=\"customer-support--high\" viewBox=\"0 0 48 48\"><path d=\"M42.5,38A5.52,5.52,0,0,1,37,32.46V25.54a5.5,5.5,0,1,1,11,0v6.92A5.52,5.52,0,0,1,42.5,38Zm0-3A2.52,2.52,0,0,0,45,32.46V25.54a2.5,2.5,0,1,0-5,0v6.92A2.52,2.52,0,0,0,42.5,35ZM16.29,45.1H10.6A6.59,6.59,0,0,1,4,38.5V36.67a1.5,1.5,0,0,1,3,0V38.5a3.6,3.6,0,0,0,3.6,3.6h5.62A4.43,4.43,0,0,1,20.43,39h6.14a4.5,4.5,0,0,1,0,9H20.43A4.43,4.43,0,0,1,16.29,45.1ZM28,43.5A1.47,1.47,0,0,0,26.57,42H20.43a1.5,1.5,0,0,0,0,3h6.14A1.47,1.47,0,0,0,28,43.5ZM5.5,38A5.52,5.52,0,0,1,0,32.46V25.54a5.5,5.5,0,1,1,11,0v6.92A5.52,5.52,0,0,1,5.5,38Zm0-3A2.52,2.52,0,0,0,8,32.46V25.54a2.5,2.5,0,1,0-5,0v6.92A2.52,2.52,0,0,0,5.5,35ZM3,25a1.5,1.5,0,0,1-3,0V21.57H3Zm45-3.43V25a1.5,1.5,0,0,1-3,0V21.57ZM48,22a1.5,1.5,0,0,1-3,0C45,11.85,36.74,3,27,3H21C11.26,3,3,11.85,3,22a1.5,1.5,0,0,1-3,0v-.43a1.15,1.15,0,0,1,0-.19C.33,9.88,9.76,0,21,0h6C38.24,0,47.67,9.88,48,21.38a1.15,1.15,0,0,1,0,.19Z\"/></symbol>\n    <symbol id=\"delete--high\" viewBox=\"0 0 48 48\"><path d=\"M29,38a1,1,0,0,1-2,0V19a1,1,0,0,1,2,0ZM19,19a1,1,0,0,1,2,0V38a1,1,0,0,1-2,0ZM7,12V44.54a.45.45,0,0,0,.46.46H40.54a.45.45,0,0,0,.46-.46V12ZM21,9h6V3.5a.5.5,0,0,0-.5-.5h-5a.5.5,0,0,0-.5.5ZM18,9V3.5A3.5,3.5,0,0,1,21.5,0h5A3.5,3.5,0,0,1,30,3.5V9H46.5a1.5,1.5,0,0,1,0,3H44V44.54A3.46,3.46,0,0,1,40.54,48H7.46A3.46,3.46,0,0,1,4,44.54V12H1.5a1.5,1.5,0,0,1,0-3Z\"/></symbol>\n    <symbol id=\"device-keyboard--high\" viewBox=\"0 0 48 48\"><path d=\"M27.5,26A1.5,1.5,0,1,0,26,24.5,1.5,1.5,0,0,0,27.5,26m-7,0A1.5,1.5,0,1,0,19,24.5,1.5,1.5,0,0,0,20.5,26m19-3A1.5,1.5,0,1,0,41,24.5,1.5,1.5,0,0,0,39.5,23m-6,0A1.5,1.5,0,1,0,35,24.5,1.5,1.5,0,0,0,33.5,23m-19,3A1.5,1.5,0,1,0,13,24.5,1.5,1.5,0,0,0,14.5,26m-6-3A1.5,1.5,0,1,0,10,24.5,1.5,1.5,0,0,0,8.5,23m19-3A1.5,1.5,0,1,0,26,18.5,1.5,1.5,0,0,0,27.5,20m-7,0A1.5,1.5,0,1,0,19,18.5,1.5,1.5,0,0,0,20.5,20m19-3A1.5,1.5,0,1,0,41,18.5,1.5,1.5,0,0,0,39.5,17m-6,0A1.5,1.5,0,1,0,35,18.5,1.5,1.5,0,0,0,33.5,17m0,12h-19a1.5,1.5,0,0,0,0,3h19a1.5,1.5,0,0,0,0-3m-19-9A1.5,1.5,0,1,0,13,18.5,1.5,1.5,0,0,0,14.5,20m-6-3A1.5,1.5,0,1,0,10,18.5,1.5,1.5,0,0,0,8.5,17M43,9H5a5,5,0,0,0-5,5V34a5,5,0,0,0,5,5H43a5,5,0,0,0,5-5V14A5,5,0,0,0,43,9Zm2,25a2,2,0,0,1-2,2H5a2,2,0,0,1-2-2V14a2,2,0,0,1,2-2H43a2,2,0,0,1,2,2Z\"/></symbol>\n    <symbol id=\"device-laptop--high\" viewBox=\"0 0 48 48\"><path d=\"M46.5,30H45a4,4,0,0,0,0-.5V9.5A3.5,3.5,0,0,0,41.5,6H6.5A3.5,3.5,0,0,0,3,9.5v20a4,4,0,0,0,0,.5H1.5A1.5,1.5,0,0,0,0,31.5v6c0,2,1.47,4.5,3.5,4.5h41A3.5,3.5,0,0,0,48,38.5v-7A1.5,1.5,0,0,0,46.5,30ZM6,29.5V9.5A.5.5,0,0,1,6.5,9h35a.5.5,0,0,1,.5.5v20a.5.5,0,0,1-.5.5H6.5A.5.5,0,0,1,6,29.5ZM19,33H30v1a1,1,0,0,1-1,1H20a1,1,0,0,1-1-1Zm26,5.5a.5.5,0,0,1-.5.5H3.64a1.37,1.37,0,0,1-.26-.35A2.66,2.66,0,0,1,3,37.5V33H17v1a3,3,0,0,0,3,3h9a3,3,0,0,0,3-3V33H45Z\"/></symbol>\n    <symbol id=\"device-mobile--high\" viewBox=\"0 0 48 48\"><circle cx=\"24\" cy=\"42\" r=\"2\"/><path d=\"M34.5,0h-21A4.5,4.5,0,0,0,9,4.5v39A4.5,4.5,0,0,0,13.5,48h21A4.5,4.5,0,0,0,39,43.5V4.5A4.5,4.5,0,0,0,34.5,0ZM12,11H36V37H12Zm1.5-8h21A1.5,1.5,0,0,1,36,4.5V9H12V4.5A1.5,1.5,0,0,1,13.5,3Zm21,42h-21A1.5,1.5,0,0,1,12,43.5V39H36v4.5A1.5,1.5,0,0,1,34.5,45Z\"/><rect width=\"8\" height=\"2\" x=\"22\" y=\"5\"/><circle cx=\"19\" cy=\"6\" r=\"1\"/></symbol>\n    <symbol id=\"device-monitor--high\" viewBox=\"0 0 48 48\"><path d=\"M24,34a1,1,0,1,1,1-1A1,1,0,0,1,24,34Zm21,0V30H3v4a2,2,0,0,0,2,2H43A2,2,0,0,0,45,34ZM3,28H45V8a2,2,0,0,0-2-2H5A2,2,0,0,0,3,8ZM43,3a5,5,0,0,1,5,5V34a5,5,0,0,1-5,5H25.5v3h6A1.49,1.49,0,0,1,33,43.49v0A1.49,1.49,0,0,1,31.51,45h-15A1.49,1.49,0,0,1,15,43.52v0A1.49,1.49,0,0,1,16.49,42h6V39H5a5,5,0,0,1-5-5V8A5,5,0,0,1,5,3Z\"/></symbol>\n    <symbol id=\"device-mouse--high\" viewBox=\"0 0 48 48\"><path d=\"M23,14V9h2v5ZM36,33a12,12,0,0,1-24,0V15A12,12,0,0,1,23,3.05V7a2,2,0,0,0-2,2v5a2,2,0,0,0,2,2v5a1,1,0,0,0,2,0V16a2,2,0,0,0,2-2V9a2,2,0,0,0-2-2V3.05A12,12,0,0,1,36,15ZM24,0A15,15,0,0,0,9,15V33a15,15,0,0,0,30,0V15A15,15,0,0,0,24,0Z\"/></symbol>\n    <symbol id=\"device-printer--high\" viewBox=\"0 0 48 48\"><rect width=\"14.9\" height=\"2\" x=\"14\" y=\"34\"/><circle cx=\"38\" cy=\"16\" r=\"2\"/><path d=\"M44.5,8H40V5.5A3.5,3.5,0,0,0,36.5,2h-25A3.5,3.5,0,0,0,8,5.5V8H3.5A3.5,3.5,0,0,0,0,11.5v15A3.5,3.5,0,0,0,3.5,30H8V42.5A3.5,3.5,0,0,0,11.5,46h25A3.5,3.5,0,0,0,40,42.5V30h4.5A3.5,3.5,0,0,0,48,26.5v-15A3.5,3.5,0,0,0,44.5,8ZM11,5.5a.5.5,0,0,1,.5-.5h25a.5.5,0,0,1,.5.5V8H11Zm26,37a.5.5,0,0,1-.5.5h-25a.5.5,0,0,1-.5-.5v-19a.5.5,0,0,1,.5-.5h25a.5.5,0,0,1,.5.5Zm8-16a.5.5,0,0,1-.5.5H40V23.5A3.5,3.5,0,0,0,36.5,20h-25A3.5,3.5,0,0,0,8,23.5V27H3.5a.5.5,0,0,1-.5-.5v-15a.5.5,0,0,1,.5-.5h41a.5.5,0,0,1,.5.5Z\"/><rect width=\"19.9\" height=\"2\" x=\"14\" y=\"27\"/></symbol>\n    <symbol id=\"device-secure--high\" viewBox=\"0 0 48 48\"><circle cx=\"24\" cy=\"42\" r=\"2\"/><path d=\"M34.5,0h-21A4.5,4.5,0,0,0,9,4.5v39A4.5,4.5,0,0,0,13.5,48h21A4.51,4.51,0,0,0,39,43.5V4.5A4.51,4.51,0,0,0,34.5,0ZM12,11H36V37H12Zm1.5-8h21A1.5,1.5,0,0,1,36,4.5V9H12V4.5A1.5,1.5,0,0,1,13.5,3Zm21,42h-21A1.5,1.5,0,0,1,12,43.5V39H36v4.5A1.5,1.5,0,0,1,34.5,45Z\"/><rect width=\"8\" height=\"2\" x=\"22\" y=\"5\"/><circle cx=\"19\" cy=\"6\" r=\"1\"/><path d=\"M28,22V21a4,4,0,0,0-8,0v1a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h8a2,2,0,0,0,2-2V24A2,2,0,0,0,28,22Zm-6-1a2,2,0,0,1,4,0v1H22Zm6,9H20V24h8Z\"/></symbol>\n    <symbol id=\"device-servers--high\" viewBox=\"0 0 48 48\"><path d=\"M13,25H30a1,1,0,0,0,0-2H13a1,1,0,0,0,0,2M30,9H13a1,1,0,0,0,0,2H30a1,1,0,0,0,0-2M13,40H30a1,1,0,0,0,0-2H13a1,1,0,0,0,0,2m22,0a1,1,0,1,0-1-1,1,1,0,0,0,1,1m0-15a1,1,0,1,0-1-1,1,1,0,0,0,1,1M35,9a1,1,0,1,0,1,1,1,1,0,0,0-1-1m4,33V32H9V42a2,2,0,0,0,2,2H37A2,2,0,0,0,39,42ZM9,30H39V18H9ZM39,16V6a2,2,0,0,0-2-2H11A2,2,0,0,0,9,6V16ZM11,1H37a5,5,0,0,1,5,5V42a5,5,0,0,1-5,5H11a5,5,0,0,1-5-5V6A5,5,0,0,1,11,1Z\"/></symbol>\n    <symbol id=\"device-tablet--high\" viewBox=\"0 0 48 48\"><circle cx=\"24\" cy=\"42\" r=\"2\"/><path d=\"M39,0H9A5,5,0,0,0,4,5V43a5,5,0,0,0,5,5H39a5,5,0,0,0,5-5V5A5,5,0,0,0,39,0Zm2,43a2,2,0,0,1-2,2H9a2,2,0,0,1-2-2V39H41Zm0-6H7V11H41ZM41,9H7V5A2,2,0,0,1,9,3H39a2,2,0,0,1,2,2Z\"/></symbol>\n    <symbol id=\"device-tv--high\" viewBox=\"0 0 48 48\"><circle cx=\"42\" cy=\"31\" r=\"1\"/><path d=\"M46,7H2A2,2,0,0,0,0,9V35a2,2,0,0,0,2,2H5.07l-.91,1.83a1.5,1.5,0,0,0,2.68,1.34L8.43,37H39.57l1.59,3.17a1.5,1.5,0,0,0,2.68-1.34L42.93,37H46a2,2,0,0,0,2-2V9A2,2,0,0,0,46,7ZM45,34H3V10H45Z\"/></symbol>\n    <symbol id=\"document-add--high\" viewBox=\"0 0 48 48\"><path d=\"M28,28H25V25a1,1,0,0,0-2,0v3H20a1,1,0,0,0,0,2h3v3a1,1,0,0,0,2,0V30h3a1,1,0,0,0,0-2Z\"/><path d=\"M24,18A11,11,0,1,0,35,29,11,11,0,0,0,24,18Zm0,20a9,9,0,1,1,9-9A9,9,0,0,1,24,38Z\"/><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H7.5A3.5,3.5,0,0,0,4,3.5v41A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V11.32A3.5,3.5,0,0,0,43,8.86ZM38.9,9H35V5.06Zm1.6,36H7.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,7.5,3H32v7.5A1.5,1.5,0,0,0,33.5,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/></symbol>\n    <symbol id=\"document-jpg--high\" viewBox=\"0 0 48 48\"><path d=\"M13.53,29.83c0,1.05-.39,1.34-1,1.34a2.2,2.2,0,0,1-.68-.11l-.14.89a2.71,2.71,0,0,0,.93.15c1.21,0,2-.56,2-2.23V25.93H13.53Z\"/><path d=\"M24.32,29.53h1.07V31a2.18,2.18,0,0,1-.84.12A2,2,0,0,1,22.45,29a2,2,0,0,1,2.2-2.18,3.33,3.33,0,0,1,1.38.26l.24-.89a3.92,3.92,0,0,0-1.61-.29A3.08,3.08,0,0,0,21.29,29a3,3,0,0,0,.84,2.23,3.27,3.27,0,0,0,2.38.81,6.12,6.12,0,0,0,1.95-.34V28.65H24.32Z\"/><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86Zm-8-3.8L42.9,9H39ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5Zm42,9a.5.5,0,0,1-.5.5h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45Z\"/><path d=\"M17.9,25.89a8.87,8.87,0,0,0-1.69.13v6h1.1V29.71a2.77,2.77,0,0,0,.54,0,2.71,2.71,0,0,0,1.92-.65,1.84,1.84,0,0,0,.52-1.38,1.73,1.73,0,0,0-.6-1.34A2.75,2.75,0,0,0,17.9,25.89Zm0,3a2,2,0,0,1-.54-.05V26.79a2.77,2.77,0,0,1,.64-.06c.76,0,1.23.36,1.23,1S18.68,28.89,17.85,28.89Z\"/></symbol>\n    <symbol id=\"document-json--high\" viewBox=\"0 0 48 48\"><path d=\"M18.48,22.57A1.55,1.55,0,0,1,20,21a1,1,0,0,0,0-2,3.54,3.54,0,0,0-3.5,3.57v1.86A1.55,1.55,0,0,1,15,26a1,1,0,0,0,0,2,1.55,1.55,0,0,1,1.54,1.57v1.86A3.54,3.54,0,0,0,20,35a1,1,0,0,0,0-2,1.55,1.55,0,0,1-1.54-1.57V29.57A3.59,3.59,0,0,0,17.41,27a3.59,3.59,0,0,0,1.07-2.57Z\"/><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H7.5A3.5,3.5,0,0,0,4,3.5v41A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V11.32A3.5,3.5,0,0,0,43,8.86ZM38.9,9H35V5.06Zm1.6,36H7.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,7.5,3H32v7.5A1.5,1.5,0,0,0,33.5,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/><path d=\"M33,26a1.55,1.55,0,0,1-1.54-1.57V22.57A3.54,3.54,0,0,0,28,19a1,1,0,0,0,0,2,1.55,1.55,0,0,1,1.54,1.57v1.86A3.59,3.59,0,0,0,30.59,27a3.59,3.59,0,0,0-1.07,2.57v1.86A1.55,1.55,0,0,1,28,33a1,1,0,0,0,0,2,3.54,3.54,0,0,0,3.5-3.57V29.57A1.55,1.55,0,0,1,33,28,1,1,0,0,0,33,26Z\"/></symbol>\n    <symbol id=\"document-mov--high\" viewBox=\"0 0 48 48\"><path d=\"M14.55,25.93l-.84,2.43c-.24.71-.44,1.46-.6,2.12h0c-.15-.68-.34-1.4-.56-2.11l-.79-2.44H10.27L9.87,32h1L11,29.56c0-.83.08-1.79.1-2.58h0c.16.75.38,1.58.61,2.36l.81,2.59h.86l.88-2.63c.27-.76.52-1.58.72-2.32h0c0,.82,0,1.76.07,2.55L15.26,32h1.08L16,25.93Z\"/><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86Zm-8-3.8L42.9,9H39ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5Zm42,9a.5.5,0,0,1-.5.5h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45Z\"/><path d=\"M20.39,25.83A2.91,2.91,0,0,0,17.51,29,2.81,2.81,0,0,0,20.3,32.1c1.67,0,2.9-1.16,2.9-3.2A2.8,2.8,0,0,0,20.39,25.83Zm0,5.38c-1.06,0-1.68-1-1.68-2.22s.58-2.26,1.68-2.26S22,27.81,22,29,21.43,31.21,20.36,31.21Z\"/><path d=\"M27.18,28.71c-.24.73-.46,1.47-.62,2.19h0c-.16-.74-.36-1.45-.59-2.21l-.83-2.76H23.91l2,6.07h1.27l2.09-6.07H28.06Z\"/></symbol>\n    <symbol id=\"document-pdf--high\" viewBox=\"0 0 48 48\"><polygon points=\"23.62 32 24.72 32 24.72 29.43 26.96 29.43 26.96 28.52 24.72 28.52 24.72 26.84 27.12 26.84 27.12 25.93 23.62 25.93 23.62 32\"/><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86ZM42.9,9H39V5.06ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5ZM44.5,45h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45V44.5A.5.5,0,0,1,44.5,45Z\"/><path d=\"M13.41,25.89a8.8,8.8,0,0,0-1.69.13v6h1.1V29.71a2.77,2.77,0,0,0,.54,0,2.67,2.67,0,0,0,1.91-.65,1.81,1.81,0,0,0,.53-1.38,1.73,1.73,0,0,0-.6-1.34A2.75,2.75,0,0,0,13.41,25.89Zm-.05,3a2,2,0,0,1-.54-.05V26.79a2.7,2.7,0,0,1,.64-.06c.76,0,1.23.36,1.23,1S14.19,28.89,13.36,28.89Z\"/><path d=\"M18.87,25.89a10.2,10.2,0,0,0-1.76.13v6a11.22,11.22,0,0,0,1.49.08,4.05,4.05,0,0,0,2.75-.83,3.12,3.12,0,0,0,.94-2.41,2.73,2.73,0,0,0-.94-2.23A3.69,3.69,0,0,0,18.87,25.89Zm0,5.29a3.64,3.64,0,0,1-.61,0V26.82a3.13,3.13,0,0,1,.75-.07,1.92,1.92,0,0,1,2.15,2.11A2.07,2.07,0,0,1,18.83,31.18Z\"/></symbol>\n    <symbol id=\"document-png--high\" viewBox=\"0 0 48 48\"><path d=\"M25.6,29.53h1.07V31a2.21,2.21,0,0,1-.84.12A2,2,0,0,1,23.73,29a2,2,0,0,1,2.2-2.18,3.37,3.37,0,0,1,1.38.26l.24-.89a3.92,3.92,0,0,0-1.61-.29A3.08,3.08,0,0,0,22.56,29a3,3,0,0,0,.85,2.23,3.27,3.27,0,0,0,2.38.81,6.12,6.12,0,0,0,1.95-.34V28.65H25.6Z\"/><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86Zm-8-3.8L42.9,9H39ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5Zm42,9a.5.5,0,0,1-.5.5h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45Z\"/><path d=\"M12.74,25.89A8.92,8.92,0,0,0,11,26v6h1.1V29.71a2.9,2.9,0,0,0,.54,0,2.68,2.68,0,0,0,1.92-.65,1.84,1.84,0,0,0,.52-1.38,1.72,1.72,0,0,0-.59-1.34A2.77,2.77,0,0,0,12.74,25.89Zm-.06,3a2.06,2.06,0,0,1-.54-.05V26.79a2.84,2.84,0,0,1,.64-.06c.77,0,1.23.36,1.23,1S13.51,28.89,12.68,28.89Z\"/><path d=\"M20.22,28.05c0,.93,0,1.71.09,2.52h0a15.62,15.62,0,0,0-1-2L17.7,25.93H16.44V32h1V29.83c0-1,0-1.8-.05-2.58h0a22,22,0,0,0,1.08,2.1L20.1,32h1.14V25.93h-1Z\"/></symbol>\n    <symbol id=\"document-xls--high\" viewBox=\"0 0 48 48\"><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86Zm-8-3.8L42.9,9H39ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5Zm42,9a.5.5,0,0,1-.5.5h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45Z\"/><path d=\"M16.37,25.93H15.1l-.65,1.26c-.19.36-.31.63-.48,1h0c-.17-.34-.31-.64-.51-1l-.66-1.26H11.53l1.72,3L11.45,32h1.27l.61-1.21a12.17,12.17,0,0,0,.54-1.14h0c.17.35.34.68.6,1.14L15.16,32h1.28l-1.85-3.1Z\"/><path d=\"M25.8,28.47c-.81-.31-1.16-.53-1.16-1s.31-.73,1-.73a2.59,2.59,0,0,1,1.2.29l.27-.89a3.19,3.19,0,0,0-1.45-.31c-1.32,0-2.15.76-2.15,1.75s.64,1.4,1.64,1.76c.78.28,1.08.55,1.08,1s-.39.83-1.1.83a3,3,0,0,1-1.47-.39l-.25.92a3.6,3.6,0,0,0,1.64.38c1.57,0,2.31-.85,2.31-1.82S26.85,28.87,25.8,28.47Z\"/><polygon points=\"19.36 25.93 18.26 25.93 18.26 32 21.86 32 21.86 31.07 19.36 31.07 19.36 25.93\"/></symbol>\n    <symbol id=\"document-xml--high\" viewBox=\"0 0 48 48\"><path d=\"M47,8.86,39.24,1a3.46,3.46,0,0,0-2.48-1H12.5A3.5,3.5,0,0,0,9,3.5V18H3.5A3.5,3.5,0,0,0,0,21.5v14A3.5,3.5,0,0,0,3.5,39H9v5.5A3.5,3.5,0,0,0,12.5,48h32A3.5,3.5,0,0,0,48,44.5V11.32A3.5,3.5,0,0,0,47,8.86Zm-8-3.8L42.9,9H39ZM3,35.5v-14a.5.5,0,0,1,.5-.5h32a.5.5,0,0,1,.5.5v14a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,35.5Zm42,9a.5.5,0,0,1-.5.5h-32a.5.5,0,0,1-.5-.5V39H35.5A3.5,3.5,0,0,0,39,35.5v-14A3.5,3.5,0,0,0,35.5,18H12V3.5a.5.5,0,0,1,.5-.5H36v7.5A1.5,1.5,0,0,0,37.5,12H45Z\"/><path d=\"M15,25.93H13.71l-.65,1.26c-.18.36-.31.63-.47,1h0c-.16-.34-.31-.64-.5-1l-.66-1.26H10.14l1.73,3L10.07,32h1.27l.6-1.21c.24-.46.4-.79.55-1.14h0c.17.35.34.68.6,1.14L13.78,32h1.27l-1.84-3.1Z\"/><polygon points=\"26.42 25.93 25.32 25.93 25.32 32 28.91 32 28.91 31.07 26.42 31.07 26.42 25.93\"/><path d=\"M21.4,25.93l-.84,2.43c-.23.71-.44,1.46-.6,2.12h0c-.15-.68-.34-1.4-.56-2.11l-.79-2.44H17.12L16.72,32h1l.14-2.44c0-.83.08-1.79.11-2.58h0c.16.75.37,1.58.61,2.36l.81,2.59h.85l.88-2.63c.27-.76.53-1.58.72-2.32h0c0,.82,0,1.76.07,2.55L22.11,32h1.08l-.35-6.07Z\"/></symbol>\n    <symbol id=\"document--high\" viewBox=\"0 0 48 48\"><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H7.5A3.5,3.5,0,0,0,4,3.5v41A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V11.32A3.5,3.5,0,0,0,43,8.86ZM38.9,9H35V5.06Zm1.6,36H7.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,7.5,3H32v7.5A1.5,1.5,0,0,0,33.5,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/></symbol>\n    <symbol id=\"drag--high\" viewBox=\"0 0 48 48\"><path d=\"M22.5,42.71V30.5a1.5,1.5,0,0,1,3,0V42.65l3.9-4.18a1.51,1.51,0,0,1,2.2,2.06l-6.55,7a1.51,1.51,0,0,1-2.2,0l-6.45-7a1.5,1.5,0,1,1,2.2-2Zm3-37.42V19a1.5,1.5,0,0,1-3,0V5.35L18.6,9.53a1.51,1.51,0,0,1-2.2-2.06L23,.47a1.51,1.51,0,0,1,2.2,0l6.45,7a1.5,1.5,0,0,1-2.2,2ZM5.29,22.5H18.5a1.5,1.5,0,0,1,0,3H5.35l4.17,3.91a1.49,1.49,0,1,1-2,2.18l-7-6.54a1.5,1.5,0,0,1,0-2.2l7-6.45a1.5,1.5,0,1,1,2,2.2Zm37.42,3H29.5a1.5,1.5,0,0,1,0-3H42.65l-4.17-3.91a1.49,1.49,0,1,1,2-2.18l7,6.54a1.5,1.5,0,0,1,0,2.2l-7,6.45a1.5,1.5,0,1,1-2-2.2Z\"/></symbol>\n    <symbol id=\"edit--high\" viewBox=\"0 0 48 48\"><path d=\"M46,8.17,39.83,2a3.5,3.5,0,0,0-4.94,0L.44,36.47A1.54,1.54,0,0,0,0,37.54v9A1.5,1.5,0,0,0,1.5,48h9a1.53,1.53,0,0,0,1.06-.44L46,13.11A3.5,3.5,0,0,0,46,8.17ZM4.28,36.87,29.87,11.29l6.84,6.84L11.13,43.71Zm27-27,1.58-1.58,6.84,6.84-1.58,1.58ZM3,38.41,9.59,45H3ZM43.86,11l-2.73,2.72L34.29,6.87,37,4.14a.5.5,0,0,1,.7,0l6.15,6.15A.5.5,0,0,1,43.86,11Z\"/></symbol>\n    <symbol id=\"email--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7ZM3,12.26,16.26,24.32,3,35.81Zm14.65,13.5s.05-.07.08-.11l5.6,5.09a1,1,0,0,0,1.34,0l5.6-5.09s0,.08.08.11L44.47,38H3.53Zm14.09-1.44L45,12.26V35.81ZM44.5,10h0L24,28.65,3.49,10h41Z\"/></symbol>\n    <symbol id=\"error--high\" viewBox=\"0 0 48 48\"><path d=\"M25,34a1,1,0,0,1-2,0V32a1,1,0,0,1,2,0Zm0-7a1,1,0,0,1-2,0V15a1,1,0,0,1,2,0Zm23-3A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"export--high\" viewBox=\"0 0 48 48\"><path d=\"M32,7.5a1.5,1.5,0,0,1-3,0v-4a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5v41a.5.5,0,0,0,.5.5h25a.5.5,0,0,0,.5-.5v-4a1.5,1.5,0,0,1,3,0v4A3.5,3.5,0,0,1,28.5,48H3.5A3.5,3.5,0,0,1,0,44.5V3.5A3.5,3.5,0,0,1,3.5,0h25A3.5,3.5,0,0,1,32,3.5Zm10.74,18H16.5a1.5,1.5,0,0,1,0-3H42.75l-7.28-6.91a1.5,1.5,0,0,1,2.06-2.18l10,9.5a1.48,1.48,0,0,1,0,2.17l-10,9.51a1.5,1.5,0,1,1-2.06-2.18Z\"/></symbol>\n    <symbol id=\"eyedropper--high\" viewBox=\"0 0 48 48\"><path d=\"M46.09,1.91a6.48,6.48,0,0,0-9.13,0L33.14,5.74l-.32-.33a2.5,2.5,0,0,0-3.54,0l-2,2a2.49,2.49,0,0,0,0,3.53l.32.33L.46,38.41A1.53,1.53,0,0,0,0,39.48v6a1.52,1.52,0,0,0,.43,1.06l1,1A1.54,1.54,0,0,0,2.53,48h6a1.53,1.53,0,0,0,1.06-.44L36.73,20.39l.13.12a2.5,2.5,0,0,0,3.54,0l2-2a2.5,2.5,0,0,0,0-3.54l-.13-.12L46.09,11A6.48,6.48,0,0,0,46.09,1.91ZM7.9,45H3.15L3,44.85V40.1L19.88,23.24l2.44,2.44a1,1,0,0,0,1.41-1.41l-2.44-2.44,1.59-1.59,2.44,2.44a1,1,0,0,0,1.41-1.41l-2.44-2.44,1.59-1.59,2.44,2.44a1,1,0,0,0,1.41-1.41l-2.44-2.44,2.44-2.44,4.88,4.88ZM38.63,18,29.76,9.17l1.29-1.28,8.87,8.86ZM44,8.91l-3.82,3.83L35.26,7.86,39.09,4A3.44,3.44,0,1,1,44,8.91Z\"/></symbol>\n    <symbol id=\"favorite-star-border--high\" viewBox=\"0 0 48 48\"><path d=\"M35.16,28.19a3.68,3.68,0,0,0-1,3l2,11.88L25.57,37.49a3.6,3.6,0,0,0-3.17,0l-10.62,5.6,2-11.88a3.68,3.68,0,0,0-1-3L4.22,19.78,16.12,18a3.66,3.66,0,0,0,2.56-1.86L24,5.38l5.32,10.81a3.66,3.66,0,0,0,2.56,1.86l11.9,1.74Zm12.15-7.68a1.93,1.93,0,0,0-1.1-3.41l-13.89-2a.91.91,0,0,1-.33-.22L25.78,2.21A1.92,1.92,0,0,0,24,1,1.94,1.94,0,0,0,22.2,2.21L16,14.88a.9.9,0,0,1-.31.24l-13.91,2a2,2,0,0,0-1.7,1.33,2,2,0,0,0,.59,2.08l10.06,9.83a.78.78,0,0,1,.13.37L8.48,44.6a2,2,0,0,0,.74,2,1.86,1.86,0,0,0,1.09.35,2.32,2.32,0,0,0,1.06-.27l12.42-6.54a.86.86,0,0,1,.39,0l12.45,6.56a1.94,1.94,0,0,0,2.15-.08,2,2,0,0,0,.74-2L37.14,30.72a.7.7,0,0,1,.11-.37Z\"/></symbol>\n    <symbol id=\"favorite-star--high\" viewBox=\"0 0 48 48\"><path d=\"M47.33,20.54a1.93,1.93,0,0,0,.2-2.72,2.09,2.09,0,0,0-1.3-.7l-13.92-2c-.1,0-.2-.1-.3-.2L25.81,2.24a1.93,1.93,0,0,0-2.51-1.1,2,2,0,0,0-1.1,1.1L16,14.91c-.1.1-.2.2-.3.2l-13.91,2a2.1,2.1,0,0,0-1.7,1.31,2.09,2.09,0,0,0,.6,2.11l10.11,9.85c.1.1.1.2.1.4L8.49,44.66a1.9,1.9,0,0,0,.7,2,1.43,1.43,0,0,0,1.1.3,2.28,2.28,0,0,0,1.1-.3L23.8,40.14h.4l12.52,6.53a2,2,0,0,0,2.7-.6,1.62,1.62,0,0,0,.2-1.51l-2.4-14a.6.6,0,0,1,.1-.4Z\"/></symbol>\n    <symbol id=\"female--high\" viewBox=\"0 0 48 48\"><path d=\"M40,16A16,16,0,1,0,22.5,31.92V38H18.12a1.5,1.5,0,0,0,0,3H22.5v5.5a1.5,1.5,0,0,0,3,0V41h4.62a1.5,1.5,0,1,0,0-3H25.5V31.92A16,16,0,0,0,40,16M11,16A13,13,0,1,1,24,29,13,13,0,0,1,11,16\"/></symbol>\n    <symbol id=\"file-download--high\" viewBox=\"0 0 48 48\"><path d=\"M45,33.5a1.5,1.5,0,0,1,3,0v11A3.5,3.5,0,0,1,44.5,48H3.5A3.5,3.5,0,0,1,0,44.5v-11a1.5,1.5,0,0,1,3,0v11a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5ZM22.5,27.74V1.5a1.5,1.5,0,0,1,3,0V27.75l6.91-7.28a1.5,1.5,0,1,1,2.18,2.06l-9.5,10a1.48,1.48,0,0,1-2.17,0l-9.51-10a1.5,1.5,0,1,1,2.18-2.06Z\"/></symbol>\n    <symbol id=\"file-upload--high\" viewBox=\"0 0 48 48\"><path d=\"M45,33.5a1.5,1.5,0,0,1,3,0v11A3.5,3.5,0,0,1,44.5,48H3.5A3.5,3.5,0,0,1,0,44.5v-11a1.5,1.5,0,0,1,3,0v11a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5ZM25.5,5.26V31.5a1.5,1.5,0,0,1-3,0V5.25l-6.91,7.28a1.5,1.5,0,0,1-2.18-2.06l9.5-10a1.48,1.48,0,0,1,2.17,0l9.51,10a1.5,1.5,0,1,1-2.18,2.06Z\"/></symbol>\n    <symbol id=\"filter-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,0H3.5A3.5,3.5,0,0,0,0,3.5v4A1.51,1.51,0,0,0,.47,8.59L19,26.14V39.58a3.53,3.53,0,0,0,1.22,2.66l6.3,5.4A1.5,1.5,0,0,0,29,46.5V26.14L47.53,8.59A1.51,1.51,0,0,0,48,7.5v-4A3.5,3.5,0,0,0,44.5,0ZM3,3.5A.5.5,0,0,1,3.5,3h41a.5.5,0,0,1,.5.5V6.85L44.85,7H3.15L3,6.85ZM26.47,24.41A1.5,1.5,0,0,0,26,25.5V43.24L22.17,40a.52.52,0,0,1-.17-.38V25.5a1.5,1.5,0,0,0-.47-1.09L5.26,9H42.74Z\"/></symbol>\n    <symbol id=\"filter-applied--high\" viewBox=\"0 0 48 48\"><path d=\"M27.27,7.32,22,13l-2.24-2.65a1,1,0,1,0-1.52,1.3L22,16l6.73-7.32a1,1,0,1,0-1.46-1.36Z\"/><path d=\"M24,0A11,11,0,1,0,35,11,11,11,0,0,0,24,0Zm0,19a8,8,0,1,1,8-8A8,8,0,0,1,24,19Z\"/><path d=\"M48,24.5a5.5,5.5,0,0,0-4-5.29V10.5a1.5,1.5,0,0,0-3,0v8.71a5.5,5.5,0,0,0,0,10.58V46.5a1.5,1.5,0,0,0,3,0V29.79A5.5,5.5,0,0,0,48,24.5Zm-5.5,2.69a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,42.5,27.19Z\"/><path d=\"M25.5,30.21V25.5a1.5,1.5,0,0,0-3,0v4.71a5.5,5.5,0,0,0,0,10.58V46.5a1.5,1.5,0,0,0,3,0V40.79a5.5,5.5,0,0,0,0-10.58ZM24,38a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,24,38Z\"/><path d=\"M7,19.21V10.5a1.5,1.5,0,0,0-3,0v8.71A5.5,5.5,0,0,0,4,29.79V46.5a1.5,1.5,0,0,0,3,0V29.79A5.5,5.5,0,0,0,7,19.21Zm-1.5,8A2.5,2.5,0,1,1,8,24.69,2.5,2.5,0,0,1,5.5,27.19Z\"/></symbol>\n    <symbol id=\"filter--high\" viewBox=\"0 0 48 48\"><path d=\"M25.48,24.71a1.49,1.49,0,0,0,0-.21V6.5a1.5,1.5,0,0,0-3,0v18a1.49,1.49,0,0,0,0,.21,5.49,5.49,0,0,0,0,10.58V41.5a1.5,1.5,0,0,0,3,0V35.29a5.49,5.49,0,0,0,0-10.58ZM24,32.5A2.5,2.5,0,1,1,26.5,30,2.5,2.5,0,0,1,24,32.5Z\"/><path d=\"M47,19.5a5.5,5.5,0,0,0-4-5.29V6.5a1.5,1.5,0,0,0-3,0v7.71a5.5,5.5,0,0,0,0,10.58V41.5a1.5,1.5,0,0,0,3,0V24.79A5.5,5.5,0,0,0,47,19.5ZM41.5,22A2.5,2.5,0,1,1,44,19.5,2.5,2.5,0,0,1,41.5,22Z\"/><path d=\"M8,14.21V6.5a1.5,1.5,0,0,0-3,0v7.71A5.5,5.5,0,0,0,5,24.79V41.5a1.5,1.5,0,0,0,3,0V24.79A5.5,5.5,0,0,0,8,14.21ZM6.5,22A2.5,2.5,0,1,1,9,19.5,2.5,2.5,0,0,1,6.5,22Z\"/></symbol>\n    <symbol id=\"fingerprint--high\" viewBox=\"0 0 48 48\"><path d=\"M23,30.19a1.5,1.5,0,0,1,3,.08A10.9,10.9,0,0,0,29.24,38c1.8,1.61,4.57,2.28,8.25,1.81a1.5,1.5,0,0,1,.38,3c-4.48.56-8.12-.31-10.63-2.56A13.87,13.87,0,0,1,23,30.19Zm8.46.07a4,4,0,1,0,8,0c0-8.34-6.38-15.73-15-15.73a14.48,14.48,0,0,0-11.74,6.06C9.6,25,8.82,31.18,11,38.61a1.5,1.5,0,0,1-2.88.84C5.69,31.18,6.6,24,10.32,18.84A17.48,17.48,0,0,1,24.5,11.53c10.39,0,18,8.83,18,18.73a7,7,0,1,1-14,.34.91.91,0,0,1,0-.17,4.18,4.18,0,0,0-4-4.33c-2.14,0-3.89,1.89-4,4.4-.27,5.67,3.38,12.21,11.06,14.57a1.5,1.5,0,1,1-.88,2.86c-9.13-2.8-13.5-10.64-13.17-17.57.19-4,3.17-7.26,7-7.26a7.15,7.15,0,0,1,7,7A1,1,0,0,1,31.48,30.26ZM42.7,14.84a1.5,1.5,0,0,1-2.4,1.8C32.28,6,15.83,5.92,7.75,18.14a1.5,1.5,0,0,1-2.5-1.65C14.5,2.49,33.46,2.58,42.7,14.84ZM37.83,4a1.5,1.5,0,0,1-1.71,2.47,21.16,21.16,0,0,0-23.07,0,1.5,1.5,0,0,1-1.69-2.48A24.17,24.17,0,0,1,37.83,4ZM20.59,45.16l.19.16a1.51,1.51,0,0,1,.2,2.11,1.5,1.5,0,0,1-2.11.2c-3.28-2.71-6-8.15-6.68-13.57-.84-6.35,1-11.84,5.88-14.88a12.22,12.22,0,0,1,6.52-1.95c6.55,0,12.32,5.65,12.32,13.35a1.5,1.5,0,0,1-1.5,1.5h0a1.5,1.5,0,0,1-1.5-1.5c0-6-4.36-10.32-9.31-10.33a9.18,9.18,0,0,0-4.9,1.47C16,24.05,14.5,28.28,15.16,33.49,15.74,38.07,18,42.78,20.47,45Z\"/></symbol>\n    <symbol id=\"folder-a-z--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,9H21V6.5A3.5,3.5,0,0,0,17.5,3H3.5A3.5,3.5,0,0,0,0,6.5v35A3.5,3.5,0,0,0,3.5,45h41A3.5,3.5,0,0,0,48,41.5v-29A3.5,3.5,0,0,0,44.5,9ZM3,6.5A.5.5,0,0,1,3.5,6h14a.5.5,0,0,1,.5.5V9H3Zm42,35a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V12H44.5a.5.5,0,0,1,.5.5Z\"/><polygon points=\"29.31 29.05 32.37 24.58 32.37 23.93 28.11 23.93 28.11 24.85 30.93 24.85 30.93 24.88 27.83 29.39 27.83 30 32.42 30 32.42 29.08 29.31 29.08 29.31 29.05\"/><path d=\"M17.44,23.93,15.5,30h1.14l.52-1.72h1.93L19.64,30h1.19l-2-6.07Zm-.1,3.51L17.81,26c.11-.36.2-.78.29-1.13h0c.09.35.19.76.3,1.13l.48,1.49Z\"/><rect width=\"2.29\" height=\"0.77\" x=\"23.17\" y=\"27.22\"/></symbol>\n    <symbol id=\"folder-account--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,9H21V6.5A3.5,3.5,0,0,0,17.5,3H3.5A3.5,3.5,0,0,0,0,6.5v35A3.5,3.5,0,0,0,3.5,45h41A3.5,3.5,0,0,0,48,41.5v-29A3.5,3.5,0,0,0,44.5,9ZM3,6.5A.5.5,0,0,1,3.5,6h14a.5.5,0,0,1,.5.5V9H3Zm42,35a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V12H44.5a.5.5,0,0,1,.5.5Z\"/><path d=\"M27.44,25.61A4.94,4.94,0,0,0,29,22a5,5,0,0,0-10,0,4.94,4.94,0,0,0,1.56,3.61,10,10,0,0,0-6.48,8.14,2,2,0,0,0,2,2.25H31.93a2,2,0,0,0,2-2.25A10,10,0,0,0,27.44,25.61ZM24,19a3,3,0,1,1-3,3A3,3,0,0,1,24,19ZM16.06,34a8,8,0,0,1,15.87,0Z\"/></symbol>\n    <symbol id=\"folder-drilldown--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,9H21V6.5A3.5,3.5,0,0,0,17.5,3H3.5A3.5,3.5,0,0,0,0,6.5v35A3.5,3.5,0,0,0,3.5,45h41A3.5,3.5,0,0,0,48,41.5v-29A3.5,3.5,0,0,0,44.5,9ZM3,6.5A.5.5,0,0,1,3.5,6h14a.5.5,0,0,1,.5.5V9H3Zm42,35a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V12H44.5a.5.5,0,0,1,.5.5Z\"/><path d=\"M34,34H26a1,1,0,0,1-1-1V21.28l4.82,4.45a1,1,0,1,0,1.36-1.46l-6.5-6a1,1,0,0,0-1.36,0l-6.5,6a1,1,0,0,0,1.36,1.46L23,21.28V33a3,3,0,0,0,3,3h8a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"folder-multiple--high\" viewBox=\"0 0 48 48\"><path d=\"M38,31.5v-19A3.5,3.5,0,0,0,34.5,9H21V6.5A3.5,3.5,0,0,0,17.5,3H3.5A3.5,3.5,0,0,0,0,6.5v4H0v21A3.5,3.5,0,0,0,3.5,35h31A3.5,3.5,0,0,0,38,31.5ZM3,6.5A.5.5,0,0,1,3.5,6h14a.5.5,0,0,1,.5.5V9H3Zm0,25V12H34.5a.5.5,0,0,1,.5.5v19a.5.5,0,0,1-.5.5H3.5A.5.5,0,0,1,3,31.5Z\"/><path d=\"M44.5,19h-2a1.5,1.5,0,0,0,0,3h2a.5.5,0,0,1,.5.5v19a.5.5,0,0,1-.5.5h-31a.5.5,0,0,1-.5-.5v-1a1.5,1.5,0,0,0-3,0v1A3.5,3.5,0,0,0,13.5,45h31A3.5,3.5,0,0,0,48,41.5v-19A3.5,3.5,0,0,0,44.5,19Z\"/></symbol>\n    <symbol id=\"folder--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,9H21V6.5A3.5,3.5,0,0,0,17.5,3H3.5A3.5,3.5,0,0,0,0,6.5v35A3.5,3.5,0,0,0,3.5,45h41A3.5,3.5,0,0,0,48,41.5v-29A3.5,3.5,0,0,0,44.5,9ZM3,6.5A.5.5,0,0,1,3.5,6h14a.5.5,0,0,1,.5.5V9H3Zm42,35a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V12H44.5a.5.5,0,0,1,.5.5Z\"/></symbol>\n    <symbol id=\"gift--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,9H40.18a6,6,0,0,0-9.43-7.25L24,8.51,17.24,1.75A6,6,0,0,0,7.81,9H3.5A3.5,3.5,0,0,0,0,12.5v5A3.5,3.5,0,0,0,3.5,21H4V44.5A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V21h.5A3.5,3.5,0,0,0,48,17.5v-5A3.5,3.5,0,0,0,44.5,9ZM32.87,3.88A3,3,0,1,1,35,9H27.74ZM10,6a3,3,0,0,1,5.12-2.12L20.24,9H13A3,3,0,0,1,10,6ZM7,44.5V21H22.5V45H7.5A.5.5,0,0,1,7,44.5Zm34,0a.5.5,0,0,1-.5.5h-15V21H41Zm4-27a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5v-5a.5.5,0,0,1,.5-.5h41a.5.5,0,0,1,.5.5Z\"/></symbol>\n    <symbol id=\"global--high\" viewBox=\"0 0 48 48\"><path d=\"M24,0A24,24,0,1,0,48,24,24,24,0,0,0,24,0ZM43,33h-7.2A32.18,32.18,0,0,0,37,25H45A20.88,20.88,0,0,1,43,33ZM25,45V35h7.94a31.48,31.48,0,0,1-6.2,9.8C26.17,44.88,25.59,44.92,25,45Zm-3.74-.15A31.33,31.33,0,0,1,15.05,35h8V45C22.41,44.92,21.83,44.88,21.26,44.8ZM3.05,25H11a32.18,32.18,0,0,0,1.28,8H5.05A20.88,20.88,0,0,1,3.05,25Zm2-10h7.19A32.18,32.18,0,0,0,11,23H3.05A20.88,20.88,0,0,1,5.05,15ZM23,3.05V13H15.05a31.33,31.33,0,0,1,6.21-9.8C21.83,3.12,22.41,3.08,23,3.05Zm3.74.15A31.7,31.7,0,0,1,33,13H25V3.05C25.59,3.08,26.17,3.12,26.74,3.2ZM33.65,15A29.65,29.65,0,0,1,35,23H25V15ZM23,15v8H13a29.65,29.65,0,0,1,1.38-8ZM13,25H23v8H14.34A29.65,29.65,0,0,1,13,25Zm12,8V25H35a29.65,29.65,0,0,1-1.38,8ZM37,23a32.18,32.18,0,0,0-1.28-8H43a20.88,20.88,0,0,1,2,8Zm4.83-10H35.08A33.24,33.24,0,0,0,30,3.87,21,21,0,0,1,41.86,13ZM18,3.87A33.27,33.27,0,0,0,12.91,13H6.14A21,21,0,0,1,18,3.87ZM6.14,35h6.77A33.27,33.27,0,0,0,18,44.13,21,21,0,0,1,6.14,35ZM30,44.13A33.24,33.24,0,0,0,35.08,35h6.78A21,21,0,0,1,30,44.13Z\"/></symbol>\n    <symbol id=\"glossary--high\" viewBox=\"0 0 48 48\"><path d=\"M41,27H30a1,1,0,0,0,0,2H41a1,1,0,0,0,0-2Z\"/><path d=\"M41,21H30a1,1,0,0,0,0,2H41a1,1,0,0,0,0-2Z\"/><path d=\"M44.5,2h-15a6.47,6.47,0,0,0-5,2.35A6.47,6.47,0,0,0,19.5,2H4.5A3.5,3.5,0,0,0,1,5.5v33A3.5,3.5,0,0,0,4.5,42h15A3.5,3.5,0,0,1,23,45.5h0a1.5,1.5,0,0,0,1.5,1.5h0A1.5,1.5,0,0,0,26,45.5h0a3.5,3.5,0,0,1,3.5-3.5H44.5A3.5,3.5,0,0,0,48,38.5V5.5A3.5,3.5,0,0,0,44.5,2Zm-25,37H4.5a.5.5,0,0,1-.5-.5V5.5A.5.5,0,0,1,4.5,5h15A3.5,3.5,0,0,1,23,8.5h0V40.06A6.45,6.45,0,0,0,19.45,39ZM45,38.5a.5.5,0,0,1-.5.5h-15A6.44,6.44,0,0,0,26,40V8.5h0A3.5,3.5,0,0,1,29.5,5h15a.5.5,0,0,1,.5.5Z\"/><path d=\"M41,15H30a1,1,0,0,0,0,2H41a1,1,0,0,0,0-2Z\"/><path d=\"M19,27H8a1,1,0,0,0,0,2H19a1,1,0,0,0,0-2Z\"/><path d=\"M19,15H8a1,1,0,0,0,0,2H19a1,1,0,0,0,0-2Z\"/><path d=\"M19,21H8a1,1,0,0,0,0,2H19a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"guide--high\" viewBox=\"0 0 48 48\"><path d=\"M40.5,0H10A6,6,0,0,0,4,6c0,.11,0,.22,0,.33A1,1,0,0,0,4,6.5V41.78A6.22,6.22,0,0,0,10.22,48H40.5A3.5,3.5,0,0,0,44,44.5V3.5A3.5,3.5,0,0,0,40.5,0ZM10,3H40.5a.5.5,0,0,1,.5.5V5H11a1,1,0,0,0,0,2H41V9H10a3,3,0,0,1,0-6ZM40.5,45H10.22A3.22,3.22,0,0,1,7,41.78V11.19A6,6,0,0,0,10,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/></symbol>\n    <symbol id=\"help--high\" viewBox=\"0 0 48 48\"><path d=\"M41,41A24,24,0,0,0,41,7h0A24,24,0,0,0,7,7H7A24,24,0,0,0,7,41H7A24,24,0,0,0,41,41Zm-1.45-2.86-3.88-3.88a15.49,15.49,0,0,0,0-20.46l3.88-3.88a20.91,20.91,0,0,1,0,28.22ZM24,36.5A12.5,12.5,0,1,1,36.5,24,12.5,12.5,0,0,1,24,36.5Zm14.11-28-3.88,3.87a15.52,15.52,0,0,0-20.46,0L9.89,8.48a20.91,20.91,0,0,1,28.22,0ZM8.48,9.89l3.88,3.88a15.49,15.49,0,0,0,0,20.46L8.48,38.11a20.91,20.91,0,0,1,0-28.22ZM9.89,39.52l3.88-3.87a15.52,15.52,0,0,0,20.46,0l3.88,3.87a20.91,20.91,0,0,1-28.22,0Z\"/></symbol>\n    <symbol id=\"home--high\" viewBox=\"0 0 48 48\"><path d=\"M27,40H21V28h6ZM19,26V42H29V26ZM24,3.48,3,21.62V45H45V21.62ZM23,.37a1.49,1.49,0,0,1,2,0L47.48,19.8A1.49,1.49,0,0,1,48,20.93V46.5A1.5,1.5,0,0,1,46.5,48H1.5A1.5,1.5,0,0,1,0,46.5V20.93A1.49,1.49,0,0,1,.52,19.8Z\"/></symbol>\n    <symbol id=\"id-number--high\" viewBox=\"0 0 48 48\"><path d=\"M26.71,19.29a1,1,0,0,0-1.42,0L24,20.59l-1.29-1.3a1,1,0,0,0-1.42,1.42L22.59,22l-1.3,1.29a1,1,0,0,0,1.42,1.42L24,23.41l1.29,1.3a1,1,0,0,0,1.42-1.42L25.41,22l1.3-1.29A1,1,0,0,0,26.71,19.29Z\"/><path d=\"M15.71,19.29a1,1,0,0,0-1.42,0L13,20.59l-1.29-1.3a1,1,0,0,0-1.42,1.42L11.59,22l-1.3,1.29a1,1,0,0,0,1.42,1.42L13,23.41l1.29,1.3a1,1,0,0,0,1.42-1.42L14.41,22l1.3-1.29A1,1,0,0,0,15.71,19.29Z\"/><rect width=\"6\" height=\"2\" x=\"32\" y=\"29\"/><rect width=\"6\" height=\"2\" x=\"21\" y=\"29\"/><rect width=\"6\" height=\"2\" x=\"10\" y=\"29\"/><path d=\"M44.5,7H3.5A3.57,3.57,0,0,0,0,10.64V37.36A3.57,3.57,0,0,0,3.5,41h41A3.57,3.57,0,0,0,48,37.36V10.64A3.57,3.57,0,0,0,44.5,7ZM45,37.36a.58.58,0,0,1-.5.64H3.5a.58.58,0,0,1-.5-.64V10.64A.58.58,0,0,1,3.5,10h41a.58.58,0,0,1,.5.64Z\"/></symbol>\n    <symbol id=\"info--high\" viewBox=\"0 0 48 48\"><path d=\"M25.7,11.5a2,2,0,0,0-2,2,1.77,1.77,0,0,0,1.6,1.9h.2a2,2,0,0,0,2-2,1.71,1.71,0,0,0-1.6-1.9ZM19.8,35.8h3l3.3-17.4H23.2ZM48,24A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"issuer--high\" viewBox=\"0 0 48 48\"><path d=\"M45.51,37H41V20h5.5a1.5,1.5,0,0,0,.92-2.69l-22-17A1.54,1.54,0,0,0,24.5,0h-1a1.54,1.54,0,0,0-.92.31l-22,17A1.5,1.5,0,0,0,1.5,20H7V37H2.49A2.5,2.5,0,0,0,0,39.49v6A2.5,2.5,0,0,0,2.49,48h43A2.5,2.5,0,0,0,48,45.51v-6A2.5,2.5,0,0,0,45.51,37ZM39,37H33V20h6ZM23,20V37H17V20Zm2,0h6V37H25ZM24,3,42.11,17H5.89ZM9,20h6V37H9ZM45,45H3V40H45Z\"/><path d=\"M24,7a4,4,0,1,0,4,4A4,4,0,0,0,24,7Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,24,13Z\"/></symbol>\n    <symbol id=\"key-change--high\" viewBox=\"0 0 48 48\"><path d=\"M9.87,33.87a3,3,0,1,0,4.24,0A3,3,0,0,0,9.87,33.87ZM8.46,32.46a5,5,0,1,1,0,7.07A5,5,0,0,1,8.46,32.46ZM38.11,14.12a3,3,0,1,0-4.24,0A3,3,0,0,0,38.11,14.12Zm1.42,1.41a5,5,0,1,1,0-7.07A5,5,0,0,1,39.53,15.53ZM21.44,39.45A1.47,1.47,0,0,1,22.5,39H41.39l3-3L42,33.63,40.1,35.56A1.49,1.49,0,0,1,39,36H35A1.5,1.5,0,0,1,34,35.57L32,33.63l-1.95,1.94A1.5,1.5,0,0,1,29,36H25.48a1.5,1.5,0,0,1-1.06-.44l-5.86-5.86a9.18,9.18,0,0,0-12.91-.12,9.07,9.07,0,0,0,0,12.82,9.18,9.18,0,0,0,12.91-.09Zm-.75,5a12.2,12.2,0,0,1-17.17.08,12.07,12.07,0,0,1,0-17.06,12.2,12.2,0,0,1,17.17.12L26.1,33h2.28L31,30.44a1.5,1.5,0,0,1,2.12,0L35.63,33h2.78l2.53-2.56a1.5,1.5,0,0,1,2.13,0l4.5,4.49a1.49,1.49,0,0,1,0,2.12l-4.5,4.51A1.5,1.5,0,0,1,42,42H23.13Zm5.87-35.9A1.47,1.47,0,0,1,25.5,9H6.61l-3,3L6,14.37,7.9,12.44A1.49,1.49,0,0,1,9,12h4a1.5,1.5,0,0,1,1.06.44L16,14.37l2-1.94A1.5,1.5,0,0,1,19,12h3.52a1.5,1.5,0,0,1,1.06.44l5.86,5.86a9.18,9.18,0,0,0,12.91.12,9.07,9.07,0,0,0,0-12.82,9.18,9.18,0,0,0-12.91.09ZM24.87,6c.62-.61,1.43-1.42,2.44-2.44a12.2,12.2,0,0,1,17.17-.08,12.07,12.07,0,0,1,0,17.06,12.2,12.2,0,0,1-17.17-.12L21.9,15H19.62l-2.57,2.57a1.5,1.5,0,0,1-2.12,0L12.37,15H9.59L7.06,17.55a1.51,1.51,0,0,1-2.13,0l-4.5-4.5a1.49,1.49,0,0,1,0-2.12l4.5-4.51A1.5,1.5,0,0,1,6,6Z\"/></symbol>\n    <symbol id=\"key--high\" viewBox=\"0 0 48 48\"><path d=\"M39,15a6,6,0,1,1-6-6A6,6,0,0,1,39,15Zm-2,0a4,4,0,1,0-4,4A4,4,0,0,0,37,15ZM18,18.77V15.28a15,15,0,1,1,30-.17A15.11,15.11,0,0,1,32.69,30H21v7.5a1.5,1.5,0,0,1-1.5,1.5H12v7.48a1.5,1.5,0,0,1-1.5,1.5h-9A1.5,1.5,0,0,1,0,46.49V38a1.49,1.49,0,0,1,.44-1L18,19.39Zm3,0V20a1.52,1.52,0,0,1-.44,1.06L3,38.63V45H9V37.51a1.5,1.5,0,0,1,1.5-1.5H18v-7.5a1.5,1.5,0,0,1,1.5-1.5H32.69A12.1,12.1,0,0,0,45,15.11a12,12,0,1,0-24,.17Z\"/></symbol>\n    <symbol id=\"like--high\" viewBox=\"0 0 48 48\"><path d=\"M41.93,23.93a11.54,11.54,0,0,0,.39-15.22,9.23,9.23,0,0,0-13.87-.14l-3.31,3.54a1.49,1.49,0,0,1-2.19,0l-3-3.26A9.47,9.47,0,0,0,6,8.43,11.25,11.25,0,0,0,5.9,23.65L23,42a1.35,1.35,0,0,0,2.05,0Zm-17.88-15,2.2-2.37a12.24,12.24,0,0,1,18.31.19C49.34,12,49.09,20.64,44.12,26L27.27,44.08a4.37,4.37,0,0,1-6.44,0L3.7,25.69A14.24,14.24,0,0,1,3.87,6.35a12.46,12.46,0,0,1,18.24.46Z\"/></symbol>\n    <symbol id=\"link--high\" viewBox=\"0 0 48 48\"><path d=\"M26.73,36.1a1.5,1.5,0,0,1,2.17,2.08l-.17.18L23.08,44A13.51,13.51,0,0,1,4,24.92l5.66-5.65a13.53,13.53,0,0,1,19.09,0,13.2,13.2,0,0,1,3.21,5.18,1.5,1.5,0,0,1-2.84,1,10.41,10.41,0,0,0-9.91-7.08,10.41,10.41,0,0,0-7.43,3.06L6.11,27A10.5,10.5,0,0,0,21,41.89ZM44,4a13.53,13.53,0,0,1,0,19.1l-5.66,5.65a13.51,13.51,0,0,1-19.09,0,13.22,13.22,0,0,1-3.2-5.16,1.5,1.5,0,0,1,2.84-1,10.27,10.27,0,0,0,2.48,4,10.54,10.54,0,0,0,14.85,0L41.89,21a10.54,10.54,0,0,0,0-14.85A10.54,10.54,0,0,0,27,6.11l-5.65,5.65a1.5,1.5,0,1,1-2.12-2.12L24.92,4A13.53,13.53,0,0,1,44,4Z\"/></symbol>\n    <symbol id=\"log-completed--high\" viewBox=\"0 0 48 48\"><path d=\"M35,23H23a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M35,14H23a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M35,32H23a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M44.5,0H3.5A3.5,3.5,0,0,0,0,3.5v41A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5V3.5A3.5,3.5,0,0,0,44.5,0ZM45,44.5a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,3.5,3h41a.5.5,0,0,1,.5.5Z\"/><path d=\"M17.29,21.29,14,24.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z\"/><path d=\"M17.29,12.29,14,15.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z\"/><path d=\"M17.29,30.29,14,33.59l-1.29-1.3a1,1,0,0,0-1.42,1.42l2,2a1,1,0,0,0,1.42,0l4-4a1,1,0,0,0-1.42-1.42Z\"/></symbol>\n    <symbol id=\"log--high\" viewBox=\"0 0 48 48\"><path d=\"M23,34a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Zm0-9a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2Zm0-9a1,1,0,0,1,0-2H35a1,1,0,0,1,0,2ZM14,34h2V32H14Zm-1,2a1,1,0,0,1-1-1V31a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1Zm1-11h2V23H14Zm-1,2a1,1,0,0,1-1-1V22a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1Zm1-11h2V14H14Zm-1,2a1,1,0,0,1-1-1V13a1,1,0,0,1,1-1h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1ZM0,44.5V3.5A3.5,3.5,0,0,1,3.5,0h41A3.5,3.5,0,0,1,48,3.5v41A3.5,3.5,0,0,1,44.5,48H3.5A3.5,3.5,0,0,1,0,44.5Zm3,0a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5V3.5a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5Z\"/></symbol>\n    <symbol id=\"map-directions-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M30.6,21.47H17.47A1.5,1.5,0,0,0,16,23v6.49a1.5,1.5,0,0,0,3,0v-5H30.66l-4.22,3.89a1.51,1.51,0,0,0-.08,2.12,1.49,1.49,0,0,0,2.11.09l7-6.45a1.49,1.49,0,0,0,0-2.19l-7-6.54a1.5,1.5,0,1,0-2,2.19Z\"/><path d=\"M47.12,21.88l-21-21a3,3,0,0,0-4.24,0l-21,21a3,3,0,0,0,0,4.24l21,21a3,3,0,0,0,4.24,0l21-21A3,3,0,0,0,47.12,21.88ZM24,45,3,24,24,3,45,24Z\"/></symbol>\n    <symbol id=\"map-directions--high\" viewBox=\"0 0 48 48\"><path d=\"M47.48,9.86l-11-9.5a1.52,1.52,0,0,0-1.94,0L24,9.05,13.46.34a1.52,1.52,0,0,0-1.94,0l-11,9.5A1.51,1.51,0,0,0,0,11V46.5a1.5,1.5,0,0,0,2.45,1.16l10.07-8.24,10.56,8.26a.39.39,0,0,0,.11.06l.21.13.21.07.18,0h.42l.18,0,.21-.07.21-.13a.39.39,0,0,0,.11-.06l10.56-8.26,10.07,8.24A1.5,1.5,0,0,0,48,46.5V11A1.51,1.51,0,0,0,47.48,9.86ZM14,23.41l2-2,5.29,5.3a1,1,0,0,0,1.21.13V43.42L14,36.77ZM34,13a1,1,0,0,0-.71.29L25.5,21.08V11.71l8.5-7ZM22.5,24.08l-.5.5-5.29-5.29a1,1,0,0,0-1.42,0L14,20.58V4.68l8.5,7ZM11,4.78v18.8l-8,8V11.69ZM3,34.41l8-8V36.79L3,43.33Zm22.5-10.5,8.5-8.5V36.77l-8.5,6.65ZM45,43.33l-8-6.54V18.41L39.59,21l-1.3,1.29a1,1,0,0,0,1.42,1.42L41,22.41l1.29,1.3a1,1,0,0,0,1.42-1.42L42.41,21l1.3-1.29a1,1,0,0,0-1.42-1.42L41,19.58l-4-4V4.78l8,6.91Z\"/></symbol>\n    <symbol id=\"map-location-current--high\" viewBox=\"0 0 48 48\"><path d=\"M19.67,28.33,2.46,25.21a3,3,0,0,1-.71-5.68L43.74.28a3,3,0,0,1,4,4l-19.25,42a3,3,0,0,1-5.68-.71ZM25.74,45,45,3,3,22.26l19.25,3.49Z\"/></symbol>\n    <symbol id=\"map-location-off--high\" viewBox=\"0 0 48 48\"><path d=\"M35.88,32.44a17.6,17.6,0,0,0,4.58-16.73A1.5,1.5,0,0,1,43.37,15,20.62,20.62,0,0,1,38,34.56l-13,13a1.49,1.49,0,0,1-2.12,0L16.3,40.92a1.5,1.5,0,1,1,2.12-2.12L24,44.38ZM22.27,23.61l5.34-5.34a4,4,0,1,0-5.34,5.34ZM10.64,35.23,10,34.56A20.36,20.36,0,0,1,9.83,5.9a20.13,20.13,0,0,1,28.48,0c.28.28.55.57.81.86L45.44.44a1.5,1.5,0,0,1,2.12,2.12l-45,45A1.5,1.5,0,0,1,.44,45.44Zm2.13-2.12,8-8a6,6,0,1,1,8.28-8.28L37,8.89c-.25-.3-.52-.59-.8-.87A17.15,17.15,0,0,0,12,8a17.37,17.37,0,0,0,.14,24.42Z\"/></symbol>\n    <symbol id=\"map-location--high\" viewBox=\"0 0 48 48\"><path d=\"M24,26a6,6,0,1,1,6-6A6,6,0,0,1,24,26Zm0-2a4,4,0,1,0-4-4A4,4,0,0,0,24,24Zm0,20.38,11.9-11.94A17.39,17.39,0,0,0,36.1,8,17.05,17.05,0,0,0,11.94,8a17.38,17.38,0,0,0,.14,24.42ZM10,34.56A20.4,20.4,0,0,1,9.81,5.9a20,20,0,0,1,28.41,0A20.39,20.39,0,0,1,38,34.56l-13,13a1.49,1.49,0,0,1-2.12,0Z\"/></symbol>\n    <symbol id=\"map--high\" viewBox=\"0 0 48 48\"><path d=\"M24,0A24,24,0,1,0,48,24,24,24,0,0,0,24,0Zm1,45V41a1,1,0,0,0-2,0v4A21,21,0,0,1,3.05,25H7a1,1,0,0,0,0-2H3.05A21,21,0,0,1,23,3.05V7a1,1,0,0,0,2,0V3.05A21,21,0,0,1,45,23H41a1,1,0,0,0,0,2h4A21,21,0,0,1,25,45Z\"/><path d=\"M24,20a4,4,0,1,0,4,4A4,4,0,0,0,24,20Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,24,26Z\"/><path d=\"M30.05,19.15a2,2,0,0,0-1.2-1.2l-13.1-4.76a2,2,0,0,0-2.56,2.56L18,28.85a2,2,0,0,0,1.2,1.2l13.1,4.76a2,2,0,0,0,2.57-2.56Zm-10.22,9c-3.18-8.74-4.76-13.1-4.77-13.1l13.11,4.76,4.76,13.1Z\"/></symbol>\n    <symbol id=\"maximize--high\" viewBox=\"0 0 48 48\"><path d=\"M19.5,10a1.5,1.5,0,0,1,0,3h-16a.45.45,0,0,0-.46.46V44.54a.45.45,0,0,0,.46.46H34.54a.45.45,0,0,0,.46-.46v-15a1.5,1.5,0,0,1,3,0v15A3.46,3.46,0,0,1,34.54,48H3.46A3.46,3.46,0,0,1,0,44.54V13.46A3.46,3.46,0,0,1,3.46,10ZM45,5.12,26.56,23.56a1.5,1.5,0,0,1-2.12-2.12L42.88,3H37.5a1.5,1.5,0,0,1,0-3h9A1.5,1.5,0,0,1,48,1.5v9a1.5,1.5,0,0,1-3,0Z\"/></symbol>\n    <symbol id=\"media-fast-forward--high\" viewBox=\"0 0 48 48\"><path d=\"M5.42,7.55a1.51,1.51,0,1,1,2.16-2.1l17,17.5a1.52,1.52,0,0,1,0,2.1l-17,17.5a1.51,1.51,0,0,1-2.16-2.1L21.41,24Zm18,0a1.51,1.51,0,0,1,2.16-2.1l17,17.5a1.52,1.52,0,0,1,0,2.1l-17,17.5a1.51,1.51,0,0,1-2.16-2.1L39.41,24Z\"/></symbol>\n    <symbol id=\"media-pause-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M30,31a1,1,0,0,1-2,0V17a1,1,0,0,1,2,0ZM20,31a1,1,0,0,1-2,0V17a1,1,0,0,1,2,0Zm28-7A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"media-pause--high\" viewBox=\"0 0 48 48\"><path d=\"M37,6.5a1.5,1.5,0,0,1,3,0v35a1.5,1.5,0,0,1-3,0ZM8,6.5a1.5,1.5,0,0,1,3,0v35a1.5,1.5,0,0,1-3,0Z\"/></symbol>\n    <symbol id=\"media-play-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M20,30l10-6L20,18ZM18,18a2,2,0,0,1,3-1.68l10,6a2,2,0,0,1,0,3.36l-10,6A2,2,0,0,1,18,30Zm30,6A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"media-play--high\" viewBox=\"0 0 48 48\"><path d=\"M11,9.49v29c0,.38.31.57.54.44L36.77,24.44a.53.53,0,0,0,0-.88L11.54,9.05C11.31,8.92,11,9.11,11,9.49Zm-3,0a3.38,3.38,0,0,1,5-3L38.27,21a3.53,3.53,0,0,1,0,6.08L13,41.55a3.38,3.38,0,0,1-5-3Z\"/></symbol>\n    <symbol id=\"media-replay--high\" viewBox=\"0 0 48 48\"><path d=\"M16.78,9l4.74,4.4a1.5,1.5,0,1,1-2,2.2l-7-6.5a1.5,1.5,0,0,1,0-2.2l7-6.5a1.5,1.5,0,1,1,2,2.2L17.86,6H24A21,21,0,1,1,3,27a1.5,1.5,0,0,1,3,0A18,18,0,1,0,24,9Z\"/></symbol>\n    <symbol id=\"media-rewind--high\" viewBox=\"0 0 48 48\"><path d=\"M42.58,40.45a1.51,1.51,0,0,1-2.16,2.1l-17-17.5a1.52,1.52,0,0,1,0-2.1l17-17.5a1.51,1.51,0,1,1,2.16,2.1L26.59,24Zm-18,0a1.51,1.51,0,1,1-2.16,2.1l-17-17.5a1.52,1.52,0,0,1,0-2.1l17-17.5a1.51,1.51,0,1,1,2.16,2.1L8.59,24Z\"/></symbol>\n    <symbol id=\"media-stop-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M29,28V20a1,1,0,0,0-1-1H20a1,1,0,0,0-1,1v8a1,1,0,0,0,1,1h8A1,1,0,0,0,29,28Zm2,0a3,3,0,0,1-3,3H20a3,3,0,0,1-3-3V20a3,3,0,0,1,3-3h8a3,3,0,0,1,3,3Zm17-4A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"media-stop--high\" viewBox=\"0 0 48 48\"><path d=\"M37,11V37H11V11H37m0-3H11a3,3,0,0,0-3,3V37a3,3,0,0,0,3,3H37a3,3,0,0,0,3-3V11a3,3,0,0,0-3-3Z\"/></symbol>\n    <symbol id=\"menu--high\" viewBox=\"0 0 48 48\"><path d=\"M5.5,9a1.5,1.5,0,0,1,0-3h37a1.5,1.5,0,0,1,0,3Zm0,16.5a1.5,1.5,0,0,1,0-3h37a1.5,1.5,0,0,1,0,3ZM5.5,42a1.5,1.5,0,0,1,0-3h37a1.5,1.5,0,0,1,0,3Z\"/></symbol>\n    <symbol id=\"merchant--high\" viewBox=\"0 0 48 48\"><path d=\"M45,20.59a.47.47,0,0,1-.5.5H38.7L34.4,2.81H39l6,14ZM21.9,45.19V29.12a.94.94,0,0,0-1-1H11a.94.94,0,0,0-1,1V45.19H6V23.9H42V45.19Zm-1.9,0H12V30.13h8ZM3,16.87,9,2.81h3.7L9.3,21.09H3.5a.47.47,0,0,1-.5-.5ZM26,2.81h5.3l4.3,18.28H26ZM12.3,21.09,15.7,2.81H23V21.09ZM47.9,16,41.4.9A1.57,1.57,0,0,0,40,0H8A1.57,1.57,0,0,0,6.6.9L.1,16a.75.75,0,0,0-.1.5v3.91A3.64,3.64,0,0,0,3,23.9V46.49A1.56,1.56,0,0,0,4.6,48h39A1.46,1.46,0,0,0,45,46.49V23.9a3.56,3.56,0,0,0,3-3.52V16.47A.75.75,0,0,0,47.9,16ZM36,35.15H28v-5h8Zm1-7H27a.94.94,0,0,0-1,1v7a.94.94,0,0,0,1,1H37a.94.94,0,0,0,1-1v-7A.94.94,0,0,0,37,28.12Z\"/></symbol>\n    <symbol id=\"message--high\" viewBox=\"0 0 48 48\"><path d=\"M36,23a3,3,0,1,0-3-3A3,3,0,0,0,36,23ZM24,23a3,3,0,1,0-3-3A3,3,0,0,0,24,23ZM12,23a3,3,0,1,0-3-3A3,3,0,0,0,12,23Zm8.07,17L11.5,47.62A1.5,1.5,0,0,1,9,46.5V40H6.5A6.5,6.5,0,0,1,0,33.5V6.5A6.5,6.5,0,0,1,6.5,0h35A6.5,6.5,0,0,1,48,6.5v27A6.5,6.5,0,0,1,41.5,40ZM12,43.16l6.5-5.78a1.49,1.49,0,0,1,1-.38h22A3.5,3.5,0,0,0,45,33.5V6.5A3.5,3.5,0,0,0,41.5,3H6.5A3.5,3.5,0,0,0,3,6.5v27A3.5,3.5,0,0,0,6.5,37h4A1.5,1.5,0,0,1,12,38.5Z\"/></symbol>\n    <symbol id=\"money-add--high\" viewBox=\"0 0 48 48\"><path d=\"M40,15H38V13a1,1,0,0,0-2,0v2H34a1,1,0,0,0,0,2h2v2a1,1,0,1,0,2,0V17h2a1,1,0,0,0,0-2ZM19.5,32a3.5,3.5,0,1,0-3.5-3.5A3.5,3.5,0,0,0,19.5,32Zm0-9a5.5,5.5,0,1,1-5.5,5.5A5.52,5.52,0,0,1,19.5,23ZM37,24a8,8,0,1,1,5.66-2.34A8,8,0,0,1,37,24ZM35.5,40H3.5a.5.5,0,0,1-.5-.5v-22a.5.5,0,0,1,.5-.5H26.05a11,11,0,0,0,10,10V39.48A.5.5,0,0,1,35.5,40ZM48,16a11,11,0,0,0-21.81-2H3.5A3.5,3.5,0,0,0,0,17.48v22A3.5,3.5,0,0,0,3.5,43h32a3.5,3.5,0,0,0,3.5-3.5V26.79A11,11,0,0,0,48,16Z\"/></symbol>\n    <symbol id=\"money-request--high\" viewBox=\"0 0 48 48\"><path d=\"M24,26.5a6,6,0,1,1-6,6A6,6,0,0,1,24,26.5ZM23,15.72V1a1,1,0,0,1,2,0V15.72l4.82-4.45a1,1,0,0,1,1.36,1.46l-6.5,6a1,1,0,0,1-1.36,0l-6.5-6a1,1,0,1,1,1.36-1.46ZM24,28.5a4,4,0,1,0,4,4A4,4,0,0,0,24,28.5ZM13.5,16a1.5,1.5,0,0,1,0,3H3.5a.5.5,0,0,0-.5.5v25a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5v-25a.5.5,0,0,0-.5-.5h-10a1.5,1.5,0,0,1,0-3h10A3.5,3.5,0,0,1,48,19.5v25A3.5,3.5,0,0,1,44.5,48H3.5A3.5,3.5,0,0,1,0,44.5v-25A3.5,3.5,0,0,1,3.5,16Z\"/></symbol>\n    <symbol id=\"money-send--high\" viewBox=\"0 0 48 48\"><path d=\"M18.18,7.73,23,3.28V18a1,1,0,0,0,2,0V3.28l4.82,4.45a1,1,0,0,0,1.36-1.46l-6.5-6a1,1,0,0,0-1.36,0l-6.5,6a1,1,0,0,0,1.36,1.46Z\"/><path d=\"M44.5,16h-10a1.5,1.5,0,0,0,0,3h10a.5.5,0,0,1,.5.5v25a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5v-25a.5.5,0,0,1,.5-.5h10a1.5,1.5,0,0,0,0-3H3.5A3.5,3.5,0,0,0,0,19.5v25A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5v-25A3.5,3.5,0,0,0,44.5,16Z\"/><path d=\"M24,26.5a6,6,0,1,0,6,6A6,6,0,0,0,24,26.5Zm0,10a4,4,0,1,1,4-4A4,4,0,0,1,24,36.5Z\"/></symbol>\n    <symbol id=\"money-withdraw--high\" viewBox=\"0 0 48 48\"><path d=\"M24,29a6,6,0,1,1,6-6A6,6,0,0,1,24,29Zm0-2a4,4,0,1,0-4-4A4,4,0,0,0,24,27ZM37,7.5a1.5,1.5,0,0,1,3,0v37A3.5,3.5,0,0,1,36.5,48h-25A3.5,3.5,0,0,1,8,44.5V7.5a1.5,1.5,0,0,1,3,0v37a.5.5,0,0,0,.5.5h25a.5.5,0,0,0,.5-.5ZM1.5,3a1.5,1.5,0,0,1,0-3h45a1.5,1.5,0,0,1,0,3Z\"/></symbol>\n    <symbol id=\"nfc--high\" viewBox=\"0 0 48 48\"><path d=\"M8.49,19.69a1.6,1.6,0,0,1,2.19,0,5.89,5.89,0,0,1,0,8.55,1.58,1.58,0,0,1-1.52.43,1.52,1.52,0,0,1-1.11-1.08,1.48,1.48,0,0,1,.44-1.47A3,3,0,0,0,9.43,24a3,3,0,0,0-.94-2.16A1.47,1.47,0,0,1,8.49,19.69Zm8.61-6.43a14.81,14.81,0,0,1,0,21.41,1.56,1.56,0,0,1-1.51.43A1.52,1.52,0,0,1,14.47,34a1.47,1.47,0,0,1,.45-1.47,11.9,11.9,0,0,0,0-17.17,1.46,1.46,0,0,1,0-2.08A1.59,1.59,0,0,1,17.1,13.26Zm6.41-6.43h0a23.7,23.7,0,0,1,0,34.26,1.56,1.56,0,0,1-1.51.43,1.52,1.52,0,0,1-1.12-1.08A1.49,1.49,0,0,1,21.33,39a20.78,20.78,0,0,0,0-30,1.46,1.46,0,0,1,0-2.12A1.59,1.59,0,0,1,23.51,6.83ZM29.94.4a32.62,32.62,0,0,1,0,47.12,1.58,1.58,0,0,1-1.52.43,1.52,1.52,0,0,1-1.11-1.08,1.48,1.48,0,0,1,.44-1.47,29.67,29.67,0,0,0,0-42.88,1.46,1.46,0,0,1,0-2.08A1.59,1.59,0,0,1,29.94.4Z\"/></symbol>\n    <symbol id=\"note--high\" viewBox=\"0 0 48 48\"><path d=\"M35,30H30a1,1,0,0,0,0,2h5a1,1,0,0,0,0-2Z\"/><path d=\"M40.5,4H36V1.5a1.5,1.5,0,0,0-3,0V4H29V1.5a1.5,1.5,0,0,0-3,0V4H22V1.5a1.5,1.5,0,0,0-3,0V4H15V1.5a1.5,1.5,0,0,0-3,0V4H7.5A3.5,3.5,0,0,0,4,7.5v37A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V7.5A3.5,3.5,0,0,0,40.5,4ZM7.5,7H12V9.5a1.5,1.5,0,0,0,3,0V7h4V9.5a1.5,1.5,0,0,0,3,0V7h4V9.5a1.5,1.5,0,0,0,3,0V7h4V9.5a1.5,1.5,0,0,0,3,0V7h4.5a.5.5,0,0,1,.5.5V14H7V7.5A.5.5,0,0,1,7.5,7Zm33,38H7.5a.5.5,0,0,1-.5-.5V17H41V44.5A.5.5,0,0,1,40.5,45Z\"/><path d=\"M35,23H13a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M19,37H13a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Z\"/><path d=\"M35,37H25a1,1,0,0,0,0,2H35a1,1,0,0,0,0-2Z\"/><path d=\"M13,32H25a1,1,0,0,0,0-2H13a1,1,0,0,0,0,2Z\"/></symbol>\n    <symbol id=\"notifications--high\" viewBox=\"0 0 48 48\"><path d=\"M24,8.05A12.61,12.61,0,0,0,11.4,20.57v11a1.49,1.49,0,0,1-.44,1L7.89,35.79a1.36,1.36,0,0,0-.28,1.45,1.33,1.33,0,0,0,1.22.81H39.17a1.33,1.33,0,0,0,1.23-.82,1.35,1.35,0,0,0-.29-1.45l-3.17-3.17a1.5,1.5,0,0,1-.44-1.06v-11A12.52,12.52,0,0,0,24,8.05ZM20.4,41v1.49a3.5,3.5,0,0,0,7,0V41Zm-2,0H8.83a4.22,4.22,0,0,1-3-1.2,4.31,4.31,0,0,1-1.28-3,4.36,4.36,0,0,1,1.27-3.06L8.5,31V20.57A15.46,15.46,0,0,1,22.4,5.19V1.52a1.47,1.47,0,1,1,2.94,0V5.18A15.45,15.45,0,0,1,39.4,20.57V31l2.83,2.72a4.27,4.27,0,0,1,0,6.09,4.22,4.22,0,0,1-3,1.2H29.4v1.49a5.5,5.5,0,0,1-11,0Z\"/></symbol>\n    <symbol id=\"offers-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M40.5,8H32A8,8,0,0,0,16,8H7.5A3.5,3.5,0,0,0,4,11.5v33A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5v-33A3.5,3.5,0,0,0,40.5,8ZM19,8A5,5,0,0,1,29,8H19ZM41,44.5a.5.5,0,0,1-.5.5H7.5a.5.5,0,0,1-.5-.5v-33a.5.5,0,0,1,.5-.5H16v4.42a1.5,1.5,0,0,0,3,0V11H29v4.42a1.5,1.5,0,0,0,3,0V11h8.5a.5.5,0,0,1,.5.5Z\"/><path d=\"M29,29a4,4,0,0,0-4,4,4,4,0,1,0,4-4Zm0,6a2.1,2.1,0,0,1-2-2,2,2,0,0,1,2-2,2,2,0,0,1,0,4Z\"/><path d=\"M19,30a4,4,0,1,0-4-4A4.06,4.06,0,0,0,19,30Zm0-6a2,2,0,1,1-2,2A2.07,2.07,0,0,1,19,24Z\"/><path d=\"M31.73,22.32a1,1,0,0,0-1.41-.05l-14,13a1,1,0,0,0,1.36,1.46l14-13A1,1,0,0,0,31.73,22.32Z\"/></symbol>\n    <symbol id=\"offers-alt-1--high\" viewBox=\"0 0 48 48\"><path d=\"M30,32.09a3,3,0,1,0-3-3A3,3,0,0,0,30,32.09Zm0,2a5,5,0,1,1,5-5A5,5,0,0,1,30,34.09Zm-12-12a3,3,0,1,0-3-3A3,3,0,0,0,18,22.09Zm0,2a5,5,0,1,1,5-5A5,5,0,0,1,18,24.09Zm15.42-8a1,1,0,0,1-.21.32l-17,17a1.19,1.19,0,0,1-.33.22l-.17.17a1,1,0,0,1-1.42,0,1,1,0,0,1,0-1.41l18-18a1,1,0,0,1,1.42,0,1,1,0,0,1,0,1.41ZM3.35,28.77a2.28,2.28,0,0,0,1.17,3.34l2,.81a5.33,5.33,0,0,1,3.36,4.47l.19,2.09a2.5,2.5,0,0,0,3.08,2.09l2.13-.48a5.61,5.61,0,0,1,5.37,1.69L22,44.28a3.43,3.43,0,0,0,4,0l1.38-1.52a5.6,5.6,0,0,1,5.37-1.69l2.13.48a2.5,2.5,0,0,0,3.08-2.09l.18-2.09a5.39,5.39,0,0,1,3.37-4.47l2-.81a2.28,2.28,0,0,0,1.16-3.34L43.53,27a5.19,5.19,0,0,1,0-5.57l1.12-1.79a2.29,2.29,0,0,0-1.16-3.35l-2-.81A5.36,5.36,0,0,1,38.11,11l-.18-2.08a2.49,2.49,0,0,0-3.08-2.09l-2.13.47a5.6,5.6,0,0,1-5.37-1.68L25.89,4a2.45,2.45,0,0,0-3.81,0L20.65,5.61a5.6,5.6,0,0,1-5.37,1.68l-2.13-.47a2.49,2.49,0,0,0-3.08,2.09L9.89,11a5.37,5.37,0,0,1-3.37,4.47l-2,.81a2.29,2.29,0,0,0-1.17,3.35L4.47,21.4a5.21,5.21,0,0,1,0,5.58ZM1.93,25.38a2.18,2.18,0,0,0,0-2.38L.81,21.22a5.28,5.28,0,0,1,2.58-7.73l2-.81a2.36,2.36,0,0,0,1.51-2l.18-2.08A5.49,5.49,0,0,1,13.8,3.89l2.13.47a2.62,2.62,0,0,0,2.5-.76l1.38-1.54A5.42,5.42,0,0,1,28.14,2L29.57,3.6a2.62,2.62,0,0,0,2.5.76l2.13-.47a5.5,5.5,0,0,1,6.72,4.75l.18,2.08a2.36,2.36,0,0,0,1.51,2l2,.81a5.28,5.28,0,0,1,2.58,7.73L46.07,23a2.18,2.18,0,0,0,0,2.38l1.12,1.79a5.28,5.28,0,0,1-2.58,7.72l-2,.81a2.37,2.37,0,0,0-1.51,2l-.18,2.09a5.48,5.48,0,0,1-6.72,4.74L32.07,44a2.6,2.6,0,0,0-2.5.77l-1.43,1.58-.11.11a6.37,6.37,0,0,1-8,0l-.14-.14-1.43-1.58a2.62,2.62,0,0,0-2.5-.77l-2.13.47a5.48,5.48,0,0,1-6.72-4.74L6.9,37.66a2.37,2.37,0,0,0-1.51-2l-2-.81A5.27,5.27,0,0,1,.81,27.17Z\"/></symbol>\n    <symbol id=\"offers-deals--high\" viewBox=\"0 0 48 48\"><path d=\"M36,27a3,3,0,1,0-3-3A3,3,0,0,0,36,27ZM24,27a3,3,0,1,0-3-3A3,3,0,0,0,24,27ZM12,27a3,3,0,1,0-3-3A3,3,0,0,0,12,27Z\"/></symbol>\n    <symbol id=\"offers--high\" viewBox=\"0 0 48 48\"><path d=\"M40.5,8H32A8,8,0,0,0,16,8H7.5A3.5,3.5,0,0,0,4,11.5v33A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5v-33A3.5,3.5,0,0,0,40.5,8ZM19,8A5,5,0,0,1,29,8H19ZM41,44.5a.5.5,0,0,1-.5.5H7.5a.5.5,0,0,1-.5-.5v-33a.5.5,0,0,1,.5-.5H16v4.42a1.5,1.5,0,0,0,3,0V11H29v4.42a1.5,1.5,0,0,0,3,0V11h8.5a.5.5,0,0,1,.5.5Z\"/></symbol>\n    <symbol id=\"password-hide--high\" viewBox=\"0 0 48 48\"><path d=\"M30.26,19.87l-3,2.95A3.57,3.57,0,0,1,27.5,24,3.5,3.5,0,0,1,24,27.5a3.57,3.57,0,0,1-1.18-.2l-2.95,3A7.5,7.5,0,0,0,30.26,19.87Zm-2.13-2.13A7.5,7.5,0,0,0,17.74,28.13l3-2.95A3.57,3.57,0,0,1,20.5,24,3.5,3.5,0,0,1,24,20.5a3.57,3.57,0,0,1,1.18.2ZM36,14.18l-4.26,4.25A9.49,9.49,0,0,1,18.43,31.69l-3.79,3.79A19.14,19.14,0,0,0,24,38c7.73,0,15.07-5,20.74-14A35.24,35.24,0,0,0,36,14.18Zm-2.59-1.66A19.14,19.14,0,0,0,24,10C16.27,10,8.93,15,3.26,24a35.43,35.43,0,0,0,8.79,9.83l4.26-4.26A9.49,9.49,0,0,1,29.57,16.31ZM12.44,37.68,2.56,47.56A1.5,1.5,0,0,1,.44,45.44L9.91,36a39.13,39.13,0,0,1-9.7-11.2,1.52,1.52,0,0,1,0-1.54C6.51,12.76,15,7,24,7a22.32,22.32,0,0,1,11.56,3.32L45.44.44a1.5,1.5,0,0,1,2.12,2.12L38.09,12a39.13,39.13,0,0,1,9.7,11.2,1.52,1.52,0,0,1,0,1.54C41.49,35.24,33.05,41,24,41A22.32,22.32,0,0,1,12.44,37.68Z\"/></symbol>\n    <symbol id=\"password-show--high\" viewBox=\"0 0 48 48\"><path d=\"M24,27.5A3.5,3.5,0,1,1,27.5,24,3.5,3.5,0,0,1,24,27.5M24,41C15,41,6.51,35.24.21,24.77a1.52,1.52,0,0,1,0-1.54C6.51,12.76,15,7,24,7s17.49,5.76,23.79,16.23a1.52,1.52,0,0,1,0,1.54C41.49,35.24,33.05,41,24,41ZM3.26,24c5.67,9,13,14,20.74,14s15.07-5,20.74-14c-5.67-9-13-14-20.74-14S8.93,15,3.26,24M24,33.5A9.5,9.5,0,1,1,33.5,24,9.51,9.51,0,0,1,24,33.5m0-17A7.5,7.5,0,1,0,31.5,24,7.5,7.5,0,0,0,24,16.5\"/></symbol>\n    <symbol id=\"phone--high\" viewBox=\"0 0 48 48\"><path d=\"M31.33,28.54a5.29,5.29,0,0,1,7,0L45,35.12a3.53,3.53,0,0,1,0,5,19.34,19.34,0,0,1-27.41.34L7.71,30.66A19.56,19.56,0,0,1,7.71,3a3.6,3.6,0,0,1,5.07,0L19.67,9.9a4.08,4.08,0,0,1,0,6l-3.93,3.92a.62.62,0,0,0,0,.87L26.56,32.46a.6.6,0,0,0,.83,0Zm-6.94,6L13.62,22.82a3.6,3.6,0,0,1,0-5.07l3.93-3.92a1.11,1.11,0,0,0,0-1.8L10.67,5.16a.64.64,0,0,0-.84,0,16.56,16.56,0,0,0,0,23.38l9.84,9.81A16.33,16.33,0,0,0,42.84,38a.54.54,0,0,0,0-.76l-6.59-6.58a2.37,2.37,0,0,0-2.8,0l-3.94,3.93A3.64,3.64,0,0,1,24.39,34.54Z\"/></symbol>\n    <symbol id=\"photo--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,0H3.5A3.5,3.5,0,0,0,0,3.5v41A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5V3.5A3.5,3.5,0,0,0,44.5,0ZM45,44.5a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,3.5,3h41a.5.5,0,0,1,.5.5Z\"/><path d=\"M20,24a6,6,0,1,0-6-6A6,6,0,0,0,20,24Zm0-10a4,4,0,1,1-4,4A4,4,0,0,1,20,14Z\"/><path d=\"M41.5,5H6.5A1.5,1.5,0,0,0,5,6.5v35A1.5,1.5,0,0,0,6.5,43h35A1.5,1.5,0,0,0,43,41.5V6.5A1.5,1.5,0,0,0,41.5,5ZM40,8V18.59l-1.29-1.3a1,1,0,0,0-1.42,0L20,34.59l-8.29-8.3a1,1,0,0,0-1.42,0L8,28.59V8ZM8,40V31.41l3-3,8.29,8.3a1,1,0,0,0,1.42,0L38,19.41l2,2V40Z\"/></symbol>\n    <symbol id=\"pos-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M26,37H25V33h4a1,1,0,0,0,0-2H25V29a1,1,0,0,0-2,0v2H22a4,4,0,0,0,0,8h1v4H19a1,1,0,0,0,0,2h4v2a1,1,0,0,0,2,0V45h1a4,4,0,0,0,0-8Zm-4,0a2,2,0,0,1,0-4h1v4Zm4,6H25V39h1a2,2,0,0,1,0,4Z\"/><path d=\"M46.5,22H1.5a1.5,1.5,0,0,0,0,3h45a1.5,1.5,0,0,0,0-3Z\"/><path d=\"M8.5,19A1.5,1.5,0,0,0,10,17.5v-14A.45.45,0,0,1,10.46,3H15V18a1,1,0,0,0,2,0V3H37.54a.45.45,0,0,1,.46.46v14a1.5,1.5,0,0,0,3,0v-14A3.46,3.46,0,0,0,37.54,0H10.46A3.46,3.46,0,0,0,7,3.46v14A1.5,1.5,0,0,0,8.5,19Z\"/><path d=\"M27.8,5A1.81,1.81,0,0,0,26,6.8v6.4A1.81,1.81,0,0,0,27.8,15h2.4A1.81,1.81,0,0,0,32,13.2V6.8A1.81,1.81,0,0,0,30.2,5ZM30,13H28V7h2Z\"/></symbol>\n    <symbol id=\"pos--high\" viewBox=\"0 0 48 48\"><path d=\"M43.5,14H35V8.5A4.5,4.5,0,0,0,30.5,4H24V1a1,1,0,0,0-1-1H12a1,1,0,0,0-1,1V4H4.5A4.49,4.49,0,0,0,0,8.5v34A5.5,5.5,0,0,0,5.5,48h25A4.5,4.5,0,0,0,35,43.5V42h8.5A4.5,4.5,0,0,0,48,37.5v-19A4.5,4.5,0,0,0,43.5,14ZM13,2h9v9H13ZM32,43.5A1.5,1.5,0,0,1,30.5,45H5.5A2.5,2.5,0,0,1,3,42.5V8.5A1.5,1.5,0,0,1,4.5,7H11v4H8a1,1,0,0,0,0,2H27.38a1,1,0,0,0,0-2H24V7h6.5A1.5,1.5,0,0,1,32,8.5v35ZM35,17h3V39H35ZM45,37.5A1.5,1.5,0,0,1,43.5,39H40V17h3.5A1.5,1.5,0,0,1,45,18.5Z\"/><path d=\"M27,32H24a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/><path d=\"M26,17H9a2,2,0,0,0-2,2v7a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V19A2,2,0,0,0,26,17Zm0,9H9V19H26Z\"/><path d=\"M27,38H24a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/><path d=\"M19,32H16a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/><path d=\"M11,38H8a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/><path d=\"M11,32H8a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/><path d=\"M19,38H16a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"power--high\" viewBox=\"0 0 48 48\"><path d=\"M22.5,1.5a1.5,1.5,0,0,1,3,0v17a1.5,1.5,0,0,1-3,0ZM14.33,7.29A1.5,1.5,0,0,1,15.68,10a18.5,18.5,0,1,0,16.65,0A1.5,1.5,0,0,1,33.68,7.3a21.5,21.5,0,1,1-19.35,0Z\"/></symbol>\n    <symbol id=\"qr-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M45.5,33h-10A2.5,2.5,0,0,0,33,35.5v10A2.5,2.5,0,0,0,35.5,48h10A2.5,2.5,0,0,0,48,45.5v-10A2.5,2.5,0,0,0,45.5,33ZM45,45H36V36h9Z\"/><path d=\"M40,43h1a2,2,0,0,0,2-2V40a2,2,0,0,0-2-2H40a2,2,0,0,0-2,2v1A2,2,0,0,0,40,43Zm0-3h1v1H40Z\"/><path d=\"M45.5,17h-4A2.5,2.5,0,0,0,39,19.5V22H35.5A2.5,2.5,0,0,0,33,24.5v4A2.5,2.5,0,0,0,35.5,31h10A2.5,2.5,0,0,0,48,28.5v-9A2.5,2.5,0,0,0,45.5,17ZM45,28H36V25h3.5A2.5,2.5,0,0,0,42,22.5V20h3Z\"/><path d=\"M28.5,6H26V2.5A2.5,2.5,0,0,0,23.5,0h-4A2.5,2.5,0,0,0,17,2.5v15A2.5,2.5,0,0,0,19.5,20h4A2.5,2.5,0,0,0,26,17.5V14h2.5A2.5,2.5,0,0,0,31,11.5v-3A2.5,2.5,0,0,0,28.5,6ZM28,11H25.5A2.5,2.5,0,0,0,23,13.5V17H20V3h3V6.5A2.5,2.5,0,0,0,25.5,9H28Z\"/><path d=\"M28.5,22h-4A2.5,2.5,0,0,0,22,24.5v4A2.5,2.5,0,0,0,24.5,31h4A2.5,2.5,0,0,0,31,28.5v-4A2.5,2.5,0,0,0,28.5,22ZM28,28H25V25h3Z\"/><path d=\"M40,10h1a2,2,0,0,0,2-2V7a2,2,0,0,0-2-2H40a2,2,0,0,0-2,2V8A2,2,0,0,0,40,10Zm0-3h1V8H40Z\"/><path d=\"M45.5,0h-10A2.5,2.5,0,0,0,33,2.5v10A2.5,2.5,0,0,0,35.5,15h10A2.5,2.5,0,0,0,48,12.5V2.5A2.5,2.5,0,0,0,45.5,0ZM45,12H36V3h9Z\"/><path d=\"M28.5,33h-4A2.5,2.5,0,0,0,22,35.5V39H19.5A2.5,2.5,0,0,0,17,41.5v4A2.5,2.5,0,0,0,19.5,48h4A2.5,2.5,0,0,0,26,45.5V42h2.5A2.5,2.5,0,0,0,31,39.5v-4A2.5,2.5,0,0,0,28.5,33ZM23,45H20V42h3Zm5-6H25V36h3Z\"/><path d=\"M2.5,31h15A2.5,2.5,0,0,0,20,28.5v-4A2.5,2.5,0,0,0,17.5,22H14V19.5A2.5,2.5,0,0,0,11.5,17h-3A2.5,2.5,0,0,0,6,19.5V22H2.5A2.5,2.5,0,0,0,0,24.5v4A2.5,2.5,0,0,0,2.5,31ZM3,25H6.5A2.5,2.5,0,0,0,9,22.5V20h2v2.5A2.5,2.5,0,0,0,13.5,25H17v3H3Z\"/><path d=\"M2.5,15h10A2.5,2.5,0,0,0,15,12.5V2.5A2.5,2.5,0,0,0,12.5,0H2.5A2.5,2.5,0,0,0,0,2.5v10A2.5,2.5,0,0,0,2.5,15ZM3,3h9v9H3Z\"/><path d=\"M7,43H8a2,2,0,0,0,2-2V40a2,2,0,0,0-2-2H7a2,2,0,0,0-2,2v1A2,2,0,0,0,7,43Zm0-3H8v1H7Z\"/><path d=\"M12.5,33H2.5A2.5,2.5,0,0,0,0,35.5v10A2.5,2.5,0,0,0,2.5,48h10A2.5,2.5,0,0,0,15,45.5v-10A2.5,2.5,0,0,0,12.5,33ZM12,45H3V36h9Z\"/><path d=\"M8,5H7A2,2,0,0,0,5,7V8a2,2,0,0,0,2,2H8a2,2,0,0,0,2-2V7A2,2,0,0,0,8,5ZM8,8H7V7H8Z\"/></symbol>\n    <symbol id=\"question--high\" viewBox=\"0 0 48 48\"><path d=\"M25.5,28a1.5,1.5,0,0,1-3,0V25A1.5,1.5,0,0,1,24,23.5a4,4,0,1,0-4-4,1.5,1.5,0,0,1-3,0,7,7,0,1,1,8.5,6.84ZM24,36a2,2,0,1,0-2-2A2,2,0,0,0,24,36ZM48,24A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"receipt--high\" viewBox=\"0 0 48 48\"><path d=\"M15,32V30H25v2Zm0-8V22H35v2Zm0-8V14H35v2ZM12,43.42,6.41,47.69A1.5,1.5,0,0,1,4,46.5V1.5A1.51,1.51,0,0,1,6.29.22L12,3.72,17.17.25a1.52,1.52,0,0,1,1.66,0L24,3.7,29.17.25a1.52,1.52,0,0,1,1.66,0L36,3.72,41.71.22A1.51,1.51,0,0,1,44,1.5v45a1.5,1.5,0,0,1-2.41,1.19L36,43.42,31,47.65a1.48,1.48,0,0,1-1.92,0l-5-4.2-5,4.2a1.48,1.48,0,0,1-1.92,0ZM7,4.18V43.45l4.09-3.14a1.49,1.49,0,0,1,1.87,0l5,4.2,5-4.2a1.48,1.48,0,0,1,1.92,0l5,4.2,5-4.2a1.49,1.49,0,0,1,1.87,0L41,43.45V4.18l-4.21,2.6a1.53,1.53,0,0,1-1.62,0L30,3.3,24.83,6.75a1.52,1.52,0,0,1-1.66,0L18,3.3,12.83,6.75a1.53,1.53,0,0,1-1.62,0Z\"/></symbol>\n    <symbol id=\"redo--high\" viewBox=\"0 0 48 48\"><path d=\"M38.4,18.77a1.5,1.5,0,0,0,2.12.08l7-6.5a1.5,1.5,0,0,0,0-2.2l-7-6.5a1.5,1.5,0,0,0-2,2.2l4.2,3.9H17.5a17.5,17.5,0,0,0,0,35h22a1.5,1.5,0,0,0,0-3h-22a14.5,14.5,0,0,1,0-29H42.68l-4.2,3.9A1.5,1.5,0,0,0,38.4,18.77Z\"/></symbol>\n    <symbol id=\"refresh--high\" viewBox=\"0 0 48 48\"><path d=\"M6,22.12,2.56,25.56A1.5,1.5,0,0,1,.44,23.44l6-6a1.49,1.49,0,0,1,2.12,0l6,6a1.5,1.5,0,0,1-2.12,2.12L9,22.12V24a14.86,14.86,0,0,0,1.18,5.84,15,15,0,0,0,8,8,15,15,0,0,0,11.68,0,15.13,15.13,0,0,0,4.77-3.21,1.49,1.49,0,0,1,2.12,0,1.51,1.51,0,0,1,0,2.12A18,18,0,0,1,6,24Zm33,2.76V24a14.86,14.86,0,0,0-1.18-5.84,15,15,0,0,0-8-8,15,15,0,0,0-11.68,0,15.13,15.13,0,0,0-4.77,3.21,1.49,1.49,0,0,1-2.12,0,1.51,1.51,0,0,1,0-2.12A18,18,0,0,1,42,24v.88l3.44-3.44a1.5,1.5,0,0,1,2.12,2.12l-6,6a1.49,1.49,0,0,1-2.12,0l-6-6a1.5,1.5,0,0,1,2.12-2.12Z\"/></symbol>\n    <symbol id=\"reload--high\" viewBox=\"0 0 48 48\"><path d=\"M42,24.14l3.4-3.66a1.5,1.5,0,0,1,2.2,2l-6.5,7a1.5,1.5,0,0,1-2.2,0l-6.5-7a1.5,1.5,0,1,1,2.2-2L39,25.22V24A18,18,0,1,0,28,40.59a18.33,18.33,0,0,0,5.72-3.86,1.49,1.49,0,0,1,2.12,0,1.51,1.51,0,0,1,0,2.12,21.21,21.21,0,0,1-6.68,4.5A21,21,0,1,1,42,24Z\"/></symbol>\n    <symbol id=\"reward--high\" viewBox=\"0 0 48 48\"><path d=\"M42,18A18,18,0,1,0,11.45,30.89L6.07,42.14,14.49,39a1,1,0,0,1,.82.06.8.8,0,0,1,.52.56l1.39,3.79L18.9,48,24,36.87,29.1,48l3.08-8.35c.12-.32.23-.44.42-.52a1.21,1.21,0,0,1,.9-.1l3.81,1.41,4.61,1.7L36.55,30.89A17.92,17.92,0,0,0,42,18ZM9,18A15,15,0,1,1,24,33,15,15,0,0,1,9,18Zm8.7,21a2.7,2.7,0,0,0-1.6-1.7,3,3,0,0,0-2.3-.1L10,38.56l3-6.32a17.9,17.9,0,0,0,9.22,3.67L19.1,42.76Zm20.3-.4-3.8-1.4a3,3,0,0,0-2.3.1A2.7,2.7,0,0,0,30.3,39l-1.4,3.8-3.14-6.85A17.9,17.9,0,0,0,35,32.24Z\"/><path d=\"M14.87,23.31l.91.4a.22.22,0,0,1,.2.2l.1.89a3,3,0,0,0,1.2,2.09,3,3,0,0,0,1.81.6,1.7,1.7,0,0,0,.7-.1l1-.2c.1,0,.2,0,.2.1l.7.79.2.1a3.78,3.78,0,0,0,2,.7,3.1,3.1,0,0,0,2-.7l.2-.1.7-.79a.37.37,0,0,1,.3-.1h.1l.9.2a1.7,1.7,0,0,0,.7.1,3.78,3.78,0,0,0,1.81-.5,3.14,3.14,0,0,0,1.3-2.19l.1-.89c0-.1.1-.2.2-.3l.81-.3a3.1,3.1,0,0,0,1.8-1.89,3,3,0,0,0-.3-2.59l-.5-.69v-.3l.5-.8a2.77,2.77,0,0,0,.3-2.48,3.18,3.18,0,0,0-1.7-1.89l-.91-.4a.22.22,0,0,1-.2-.2l-.1-.89a3,3,0,0,0-1.2-2.09,3,3,0,0,0-1.81-.6,1.7,1.7,0,0,0-.7.1l-1,.2c-.1,0-.2,0-.2-.1l-.5-.6A3.63,3.63,0,0,0,24,7h-.1a2.69,2.69,0,0,0-2.21,1.09l-.6.6a.37.37,0,0,1-.3.1h-.1l-.9-.2a1.7,1.7,0,0,0-.7-.1,2.8,2.8,0,0,0-1.81.6A3.13,3.13,0,0,0,16,11.38v.79c0,.1-.1.2-.2.3l-.81.3a3.07,3.07,0,0,0-1.8,1.89,2.73,2.73,0,0,0,.3,2.48l.5.8c0,.1.1.2,0,.3l-.5.69a2.75,2.75,0,0,0-.3,2.49A3.21,3.21,0,0,0,14.87,23.31Zm.73-8.64.89-.3a2.14,2.14,0,0,0,1.4-1.89l.1-.9a1.07,1.07,0,0,1,1.29-.89l.9.2a2.48,2.48,0,0,0,2.29-.7l.6-.69c.3-.3.5-.5.9-.5a1.07,1.07,0,0,1,.89.4l.6.69a2.48,2.48,0,0,0,2.29.7l.9-.2a1.07,1.07,0,0,1,1.3.9l.09.89a2.19,2.19,0,0,0,1.4,1.89l.9.3a.87.87,0,0,1,.59.6.76.76,0,0,1-.09.79l-.5.8a2.08,2.08,0,0,0,0,2.38l.5.8a3,3,0,0,1,.09.89.87.87,0,0,1-.59.6l-.9.3A2.14,2.14,0,0,0,30,23.62l-.09,1a1.07,1.07,0,0,1-1.3.9l-.9-.2a2.5,2.5,0,0,0-2.29.69l-.6.7a1.34,1.34,0,0,1-1.69,0l-.6-.6a2.49,2.49,0,0,0-2.29-.69l-.9.2a1.07,1.07,0,0,1-1.29-.9l-.1-1a2.18,2.18,0,0,0-1.4-1.89l-.89-.3a.9.9,0,0,1-.6-.6.74.74,0,0,1,.1-.79l.5-.8a2.08,2.08,0,0,0,0-2.38l-.5-.8a1.49,1.49,0,0,1-.2-.9A.91.91,0,0,1,15.6,14.67Z\"/></symbol>\n    <symbol id=\"roadsign--high\" viewBox=\"0 0 48 48\"><path d=\"M44.79,32.24l-5-8.5A1.49,1.49,0,0,0,38.5,23H26V20H39.5A3.5,3.5,0,0,0,43,16.5V3.5A3.5,3.5,0,0,0,39.5,0H9.5A1.49,1.49,0,0,0,8.21.74l-5,8.5a1.48,1.48,0,0,0,0,1.52l5,8.5A1.49,1.49,0,0,0,9.5,20H23v3H8.5A3.5,3.5,0,0,0,5,26.5v13A3.5,3.5,0,0,0,8.5,43H23v3.5a1.5,1.5,0,0,0,3,0V43H38.5a1.49,1.49,0,0,0,1.29-.74l5-8.5A1.48,1.48,0,0,0,44.79,32.24ZM6.24,10l4.12-7H39.5a.5.5,0,0,1,.5.5v13a.5.5,0,0,1-.5.5H10.36Zm31.4,30H8.5a.5.5,0,0,1-.5-.5v-13a.5.5,0,0,1,.5-.5H37.64l4.12,7Z\"/></symbol>\n    <symbol id=\"save--high\" viewBox=\"0 0 48 48\"><path d=\"M19.5,12H1.5A1.5,1.5,0,0,1,0,10.5v-4A3.5,3.5,0,0,1,3.5,3h14A3.5,3.5,0,0,1,21,6.5v4A1.5,1.5,0,0,1,19.5,12ZM18,9V6.5a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5V9ZM44.5,45H3.5A3.5,3.5,0,0,1,0,41.5v-31A1.5,1.5,0,0,1,1.5,9h43A3.5,3.5,0,0,1,48,12.5v29A3.5,3.5,0,0,1,44.5,45ZM3,12V41.5a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5v-29a.5.5,0,0,0-.5-.5ZM23,32.72V19a1,1,0,0,1,2,0V32.72l4.82-4.45a1,1,0,1,1,1.36,1.46l-6.5,6a1,1,0,0,1-1.36,0l-6.5-6a1,1,0,1,1,1.36-1.46Z\"/></symbol>\n    <symbol id=\"savings-account--high\" viewBox=\"0 0 48 48\"><path d=\"M25,29a5,5,0,1,0-5-5A5,5,0,0,0,25,29Zm0-8a3,3,0,1,1-3,3A3,3,0,0,1,25,21Z\"/><path d=\"M43.5,0H6.5A4.49,4.49,0,0,0,2,4.5V14H0v3H2V31H0v3H2v9.5A4.49,4.49,0,0,0,6.5,48h37A4.49,4.49,0,0,0,48,43.5V4.5A4.49,4.49,0,0,0,43.5,0ZM5,17H8V31H5Zm6-3V9H39V39H11V14ZM45,43.5A1.5,1.5,0,0,1,43.5,45H6.5A1.5,1.5,0,0,1,5,43.5V34H8v6.5A1.5,1.5,0,0,0,9.5,42h31A1.5,1.5,0,0,0,42,40.5V7.5A1.5,1.5,0,0,0,40.5,6H9.5A1.5,1.5,0,0,0,8,7.5V14H5V4.5A1.5,1.5,0,0,1,6.5,3h37A1.5,1.5,0,0,1,45,4.5Z\"/><path d=\"M25,36A12,12,0,1,0,13,24,12,12,0,0,0,25,36ZM17.26,17.66a.13.13,0,0,1,0,.05l1,1a1,1,0,0,0,1.42-1.42l-1-1-.05,0A10,10,0,0,1,24,14.05V16a1,1,0,0,0,2,0V14.05a10,10,0,0,1,5.34,2.21l-.05,0-1,1a1,1,0,0,0,1.42,1.42l1-1a.13.13,0,0,1,0-.05A10,10,0,0,1,35,23H33a1,1,0,0,0,0,2h2a10,10,0,0,1-2.21,5.34.13.13,0,0,1,0-.05l-1-1a1,1,0,0,0-1.42,1.42l1,1,.05,0A10,10,0,0,1,26,34V32a1,1,0,0,0-2,0v2a10,10,0,0,1-5.34-2.21l.05,0,1-1a1,1,0,0,0-1.42-1.42l-1,1a.13.13,0,0,1,0,.05A10,10,0,0,1,15.05,25H17a1,1,0,0,0,0-2H15.05A10,10,0,0,1,17.26,17.66Z\"/></symbol>\n    <symbol id=\"scale--high\" viewBox=\"0 0 48 48\"><path d=\"M46,45H25.5V20.82A6.5,6.5,0,0,0,30.32,16h6.32l-6,12.87v0a1,1,0,0,0-.05.16.5.5,0,0,0,0,.13s0,.08,0,.13a.88.88,0,0,0,0,.17v0a8.5,8.5,0,0,0,17,0v0a.88.88,0,0,0,0-.17s0-.09,0-.13a.5.5,0,0,0,0-.13,1,1,0,0,0-.05-.16v0l-7-15a.43.43,0,0,0,0-.07l-.06-.1a.25.25,0,0,0,0-.07l-.06-.08a.6.6,0,0,0-.08-.08.12.12,0,0,0,0-.05L40,13.34l-.08-.06-.07,0-.1-.06-.07,0h0l-.06,0-.12,0a.45.45,0,0,0-.11,0h0l-.13,0H30.32A6.5,6.5,0,0,0,25.5,8.18V1.5a1.5,1.5,0,0,0-3,0V8.18A6.53,6.53,0,0,0,17.68,13H8.86l-.13,0H8.68a.45.45,0,0,0-.11,0l-.12,0-.06,0h0l-.07,0-.1.06-.07,0-.08.06L8,13.42a.12.12,0,0,0,0,.05l-.08.08-.06.08a.25.25,0,0,0,0,.07l-.06.1a.43.43,0,0,0,0,.07l-7,15v0a1,1,0,0,0-.05.16.5.5,0,0,0,0,.13s0,.08,0,.13a.88.88,0,0,0,0,.17v0a8.5,8.5,0,0,0,17,0v0a.88.88,0,0,0,0-.17s0-.09,0-.13a.5.5,0,0,0,0-.13,1,1,0,0,0-.05-.16v0L11.36,16h6.32a6.5,6.5,0,0,0,4.82,4.82V45H2a1.5,1.5,0,0,0,0,3H46a1.5,1.5,0,0,0,0-3ZM43.64,28H34.36L39,18.05ZM39,35a5.49,5.49,0,0,1-5.29-4H44.29A5.49,5.49,0,0,1,39,35ZM9,18.05l4.64,10H4.36ZM9,35a5.49,5.49,0,0,1-5.29-4H14.29A5.49,5.49,0,0,1,9,35ZM20.5,14.5A3.5,3.5,0,1,1,24,18,3.5,3.5,0,0,1,20.5,14.5Z\"/></symbol>\n    <symbol id=\"scan-card--high\" viewBox=\"0 0 48 48\"><rect width=\"7\" height=\"2\" x=\"15\" y=\"19\"/><path d=\"M9,15.5v17A2.5,2.5,0,0,0,11.5,35h25A2.5,2.5,0,0,0,39,32.5v-17A2.5,2.5,0,0,0,36.5,13h-25A2.5,2.5,0,0,0,9,15.5ZM12,32V29H36v3ZM36,16V27H12V16Z\"/><path d=\"M45.5,0h-8a1.5,1.5,0,0,0,0,3H45v7.5a1.5,1.5,0,0,0,3,0v-8A2.5,2.5,0,0,0,45.5,0Z\"/><path d=\"M10.5,45H3V37.5a1.5,1.5,0,0,0-3,0v8A2.5,2.5,0,0,0,2.5,48h8a1.5,1.5,0,0,0,0-3Z\"/><path d=\"M1.5,12A1.5,1.5,0,0,0,3,10.5V3h7.5a1.5,1.5,0,0,0,0-3h-8A2.5,2.5,0,0,0,0,2.5v8A1.5,1.5,0,0,0,1.5,12Z\"/><path d=\"M46.5,36A1.5,1.5,0,0,0,45,37.5V45H37.5a1.5,1.5,0,0,0,0,3h8A2.5,2.5,0,0,0,48,45.5v-8A1.5,1.5,0,0,0,46.5,36Z\"/></symbol>\n    <symbol id=\"scan-qr-emvco--high\" viewBox=\"0 0 48 48\"><path d=\"M47.77,47h.78v.19h-.29V48h-.2v-.77h-.29Zm1.67,0-.22.52,0,.09,0-.09L48.93,47H48.7v1h.2v-.55l.23.55h.11l.23-.55V48h.2V47Zm-3.11-27H44.49V3.73c0-.57-.1-1.89-1.06-1.89H26.3V0H43.43c1.34,0,2.9,1,2.9,3.73ZM.18,3.73c0-.57.1-1.89,1.06-1.89H18.37V0H1.24C-.1,0-1.67,1-1.67,3.73V20.05H.18ZM46.33,44.27V28H44.49V44.27c0,.57-.1,1.89-1.06,1.89H26.3V48H43.43C44.77,48,46.33,47,46.33,44.27ZM1.24,48H18.37V46.16H1.24c-1,0-1.06-1.32-1.06-1.89V28H-1.67V44.27C-1.67,47-.1,48,1.24,48Zm22-40.52H21.41V23.09H5.83v1.84H23.26Zm3.1,17.45H38.78V23.09H26.36ZM21.41,40.52h1.85V28H21.41ZM7.66,18.21h8.88V9.33H7.66ZM5.81,20.06V7.49H18.38V20.06Zm22.32-1.85H37V9.33H28.13Zm-1.85,1.85V7.49H38.85V20.06ZM7.66,38.68h8.88V29.8H7.66ZM5.81,40.53V28H18.38V40.53Zm20.47-4h1.85V28H26.28ZM38.85,28H37V38.68H26.31v1.85H38.85Zm-7.21,5.82h1.85V28H31.64Z\"/></symbol>\n    <symbol id=\"search--high\" viewBox=\"0 0 48 48\"><path d=\"M47.56,45.44a1.5,1.5,0,0,1-2.12,2.12l-15-15a1.5,1.5,0,1,1,2.12-2.12ZM38,19A19,19,0,1,1,19,0,19,19,0,0,1,38,19Zm-3,0A16,16,0,1,0,19,35,16,16,0,0,0,35,19Z\"/></symbol>\n    <symbol id=\"security-lock--high\" viewBox=\"0 0 48 48\"><path d=\"M7.56,45H40.44a.53.53,0,0,0,.56-.5v-25a.53.53,0,0,0-.56-.5H7.56a.53.53,0,0,0-.56.5v25A.53.53,0,0,0,7.56,45ZM21.7,32.28a4,4,0,1,1,4.6,0l1.64,4.37A1,1,0,0,1,27,38H21a1,1,0,0,1-.94-1.35ZM16,16H31V10.5a7.5,7.5,0,0,0-15,0Zm-3,0V10.5a10.5,10.5,0,0,1,21,0V16h6.44A3.53,3.53,0,0,1,44,19.5v25A3.53,3.53,0,0,1,40.44,48H7.56A3.53,3.53,0,0,1,4,44.5v-25A3.53,3.53,0,0,1,7.56,16Z\"/></symbol>\n    <symbol id=\"security-protection--high\" viewBox=\"0 0 48 48\"><path d=\"M31.29,19.29a1,1,0,0,1,1.42,1.42l-10,10a1,1,0,0,1-1.42,0l-5-5a1,1,0,0,1,1.42-1.42L22,28.59ZM7.48,10.89a.51.51,0,0,0-.48.5V28a17,17,0,0,0,34,0V11.39a.51.51,0,0,0-.48-.5A30.65,30.65,0,0,1,24,3.1,30.65,30.65,0,0,1,7.48,10.89ZM22.44.44A1.5,1.5,0,0,1,23.5,0h1a1.5,1.5,0,0,1,1.06.44A27.7,27.7,0,0,0,40.84,7.91,3.5,3.5,0,0,1,44,11.39V28A20,20,0,0,1,4,28V11.39A3.5,3.5,0,0,1,7.16,7.91,27.7,27.7,0,0,0,22.44.44Z\"/></symbol>\n    <symbol id=\"security-unlock--high\" viewBox=\"0 0 48 48\"><path d=\"M17.53,31.53v.95a3,3,0,0,0,3,3h5.9a3,3,0,0,0,3-3v-.95a2.93,2.93,0,0,0-2.94-2.91h-6a2.9,2.9,0,0,0-3,2.83Zm8.9-1a1,1,0,0,1,1,1v1a1,1,0,0,1-1,1h-5.9a1,1,0,0,1-1-1v-1a1,1,0,0,1,1-1ZM7.56,45H40.44a.53.53,0,0,0,.56-.5v-25a.53.53,0,0,0-.56-.5H7.56a.53.53,0,0,0-.56.5v25A.53.53,0,0,0,7.56,45ZM13,16V10.5a10.5,10.5,0,0,1,21,0,1.5,1.5,0,0,1-3,0,7.5,7.5,0,0,0-15,0V16H40.44A3.53,3.53,0,0,1,44,19.5v25A3.53,3.53,0,0,1,40.44,48H7.56A3.53,3.53,0,0,1,4,44.5v-25A3.53,3.53,0,0,1,7.56,16Z\"/></symbol>\n    <symbol id=\"security--high\" viewBox=\"0 0 48 48\"><path d=\"M25,19a1,1,0,0,0-2,0v2h2Zm-4,0a3,3,0,0,1,6,0v3a1,1,0,0,1-1,1H22a1,1,0,0,1-1-1Zm7,10V23H20v6Zm-9,2a1,1,0,0,1-1-1V22a1,1,0,0,1,1-1H29a1,1,0,0,1,1,1v8a1,1,0,0,1-1,1ZM7.48,10.89a.51.51,0,0,0-.48.5V28a17,17,0,0,0,34,0V11.39a.51.51,0,0,0-.48-.5A30.65,30.65,0,0,1,24,3.1,30.65,30.65,0,0,1,7.48,10.89ZM22.44.44A1.5,1.5,0,0,1,23.5,0h1a1.5,1.5,0,0,1,1.06.44A27.7,27.7,0,0,0,40.84,7.91,3.5,3.5,0,0,1,44,11.39V28A20,20,0,0,1,4,28V11.39A3.5,3.5,0,0,1,7.16,7.91,27.7,27.7,0,0,0,22.44.44Z\"/></symbol>\n    <symbol id=\"settings--high\" viewBox=\"0 0 48 48\"><path d=\"M10.56,5.11a2.52,2.52,0,0,1,1.51-2.82L17.16.19a2.53,2.53,0,0,1,3.07.93l1,1.49A3.39,3.39,0,0,0,24,4.12a3.39,3.39,0,0,0,2.82-1.5l1-1.48A2.54,2.54,0,0,1,30.92.21L36,2.33a2.53,2.53,0,0,1,1.51,2.83l-.35,1.75a3.38,3.38,0,0,0,4,4l1.76-.34a2.52,2.52,0,0,1,2.82,1.51l2.1,5.09a2.52,2.52,0,0,1-.94,3.07l-1.48,1a3.39,3.39,0,0,0,0,5.63l1.48,1a2.52,2.52,0,0,1,.92,3.07L45.67,36a2.53,2.53,0,0,1-2.83,1.51l-1.75-.35a3.38,3.38,0,0,0-4,4l.34,1.76a2.52,2.52,0,0,1-1.51,2.82l-5.09,2.1a2.52,2.52,0,0,1-3.07-.94l-1-1.48a3.39,3.39,0,0,0-5.63,0l-1,1.48a2.52,2.52,0,0,1-3.07.92L12,45.67a2.53,2.53,0,0,1-1.51-2.83l.35-1.75a3.38,3.38,0,0,0-4-4l-1.76.34a2.52,2.52,0,0,1-2.82-1.51L.19,30.84a2.53,2.53,0,0,1,.93-3.07l1.49-1A3.39,3.39,0,0,0,4.12,24a3.39,3.39,0,0,0-1.5-2.82l-1.48-1a2.52,2.52,0,0,1-.92-3.07L2.33,12a2.52,2.52,0,0,1,2.83-1.51l1.75.35a3.38,3.38,0,0,0,4-4Zm3-.2.27,1.38a6.39,6.39,0,0,1-7.51,7.49L5,13.51,3.13,17.88l1.17.78A6.41,6.41,0,0,1,7.12,24a6.38,6.38,0,0,1-2.84,5.3l-1.17.78,1.81,4.38,1.37-.27a6.39,6.39,0,0,1,7.49,7.51l-.27,1.38,4.37,1.82.78-1.17a6.39,6.39,0,0,1,10.61,0l.78,1.17,4.38-1.81-.27-1.37a6.39,6.39,0,0,1,7.51-7.49l1.38.27,1.82-4.37-1.17-.78a6.39,6.39,0,0,1,0-10.61L44.89,18l-1.81-4.38-1.37.27a6.39,6.39,0,0,1-7.49-7.51L34.49,5,30.12,3.13,29.34,4.3A6.41,6.41,0,0,1,24,7.12a6.38,6.38,0,0,1-5.3-2.84L18,3.11ZM35,24A11,11,0,1,1,24,13,11,11,0,0,1,35,24Zm-2,0a9,9,0,1,0-9,9A9,9,0,0,0,33,24Z\"/></symbol>\n    <symbol id=\"share--high\" viewBox=\"0 0 48 48\"><path d=\"M7.5,16a1.5,1.5,0,0,1,0,3h-4a.5.5,0,0,0-.5.5v25a.5.5,0,0,0,.5.5h41a.5.5,0,0,0,.5-.5v-25a.5.5,0,0,0-.5-.5h-4a1.5,1.5,0,0,1,0-3h4A3.5,3.5,0,0,1,48,19.5v25A3.5,3.5,0,0,1,44.5,48H3.5A3.5,3.5,0,0,1,0,44.5v-25A3.5,3.5,0,0,1,3.5,16Zm18-10.74V31.5a1.5,1.5,0,0,1-3,0V5.25l-6.91,7.28a1.5,1.5,0,0,1-2.18-2.06l9.5-10a1.48,1.48,0,0,1,2.17,0l9.51,10a1.5,1.5,0,1,1-2.18,2.06Z\"/></symbol>\n    <symbol id=\"shipping--high\" viewBox=\"0 0 48 48\"><path d=\"M47.11,23.1,42,15.54a4,4,0,0,0-3.31-1.74H32V11.58A3.69,3.69,0,0,0,28.43,7.8H3.57A3.69,3.69,0,0,0,0,11.58V31.29A3.51,3.51,0,0,0,3.51,34.8H5A6,6,0,0,0,17,34.8H32A6,6,0,0,0,44,34.8h.53A3.5,3.5,0,0,0,48,31.3V26A5.13,5.13,0,0,0,47.11,23.1Zm-8.46-6.3a1,1,0,0,1,.83.42l3.79,5.58H32v-6ZM11,37.2a3,3,0,1,1,3-3A3,3,0,0,1,11,37.2Zm5.5-5.4a6,6,0,0,0-11,0h-2A.51.51,0,0,1,3,31.29V11.58a.71.71,0,0,1,.57-.78H28.43a.71.71,0,0,1,.57.78V13.8h0v18ZM38,37.2a3,3,0,1,1,3-3A3,3,0,0,1,38,37.2Zm7-5.9a.5.5,0,0,1-.5.5h-1a6,6,0,0,0-11,0H32v-7H44.63A2.09,2.09,0,0,1,45,26Z\"/></symbol>\n    <symbol id=\"sign-in--high\" viewBox=\"0 0 48 48\"><path d=\"M33.5,3a1.5,1.5,0,0,1,0-3h11A3.5,3.5,0,0,1,48,3.5v41A3.5,3.5,0,0,1,44.5,48h-11a1.5,1.5,0,0,1,0-3h11a.5.5,0,0,0,.5-.5V3.5a.5.5,0,0,0-.5-.5ZM27.74,25.5H1.5a1.5,1.5,0,0,1,0-3H27.75l-7.28-6.91a1.5,1.5,0,0,1,2.06-2.18l10,9.5a1.48,1.48,0,0,1,0,2.17l-10,9.51a1.5,1.5,0,1,1-2.06-2.18Z\"/></symbol>\n    <symbol id=\"sign-out--high\" viewBox=\"0 0 48 48\"><path d=\"M14.5,45a1.5,1.5,0,0,1,0,3H3.5A3.5,3.5,0,0,1,0,44.5V3.5A3.5,3.5,0,0,1,3.5,0h11a1.5,1.5,0,0,1,0,3H3.5a.5.5,0,0,0-.5.5v41a.5.5,0,0,0,.5.5ZM42.74,25.5H16.5a1.5,1.5,0,0,1,0-3H42.75l-7.28-6.91a1.5,1.5,0,0,1,2.06-2.18l10,9.5a1.48,1.48,0,0,1,0,2.17l-10,9.51a1.5,1.5,0,1,1-2.06-2.18Z\"/></symbol>\n    <symbol id=\"signature-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M1.29,31.21a1,1,0,0,1,0-1.41,1,1,0,0,1,1.42,0l5,5a1,1,0,0,1-1.42,1.41Zm5-1.41a1,1,0,0,1,1.42,0,1,1,0,0,1,0,1.41l-5,5A1,1,0,0,1,1.29,34.8ZM26,12.61A7.3,7.3,0,0,0,27.06,9.4a1.89,1.89,0,0,0-.93-1.83c-.92-.32-2.29,1.07-3.05,3.31a48.27,48.27,0,0,0-2.31,10.58A81.17,81.17,0,0,0,26,12.61ZM37.87,24.38h0Zm-.81,2.86a7.68,7.68,0,0,0,.62-2.45,2.33,2.33,0,0,0,0-.39c-.36.12-.64.71-.71,1.91a6.86,6.86,0,0,0,0,1.11Zm-16.52-.32c.05,2.09.39,3.46,1.18,4.46a5.81,5.81,0,0,0,3.15,1.83,10.81,10.81,0,0,0,9.78-2.65A10.85,10.85,0,0,1,34,26.14c.17-2.95,1.68-5.09,4.34-4.73,1.76.24,2.46,1.7,2.38,3.51a10.36,10.36,0,0,1-.88,3.53,12.41,12.41,0,0,1-1.46,2.49c1.71,1.74,4.6,2.18,7.78,1.36a1.5,1.5,0,0,1,.76,2.9c-4.09,1.06-8,.47-10.59-2.08a13.73,13.73,0,0,1-12.17,3,8.64,8.64,0,0,1-4.76-2.87,7.67,7.67,0,0,1-1.45-3.06,72.6,72.6,0,0,1-5.38,5.68,1.5,1.5,0,1,1-2.06-2.18,72,72,0,0,0,7.06-7.77,50.84,50.84,0,0,1,2.71-16c1.24-3.62,3.81-6.24,6.88-5.18a4.8,4.8,0,0,1,2.94,4.73A9.89,9.89,0,0,1,28.66,14,84.31,84.31,0,0,1,20.54,26.92ZM1.5,43.51a1.5,1.5,0,0,1,0-3h45a1.5,1.5,0,0,1,0,3Z\"/></symbol>\n    <symbol id=\"signature--high\" viewBox=\"0 0 48 48\"><path d=\"M31.76,6.67l1.41-1.41,9,9-1.41,1.41Zm-3,3,1.41-1.41,9,9-1.41,1.41Zm-27,27,1.41-1.41,9,9-1.41,1.41ZM1.5,47.5a1.5,1.5,0,0,1,0-3h45a1.5,1.5,0,0,1,0,3ZM.44,36,34.89,1.52a3.5,3.5,0,0,1,4.94,0L46,7.67a3.5,3.5,0,0,1,0,4.94L11.53,47.06a1.53,1.53,0,0,1-1.06.44h-9A1.5,1.5,0,0,1,0,46V37A1.53,1.53,0,0,1,.44,36ZM3,37.66V44.5H9.84l34-34a.5.5,0,0,0,0-.7L37.71,3.64a.5.5,0,0,0-.7,0Z\"/></symbol>\n    <symbol id=\"stack-exchange--high\" viewBox=\"0 0 48 48\"><path d=\"M3,36H9a3,3,0,0,1,3,3v6a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V39A3,3,0,0,1,3,36ZM23.34,7.5l2.07,1.89a1.5,1.5,0,0,1-2,2.22l-4.95-4.5a1.49,1.49,0,0,1,0-2.22l5-4.5A1.48,1.48,0,0,1,25.57.5a1.48,1.48,0,0,1-.11,2.11L23.37,4.5h5.17a19.5,19.5,0,0,1,0,39H19.46a1.5,1.5,0,0,1,0-3h9.08a16.5,16.5,0,0,0,0-33ZM3,39v6H9V39ZM3,18H9a3,3,0,0,1,3,3v6a3,3,0,0,1-3,3H3a3,3,0,0,1-3-3V21A3,3,0,0,1,3,18Zm0,3v6H9V21ZM3,0H9a3,3,0,0,1,3,3V9a3,3,0,0,1-3,3H3A3,3,0,0,1,0,9V3A3,3,0,0,1,3,0ZM3,3V9H9V3Z\"/></symbol>\n    <symbol id=\"statistics--high\" viewBox=\"0 0 48 48\"><path d=\"M38.5,26.5h-17V9.5A1.5,1.5,0,0,0,20,8,20,20,0,1,0,40,28,1.5,1.5,0,0,0,38.5,26.5ZM20,45a17,17,0,0,1-1.5-33.93V28A1.5,1.5,0,0,0,20,29.5H36.93A17,17,0,0,1,20,45Z\"/><path d=\"M28,0a1.5,1.5,0,0,0-1.5,1.5V20A1.5,1.5,0,0,0,28,21.5H46.5A1.5,1.5,0,0,0,48,20,20,20,0,0,0,28,0Zm1.5,9.91,5.43-5.43A17,17,0,0,1,39.28,7.3L29.5,17.09ZM40.7,8.72a17,17,0,0,1,2.82,4.35L38.09,18.5H30.91Zm-7.83-5L29.5,7.09v-4A17.17,17.17,0,0,1,32.87,3.72Zm8,14.78,3.37-3.37a17.17,17.17,0,0,1,.65,3.37Z\"/></symbol>\n    <symbol id=\"subtract-alt--high\" viewBox=\"0 0 48 48\"><path d=\"M16,25a1,1,0,0,1,0-2H32a1,1,0,0,1,0,2Zm8,20A21,21,0,1,0,3,24,21,21,0,0,0,24,45ZM24,0A24,24,0,1,1,0,24,24,24,0,0,1,24,0Z\"/></symbol>\n    <symbol id=\"subtract--high\" viewBox=\"0 0 48 48\"><path d=\"M41.5,22.5H6.5a1.5,1.5,0,0,0,0,3h35a1.5,1.5,0,0,0,0-3Z\"/></symbol>\n    <symbol id=\"success--high\" viewBox=\"0 0 48 48\"><path d=\"M20,29.6,34.29,15.29a1,1,0,0,1,1.42,1.42L20,32.43l-7.73-7.72a1,1,0,0,1,1.42-1.42ZM48,24A24,24,0,1,1,24,0,24,24,0,0,1,48,24Zm-3,0A21,21,0,1,0,24,45,21,21,0,0,0,45,24Z\"/></symbol>\n    <symbol id=\"suppot-ticket--high\" viewBox=\"0 0 48 48\"><path d=\"M26.7,17.29a1,1,0,0,0-1.41,0,1,1,0,0,0,0,1.42l4,4a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.42Z\"/><path d=\"M47.1,19.11l-5.46-5.45a1.49,1.49,0,0,0-2.12,0,3.5,3.5,0,0,1-5-4.95h0a1.52,1.52,0,0,0,0-2.13L28.88.9A3,3,0,0,0,24.74.77l-.06.06L.88,24.62a3,3,0,0,0,0,4.29l5.68,5.68a1.51,1.51,0,0,0,2.12,0,3.5,3.5,0,1,1,5,4.95,1.51,1.51,0,0,0,0,2.12h0l5.45,5.45a3,3,0,0,0,4.29,0L47.21,23.28A3,3,0,0,0,47.1,19.11Zm-9.27,9.3L34.7,25.29a1,1,0,0,0-1.41,0,1,1,0,0,0,0,1.42l3.12,3.12Q21.25,45,21.21,45l-4.52-4.52a6.5,6.5,0,0,0-8.94-8.94C4.59,28.36,3,26.75,3,26.74L18.17,11.59l3.12,3.12a1,1,0,0,0,1.41,0,1,1,0,0,0,0-1.42l-3.11-3.12C24.37,5.39,26.77,3,26.76,3l4.75,4.75a6.49,6.49,0,0,0,8.94,8.94c3,3,4.55,4.53,4.57,4.52Z\"/></symbol>\n    <symbol id=\"table--high\" viewBox=\"0 0 48 48\"><path d=\"M41,28H25V19a1,1,0,0,0-2,0v9H8a1,1,0,0,0,0,2H23v9a1,1,0,0,0,2,0V30H41a1,1,0,0,0,0-2Z\"/><path d=\"M44.5,0H3.5A3.5,3.5,0,0,0,0,3.5v41A3.5,3.5,0,0,0,3.5,48h41A3.5,3.5,0,0,0,48,44.5V3.5A3.5,3.5,0,0,0,44.5,0ZM3.5,3h41a.5.5,0,0,1,.5.5V9H3V3.5A.5.5,0,0,1,3.5,3Zm41,42H3.5a.5.5,0,0,1-.5-.5V12H45V44.5A.5.5,0,0,1,44.5,45Z\"/></symbol>\n    <symbol id=\"time--high\" viewBox=\"0 0 48 48\"><path d=\"M24,0A24,24,0,1,0,48,24,24,24,0,0,0,24,0ZM39.52,38.11l-2.79-2.8a1,1,0,1,0-1.42,1.42l2.8,2.79A20.92,20.92,0,0,1,25,45V41a1,1,0,0,0-2,0v4A20.92,20.92,0,0,1,9.89,39.52l2.8-2.79a1,1,0,1,0-1.42-1.42l-2.79,2.8A20.92,20.92,0,0,1,3.05,25H7a1,1,0,0,0,0-2H3.05A20.92,20.92,0,0,1,8.48,9.89l2.79,2.8a1,1,0,1,0,1.42-1.42L9.89,8.48A20.92,20.92,0,0,1,23,3.05V7a1,1,0,0,0,2,0V3.05A20.92,20.92,0,0,1,38.11,8.48l-2.8,2.79a1,1,0,1,0,1.42,1.42l2.79-2.8A20.92,20.92,0,0,1,45,23H41a1,1,0,0,0,0,2h4A20.92,20.92,0,0,1,39.52,38.11Z\"/><path d=\"M36,23H25V13a1,1,0,0,0-2,0V24a1,1,0,0,0,1,1H36a1,1,0,0,0,0-2Z\"/></symbol>\n    <symbol id=\"to-top--high\" viewBox=\"0 0 48 48\"><path d=\"M44,0H4A4,4,0,0,0,0,4V48H3V3H45V48h3V4A4,4,0,0,0,44,0Z\"/><path d=\"M25,38V16.28l4.82,4.45a1,1,0,1,0,1.36-1.46l-6.5-6a1,1,0,0,0-1.36,0l-6.5,6a1,1,0,0,0,1.36,1.46L23,16.28V38Z\"/></symbol>\n    <symbol id=\"token--high\" viewBox=\"0 0 48 48\"><path d=\"M32,18,26.15,32H22.32L19.43,20.83a1.51,1.51,0,0,0-.86-1.23A14.93,14.93,0,0,0,15,18.41l.09-.41h6.16a1.69,1.69,0,0,1,1.67,1.43l1.52,8.1L28.21,18Zm8.56-1A17.88,17.88,0,0,1,42,24a1,1,0,0,1-2,0,16,16,0,0,0-1.26-6.22A1,1,0,0,1,40.58,17Zm-.53,12.7a1,1,0,0,1,.53,1.3,18,18,0,0,1-29.32,5.73,1,1,0,0,1,1.41-1.41,16,16,0,0,0,26.07-5.09A1,1,0,0,1,40.05,29.7ZM8,24a16,16,0,0,0,1.26,6.22,1,1,0,0,1-.1,1A1,1,0,0,1,7.42,31,18,18,0,0,1,36.73,11.28a1,1,0,0,1-1.41,1.41A16,16,0,0,0,8,24ZM24,45A21,21,0,1,0,3,24,21,21,0,0,0,24,45ZM24,0A24,24,0,1,1,0,24,24,24,0,0,1,24,0Z\"/></symbol>\n    <symbol id=\"topic--high\" viewBox=\"0 0 48 48\"><path d=\"M43,8.86,35.24,1a3.46,3.46,0,0,0-2.48-1H7.5A3.5,3.5,0,0,0,4,3.5v41A3.5,3.5,0,0,0,7.5,48h33A3.5,3.5,0,0,0,44,44.5V11.32A3.48,3.48,0,0,0,43,8.86Zm-8-3.8L38.9,9H35ZM40.5,45H7.5a.5.5,0,0,1-.5-.5V3.5A.5.5,0,0,1,7.5,3H32v7.5A1.5,1.5,0,0,0,33.5,12H41V44.5A.5.5,0,0,1,40.5,45Z\"/><path d=\"M31,20H17a1,1,0,0,0-1,1v4a1,1,0,0,0,1,1h4v9a1,1,0,0,0,1,1h4a1,1,0,0,0,1-1V26h4a1,1,0,0,0,1-1V21A1,1,0,0,0,31,20Zm-1,4H26a1,1,0,0,0-1,1v9H23V25a1,1,0,0,0-1-1H18V22H30Z\"/></symbol>\n    <symbol id=\"transactions-new--high\" viewBox=\"0 0 48 48\"><path d=\"M42,5.12V43.5A4.49,4.49,0,0,1,37.5,48H4.5A4.49,4.49,0,0,1,0,43.5v-33A4.49,4.49,0,0,1,4.5,6H26.1a1.5,1.5,0,0,1,0,3H4.5A1.5,1.5,0,0,0,3,10.5v33A1.5,1.5,0,0,0,4.5,45h33A1.5,1.5,0,0,0,39,43.5V5.12L35.56,8.56a1.5,1.5,0,0,1-2.12-2.12l6-6a1.49,1.49,0,0,1,2.12,0l6,6a1.5,1.5,0,0,1-2.12,2.12ZM20,26V22H19a2,2,0,0,0,0,4Zm2,2v4h1a2,2,0,0,0,0-4Zm0-8h4a1,1,0,0,1,0,2H22v4h1a4,4,0,0,1,0,8H22v2a1,1,0,0,1-2,0V34H16a1,1,0,0,1,0-2h4V28H19a4,4,0,0,1,0-8h1V18a1,1,0,0,1,2,0Z\"/></symbol>\n    <symbol id=\"transactions--high\" viewBox=\"0 0 48 48\"><path d=\"M42.58,10,34.49,2.61a1.5,1.5,0,0,1,2-2.22l11,10a1.51,1.51,0,0,1,0,2.22l-11,10a1.5,1.5,0,0,1-2-2.22L42.66,13H1.5a1.5,1.5,0,0,1,0-3ZM5.34,35H46.5a1.5,1.5,0,0,1,0,3H5.42l8.09,7.39a1.5,1.5,0,0,1-2,2.22l-11-10a1.51,1.51,0,0,1,0-2.22l11-10a1.5,1.5,0,1,1,2,2.22Z\"/></symbol>\n    <symbol id=\"travel-notifications--high\" viewBox=\"0 0 48 48\"><path d=\"M24,34.5a.94.94,0,0,1-1-1v-1a1,1,0,0,1,2,0v1A.94.94,0,0,1,24,34.5Zm0-5a.94.94,0,0,1-1-1v-7a1,1,0,0,1,2,0v7A.94.94,0,0,1,24,29.5ZM45,41a1.54,1.54,0,0,1-1.5,1.5H40v-30h3.5A1.54,1.54,0,0,1,45,14ZM3,41V14a1.54,1.54,0,0,1,1.5-1.5H8v30H4.5A1.54,1.54,0,0,1,3,41Zm9,1.5H10v-30h2Zm7-30H34v30H14v-30Zm0-7H29v4H19Zm19,7v30H36v-30Zm5.5-3H32v-4a3,3,0,0,0-3-3H19a3,3,0,0,0-3,3v4H4.5A4.48,4.48,0,0,0,0,14V41a4.48,4.48,0,0,0,4.5,4.5h39A4.48,4.48,0,0,0,48,41V14A4.48,4.48,0,0,0,43.5,9.5Z\"/></symbol>\n    <symbol id=\"undo--high\" viewBox=\"0 0 48 48\"><path d=\"M8.5,41.75a1.5,1.5,0,0,0,0,3h22a17.5,17.5,0,0,0,0-35H2.5a1.5,1.5,0,0,0,0,3h28a14.5,14.5,0,0,1,0,29ZM3.7,11.25l5.82-5.4a1.5,1.5,0,0,0-2-2.2l-7,6.5a1.5,1.5,0,0,0,0,2.2l7,6.5a1.5,1.5,0,1,0,2-2.2Z\"/></symbol>\n    <symbol id=\"view-grid--high\" viewBox=\"0 0 48 48\"><path d=\"M44.5,48h-14A3.5,3.5,0,0,1,27,44.5v-14A3.5,3.5,0,0,1,30.5,27h14A3.5,3.5,0,0,1,48,30.5v14A3.5,3.5,0,0,1,44.5,48Zm0-3a.5.5,0,0,0,.5-.5v-14a.5.5,0,0,0-.5-.5h-14a.5.5,0,0,0-.5.5v14a.5.5,0,0,0,.5.5Zm-27,3H3.5A3.5,3.5,0,0,1,0,44.5v-14A3.5,3.5,0,0,1,3.5,27h14A3.5,3.5,0,0,1,21,30.5v14A3.5,3.5,0,0,1,17.5,48Zm0-3a.5.5,0,0,0,.5-.5v-14a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5v14a.5.5,0,0,0,.5.5Zm27-24h-14A3.5,3.5,0,0,1,27,17.5V3.5A3.5,3.5,0,0,1,30.5,0h14A3.5,3.5,0,0,1,48,3.5v14A3.5,3.5,0,0,1,44.5,21Zm0-3a.5.5,0,0,0,.5-.5V3.5a.5.5,0,0,0-.5-.5h-14a.5.5,0,0,0-.5.5v14a.5.5,0,0,0,.5.5Zm-27,3H3.5A3.5,3.5,0,0,1,0,17.5V3.5A3.5,3.5,0,0,1,3.5,0h14A3.5,3.5,0,0,1,21,3.5v14A3.5,3.5,0,0,1,17.5,21Zm0-3a.5.5,0,0,0,.5-.5V3.5a.5.5,0,0,0-.5-.5H3.5a.5.5,0,0,0-.5.5v14a.5.5,0,0,0,.5.5Z\"/></symbol>\n    <symbol id=\"view-list--high\" viewBox=\"0 0 48 48\"><path d=\"M46.5,39.5a1.5,1.5,0,0,1,0,3h-28a1.5,1.5,0,0,1,0-3Zm-37,8h-6A3.5,3.5,0,0,1,0,44V38a3.5,3.5,0,0,1,3.5-3.5h6A3.5,3.5,0,0,1,13,38v6A3.5,3.5,0,0,1,9.5,47.5Zm0-3A.5.5,0,0,0,10,44V38a.5.5,0,0,0-.5-.5h-6A.5.5,0,0,0,3,38v6a.5.5,0,0,0,.5.5Zm37-22a1.5,1.5,0,0,1,0,3h-28a1.5,1.5,0,0,1,0-3Zm-37,8h-6A3.5,3.5,0,0,1,0,27V21a3.5,3.5,0,0,1,3.5-3.5h6A3.5,3.5,0,0,1,13,21v6A3.5,3.5,0,0,1,9.5,30.5Zm0-3A.5.5,0,0,0,10,27V21a.5.5,0,0,0-.5-.5h-6A.5.5,0,0,0,3,21v6a.5.5,0,0,0,.5.5Zm37-22a1.5,1.5,0,0,1,0,3h-28a1.5,1.5,0,0,1,0-3Zm-37,8h-6A3.5,3.5,0,0,1,0,10V4A3.5,3.5,0,0,1,3.5.5h6A3.5,3.5,0,0,1,13,4v6A3.5,3.5,0,0,1,9.5,13.5Zm0-3A.5.5,0,0,0,10,10V4a.5.5,0,0,0-.5-.5h-6A.5.5,0,0,0,3,4v6a.5.5,0,0,0,.5.5Z\"/></symbol>\n    <symbol id=\"wallet-default--high\" viewBox=\"0 0 48 48\"><rect width=\"4\" height=\"2\" x=\"15\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"29\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"29\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"36\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"36\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"22\" y=\"17\"/><path d=\"M44.5,11H39V5.5A3.5,3.5,0,0,0,35.5,2H6A6,6,0,0,0,0,8H0V42.5A3.5,3.5,0,0,0,3.5,46h41A3.5,3.5,0,0,0,48,42.5v-28A3.5,3.5,0,0,0,44.5,11ZM6,5H35.5a.5.5,0,0,1,.5.5V11H6A3,3,0,0,1,6,5ZM45,42.5a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V13.19A6,6,0,0,0,6,14H44.5a.5.5,0,0,1,.5.5Z\"/><rect width=\"4\" height=\"2\" x=\"8\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"8\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"22\" y=\"38\"/><path d=\"M29.26,28.3c.37-.36.26-.72-.26-.8l-2.06-.29a2.06,2.06,0,0,1-1.36-.95l-.95-1.91c-.12-.24-.27-.35-.42-.35s-.31.11-.42.35l-.95,1.91a2.06,2.06,0,0,1-1.36.95l-2,.29c-.51.08-.64.44-.26.8l1.5,1.46a2.06,2.06,0,0,1,.52,1.59l-.35,2.06c-.07.37.07.59.34.59a.67.67,0,0,0,.34-.1L23.42,33a2,2,0,0,1,1.68,0L27,33.9a.67.67,0,0,0,.34.1c.26,0,.4-.22.34-.59l-.35-2.06a2.06,2.06,0,0,1,.52-1.59ZM25.33,31a4.07,4.07,0,0,0-2.19,0,4.07,4.07,0,0,0-.67-2.08,4.13,4.13,0,0,0,1.77-1.29A4.05,4.05,0,0,0,26,28.91,4,4,0,0,0,25.33,31Z\"/><rect width=\"4\" height=\"2\" x=\"15\" y=\"38\"/></symbol>\n    <symbol id=\"wallet--high\" viewBox=\"0 0 48 48\"><rect width=\"4\" height=\"2\" x=\"22\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"29\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"29\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"36\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"36\" y=\"17\"/><path d=\"M44.5,11H39V5.5A3.5,3.5,0,0,0,35.5,2H6A6,6,0,0,0,0,8H0V42.5A3.5,3.5,0,0,0,3.5,46h41A3.5,3.5,0,0,0,48,42.5v-28A3.5,3.5,0,0,0,44.5,11ZM6,5H35.5a.5.5,0,0,1,.5.5V11H6A3,3,0,0,1,6,5ZM45,42.5a.5.5,0,0,1-.5.5H3.5a.5.5,0,0,1-.5-.5V13.19A6,6,0,0,0,6,14H44.5a.5.5,0,0,1,.5.5Z\"/><rect width=\"4\" height=\"2\" x=\"22\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"8\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"15\" y=\"38\"/><rect width=\"4\" height=\"2\" x=\"15\" y=\"17\"/><rect width=\"4\" height=\"2\" x=\"8\" y=\"38\"/></symbol>\n    <symbol id=\"warning--high\" viewBox=\"0 0 48 48\"><path d=\"M25,37a1,1,0,0,1-2,0V35a1,1,0,0,1,2,0Zm0-7a1,1,0,0,1-2,0V18a1,1,0,0,1,2,0ZM21.37,3.55a3,3,0,0,1,5.26,0l21,38A3,3,0,0,1,45,46H3A3,3,0,0,1,.37,41.55ZM24,5,3,43H45Z\"/></symbol>\n    <symbol id=\"wrench--high\" viewBox=\"0 0 48 48\"><path d=\"M33.15,3a11.86,11.86,0,0,0-11.9,11.9v5.2a2.1,2.1,0,0,1-.4,1.1L4.35,37.6a4.57,4.57,0,0,0-1.3,3.1,3.93,3.93,0,0,0,1.3,2.9,4.32,4.32,0,0,0,3.1,1.3,3.93,3.93,0,0,0,2.9-1.3l16.5-16.5a1.5,1.5,0,0,1,1.1-.4h5.2a11.86,11.86,0,0,0,11.9-11.9,10.8,10.8,0,0,0-.4-3.2l-9.3,9.3a1.45,1.45,0,0,1-2.1,0l-6.2-6a1.5,1.5,0,0,1-.4-1.1,2.1,2.1,0,0,1,.4-1.1l9.3-9.4A15.14,15.14,0,0,0,33.15,3ZM7.45,48a7.26,7.26,0,0,1-5.2-2.2,7.22,7.22,0,0,1-2.2-5,7.1,7.1,0,0,1,2.2-5.3l16.1-16V14.9A14.79,14.79,0,0,1,33.15,0a13.29,13.29,0,0,1,6.6,1.6,1.44,1.44,0,0,1,.7,1.1,2,2,0,0,1-.4,1.3l-9.8,9.9,4.1,4.1,9.7-9.9a1.37,1.37,0,0,1,1.2-.4,1.44,1.44,0,0,1,1.1.7A12.42,12.42,0,0,1,48,15a14.94,14.94,0,0,1-14.9,14.9h-4.6l-16.1,16A6.39,6.39,0,0,1,7.45,48Z\"/></symbol>\n    <symbol id=\"zoom-in--high\" viewBox=\"0 0 48 48\"><path d=\"M25.5,18H21V13.5a1.5,1.5,0,0,0-3,0V18H13.5a1.5,1.5,0,0,0,0,3H18v4.5a1.5,1.5,0,0,0,3,0V21h4.5a1.5,1.5,0,0,0,0-3Z\"/><path d=\"M47.56,45.44,34.29,32.17a19.56,19.56,0,1,0-2.12,2.12L45.44,47.56A1.5,1.5,0,0,0,46.5,48a1.51,1.51,0,0,0,1.39-.93A1.5,1.5,0,0,0,47.56,45.44ZM3,19.5A16.5,16.5,0,1,1,19.5,36,16.5,16.5,0,0,1,3,19.5Z\"/></symbol>\n    <symbol id=\"zoom-out--high\" viewBox=\"0 0 48 48\"><path d=\"M19.5,3A16.5,16.5,0,1,0,36,19.5,16.5,16.5,0,0,0,19.5,3Zm6,18a1.5,1.5,0,0,0,0-3h-12a1.5,1.5,0,0,0,0,3Zm8.8,11.18L47.56,45.44a1.5,1.5,0,0,1,.33,1.63A1.51,1.51,0,0,1,46.5,48a1.5,1.5,0,0,1-1.06-.44L32.18,34.3a19.53,19.53,0,1,1,2.12-2.12Z\"/></symbol>\n    <symbol id=\"account--tiny\" viewBox=\"0 0 16 16\"><path d=\"M10.5,4.5A2.5,2.5,0,1,0,8,7,2.5,2.5,0,0,0,10.5,4.5ZM13.92,14A6,6,0,0,0,2.08,14ZM4.8,7.67a4.5,4.5,0,1,1,6.4,0A8,8,0,0,1,16,15a1,1,0,0,1-1,1H1a1,1,0,0,1-1-1A8,8,0,0,1,4.8,7.67Z\"/></symbol>\n    <symbol id=\"add--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9,7h6a1,1,0,0,1,0,2H9v6a1,1,0,0,1-2,0V9H1A1,1,0,0,1,1,7H7V1A1,1,0,0,1,9,1Z\"/></symbol>\n    <symbol id=\"arrow-back--tiny\" viewBox=\"0 0 16 16\"><path d=\"M3.41,9l4.3,4.29a1,1,0,1,1-1.42,1.42l-6-6a1,1,0,0,1,0-1.42l6-6A1,1,0,0,1,7.71,2.71L3.41,7H15a1,1,0,0,1,0,2Z\"/></symbol>\n    <symbol id=\"arrow-collapse--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,6.41l-5.29,5.3a1,1,0,0,1-1.42-1.42l6-6a1,1,0,0,1,1.42,0l6,6a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"arrow-end--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13,2a1,1,0,0,1,2,0V14a1,1,0,0,1-2,0ZM6.59,8,1.29,2.7A1,1,0,0,1,2.71,1.28l6,6a1,1,0,0,1,0,1.42l-6,6a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"arrow-expand--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,9.59l5.29-5.3a1,1,0,1,1,1.42,1.42l-6,6a1,1,0,0,1-1.42,0l-6-6A1,1,0,0,1,2.71,4.29Z\"/></symbol>\n    <symbol id=\"arrow-forward--tiny\" viewBox=\"0 0 16 16\"><path d=\"M12.59,7,8.29,2.71A1,1,0,0,1,9.71,1.29l6,6a1,1,0,0,1,0,1.42l-6,6a1,1,0,0,1-1.42-1.42L12.59,9H1A1,1,0,0,1,1,7Z\"/></symbol>\n    <symbol id=\"arrow-next--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9.59,8,4.29,2.71A1,1,0,0,1,5.71,1.29l6,6a1,1,0,0,1,0,1.42l-6,6a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"arrow-previous--tiny\" viewBox=\"0 0 16 16\"><path d=\"M6.41,8l5.3,5.29a1,1,0,0,1-1.42,1.42l-6-6a1,1,0,0,1,0-1.42l6-6a1,1,0,1,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"arrow-start--tiny\" viewBox=\"0 0 16 16\"><path d=\"M3,14a1,1,0,0,1-2,0V2A1,1,0,0,1,3,2ZM9.41,8l5.3,5.29a1,1,0,1,1-1.42,1.42l-6-6a1,1,0,0,1,0-1.42l6-6a1,1,0,0,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"attachment--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13.69,9.12a1,1,0,0,0-1.44,0l-2.9,3A3,3,0,0,1,5,12.1,3,3,0,0,1,5,7.78L8.63,4.19l.72-.72a1,1,0,0,1,1.45,0,1,1,0,0,1,0,1.43L6.46,9.12a1,1,0,0,0,0,1.44,1,1,0,0,0,1.45,0l4.34-4.32a3,3,0,0,0,0-4.32,3,3,0,0,0-4.34,0l-.72.72L3.47,6.24a5.27,5.27,0,0,0,0,7.3,5.32,5.32,0,0,0,7.33,0l2.89-2.88A1.12,1.12,0,0,0,13.69,9.12Z\"/></symbol>\n    <symbol id=\"calendar--tiny\" viewBox=\"0 0 16 16\"><path d=\"M14,2H12V0H10V2H6V0H4V2H2A2,2,0,0,0,0,4V14a2,2,0,0,0,2,2H14a2,2,0,0,0,2-2V4A2,2,0,0,0,14,2Zm0,2V5H2V4ZM2,14V7H14v7Z\"/><rect width=\"3\" height=\"2\" x=\"4\" y=\"11\"/><rect width=\"3\" height=\"2\" x=\"9\" y=\"11\"/><rect width=\"3\" height=\"2\" x=\"9\" y=\"8\"/><rect width=\"3\" height=\"2\" x=\"4\" y=\"8\"/></symbol>\n    <symbol id=\"camera-flash--tiny\" viewBox=\"0 0 16 16\"><path d=\"M10.33,7H14a1,1,0,0,1,.61,1.79l-9,7A1,1,0,0,1,4,14.73L5.67,9H2a1,1,0,0,1-.61-1.79l9-7A1,1,0,0,1,12,1.27ZM8,7.73,9.2,3.67,4.91,7H7A1,1,0,0,1,8,8,1,1,0,0,1,8,7.73ZM9,9A1,1,0,0,1,8,8a1,1,0,0,1,0,.24L6.8,12.33,11.09,9Z\"/></symbol>\n    <symbol id=\"cart--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9.8,13.27A2.68,2.68,0,1,1,12.48,16,2.68,2.68,0,0,1,9.8,13.27Zm-5.11,0A2.68,2.68,0,1,1,7.37,16,2.68,2.68,0,0,1,4.69,13.27ZM4.93,2.05h8.76a2,2,0,0,1,1.79,2.89l-2,4a2,2,0,0,1-1.79,1.11H7.93A2,2,0,0,1,6.14,8.94L3.43,3.52l0,0L2.69,2.05H1.31a1,1,0,0,1,0-2h2A1,1,0,0,1,4.2.6Zm3,6h3.76l2-4H5.93Z\"/></symbol>\n    <symbol id=\"category--tiny\" viewBox=\"0 0 16 16\"><path d=\"M12.89,5.67a2.5,2.5,0,1,1-2.5-2.5A2.5,2.5,0,0,1,12.89,5.67ZM5.38,15.21.79,10.62a2,2,0,0,1,0-2.83l7-7A2,2,0,0,1,9.21.21h4.58a2,2,0,0,1,2,2V6.79a2,2,0,0,1-.58,1.42l-7,7A2,2,0,0,1,5.38,15.21Zm1.41-1.42,7-7V2.21H9.21l-7,7Z\"/></symbol>\n    <symbol id=\"checkmark--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13.72,3.79a.94.94,0,0,0-1.36,0L6,10.25,3.65,7.9a.94.94,0,0,0-1.36,0,1,1,0,0,0,0,1.37L5.2,12.21a.93.93,0,0,0,1.35,0l7.07-7.14A.79.79,0,0,0,13.72,3.79Z\"/></symbol>\n    <symbol id=\"clear--tiny\" viewBox=\"0 0 16 16\"><path d=\"M4,1H14a2,2,0,0,1,2,2V13a2,2,0,0,1-2,2H4a1,1,0,0,1-.89-.55l-3-6a1,1,0,0,1,0-.9l3-6A1,1,0,0,1,4,1Zm.62,2L2.12,8l2.5,5H14V3ZM9,9.41l-2.29,2.3a1,1,0,0,1-1.42-1.42L7.59,8,5.29,5.71A1,1,0,0,1,6.71,4.29L9,6.59l2.29-2.3a1,1,0,1,1,1.42,1.42L10.41,8l2.3,2.29a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"close--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9.41,8l5.3,5.29a1,1,0,0,1-1.42,1.42L8,9.41l-5.29,5.3a1,1,0,0,1-1.42-1.42L6.59,8,1.29,2.71A1,1,0,0,1,2.71,1.29L8,6.59l5.29-5.3a1,1,0,1,1,1.42,1.42Z\"/></symbol>\n    <symbol id=\"delete--tiny\" viewBox=\"0 0 16 16\"><path d=\"M11,12H9V7h2ZM6,7H8v5H6Zm7-2H4v9h9ZM9,3V2H8V3Zm2,0h4a1,1,0,0,1,0,2v9.39A1.61,1.61,0,0,1,13.39,16H3.61A1.61,1.61,0,0,1,2,14.39V5A1,1,0,0,1,2,3H6V1.62A1.63,1.63,0,0,1,7.62,0H9.38A1.63,1.63,0,0,1,11,1.62Z\"/></symbol>\n    <symbol id=\"disclosure-collapse--tiny\" viewBox=\"0 0 16 16\"><path d=\"M2.23,5.64A1,1,0,0,1,3,4H13a1,1,0,0,1,.77,1.64l-5,6a1,1,0,0,1-1.54,0Z\"/></symbol>\n    <symbol id=\"disclosure-expand--tiny\" viewBox=\"0 0 16 16\"><path d=\"M5.64,13.77A1,1,0,0,1,4,13V3a1,1,0,0,1,1.64-.77l6,5a1,1,0,0,1,0,1.54Z\"/></symbol>\n    <symbol id=\"drag--tiny\" viewBox=\"0 0 16 16\"><path d=\"M3.41,7H5A1,1,0,0,1,5,9H3.41l.3.29a1,1,0,1,1-1.42,1.42l-2-2a1,1,0,0,1,0-1.42l2-2A1,1,0,0,1,3.71,6.71Zm9.18,2H11a1,1,0,0,1,0-2h1.59l-.3-.29a1,1,0,0,1,1.42-1.42l2,2a1,1,0,0,1,0,1.42l-2,2a1,1,0,0,1-1.42-1.42ZM7,12.59V11a1,1,0,0,1,2,0v1.59l.29-.3a1,1,0,0,1,1.42,1.42l-2,2a1,1,0,0,1-1.42,0l-2-2a1,1,0,0,1,1.42-1.42ZM9,3.41V5A1,1,0,0,1,7,5V3.41l-.29.3A1,1,0,0,1,5.29,2.29l2-2a1,1,0,0,1,1.42,0l2,2A1,1,0,0,1,9.29,3.71Z\"/></symbol>\n    <symbol id=\"edit--tiny\" viewBox=\"0 0 16 16\"><path d=\"M15.71,3.29l-3-3a1,1,0,0,0-1.42,0l-11,11A1,1,0,0,0,0,12v3a1,1,0,0,0,1,1H4a1,1,0,0,0,.71-.29l8-8h0l3-3A1,1,0,0,0,15.71,3.29ZM3.59,14H2V12.41l7-7L10.59,7ZM12,5.59,10.41,4,12,2.41,13.59,4Z\"/></symbol>\n    <symbol id=\"error-alt--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,11.5a.94.94,0,0,1,1,1v1a.94.94,0,0,1-1,1,.94.94,0,0,1-1-1v-1A.94.94,0,0,1,8,11.5Zm0-10a.94.94,0,0,1,1,1v6a.94.94,0,0,1-1,1,.94.94,0,0,1-1-1v-6A.94.94,0,0,1,8,1.5Z\"/></symbol>\n    <symbol id=\"error--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,13a1,1,0,1,1,1-1A1,1,0,0,1,8,13ZM7,4A1,1,0,0,1,9,4V9A1,1,0,0,1,7,9Zm7,4a6,6,0,1,0-6,6A6,6,0,0,0,14,8Zm2,0A8,8,0,1,1,8,0,8,8,0,0,1,16,8Z\"/></symbol>\n    <symbol id=\"export--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9,14a1,1,0,0,1,2,0v.39A1.61,1.61,0,0,1,9.38,16H1.88A1.88,1.88,0,0,1,0,14.12V1.88A1.88,1.88,0,0,1,1.88,0h7.5A1.61,1.61,0,0,1,11,1.61V2A1,1,0,0,1,9,2H2V14Zm3.59-5H6A1,1,0,0,1,6,7h6.59l-1.3-1.29a1,1,0,0,1,1.42-1.42l3,3a1,1,0,0,1,0,1.42l-3,3a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"eyedropper--tiny\" viewBox=\"0 0 16 16\"><path d=\"M10.93,3.51l1.56,1.56,1.19-1.19a1.1,1.1,0,0,0-1.56-1.56ZM9.51,4.93,2,12.44V14H3.56l7.51-7.51Zm4.36,1.58a1,1,0,0,1-1.36,1.36L4.68,15.71A1,1,0,0,1,4,16H1a1,1,0,0,1-1-1V12a1,1,0,0,1,.29-.71L8.13,3.49A1,1,0,0,1,9.49,2.13L10.7.91A3.1,3.1,0,0,1,15.09,5.3Z\"/></symbol>\n    <symbol id=\"favorite-star-border--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,13.28,3.5,15.87a1,1,0,0,1-1.43-1.24l1.76-4.39L.29,6.7A1,1,0,0,1,1,5H5.32L7.07.63a1,1,0,0,1,1.86,0L10.68,5H15a1,1,0,0,1,.71,1.7l-3.54,3.54,1.76,4.39a1,1,0,0,1-1.43,1.24Zm-.5-2a1,1,0,0,1,1,0L11,12.7l-.93-2.33a1,1,0,0,1,.22-1.08L12.59,7H10a1,1,0,0,1-.93-.63L8,3.69,6.93,6.37A1,1,0,0,1,6,7H3.41l2.3,2.29a1,1,0,0,1,.22,1.08L5,12.7Z\"/></symbol>\n    <symbol id=\"favorite-star--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,13.28,3.5,15.87a1,1,0,0,1-1.43-1.24l1.76-4.39L.29,6.7A1,1,0,0,1,1,5H5.32L7.07.63a1,1,0,0,1,1.86,0L10.68,5H15a1,1,0,0,1,.71,1.7l-3.54,3.54,1.76,4.39a1,1,0,0,1-1.43,1.24Z\"/></symbol>\n    <symbol id=\"file-download--tiny\" viewBox=\"0 0 16 16\"><path d=\"M2,11a1,1,0,0,0-2,0v3a2,2,0,0,0,2,2H14a2,2,0,0,0,2-2V11a1,1,0,0,0-2,0v3H2Z\"/><path d=\"M8.71,8.71l3-3a1,1,0,1,0-1.42-1.42L9,5.59V1A1,1,0,0,0,7,1V5.59L5.71,4.29A1,1,0,0,0,4.29,5.71l3,3A1,1,0,0,0,8.71,8.71Z\"/></symbol>\n    <symbol id=\"file-upload--tiny\" viewBox=\"0 0 16 16\"><path d=\"M2,11a1,1,0,0,0-2,0v3a2,2,0,0,0,2,2H14a2,2,0,0,0,2-2V11a1,1,0,0,0-2,0v3H2Z\"/><path d=\"M7.29.29l-3,3A1,1,0,0,0,5.71,4.71L7,3.41V8A1,1,0,0,0,9,8V3.41l1.29,1.3a1,1,0,0,0,1.42-1.42l-3-3A1,1,0,0,0,7.29.29Z\"/></symbol>\n    <symbol id=\"info--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8.7,3.8a.68.68,0,0,1,.7.7.79.79,0,0,1-.8.8H8.5c-.4,0-.6-.3-.6-.7A.79.79,0,0,1,8.7,3.8ZM6.6,12.1l1.2-6H9l-1.2,6ZM14,8a6,6,0,1,0-6,6A6,6,0,0,0,14,8Zm2,0A8,8,0,1,1,8,0,8,8,0,0,1,16,8Z\"/></symbol>\n    <symbol id=\"like--tiny\" viewBox=\"0 0 16 16\"><path d=\"M7.85,12.92l4.74-5.31C13.71,6.34,14,5,13.21,4.09c-1-1.11-2.85-1.3-3.66-.4l-1,1.07a1,1,0,0,1-1.49,0l-.88-1a2.07,2.07,0,0,0-3.15-.13,3,3,0,0,0,0,3.87Zm0-10.33.21-.23c1.67-1.88,5-1.54,6.67.42C16.25,4.56,15.8,7,14.08,8.94L9.21,14.4a1.8,1.8,0,0,1-2.71,0L1.55,8.85A5,5,0,0,1,1.61,2.3a4.07,4.07,0,0,1,6.11.14Z\"/></symbol>\n    <symbol id=\"map-directions-alt--tiny\" viewBox=\"0 0 16 16\"><path d=\"M15.41,6.59l-6-6a2,2,0,0,0-2.82,0l-6,6a2,2,0,0,0,0,2.82l6,6a2,2,0,0,0,2.82,0l6-6A2,2,0,0,0,15.41,6.59ZM11.66,8.72l-3,3a1,1,0,0,1-1.41,0,1,1,0,0,1,0-1.41L8.54,9H5A1,1,0,0,1,5,7H8.55L7.26,5.72a1,1,0,0,1,0-1.41,1,1,0,0,1,1.41,0l3,3A1,1,0,0,1,11.66,8.72Z\"/></symbol>\n    <symbol id=\"map-location-current--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13.16.19l-12,5.5a2,2,0,0,0,.47,3.78l4.14.75.75,4.14a2,2,0,0,0,3.78.47l5.5-12A2,2,0,0,0,13.16.19ZM8.5,14l-1-5.5L2,7.5,14,2Z\"/></symbol>\n    <symbol id=\"map-location--tiny\" viewBox=\"0 0 16 16\"><path d=\"M11.39,10.19a4.79,4.79,0,1,0-6.78,0L8,13.59Zm-8.2,1.42a6.8,6.8,0,1,1,9.62,0l-4.1,4.1a1,1,0,0,1-1.42,0ZM8,9.3a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,8,9.3Z\"/></symbol>\n    <symbol id=\"maximize--tiny\" viewBox=\"0 0 16 16\"><path d=\"M11,14V10a1,1,0,0,1,2,0v4.39A1.61,1.61,0,0,1,11.39,16H1.61A1.61,1.61,0,0,1,0,14.39V4.61A1.61,1.61,0,0,1,1.61,3H7A1,1,0,0,1,7,5H2v9ZM14,3.41,9.71,7.71A1,1,0,0,1,8.29,6.29L12.59,2H12a1,1,0,0,1,0-2h3a1,1,0,0,1,1,1V4a1,1,0,0,1-2,0Z\"/></symbol>\n    <symbol id=\"media-pause--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13,1a1,1,0,0,1,2,0V15a1,1,0,0,1-2,0ZM1,1A1,1,0,0,1,3,1V15a1,1,0,0,1-2,0Z\"/></symbol>\n    <symbol id=\"media-play--tiny\" viewBox=\"0 0 16 16\"><path d=\"M3,2.74V13.26L12,8ZM1,1A1,1,0,0,1,2.5.14l12,7a1,1,0,0,1,0,1.72l-12,7A1,1,0,0,1,1,15Z\"/></symbol>\n    <symbol id=\"notifications--tiny\" viewBox=\"0 0 16 16\"><path d=\"M14.71,10.29,14,9.59V7.5A5.5,5.5,0,0,0,9.5,2.09V1a1,1,0,0,0-2,0V2.09A5.5,5.5,0,0,0,3,7.5V9.59l-.71.7A1,1,0,0,0,2,11v1a1,1,0,0,0,1,1H6v.5a2.5,2.5,0,0,0,5,0V13h3a1,1,0,0,0,1-1V11A1,1,0,0,0,14.71,10.29ZM9,13.5a.5.5,0,0,1-1,0V13H9ZM10,11H4.41l.3-.29A1,1,0,0,0,5,10V7.5a3.5,3.5,0,0,1,7,0V10a1,1,0,0,0,.29.71l.3.29Z\"/></symbol>\n    <symbol id=\"options--tiny\" viewBox=\"0 0 16 16\"><path d=\"M14,9a1,1,0,1,1,1-1A1,1,0,0,1,14,9ZM8,9A1,1,0,1,1,9,8,1,1,0,0,1,8,9ZM2,9A1,1,0,1,1,3,8,1,1,0,0,1,2,9Z\"/></symbol>\n    <symbol id=\"password-hide--tiny\" viewBox=\"0 0 16 16\"><path d=\"M11.86,5.55,9.93,7.48A1.81,1.81,0,0,1,10,8a2,2,0,0,1-2,2,1.81,1.81,0,0,1-.52-.07L5.86,11.55A5.34,5.34,0,0,0,8,12c2.18,0,4.22-1.31,5.85-4A10.5,10.5,0,0,0,11.86,5.55Zm-1.72-1.1A5.34,5.34,0,0,0,8,4C5.82,4,3.78,5.31,2.15,8a10.5,10.5,0,0,0,2,2.45L6.07,8.52A1.81,1.81,0,0,1,6,8,2,2,0,0,1,8,6a1.81,1.81,0,0,1,.52.07Zm-5.77,8.6L1.71,15.71A1,1,0,0,1,.29,14.29l2.44-2.43A13,13,0,0,1,.12,8.48a1,1,0,0,1,0-1C2.12,3.9,4.91,2,8,2a7.43,7.43,0,0,1,3.63,1L14.29.29a1,1,0,1,1,1.42,1.42L13.27,4.14a13,13,0,0,1,2.61,3.38,1,1,0,0,1,0,1C13.88,12.1,11.09,14,8,14A7.4,7.4,0,0,1,4.37,13.05Z\"/></symbol>\n    <symbol id=\"password-show--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,10a2,2,0,1,1,2-2A2,2,0,0,1,8,10ZM8,4C5.82,4,3.78,5.31,2.15,8,3.78,10.69,5.82,12,8,12s4.22-1.31,5.85-4C12.22,5.31,10.18,4,8,4Zm7.88,4.48C13.88,12.1,11.09,14,8,14S2.12,12.1.12,8.48a1,1,0,0,1,0-1C2.12,3.9,4.91,2,8,2s5.88,1.9,7.88,5.52A1,1,0,0,1,15.88,8.48Z\"/></symbol>\n    <symbol id=\"phone--tiny\" viewBox=\"0 0 16 16\"><path d=\"M10.26,9.13a2,2,0,0,1,2.89,0l2.38,2.38a1.69,1.69,0,0,1,0,2.39l-.08.07a7,7,0,0,1-9.9,0L2,10.45A7,7,0,0,1,2,.55L2.1.48a1.67,1.67,0,0,1,2.39,0L6.87,2.85a2,2,0,0,1,0,2.89L5.68,6.93l3.39,3.39Zm1.47,1.41h-.05L10.26,12a1.67,1.67,0,0,1-2.39,0L4.05,8.13a1.69,1.69,0,0,1,0-2.39L5.46,4.32a0,0,0,0,0,0-.05L3.3,2.11A5,5,0,0,0,3.44,9L7,12.56a5,5,0,0,0,6.92.14Z\"/></symbol>\n    <symbol id=\"power--tiny\" viewBox=\"0 0 16 16\"><path d=\"M12,2.2a7.38,7.38,0,0,1,3.5,6.3A7.55,7.55,0,0,1,8,16,7.55,7.55,0,0,1,.5,8.5,7.38,7.38,0,0,1,4,2.2a.89.89,0,0,1,1.3.3A1,1,0,0,1,5,3.9,5.32,5.32,0,0,0,2.5,8.5,5.55,5.55,0,0,0,8,14a5.55,5.55,0,0,0,5.5-5.5A5.45,5.45,0,0,0,11,3.9a1,1,0,0,1-.3-1.4A.89.89,0,0,1,12,2.2ZM8,6.9a1,1,0,0,1-1-1V1A.94.94,0,0,1,8,0,.94.94,0,0,1,9,1V5.9A.94.94,0,0,1,8,6.9Z\"/></symbol>\n    <symbol id=\"receipt--tiny\" viewBox=\"0 0 16 16\"><path d=\"M5,11H9V9H5ZM5,7h6V5H5ZM4,15.11l-1.55.79A1,1,0,0,1,1,15V1A1,1,0,0,1,2.45.1L4,.87,5.55.1a1,1,0,0,1,.9,0L8,.87,9.55.1a1,1,0,0,1,.9,0L12,.87,13.55.1A1,1,0,0,1,15,1V15a1,1,0,0,1-1.45.9L12,15.11l-1.55.78a1,1,0,0,1-.9,0L8,15.11l-1.55.78a1,1,0,0,1-.9,0ZM3,2.61V13.38l.55-.28a1,1,0,0,1,.9,0L6,13.87l1.55-.77a1,1,0,0,1,.9,0l1.55.77,1.55-.77a1,1,0,0,1,.9,0l.55.27V2.61l-.55.28a1,1,0,0,1-.9,0L10,2.11l-1.55.78a1,1,0,0,1-.9,0L6,2.11l-1.55.78a1,1,0,0,1-.9,0Z\"/></symbol>\n    <symbol id=\"refresh--tiny\" viewBox=\"0 0 16 16\"><path d=\"M2,8.4l-.3.31A1,1,0,0,1,.29,7.29l2-2a1,1,0,0,1,1.42,0l2,2A1,1,0,0,1,4.29,8.71L4,8.44a4.3,4.3,0,0,0,.29,1.12,4.19,4.19,0,0,0,.86,1.27,4.38,4.38,0,0,0,1.27.86,4.08,4.08,0,0,0,3.12,0,1,1,0,0,1,1.31.53,1,1,0,0,1-.53,1.31,6.06,6.06,0,0,1-4.68,0,6.11,6.11,0,0,1-3.19-3.19A6.18,6.18,0,0,1,2,8.4Zm10-.84a4.3,4.3,0,0,0-.29-1.12A4.06,4.06,0,0,0,9.56,4.31a4.08,4.08,0,0,0-3.12,0,1,1,0,0,1-1.31-.53,1,1,0,0,1,.53-1.31,6.06,6.06,0,0,1,4.68,0,6.11,6.11,0,0,1,3.19,3.19A6.18,6.18,0,0,1,14,7.6l.3-.31a1,1,0,1,1,1.42,1.42l-2,2a1,1,0,0,1-1.42,0l-2-2a1,1,0,1,1,1.42-1.42Z\"/></symbol>\n    <symbol id=\"security-lock--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13,14V7H3v7ZM6,5h4V4A1.94,1.94,0,0,0,8,2,1.94,1.94,0,0,0,6,4ZM4,5V4A3.93,3.93,0,0,1,8,0a3.93,3.93,0,0,1,4,4V5h1a2,2,0,0,1,2,2v7a2,2,0,0,1-2,2H3a2,2,0,0,1-2-2V7A2,2,0,0,1,3,5Z\"/></symbol>\n    <symbol id=\"security-protection--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9.22.3C10.87,2,12.56,3,14,3a1,1,0,0,1,1,1v6a6,6,0,0,1-6.25,6h-.5A6,6,0,0,1,2,10V4A1,1,0,0,1,3,3C4.44,3,6.13,2,7.78.3A1,1,0,0,1,9.22.3ZM4,4.91V10a4,4,0,0,0,4.25,4h.5A4,4,0,0,0,13,10V4.91A9.43,9.43,0,0,1,8.5,2.39,9.43,9.43,0,0,1,4,4.91ZM10.2,6.4a1,1,0,1,1,1.6,1.2l-3,4a1,1,0,0,1-1.51.11l-2-2A1,1,0,0,1,6.71,8.29L7.89,9.48Z\"/></symbol>\n    <symbol id=\"security--tiny\" viewBox=\"0 0 16 16\"><path d=\"M2,10V3A1,1,0,0,1,3,2,5.94,5.94,0,0,0,7.29.29a1,1,0,0,1,1.42,0A5.94,5.94,0,0,0,13,2a1,1,0,0,1,1,1v7A6,6,0,0,1,2,10Zm2,0a4,4,0,0,0,8,0V3.94A7.84,7.84,0,0,1,8,2.33,7.84,7.84,0,0,1,4,3.94Z\"/></symbol>\n    <symbol id=\"settings--tiny\" viewBox=\"0 0 16 16\"><path d=\"M15.9,6.75l-2.21-.68a5.87,5.87,0,0,0-1.17-2L13,1.78A8.07,8.07,0,0,0,10.87.53L9.18,2.1A6.56,6.56,0,0,0,8,2a6.45,6.45,0,0,0-1.17.11L5.13.53A8.07,8.07,0,0,0,3,1.78L3.48,4a5.87,5.87,0,0,0-1.17,2L.1,6.75A5.86,5.86,0,0,0,0,8,5.86,5.86,0,0,0,.1,9.25l2.21.68a5.87,5.87,0,0,0,1.17,2L3,14.22a8.07,8.07,0,0,0,2.17,1.25l1.7-1.57A6.45,6.45,0,0,0,8,14a6.56,6.56,0,0,0,1.18-.11l1.69,1.57A8.07,8.07,0,0,0,13,14.22L12.52,12a5.87,5.87,0,0,0,1.17-2l2.21-.68A7.28,7.28,0,0,0,16,8,7.28,7.28,0,0,0,15.9,6.75ZM8,12a4,4,0,1,1,4-4A4,4,0,0,1,8,12Z\"/></symbol>\n    <symbol id=\"share--tiny\" viewBox=\"0 0 16 16\"><path d=\"M14,7a1,1,0,0,1,0-2h.39A1.61,1.61,0,0,1,16,6.62v7.5A1.88,1.88,0,0,1,14.12,16H1.88A1.88,1.88,0,0,1,0,14.12V6.62A1.61,1.61,0,0,1,1.61,5H2A1,1,0,0,1,2,7v7H14ZM9,3.41V10a1,1,0,0,1-2,0V3.41L5.71,4.71A1,1,0,0,1,4.29,3.29l3-3a1,1,0,0,1,1.42,0l3,3a1,1,0,0,1-1.42,1.42Z\"/></symbol>\n    <symbol id=\"sign-in--tiny\" viewBox=\"0 0 16 16\"><path d=\"M11,2a1,1,0,0,1,0-2h3a2,2,0,0,1,2,2V14a2,2,0,0,1-2,2H11a1,1,0,0,1,0-2h3V2ZM5.59,9H1A1,1,0,0,1,1,7H5.59L4.29,5.71A1,1,0,0,1,5.71,4.29l3,3a1,1,0,0,1,0,1.42l-3,3a1,1,0,0,1-1.42-1.42Z\"/></symbol>\n    <symbol id=\"sign-out--tiny\" viewBox=\"0 0 16 16\"><path d=\"M5,2A1,1,0,0,0,5,0H2A2,2,0,0,0,0,2V14a2,2,0,0,0,2,2H5a1,1,0,0,0,0-2H2V2Z\"/><path d=\"M15.71,7.29l-3-3a1,1,0,0,0-1.42,1.42L12.59,7H8A1,1,0,0,0,8,9h4.59l-1.3,1.29a1,1,0,0,0,1.42,1.42l3-3A1,1,0,0,0,15.71,7.29Z\"/></symbol>\n    <symbol id=\"sortable-ascending--tiny\" viewBox=\"0 0 16 16\"><path d=\"M5.12,9.18l2.49-3a.5.5,0,0,1,.77,0l2.5,3a.5.5,0,0,1-.38.82h-5A.5.5,0,0,1,5.12,9.18Z\"/></symbol>\n    <symbol id=\"sortable-descending--tiny\" viewBox=\"0 0 16 16\"><path d=\"M10.88,6.82l-2.49,3a.5.5,0,0,1-.77,0l-2.5-3A.5.5,0,0,1,5.5,6h5A.5.5,0,0,1,10.88,6.82Z\"/></symbol>\n    <symbol id=\"sortable--tiny\" viewBox=\"0 0 16 16\"><path d=\"M5.12,6.18l2.49-3a.5.5,0,0,1,.77,0l2.5,3A.5.5,0,0,1,10.5,7h-5A.5.5,0,0,1,5.12,6.18Zm5.76,3.64-2.49,3a.5.5,0,0,1-.77,0l-2.5-3A.5.5,0,0,1,5.5,9h5A.5.5,0,0,1,10.88,9.82Z\"/></symbol>\n    <symbol id=\"subtract--tiny\" viewBox=\"0 0 16 16\"><path d=\"M15,7a1,1,0,0,1,0,2H1A1,1,0,0,1,1,7Z\"/></symbol>\n    <symbol id=\"success-alt--tiny\" viewBox=\"0 0 16 16\"><path d=\"M13.72,3.79a.94.94,0,0,0-1.36,0L6,10.25,3.65,7.9a.94.94,0,0,0-1.36,0,1,1,0,0,0,0,1.37L5.2,12.21a.93.93,0,0,0,1.35,0l7.07-7.14A.79.79,0,0,0,13.72,3.79Z\"/></symbol>\n    <symbol id=\"success--tiny\" viewBox=\"0 0 16 16\"><path d=\"M14,8a6,6,0,1,0-6,6A6,6,0,0,0,14,8Zm2,0A8,8,0,1,1,8,0,8,8,0,0,1,16,8ZM7,8.59l3.29-3.3a1,1,0,1,1,1.42,1.42l-4,4a1,1,0,0,1-1.42,0l-2-2A1,1,0,1,1,5.71,7.29Z\"/></symbol>\n    <symbol id=\"time--tiny\" viewBox=\"0 0 16 16\"><path d=\"M9,7V4H7V8A1,1,0,0,0,8,9h4V7ZM8,16a8,8,0,1,1,8-8A8,8,0,0,1,8,16Zm0-2A6,6,0,1,0,2,8,6,6,0,0,0,8,14Z\"/></symbol>\n    <symbol id=\"view-grid--tiny\" viewBox=\"0 0 16 16\"><path d=\"M14,16H11a2,2,0,0,1-2-2V11a2,2,0,0,1,2-2h3a2,2,0,0,1,2,2v3A2,2,0,0,1,14,16Zm0-2V11H11v3ZM5,16H2a2,2,0,0,1-2-2V11A2,2,0,0,1,2,9H5a2,2,0,0,1,2,2v3A2,2,0,0,1,5,16Zm0-2V11H2v3Zm9-7H11A2,2,0,0,1,9,5V2a2,2,0,0,1,2-2h3a2,2,0,0,1,2,2V5A2,2,0,0,1,14,7Zm0-2V2H11V5ZM5,7H2A2,2,0,0,1,0,5V2A2,2,0,0,1,2,0H5A2,2,0,0,1,7,2V5A2,2,0,0,1,5,7ZM5,5V2H2V5Z\"/></symbol>\n    <symbol id=\"view-list--tiny\" viewBox=\"0 0 16 16\"><path d=\"M16,13v2H7V13Zm0-6V9H7V7Zm0-6V3H7V1ZM1,16a1,1,0,0,1-1-1V13a1,1,0,0,1,1-1H3a1,1,0,0,1,1,1v2a1,1,0,0,1-1,1Zm0-6A1,1,0,0,1,0,9V7A1,1,0,0,1,1,6H3A1,1,0,0,1,4,7V9a1,1,0,0,1-1,1ZM1,4A1,1,0,0,1,0,3V1A1,1,0,0,1,1,0H3A1,1,0,0,1,4,1V3A1,1,0,0,1,3,4Z\"/></symbol>\n    <symbol id=\"warning--tiny\" viewBox=\"0 0 16 16\"><path d=\"M8,12a1,1,0,1,0-1-1A1,1,0,0,0,8,12ZM7,6V8A1,1,0,0,0,9,8V6A1,1,0,0,0,7,6ZM6.1,2.07a2.21,2.21,0,0,1,3.8,0l5.79,9.67A2.16,2.16,0,0,1,13.79,15H2.21a2.16,2.16,0,0,1-1.9-3.27ZM2,12.77c-.06.1,0,.24.19.24H13.79c.17,0,.25-.14.19-.24L8.18,3.09a.21.21,0,0,0-.36,0Z\"/></symbol>\n    <symbol id=\"zoom-in--tiny\" viewBox=\"0 0 16 16\"><path d=\"M10,6a4,4,0,1,0-4,4A4,4,0,0,0,10,6Zm.89,3.48,4.82,4.81a1,1,0,0,1-1.42,1.42L9.48,10.89a6,6,0,1,1,1.41-1.41ZM5,5V3H7V5H9V7H7V9H5V7H3V5Z\"/></symbol>\n    <symbol id=\"zoom-out--tiny\" viewBox=\"0 0 16 16\"><path d=\"M3,7V5H9V7Zm7-1a4,4,0,1,0-4,4A4,4,0,0,0,10,6Zm.89,3.48,4.82,4.81a1,1,0,0,1-1.42,1.42L9.48,10.89a6,6,0,1,1,1.41-1.41Z\"/></symbol>\n    </svg>"
    },
    {
      "name": "IllustrationComponent",
      "id": "component-IllustrationComponent-b9aa289105121f0ab69b538630baff62",
      "file": "projects/vds-lib/src/lib/illustration/illustration.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-illustration",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./illustration.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "altText",
          "description": "<p>Aria alt text for the illustration.</p>\n",
          "line": 19,
          "type": "string"
        },
        {
          "name": "context",
          "description": "<p>Context for the illustration.</p>\n",
          "line": 31,
          "type": "string"
        },
        {
          "name": "narrative",
          "description": "<p>Narrative or description for the illustration.</p>\n",
          "line": 43,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_altText",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "_context",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "_narrative",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "generatedUrl",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 51
        }
      ],
      "methodsClass": [
        {
          "name": "generateUrl",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\n\n@Component({\n  selector: 'vds-illustration',\n  templateUrl: './illustration.component.html',\n})\nexport class IllustrationComponent\n  implements OnInit, OnChanges {\n  /**\n   * Aria alt text for the illustration.\n   */\n  @Input()\n  get altText(): string {\n    return this._altText;\n  }\n  set altText(value) {\n    this._altText = value;\n  }\n  _altText: string;\n\n  /**\n   * Context for the illustration.\n   */\n  @Input()\n  get context(): string {\n    return this._context;\n  }\n  set context(value) {\n    this._context = value;\n  }\n  _context: string;\n\n  /**\n   * Narrative or description for the illustration.\n   */\n  @Input()\n  get narrative(): string {\n    return this._narrative;\n  }\n  set narrative(value) {\n    this._narrative = value;\n  }\n  _narrative: string;\n\n  generatedUrl: string;\n\n  constructor() {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.generateUrl();\n  }\n\n  ngOnInit() {\n    this.generateUrl();\n  }\n\n  generateUrl() {\n    if (this.context && this.narrative) {\n      this.generatedUrl = `assets/illustrations/${\n        this.context\n      }/illustration-${this.context}-${this.narrative}.svg`;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 51
      },
      "implements": ["OnInit", "OnChanges"],
      "accessors": {
        "altText": {
          "name": "altText",
          "setSignature": {
            "name": "altText",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 22,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "context": {
          "name": "context",
          "setSignature": {
            "name": "context",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 34,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "narrative": {
          "name": "narrative",
          "setSignature": {
            "name": "narrative",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 46,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"!altText else image\">\n  <div *ngIf=\"context\"\n      [ngStyle]=\"{\n      'background': 'url(' + generatedUrl + ')no-repeat',\n      'display': 'inline-block',\n      'height': (context === 'hero') ? '416px' : '300px',\n      'width': '100%'\n    }\"\n  >\n  </div>\n</ng-container>\n\n<ng-template #image>\n  <img *ngIf=\"context\" [src]=\"generatedUrl\" [alt]=\"altText\">\n</ng-template>\n"
    },
    {
      "name": "InputCardComponent",
      "id": "component-InputCardComponent-d9b06558b956a4944a0638a14f42b8fe",
      "file": "projects/vds-lib/src/lib/input-card/input-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-input-card",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./input-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disable statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "helpText",
          "description": "<p>The text that articulates the purpose to the user.</p>\n",
          "line": 42,
          "type": "string"
        },
        {
          "name": "hint",
          "description": "<p>Hint of value to guide the user.</p>\n",
          "line": 54,
          "type": "string"
        },
        {
          "name": "id",
          "description": "<p>The id of the element.</p>\n",
          "line": 66,
          "type": "string"
        },
        {
          "name": "label",
          "description": "<p>The label for the input card.</p>\n",
          "line": 78,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name for the input card.</p>\n",
          "line": 90,
          "type": "string"
        },
        {
          "name": "network",
          "description": "<p>Card network name.</p>\n",
          "line": 102,
          "type": "InputCardNetwork"
        },
        {
          "name": "required",
          "description": "<p>Set as required statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 116,
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "<p>The initial value of the card.</p>\n",
          "line": 128,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits changed value.</p>\n",
          "line": 139,
          "type": "EventEmitter"
        },
        {
          "name": "error",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits error object.</p>\n",
          "line": 144,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_disabled",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "_helpText",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "_hint",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "_label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 84
        },
        {
          "name": "_name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 96
        },
        {
          "name": "_network",
          "defaultValue": "InputCardNetwork.DEFAULT",
          "type": "InputCardNetwork",
          "optional": false,
          "description": "",
          "line": 108
        },
        {
          "name": "_required",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 122
        },
        {
          "name": "_value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 134
        },
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 146
        },
        {
          "name": "helpId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 147
        },
        {
          "name": "initialValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 148
        },
        {
          "name": "inputId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 149
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 212
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 158
        },
        {
          "name": "onBlur",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 179,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onFocus",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 172,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTyping",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 191,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 206
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 199,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  INPUT_CARD,\n  InputCardNetwork,\n} from './input-card.constants';\nimport { VdsLibService } from '../vds-lib.service';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AbstractValueAccessor } from '../abstract-value-accessor';\n\n@Component({\n  selector: 'vds-input-card',\n  templateUrl: './input-card.component.html',\n})\nexport class InputCardComponent\n  extends AbstractValueAccessor\n  implements OnInit {\n  /**\n   * Disable statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled: boolean;\n\n  /**\n   * The text that articulates the purpose to the user.\n   */\n  @Input()\n  get helpText(): string {\n    return this._helpText;\n  }\n  set helpText(value) {\n    this._helpText = value;\n  }\n  _helpText: string;\n\n  /**\n   * Hint of value to guide the user.\n   */\n  @Input()\n  get hint(): string {\n    return this._hint;\n  }\n  set hint(value) {\n    this._hint = value;\n  }\n  _hint: string;\n\n  /**\n   * The id of the element.\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  _id: string;\n\n  /**\n   * The label for the input card.\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value) {\n    this._label = value;\n  }\n  _label: string;\n\n  /**\n   * The name for the input card.\n   */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n  }\n  _name: string;\n\n  /**\n   * Card network name.\n   */\n  @Input()\n  get network(): InputCardNetwork {\n    return this._network;\n  }\n  set network(value) {\n    this._network = value;\n  }\n  _network: InputCardNetwork = InputCardNetwork.DEFAULT;\n\n  /**\n   * Set as required statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n  _required: boolean;\n\n  /**\n   * The initial value of the card.\n   */\n  @Input()\n  get value(): string {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value: string;\n\n  /**\n   * Emits changed value.\n   */\n  @Output() change = new EventEmitter<any>();\n\n  /**\n   * Emits error object.\n   */\n  @Output() error = new EventEmitter<any>();\n\n  focused = false;\n  helpId: string;\n  initialValue: string;\n  inputId: string;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.initialValue = this.value ? this.value : null;\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(INPUT_CARD.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + INPUT_CARD.SUFFIX.NAME;\n    this.inputId = `${this.id}${INPUT_CARD.SUFFIX.NATIVE}`;\n    this.helpId = `${this.id}${INPUT_CARD.SUFFIX.MESSAGE}`;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  onFocus(event?: Event): void {\n    if (this.disabled) {\n      return;\n    }\n    this.focused = true;\n  }\n\n  onBlur(el): void {\n    if (this.disabled) {\n      return;\n    }\n    this.focused = false;\n    if (el.invalid) {\n      this.error.emit(el.errors);\n    }\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  onTyping(el) {\n    if (el.invalid) {\n      this.error.emit(el.errors);\n    }\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  writeValue(value: any) {\n    super.writeValue(value);\n    this.value = value;\n    this.cdRef.detectChanges();\n    this.change.emit(this.value);\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  clear() {\n    this.value = null;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          }
        ],
        "line": 149,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": ["OnInit"],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 33,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "helpText": {
          "name": "helpText",
          "setSignature": {
            "name": "helpText",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 45,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "hint": {
          "name": "hint",
          "setSignature": {
            "name": "hint",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 57,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 69,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 81,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "name": {
          "name": "name",
          "setSignature": {
            "name": "name",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 93,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "network": {
          "name": "network",
          "setSignature": {
            "name": "network",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 105,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "required": {
          "name": "required",
          "setSignature": {
            "name": "required",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 119,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 131,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"vds-input-card\">\n  <div\n    [ngClass]=\"{\n      'vds-input': true,\n      'vds-state--focus': focused,\n      'vds-state--disabled': (disabled) ? true : null,\n      'vds-state--filled': (value) ? true : null,\n      'vds-state--error': (\n        inputCard.invalid &&\n        (inputCard.dirty || inputCard.touched)\n      ) ? true : null\n    }\"\n    class=\"vds-input\"\n  >\n    <label\n      class=\"vds-input-label\"\n      [for]=\"inputId\"\n    >\n      {{ label }}\n    </label>\n    <div class=\"vds-input-bar\">\n      <div class=\"vds-input-input\">\n        <span class=\"vds-input-hint\">{{ hint }}</span>\n        <input\n          class=\"vds-input--input-text\"\n          [id]=\"inputId\"\n          [name]=\"name\"\n          [required]=\"required\"\n          type=\"tel\"\n          autocomplete=\"cc-number\"\n          mask=\"/\\d/,/\\d/,/\\d/,/\\d/, ,/\\d/,/\\d/,/\\d/,/\\d/, ,/\\d/,/\\d/,/\\d/,/\\d/, ,/\\d/,/\\d/,/\\d/,/\\d/\"\n          maxlength=\"19\"\n          [attr.aria-describedby]=\"helpId\"\n          [attr.aria-required]=\"required\"\n          [attr.aria-invalid]=\"inputCard.invalid &&\n        (inputCard.dirty || inputCard.touched)\"\n          (blur)=\"onBlur(inputCard)\"\n          (focus)=\"onFocus($event)\"\n          (keyup)=\"onTyping(inputCard)\"\n          [(ngModel)]=\"value\"\n          #inputCard=\"ngModel\"\n        >\n      </div>\n      <div class=\"vds-input-option\">\n        <div class=\"vds-card-indicator vds-card-indicator--{{network}}\">\n        </div>\n      </div>\n    </div>\n    <span\n      [ngClass]=\"{\n        'vds-input-message': true,\n        'vds-state--hidden': !helpText\n      }\"\n      [id]=\"helpId\"\n      role=\"alert\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n    >\n      <svg\n        *ngIf=\"inputCard.invalid &&\n        (inputCard.dirty || inputCard.touched)\"\n        aria-hidden=\"true\"\n        class=\"vds-icon vds-icon--tiny\"\n        viewBox=\"0 0 24 24\"\n        focusable=\"false\"\n        tabindex=\"-1\">\n        <use href=\"#error--tiny\" xlink:href=\"#error--tiny\"></use>\n      </svg>\n      {{ helpText }}\n    </span>\n  </div>\n</div>\n"
    },
    {
      "name": "InputComponent",
      "id": "component-InputComponent-4f0aecd96c74a99252f12d00179cf9ac",
      "file": "projects/vds-lib/src/lib/combobox/input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-combobox-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./input.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaActiveDescendant",
          "line": 99
        },
        {
          "name": "ariaAutocomplete",
          "line": 110
        },
        {
          "name": "ariaOwns",
          "line": 88
        },
        {
          "name": "debounceTime",
          "line": 121
        },
        {
          "name": "disabled",
          "line": 37
        },
        {
          "name": "displayValue",
          "line": 46
        },
        {
          "name": "error",
          "line": 161
        },
        {
          "name": "inputId",
          "line": 66
        },
        {
          "name": "isExpanded",
          "line": 141
        },
        {
          "name": "label",
          "line": 150
        },
        {
          "name": "labelId",
          "line": 77
        },
        {
          "name": "readOnly",
          "line": 57
        },
        {
          "name": "value",
          "line": 130
        }
      ],
      "outputsClass": [
        {
          "name": "buttonSelectEvent",
          "defaultValue": "new EventEmitter()",
          "line": 172,
          "type": "EventEmitter"
        },
        {
          "name": "inputKeydownEvent",
          "defaultValue": "new EventEmitter()",
          "line": 175,
          "type": "EventEmitter"
        },
        {
          "name": "inputKeyupEvent",
          "defaultValue": "new EventEmitter()",
          "line": 178,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_ariaActiveDescendant",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 107
        },
        {
          "name": "_ariaAutocomplete",
          "defaultValue": "'list'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 118
        },
        {
          "name": "_ariaOwns",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 96
        },
        {
          "name": "_debounceTime",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 127
        },
        {
          "name": "_disabled",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "_displayValue",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "_error",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 169
        },
        {
          "name": "_hasFocus",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "_inputChangeStream",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "_inputId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 74
        },
        {
          "name": "_isExpanded",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 147
        },
        {
          "name": "_label",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 158
        },
        {
          "name": "_labelId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 85
        },
        {
          "name": "_readOnly",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "_value",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 138
        },
        {
          "name": "inputElement",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 34,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'inputElement'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "handleBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 206
        },
        {
          "name": "handleButtonSelect",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 197,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 202
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 193
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n} from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { isValueValid, isValidString } from './utils';\n\n@Component({\n  selector: 'vds-combobox-input',\n  templateUrl: './input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class InputComponent implements OnDestroy {\n  _hasFocus = false;\n  _inputChangeStream = new Subject();\n\n  @ViewChild('inputElement')\n  inputElement: ElementRef;\n\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled = false;\n\n  @Input()\n  get displayValue() {\n    return this._displayValue;\n  }\n  set displayValue(value) {\n    this._displayValue = isValueValid(value)\n      ? value.toString()\n      : '';\n  }\n  _displayValue = '';\n\n  @Input()\n  get readOnly() {\n    return this._readOnly;\n  }\n  set readOnly(value) {\n    this._readOnly = coerceBooleanProperty(value);\n  }\n  _readOnly = false;\n\n  @Input()\n  get inputId() {\n    return this._inputId;\n  }\n  set inputId(value) {\n    this._inputId = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _inputId = null;\n\n  @Input()\n  get labelId() {\n    return this._labelId;\n  }\n  set labelId(value) {\n    this._labelId = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _labelId = null;\n\n  @Input()\n  get ariaOwns() {\n    return this._ariaOwns;\n  }\n  set ariaOwns(value) {\n    this._ariaOwns = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _ariaOwns = null;\n\n  @Input()\n  get ariaActiveDescendant() {\n    return this._ariaActiveDescendant;\n  }\n  set ariaActiveDescendant(value) {\n    this._ariaActiveDescendant = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _ariaActiveDescendant = null;\n\n  @Input()\n  get ariaAutocomplete() {\n    return this._ariaAutocomplete;\n  }\n  set ariaAutocomplete(value) {\n    this._ariaAutocomplete = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _ariaAutocomplete = 'list';\n\n  @Input()\n  get debounceTime() {\n    return this._debounceTime;\n  }\n  set debounceTime(value) {\n    this._debounceTime = coerceNumberProperty(value, 0);\n  }\n  _debounceTime = 0;\n\n  @Input()\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = isValueValid(value)\n      ? value.toString()\n      : '';\n  }\n  _value = '';\n\n  @Input()\n  get isExpanded() {\n    return this._isExpanded;\n  }\n  set isExpanded(value) {\n    this._isExpanded = coerceBooleanProperty(value);\n  }\n  _isExpanded = false;\n\n  @Input()\n  get label() {\n    return this._label;\n  }\n  set label(value) {\n    this._label = isValidString(value)\n      ? value.toString()\n      : '';\n  }\n  _label = '';\n\n  @Input()\n  get error() {\n    return this._error;\n  }\n  set error(value) {\n    this._error = isValidString(value)\n      ? value.toString()\n      : '';\n  }\n  _error = '';\n\n  @Output()\n  buttonSelectEvent = new EventEmitter();\n\n  @Output()\n  inputKeydownEvent = new EventEmitter();\n\n  @Output()\n  inputKeyupEvent = new EventEmitter();\n\n  constructor() {\n    this._inputChangeStream\n      .asObservable()\n      .pipe(\n        debounceTime(Math.max(0, this.debounceTime)),\n        distinctUntilChanged()\n      )\n      .subscribe((event: any) => {\n        this.value = event.target.value;\n        this.inputKeyupEvent.emit(event);\n      });\n  }\n\n  ngOnDestroy() {\n    this._inputChangeStream.complete();\n  }\n\n  handleButtonSelect(event) {\n    this.inputElement.nativeElement.focus();\n    this.buttonSelectEvent.emit(event);\n  }\n\n  handleFocus() {\n    this._hasFocus = true;\n  }\n\n  handleBlur() {\n    this._hasFocus = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 178
      },
      "implements": ["OnDestroy"],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 40,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "displayValue": {
          "name": "displayValue",
          "setSignature": {
            "name": "displayValue",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 49,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "readOnly": {
          "name": "readOnly",
          "setSignature": {
            "name": "readOnly",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 60,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "inputId": {
          "name": "inputId",
          "setSignature": {
            "name": "inputId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 69,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "labelId": {
          "name": "labelId",
          "setSignature": {
            "name": "labelId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 80,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "ariaOwns": {
          "name": "ariaOwns",
          "setSignature": {
            "name": "ariaOwns",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 91,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "ariaActiveDescendant": {
          "name": "ariaActiveDescendant",
          "setSignature": {
            "name": "ariaActiveDescendant",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 102,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "ariaAutocomplete": {
          "name": "ariaAutocomplete",
          "setSignature": {
            "name": "ariaAutocomplete",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 113,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "debounceTime": {
          "name": "debounceTime",
          "setSignature": {
            "name": "debounceTime",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 124,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 133,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "isExpanded": {
          "name": "isExpanded",
          "setSignature": {
            "name": "isExpanded",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 144,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 153,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "error": {
          "name": "error",
          "setSignature": {
            "name": "error",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 164,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-input': true,\n    'vds-combobox-input-wrapper': true,\n    'vds-state--success': true,\n    'vds-state--filled': true,\n    'vds-state--focus': _hasFocus,\n    'vds-state--disabled': disabled,\n    'vds-state--error': error,\n    'vds-state--readonly': readOnly\n  }\"\n  [attr.data-combobox-input-wrapper]=\"true\"\n>\n  <label\n    [htmlFor]=\"inputId\"\n    [id]=\"labelId\"\n    class=\"vds-input-label\"\n  >{{ label }}</label\n  >\n  <div class=\"vds-input-bar\">\n    <div class=\"vds-input-input\">\n      <input\n        #inputElement\n        type=\"text\"\n        class=\"vds-input--input-text\"\n        autocomplete=\"off\"\n        [id]=\"inputId\"\n        [readOnly]=\"readOnly\"\n        [disabled]=\"disabled\"\n        [attr.aria-autocomplete]=\"ariaAutocomplete\"\n        [attr.aria-activedescendant]=\"\n          isExpanded ? ariaActiveDescendant : null\n        \"\n        [attr.aria-controls]=\"ariaOwns\"\n        [attr.data-combobox-input]=\"true\"\n        [value]=\"displayValue\"\n        (focus)=\"handleFocus()\"\n        (blur)=\"handleBlur()\"\n        (keydown)=\"inputKeydownEvent.emit($event)\"\n        (keyup)=\"_inputChangeStream.next($event)\"\n      />\n      <button\n        aria-haspopup=\"true\"\n        aria-label=\"Open\"\n        role=\"button\"\n        tabindex=\"-1\"\n        type=\"button\"\n        (click)=\"handleButtonSelect($event)\"\n        [disabled]=\"disabled || readOnly\"\n        [attr.data-combobox-input-button]=\"true\"\n        [ngClass]=\"{\n          'vds-btn-icon': true,\n          'vds-btn-icon--light-tiny': true,\n          'vds-state--active': isExpanded\n        }\"\n      >\n        <span class=\"vds-btn--label\">\n          <vds-icon\n            [icon]=\"\n              isExpanded\n                ? 'arrow-collapse'\n                : 'arrow-expand'\n            \"\n            tiny=\"true\"\n          >\n          </vds-icon>\n        </span>\n      </button>\n    </div>\n  </div>\n  <span\n    [ngClass]=\"{ 'vds-state--hidden': !error }\"\n    class=\"vds-input-message\"\n    role=\"alert\"\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n  >\n    <vds-icon icon=\"visa_error\" tiny=\"true\"> </vds-icon>\n    {{ error }}\n  </span>\n</div>\n"
    },
    {
      "name": "InputCvvComponent",
      "id": "component-InputCvvComponent-7f933b53c4e7b67329819780b298297c",
      "file": "projects/vds-lib/src/lib/input-cvv/input-cvv.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-input-cvv",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./input-cvv.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disable statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 26,
          "type": "boolean"
        },
        {
          "name": "helpText",
          "description": "<p>The text that articulates the purpose to the user.</p>\n",
          "line": 38,
          "type": "string"
        },
        {
          "name": "id",
          "description": "<p>The id of the element.</p>\n",
          "line": 50,
          "type": "string"
        },
        {
          "name": "label",
          "description": "<p>The label for the input cvv.</p>\n",
          "line": 62,
          "type": "string"
        },
        {
          "name": "maxLength",
          "description": "<p>The max length of the cvv.</p>\n",
          "line": 74,
          "type": "number"
        },
        {
          "name": "name",
          "description": "<p>The name for the input cvv.</p>\n",
          "line": 86,
          "type": "string"
        },
        {
          "name": "required",
          "description": "<p>Set as required statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 100,
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "<p>The initial value of the cvv.</p>\n",
          "line": 112,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits changed value.</p>\n",
          "line": 123,
          "type": "EventEmitter"
        },
        {
          "name": "error",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits error object.</p>\n",
          "line": 128,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_disabled",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "_helpText",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "_label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "_maxLength",
          "defaultValue": "INPUT_CVV.LENGTH.MAX",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "_name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "_required",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 106
        },
        {
          "name": "_value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 118
        },
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 130
        },
        {
          "name": "helpId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 131
        },
        {
          "name": "initialValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "inputId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 133
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 196
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 142
        },
        {
          "name": "onBlur",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 163,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onFocus",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 156,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTyping",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 175,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 190
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 183,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { INPUT_CVV } from './input-cvv.constants';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { AbstractValueAccessor } from '../abstract-value-accessor';\n\n@Component({\n  selector: 'vds-input-cvv',\n  templateUrl: './input-cvv.component.html',\n})\nexport class InputCvvComponent extends AbstractValueAccessor\n  implements OnInit {\n  /**\n   * Disable statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled: boolean;\n\n  /**\n   * The text that articulates the purpose to the user.\n   */\n  @Input()\n  get helpText(): string {\n    return this._helpText;\n  }\n  set helpText(value) {\n    this._helpText = value;\n  }\n  _helpText: string;\n\n  /**\n   * The id of the element.\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  _id: string;\n\n  /**\n   * The label for the input cvv.\n   */\n  @Input()\n  get label(): string {\n    return this._label;\n  }\n  set label(value) {\n    this._label = value;\n  }\n  _label: string;\n\n  /**\n   * The max length of the cvv.\n   */\n  @Input()\n  get maxLength(): number {\n    return this._maxLength;\n  }\n  set maxLength(value) {\n    this._maxLength = value;\n  }\n  _maxLength: number = INPUT_CVV.LENGTH.MAX;\n\n  /**\n   * The name for the input cvv.\n   */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n  }\n  _name: string;\n\n  /**\n   * Set as required statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n  _required: boolean;\n\n  /**\n   * The initial value of the cvv.\n   */\n  @Input()\n  get value(): string {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value: string;\n\n  /**\n   * Emits changed value.\n   */\n  @Output() change = new EventEmitter<any>();\n\n  /**\n   * Emits error object.\n   */\n  @Output() error = new EventEmitter<any>();\n\n  focused = false;\n  helpId: string;\n  initialValue: string;\n  inputId: string;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.initialValue = this.value ? this.value : null;\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(INPUT_CVV.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + INPUT_CVV.SUFFIX.NAME;\n    this.inputId = `${this.id}${INPUT_CVV.SUFFIX.NATIVE}`;\n    this.helpId = `${this.id}${INPUT_CVV.SUFFIX.MESSAGE}`;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  onFocus(event?: Event): void {\n    if (this.disabled) {\n      return;\n    }\n    this.focused = true;\n  }\n\n  onBlur(el): void {\n    if (this.disabled) {\n      return;\n    }\n    this.focused = false;\n    if (el.invalid) {\n      this.error.emit(el.errors);\n    }\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  onTyping(el) {\n    if (el.invalid) {\n      this.error.emit(el.errors);\n    }\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  writeValue(value: any) {\n    super.writeValue(value);\n    this.value = value;\n    this.cdRef.detectChanges();\n    this.change.emit(this.value);\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  clear() {\n    this.value = null;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          }
        ],
        "line": 133,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": ["OnInit"],
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 29,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "helpText": {
          "name": "helpText",
          "setSignature": {
            "name": "helpText",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 41,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 53,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 65,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "maxLength": {
          "name": "maxLength",
          "setSignature": {
            "name": "maxLength",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 77,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "name": {
          "name": "name",
          "setSignature": {
            "name": "name",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 89,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "required": {
          "name": "required",
          "setSignature": {
            "name": "required",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 103,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 115,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"vds-input-cvv\">\n  <div\n    [ngClass]=\"{\n      'vds-input': true,\n      'vds-state--focus': focused,\n      'vds-state--disabled': (disabled) ? true : null,\n      'vds-state--error': (\n        inputCVV.invalid &&\n        (inputCVV.dirty || inputCVV.touched)\n      ) ? true : null\n    }\"\n  >\n    <label\n      class=\"vds-input-label\"\n      [for]=\"inputId\"\n    >\n      {{ label }}\n    </label>\n    <div class=\"vds-input-bar\">\n      <div class=\"vds-input-input\">\n        <input\n          class=\"vds-input--input-text\"\n          autocomplete=\"cc-csc\"\n          [attr.maxlength]=\"maxLength\"\n          [attr.aria-describedby]=\"helpId\"\n          [attr.aria-required]=\"required\"\n          [attr.aria-invalid]=\"inputCVV.invalid &&\n        (inputCVV.dirty || inputCVV.touched)\"\n          [id]=\"inputId\"\n          [name]=\"name\"\n          type=\"tel\"\n          [required]=\"required\"\n          (blur)=\"onBlur(inputCVV)\"\n          (focus)=\"onFocus($event)\"\n          (keyup)=\"onTyping(inputCVV)\"\n          [(ngModel)]=\"value\"\n          #inputCVV=\"ngModel\"\n        >\n      </div>\n      <div class=\"vds-input-option\">\n        <button\n          [attr.aria-label]=\"label\"\n          type=\"button\"\n          [ngClass]=\"{\n            'vds-btn-icon': true,\n            'vds-btn-icon--light-tiny': true,\n            'vds-state--hidden': (disabled) ? true : null\n          }\"\n        >\n         <span class=\"vds-btn-label\">\n           <svg class=\"vds-icon--tiny\" focusable=\"false\" tabindex=\"-1\">\n             <use href=\"#info--tiny\"></use>\n           </svg>\n         </span>\n        </button>\n      </div>\n    </div>\n    <span\n      [ngClass]=\"{\n        'vds-input-message': true,\n        'vds-state--hidden': !helpText\n      }\"\n      [id]=\"helpId\"\n      role=\"alert\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n    >\n      {{ helpText }}\n    </span>\n  </div>\n</div>\n"
    },
    {
      "name": "LinearProgressComponent",
      "id": "component-LinearProgressComponent-5d956fb95ef4a6ebe2f522736a7badfb",
      "file": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-linear-progress",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./linear-progress.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "determinate",
          "defaultValue": "false",
          "description": "<p>Sets the type of progress bar.</p>\n",
          "line": 15
        },
        {
          "name": "loaded",
          "defaultValue": "0",
          "description": "<p>The number corresponding to the quantity\nof processed data in a <em>determinate</em> progress bar.</p>\n",
          "line": 20
        },
        {
          "name": "mantissa",
          "defaultValue": "0",
          "description": "<p>The number to which percentages are expressed.\nSet to &#39;0&#39; by default</p>\n",
          "line": 25
        },
        {
          "name": "rounded",
          "defaultValue": "false",
          "description": "<p>Sets the border radius style.</p>\n",
          "line": 29
        },
        {
          "name": "total",
          "defaultValue": "0",
          "description": "<p>The number corresponding to the total quantity\nof expected data in a <em>determinate</em> progress bar.</p>\n",
          "line": 34
        },
        {
          "name": "units",
          "defaultValue": "UNIT_DEFAULT",
          "description": "<p>The data units in a <em>determinate</em> progress bar.</p>\n",
          "line": 38,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "percentage",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [
        {
          "name": "calculatePercentage",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 63
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport {\n  UNIT_DEFAULT,\n  LABEL_DEFAULT,\n} from './linear-progress.constants';\n\n@Component({\n  selector: 'vds-linear-progress',\n  templateUrl: './linear-progress.component.html',\n})\nexport class LinearProgressComponent implements OnInit {\n  /**\n   * Sets the type of progress bar.\n   */\n  @Input() determinate = false;\n  /**\n   * The number corresponding to the quantity\n   * of processed data in a *determinate* progress bar.\n   */\n  @Input() loaded = 0;\n  /**\n   * The number to which percentages are expressed.\n   * Set to '0' by default\n   */\n  @Input() mantissa = 0;\n  /**\n   * Sets the border radius style.\n   */\n  @Input() rounded = false;\n  /**\n   * The number corresponding to the total quantity\n   * of expected data in a *determinate* progress bar.\n   */\n  @Input() total = 0;\n  /**\n   * The data units in a *determinate* progress bar.\n   */\n  @Input() units: string = UNIT_DEFAULT;\n\n  label: string;\n  percentage: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.total = this.total > 0 ? this.total : 0;\n    if (this.loaded > this.total) {\n      this.loaded = this.total;\n    }\n    if (this.loaded < 0) {\n      this.loaded = 0;\n    }\n    this.percentage = this.calculatePercentage();\n    if (this.determinate) {\n      this.label = `${LABEL_DEFAULT.FIRST_CLAUSE}, ${\n        this.percentage\n      } ${LABEL_DEFAULT.SECOND_CLAUSE}`;\n    } else {\n      this.label = LABEL_DEFAULT.FIRST_CLAUSE;\n    }\n  }\n\n  calculatePercentage(): string {\n    let num: string;\n    if (this.loaded === 0 || this.total === 0) {\n      num = '0';\n    } else {\n      num = `${((this.loaded / this.total) * 100).toFixed(\n        this.mantissa\n      )}`;\n    }\n    num = parseInt(num, 10) > 100 ? '100' : num;\n    return `${num}%`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 41
      },
      "implements": ["OnInit"],
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-progress': !rounded,\n    'vds-progress--rounded': rounded,\n    'vds-state--determinate': determinate\n  }\">\n  <div class=\"vds-progress-background\"></div>\n  <div\n    class=\"vds-progress-bar\"\n    role=\"progressbar\"\n    [style.width]=\"!determinate ? percentage : calculatePercentage()\"\n    [attr.aria-label]=\"label\">\n  </div>\n  <div [ngClass]=\"{\n    'vds-progress-label': true,\n    'vds-grid--fluid': true,\n    'vds-state--hidden': !determinate\n    }\">\n    <div class=\"row\">\n      <div class=\"col\">{{ loaded }} {{ units }} / {{ total }} {{ units }}</div>\n      <div class=\"col vds-text--right\">{{ !determinate ? percentage : calculatePercentage() }}</div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "LinkComponent",
      "id": "component-LinkComponent-85b0fa13bcec2cc30274fc9800b7c4ee",
      "file": "projects/vds-lib/src/lib/link/link.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-link",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./link.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "description": "<p>ARIA label for accessibility.</p>\n",
          "line": 33,
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "<p>Disable statically or programmatically.\nUse as attribute or input property.\nDefault: <code>false</code></p>\n",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "external",
          "description": "<p>Set external to open the link in new tab.\nAdds icon to represent that the link will be opened in new tab.</p>\n",
          "line": 38,
          "type": "boolean"
        },
        {
          "name": "externalIcon",
          "defaultValue": "LINK.ICON.EXTERNAL",
          "description": "<p>Icon for external link. Default = <code>maximize</code></p>\n",
          "line": 42
        },
        {
          "name": "href",
          "description": "<p>Hyperlink URL or URL fragment.</p>\n",
          "line": 21,
          "type": "string"
        },
        {
          "name": "id",
          "description": "<p>The id of the element.</p>\n",
          "line": 25,
          "type": "string"
        },
        {
          "name": "inline",
          "description": "<p>Set inline for usage in middle of text.</p>\n",
          "line": 46,
          "type": "boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of the element.</p>\n",
          "line": 29,
          "type": "string"
        },
        {
          "name": "route",
          "description": "<p>Route within the app.</p>\n",
          "line": 50,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "linkID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "linkName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 53
        }
      ],
      "methodsClass": [
        {
          "name": "navigateToLink",
          "args": [
            {
              "name": "event",
              "type": "Event"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { LINK } from './link.constants';\nimport { RADIO } from '../radio/radio.constant';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'vds-link',\n  templateUrl: './link.component.html',\n})\nexport class LinkComponent implements OnInit {\n  /**\n   * Disable statically or programmatically.\n   * Use as attribute or input property.\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * Hyperlink URL or URL fragment.\n   */\n  @Input() href: string;\n  /**\n   * The id of the element.\n   */\n  @Input() id: string;\n  /**\n   * The name of the element.\n   */\n  @Input() name: string;\n  /**\n   * ARIA label for accessibility.\n   */\n  @Input() ariaLabel: string;\n  /**\n   * Set external to open the link in new tab.\n   * Adds icon to represent that the link will be opened in new tab.\n   */\n  @Input() external: boolean;\n  /**\n   * Icon for external link. Default = <code>maximize</code>\n   */\n  @Input() externalIcon = LINK.ICON.EXTERNAL;\n  /**\n   * Set inline for usage in middle of text.\n   */\n  @Input() inline: boolean;\n  /**\n   * Route within the app.\n   */\n  @Input() route: boolean;\n\n  linkID: string;\n  linkName: string;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.href = this.href ? this.href : '';\n    this.ariaLabel = this.ariaLabel ? this.ariaLabel : '';\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(LINK.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + RADIO.SUFFIX.NAME;\n    this.linkID = `${this.id}${LINK.SUFFIX.NATIVE}`;\n    this.linkName = `${this.name}${LINK.SUFFIX.NATIVE}`;\n    this.inline = this.vdsLibService.triageDisabledValue(\n      this.inline\n    );\n    this.route = this.vdsLibService.triageDisabledValue(\n      this.route\n    );\n    this.external = this.vdsLibService.triageDisabledValue(\n      this.external\n    );\n  }\n\n  navigateToLink(event: Event) {\n    event.preventDefault();\n    let newWindow: Window;\n\n    if (this.route) {\n      this.router.navigate([this.href]);\n      return;\n    }\n\n    newWindow = this.external\n      ? window.open(this.href, '_blank')\n      : window.open(this.href, '_self');\n    newWindow.opener = null;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 53,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<a\n  [attr.disabled]=\"disabled ? true : null\"\n  [id]=\"linkID\"\n  [name]=\"linkName\"\n  [attr.aria-label]=\"ariaLabel\"\n  [ngClass]=\"{\n    'vds-state--disabled': disabled ? true : null,\n    'vds-link': true,\n    'vds-link--inline': inline ? true : null\n  }\"\n  [attr.href]=\"href\"\n  (click)=\"navigateToLink($event)\"\n>\n  <ng-content></ng-content>\n  <vds-icon\n    *ngIf=\"external\"\n    [icon]=\"externalIcon\"\n    tiny=\"true\"\n  >\n  </vds-icon>\n</a>\n"
    },
    {
      "name": "ListboxComponent",
      "id": "component-ListboxComponent-df7be2e4f4f94bbcab486ec157a5f768",
      "file": "projects/vds-lib/src/lib/combobox/listbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-combobox-listbox",
      "styleUrls": ["./listbox.component.scss"],
      "styles": [],
      "templateUrl": ["./listbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabeledBy",
          "line": 42
        },
        {
          "name": "displaySelectCheckmark",
          "line": 82
        },
        {
          "name": "highlightIndex",
          "line": 53
        },
        {
          "name": "isExpanded",
          "line": 93
        },
        {
          "name": "listboxId",
          "line": 31
        },
        {
          "name": "listData",
          "line": 71
        },
        {
          "name": "listItemTemplate",
          "line": 102,
          "type": "TemplateRef<any>"
        },
        {
          "name": "selectIndex",
          "line": 62
        }
      ],
      "outputsClass": [
        {
          "name": "itemSelectEvent",
          "defaultValue": "new EventEmitter()",
          "line": 105,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_ariaLabeledBy",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "_displaySelectCheckmark",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "_highlightIndex",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "_isExpanded",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 99
        },
        {
          "name": "_isValueValid",
          "defaultValue": "isValueValid",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "_listboxId",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "_listData",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 79
        },
        {
          "name": "_selectIndex",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "listBox",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 108,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'listBox'"
            }
          ]
        },
        {
          "name": "listItems",
          "type": "QueryList<any>",
          "optional": false,
          "description": "",
          "line": 111,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "'listItems'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "resetScrollTop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 117
        },
        {
          "name": "setScrollTop",
          "args": [
            {
              "name": "listIndex",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 121,
          "jsdoctags": [
            {
              "name": "listIndex",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "trackByFn",
          "args": [
            {
              "name": "index",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 113,
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\nimport { isValueValid, isValidString } from './utils';\n\n@Component({\n  selector: 'vds-combobox-listbox',\n  templateUrl: './listbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./listbox.component.scss'],\n})\nexport class ListboxComponent {\n  _isValueValid = isValueValid;\n\n  @Input()\n  get listboxId() {\n    return this._listboxId;\n  }\n  set listboxId(value) {\n    this._listboxId = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _listboxId = null;\n\n  @Input()\n  get ariaLabeledBy() {\n    return this._ariaLabeledBy;\n  }\n  set ariaLabeledBy(value) {\n    this._ariaLabeledBy = isValidString(value)\n      ? value.toString()\n      : null;\n  }\n  _ariaLabeledBy = null;\n\n  @Input()\n  get highlightIndex() {\n    return this._highlightIndex;\n  }\n  set highlightIndex(value) {\n    this._highlightIndex = coerceNumberProperty(value, 0);\n  }\n  _highlightIndex = 0;\n\n  @Input()\n  get selectIndex() {\n    return this._selectIndex;\n  }\n  set selectIndex(value) {\n    this._selectIndex = coerceNumberProperty(value, 0);\n  }\n  _selectIndex = 0;\n\n  @Input()\n  get listData() {\n    return this._listData;\n  }\n  set listData(value) {\n    if (Array.isArray(value)) {\n      this._listData = value;\n    }\n  }\n  _listData = [];\n\n  @Input()\n  get displaySelectCheckmark() {\n    return this._displaySelectCheckmark;\n  }\n  set displaySelectCheckmark(value) {\n    this._displaySelectCheckmark = coerceBooleanProperty(\n      value\n    );\n  }\n  _displaySelectCheckmark = true;\n\n  @Input()\n  get isExpanded() {\n    return this._isExpanded;\n  }\n  set isExpanded(value) {\n    this._isExpanded = coerceBooleanProperty(value);\n  }\n  _isExpanded = false;\n\n  @Input()\n  listItemTemplate: TemplateRef<any>;\n\n  @Output()\n  itemSelectEvent = new EventEmitter();\n\n  @ViewChild('listBox')\n  listBox: ElementRef;\n\n  @ViewChildren('listItems')\n  listItems: QueryList<any>;\n\n  trackByFn(index) {\n    return index;\n  }\n\n  resetScrollTop() {\n    this.listBox.nativeElement.scrollTop = 0;\n  }\n\n  setScrollTop(listIndex) {\n    if (this.listBox.nativeElement.children[listIndex]) {\n      this.listBox.nativeElement.scrollTop =\n        this.listBox.nativeElement.children[listIndex]\n          .offsetTop - this.listBox.nativeElement.offsetTop;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-listbox--item[aria-selected='true'] {\n  background-color: #e0eafa;\n}\n\n.vds-listbox--item[aria-checked='true'] {\n  background-color: #003ea9;\n  color: #fff;\n\n  [class^='vds-icon'] use {\n    fill: #fff !important;\n  }\n}\n",
          "styleUrl": "./listbox.component.scss"
        }
      ],
      "stylesData": "",
      "accessors": {
        "listboxId": {
          "name": "listboxId",
          "setSignature": {
            "name": "listboxId",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 34,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "ariaLabeledBy": {
          "name": "ariaLabeledBy",
          "setSignature": {
            "name": "ariaLabeledBy",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 45,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "highlightIndex": {
          "name": "highlightIndex",
          "setSignature": {
            "name": "highlightIndex",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 56,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "selectIndex": {
          "name": "selectIndex",
          "setSignature": {
            "name": "selectIndex",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 65,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "listData": {
          "name": "listData",
          "setSignature": {
            "name": "listData",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 74,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "displaySelectCheckmark": {
          "name": "displaySelectCheckmark",
          "setSignature": {
            "name": "displaySelectCheckmark",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 85,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "isExpanded": {
          "name": "isExpanded",
          "setSignature": {
            "name": "isExpanded",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 96,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-template\n  #defaultListItem\n  let-data\n  let-isSelected=\"isSelected\"\n>\n      <span class=\"vds-listbox-item-container\">\n        <span>{{\n          _isValueValid(data.value) && _isValueValid(data.label) ? data.label : data\n          }}</span>\n        <ng-container\n          *ngIf=\"displaySelectCheckmark && isSelected\"\n          [ngTemplateOutlet]=\"checkmark\"\n        ></ng-container>\n      </span>\n</ng-template>\n\n<ng-template #checkmark>\n  <vds-icon icon=\"visa_checkmark\" tiny=\"true\">\n  </vds-icon>\n</ng-template>\n\n<div\n  [attr.hidden]=\"isExpanded ? null : ''\"\n  [attr.data-combobox-listbox-container]=\"true\"\n  [ngClass]=\"{ 'vds-state--hidden': !isExpanded }\"\n>\n  <div\n    class=\"vds-menu--absolute vds-menu--show vdp-combobox-listbox\"\n  >\n    <ul\n      #listBox\n      role=\"listbox\"\n      class=\"vds-listbox\"\n      [id]=\"listboxId\"\n      [attr.aria-labelledby]=\"ariaLabeledBy\"\n      [attr.data-combobox-listbox]=\"true\"\n    >\n      <li\n        #listItems\n        role=\"option\"\n        *ngFor=\"\n              let data of listData;\n              let i = index;\n              trackBy: trackByFn\n            \"\n        [id]=\"listboxId + '_listItem_' + i\"\n        [ngClass]=\"{\n          'vds-listbox-item': true,\n          'vds-listbox--item-highlight': (highlightIndex === i) ? true : null\n        }\"\n        [attr.aria-selected]=\"\n              highlightIndex === i ? 'true' : null\n            \"\n        [attr.aria-checked]=\"selectIndex === i\"\n        [attr.data-combobox-list-item]=\"i\"\n        (click)=\"\n              itemSelectEvent.emit({\n                event: $event,\n                index: i,\n                data: data\n              })\n            \"\n      >\n        <ng-container\n          [ngTemplateOutlet]=\"\n                listItemTemplate || defaultListItem\n              \"\n          [ngTemplateOutletContext]=\"{\n                $implicit: data,\n                isSelected: selectIndex === i,\n                checkmarkTemplate: checkmark\n              }\"\n        >\n        </ng-container>\n      </li>\n    </ul>\n  </div>\n</div>\n"
    },
    {
      "name": "ListboxComponent",
      "id": "component-ListboxComponent-16e2eb7ffdd6cda4b8c475b5a6acaacb-1",
      "file": "projects/vds-lib/src/lib/listbox/listbox.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-listbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./listbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "id",
          "description": "<p>The id of the listbox element.</p>\n",
          "line": 19,
          "type": "string"
        },
        {
          "name": "isMultiselect",
          "description": "<p>Used to indicate listbox multi-select.</p>\n",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "<p>The list of items.\n<code>\n   [{ label: string, value: string }]\n</code></p>\n",
          "line": 30,
          "type": "Array<any>"
        },
        {
          "name": "label",
          "description": "<p>The user display label of the listbox. Not for use within vds-menu.</p>\n",
          "line": 34,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name of the listbox element.</p>\n",
          "line": 38,
          "type": "string"
        },
        {
          "name": "selectedItems",
          "description": "<p>The selected items in the listbox.</p>\n",
          "line": 42,
          "type": "Array<any>"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits selected items.</p>\n",
          "line": 46,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "activeDescendent",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [114]
        },
        {
          "name": "currentIndex",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [114]
        },
        {
          "name": "listboxID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [114]
        },
        {
          "name": "listboxLabel",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [114]
        },
        {
          "name": "listboxList",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [114]
        },
        {
          "name": "listboxListItem",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [114]
        },
        {
          "name": "listboxName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [114]
        },
        {
          "name": "value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "changeMultiSelectStatusQuo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 200
        },
        {
          "name": "changeStatusQuo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 144
        },
        {
          "name": "checkForPreSelectedItems",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 159
        },
        {
          "name": "comingDown",
          "args": [
            {
              "name": "event",
              "type": "Event"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 125,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "findSingleSelectionPosition",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 189
        },
        {
          "name": "goingUp",
          "args": [
            {
              "name": "event",
              "type": "Event"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59
        },
        {
          "name": "select",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "selectMultiSelectItem",
          "args": [
            {
              "name": "event",
              "type": "Event"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 137,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "stopEvents",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { LISTBOX } from './listbox.constant';\n\n@Component({\n  selector: 'vds-listbox',\n  templateUrl: './listbox.component.html',\n})\nexport class ListboxComponent implements OnInit {\n  /**\n   * The id of the listbox element.\n   */\n  @Input() id: string;\n  /**\n   * Used to indicate listbox multi-select.\n   */\n  @Input() isMultiselect: boolean;\n  /**\n   * The list of items.\n   * <code>\n   *   [{ label: string, value: string }]\n   * </code>\n   */\n  @Input() items: Array<any>;\n  /**\n   * The user display label of the listbox. Not for use within vds-menu.\n   */\n  @Input() label: string;\n  /**\n   * The name of the listbox element.\n   */\n  @Input() name: string;\n  /**\n   * The selected items in the listbox.\n   */\n  @Input() selectedItems: Array<any>;\n  /**\n   * Emits selected items.\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  public currentIndex: number;\n  public listboxID: string;\n  public listboxName: string;\n  public listboxLabel: string;\n  public listboxList: string;\n  public listboxListItem: string;\n  public activeDescendent: string;\n  public value: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(LISTBOX.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + LISTBOX.SUFFIX.NAME;\n    this.listboxID = `${this.id}${LISTBOX.SUFFIX.NATIVE}`;\n    this.listboxName = `${this.name}${\n      LISTBOX.SUFFIX.NATIVE\n    }`;\n    this.listboxLabel = `${this.id}${LISTBOX.SUFFIX.LABEL}`;\n    this.listboxList = `${this.id}${LISTBOX.SUFFIX.LIST}`;\n    this.listboxListItem = `${this.id}${\n      LISTBOX.SUFFIX.LIST_ITEM\n    }`;\n    this.isMultiselect = this.vdsLibService.triageDisabledValue(\n      this.isMultiselect\n    );\n    this.checkForPreSelectedItems();\n  }\n\n  stopEvents(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  select(event) {\n    this.stopEvents(event);\n    const el: Element = event.target as Element;\n    let theIndex: string = el.getAttribute(\n      LISTBOX.ATTRIBUTES.DATA_INDEX\n    );\n    if (\n      el\n        .getAttribute(LISTBOX.ATTRIBUTES.CLASS)\n        .indexOf(LISTBOX.ATTRIBUTES.CHECKBOX) !== -1\n    ) {\n      theIndex = el\n        .getAttribute(LISTBOX.ATTRIBUTES.FOR)\n        .split(\n          LISTBOX.ATTRIBUTES.CHECKBOX +\n            LISTBOX.SYMBOLS.HYPHEN\n        )[1]\n        .split(LISTBOX.SYMBOLS.HYPHEN)[0];\n    }\n    this.currentIndex = parseInt(theIndex, 10);\n    if (this.isMultiselect) {\n      this.changeMultiSelectStatusQuo();\n      return;\n    }\n    this.changeStatusQuo();\n  }\n\n  goingUp(event: Event) {\n    this.stopEvents(event);\n    if (this.currentIndex === 0) {\n      return;\n    }\n    this.currentIndex -= 1;\n    if (this.isMultiselect) {\n      return;\n    }\n    this.changeStatusQuo();\n  }\n\n  comingDown(event: Event) {\n    this.stopEvents(event);\n    if (this.currentIndex === this.items.length - 1) {\n      return;\n    }\n    this.currentIndex += 1;\n    if (this.isMultiselect) {\n      return;\n    }\n    this.changeStatusQuo();\n  }\n\n  selectMultiSelectItem(event: Event) {\n    this.stopEvents(event);\n    if (this.isMultiselect) {\n      this.changeMultiSelectStatusQuo();\n    }\n  }\n\n  changeStatusQuo() {\n    this.value = this.items[this.currentIndex].value;\n    this.activeDescendent =\n      this.listboxListItem +\n      LISTBOX.SYMBOLS.HYPHEN +\n      this.currentIndex;\n    this.selectedItems = [\n      {\n        label: this.items[this.currentIndex].label,\n        value: this.value,\n      },\n    ];\n    this.change.next(this.selectedItems);\n  }\n\n  checkForPreSelectedItems() {\n    if (this.selectedItems && this.selectedItems.length) {\n      this.activeDescendent =\n        this.listboxListItem +\n        LISTBOX.SYMBOLS.HYPHEN +\n        this.findSingleSelectionPosition();\n\n      if (!this.isMultiselect) {\n        this.value = this.selectedItems[0].value;\n        this.change.next(this.selectedItems);\n        return;\n      }\n\n      const multiSelectInputItems = {};\n      let newValue = '';\n      this.value = '';\n      this.selectedItems.map((item) => {\n        multiSelectInputItems[item.value] = true;\n      });\n      this.items.map((item) => {\n        if (multiSelectInputItems[item.value]) {\n          item.checked = true;\n          newValue += item.value + LISTBOX.SYMBOLS.COMMA;\n        }\n      });\n      this.value = newValue;\n      this.change.next(this.selectedItems);\n    }\n  }\n\n  findSingleSelectionPosition(): number {\n    const that = this;\n    let foundIndex = -1;\n    this.items.forEach((item, index) => {\n      if (that.selectedItems[0].value === item.value) {\n        foundIndex = index;\n      }\n    });\n    return foundIndex;\n  }\n\n  changeMultiSelectStatusQuo() {\n    const that = this;\n    let newValue = '';\n    this.value = '';\n    this.selectedItems = [];\n    this.activeDescendent =\n      this.listboxListItem +\n      LISTBOX.SYMBOLS.HYPHEN +\n      this.currentIndex;\n    this.items[this.currentIndex].checked = this.items[\n      this.currentIndex\n    ].checked\n      ? !this.items[this.currentIndex].checked\n      : true;\n    this.items.map((item) => {\n      if (item.checked) {\n        that.selectedItems.push({\n          label: item.label,\n          value: item.value,\n        });\n        newValue += item.value + LISTBOX.SYMBOLS.COMMA;\n      }\n    });\n    this.value = newValue;\n    this.change.next(this.selectedItems);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 55,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "isDuplicate": true,
      "duplicateId": 1,
      "duplicateName": "ListboxComponent-1",
      "templateData": "<div class=\"vds-listbox-container\">\n  <label\n    [for]=\"listboxID\"\n    [id]=\"listboxLabel\"\n    class=\"vds-listbox-label\"\n  >\n    {{ label }}\n  </label>\n  <input\n    [attr.value]=\"value\"\n    [name]=\"listboxID\"\n    class=\"vds-listbox-input\"\n    type=\"hidden\"\n  >\n  <ul\n    [attr.aria-activedescendant]=\"activeDescendent\"\n    [attr.aria-labelledby]=\"listboxLabel\"\n    [attr.aria-multiselectable]=\"(isMultiselect) ? true : null\"\n    [id]=\"listboxList\"\n    (click)=\"select($event)\"\n    (keyup.arrowDown)=\"comingDown($event)\"\n    (keyup.arrowUp)=\"goingUp($event)\"\n    (keyup.enter)=\"selectMultiSelectItem($event)\"\n    (keyup.space)=\"selectMultiSelectItem($event)\"\n    [ngClass]=\"{\n      'vds-listbox': true,\n      'vds-select--multi': (isMultiselect) ? true : null\n    }\"\n    role=\"listbox\"\n    tabindex=\"0\"\n  >\n    <ng-container\n      *ngIf=\"!isMultiselect\">\n      <ng-container\n        *ngTemplateOutlet=\"singleSelect; context:{\n          items: items,\n          listboxListItem: listboxListItem\n        }\">\n      </ng-container>\n    </ng-container>\n    <ng-container\n      *ngIf=\"isMultiselect\">\n      <ng-container\n        *ngTemplateOutlet=\"multiSelect; context:{\n          items: items,\n          listboxListItem: listboxListItem\n        }\">\n      </ng-container>\n    </ng-container>\n  </ul>\n</div>\n\n<ng-template\n  #multiSelect\n  let-items=\"items\"\n  let-listboxListItem=\"listboxListItem\"\n>\n  <li\n    *ngFor=\"let item of items; index as i\"\n    [id]=\"listboxListItem + '-' + i\"\n    [attr.aria-selected]=\"!!(item.checked)\"\n    [attr.data-id]=\"listboxListItem + '-' + i\"\n    [attr.data-index]=\"i\"\n    [attr.data-value]=\"item.value\"\n    [attr.data-label]=\"item.label\"\n    [ngClass]=\"{\n      'vds-listbox-item': true\n    }\"\n    role=\"option\"\n  >\n    <vds-checkbox\n      [checked]=\"item.checked\"\n      [id]=\"listboxListItem + '-checkbox-' + i\"\n      [name]=\"listboxListItem\"\n      [label]=\"item.label\"\n      [value]=\"item.value\"\n    >\n    </vds-checkbox>\n  </li>\n</ng-template>\n\n<ng-template\n  #singleSelect\n  let-items=\"items\"\n  let-listboxListItem=\"listboxListItem\"\n>\n  <li\n    *ngFor=\"let item of items; index as i\"\n    [id]=\"listboxListItem + '-' + i\"\n    [attr.data-id]=\"listboxListItem + '-' + i\"\n    [attr.data-index]=\"i\"\n    [attr.data-value]=\"item.value\"\n    [attr.data-label]=\"item.label\"\n    [ngClass]=\"{\n      'vds-listbox-item': true,\n      'vds-state--selected': (item.value === value) ? true : null\n    }\"\n    role=\"option\"\n  >\n    {{ item.label }}\n  </li>\n</ng-template>\n"
    },
    {
      "name": "ListComponent",
      "id": "component-ListComponent-df0bbbe54b354e34adec648db0a90702",
      "file": "projects/vds-lib/src/lib/list/list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-list",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "items",
          "description": "<p>Array of list items.</p>\n",
          "line": 13,
          "type": "Array<string>"
        },
        {
          "name": "ordered",
          "description": "<p>Sets list as ordered.\nDefaults to unordered.</p>\n",
          "line": 26,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_items",
          "type": "Array<string>",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "_ordered",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 32
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-list',\n  templateUrl: './list.component.html',\n})\nexport class ListComponent implements OnInit {\n  /**\n   * Array of list items.\n   */\n  @Input()\n  get items(): Array<string> {\n    return this._items;\n  }\n  set items(value) {\n    this._items = value;\n  }\n  _items: Array<string>;\n\n  /**\n   * Sets list as ordered.\n   * Defaults to unordered.\n   */\n  @Input()\n  get ordered(): boolean {\n    return this._ordered;\n  }\n  set ordered(value) {\n    this._ordered = coerceBooleanProperty(value);\n  }\n  _ordered: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 32
      },
      "implements": ["OnInit"],
      "accessors": {
        "items": {
          "name": "items",
          "setSignature": {
            "name": "items",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 16,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "ordered": {
          "name": "ordered",
          "setSignature": {
            "name": "ordered",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 29,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"!ordered else orderedList\">\n  <ul class=\"vds-list\">\n    <ng-container\n      *ngTemplateOutlet=\"listItems; context: {\n        items: items\n      }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n\n<ng-template #orderedList>\n  <ol class=\"vds-list vds-list--ordered\">\n    <ng-container\n      *ngTemplateOutlet=\"listItems; context: {\n        items: items\n      }\"\n    >\n    </ng-container>\n  </ol>\n</ng-template>\n\n<ng-template #listItems let-items=\"items\">\n  <li\n    *ngFor=\"let item of items\"\n    class=\"vds-list-item\">\n    <ng-container\n      *ngTemplateOutlet=\"listItem; context: {\n        item: item\n      }\"\n    >\n    </ng-container>\n  </li>\n</ng-template>\n\n<ng-template #listItem let-item=\"item\">\n    {{ item }}\n</ng-template>\n"
    },
    {
      "name": "MenuComponent",
      "id": "component-MenuComponent-83c60437628c7a070b259ce910d8f551",
      "file": "projects/vds-lib/src/lib/menu/menu.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-menu",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./menu.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "absolute",
          "description": "<p>Sets menu positioning as absolute, if truthy.</p>\n",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "fixed",
          "description": "<p>Sets menu positioning as fixed, if truthy.</p>\n",
          "line": 21,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "listbox",
          "type": "ListboxComponent",
          "optional": false,
          "description": "",
          "line": 23,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ListboxComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ContentChild,\n  AfterContentInit,\n} from '@angular/core';\nimport { ListboxComponent } from '../listbox/listbox.component';\n\n@Component({\n  selector: 'vds-menu',\n  templateUrl: './menu.component.html',\n})\nexport class MenuComponent implements AfterContentInit {\n  /**\n   * Sets menu positioning as absolute, if truthy.\n   */\n  @Input() absolute: boolean;\n  /**\n   * Sets menu positioning as fixed, if truthy.\n   */\n  @Input() fixed: boolean;\n\n  @ContentChild(ListboxComponent) listbox: ListboxComponent;\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    if (this.listbox && this.listbox.label) {\n      this.listbox.label = null;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 23
      },
      "implements": ["AfterContentInit"],
      "templateData": "<div\n  [ngClass]=\"{\n  'vds-menu': (!fixed && !absolute) || (fixed && absolute) ? true : null,\n  'vds-menu--fixed': (fixed && !absolute) ? true : null,\n  'vds-menu--absolute': (!fixed && absolute) ? true : null\n  }\"\n>\n  <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "NavbuttonComponent",
      "id": "component-NavbuttonComponent-4375532c111a871e5610cb46653bdc27",
      "file": "projects/vds-lib/src/lib/navmenu/navbutton/navbutton.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-navbutton",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navbutton.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "label",
          "line": 19,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "activate",
          "defaultValue": "new EventEmitter()",
          "line": 21,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "dropdownIcon",
          "defaultValue": "NAV_DEFAULT.down",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "isExpanded",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46
        },
        {
          "name": "emitClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "setIcon",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "modifierKind": [112]
        },
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 85,
          "modifierKind": [117],
          "inheritance": {
            "file": "NavChild"
          }
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 84,
          "modifierKind": [117],
          "inheritance": {
            "file": "NavChild"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  EventEmitter,\n  Output,\n  Input,\n} from '@angular/core';\nimport {\n  NAV_DEFAULT,\n  NavChild,\n} from '../../nav/nav.constants';\n\n@Component({\n  selector: 'vds-navbutton',\n  templateUrl: './navbutton.component.html',\n})\nexport class NavbuttonComponent extends NavChild\n  implements OnInit {\n  @Input() label: string;\n\n  @Output() activate = new EventEmitter();\n\n  dropdownIcon: string = NAV_DEFAULT.down;\n  isExpanded = false;\n\n  constructor() {\n    super();\n  }\n\n  private setIcon() {\n    this.dropdownIcon =\n      this.dropdownIcon === NAV_DEFAULT.down\n        ? NAV_DEFAULT.up\n        : NAV_DEFAULT.down;\n  }\n\n  ngOnInit() {}\n\n  emitClick() {\n    this.activate.emit();\n    this.isExpanded = !this.isExpanded;\n    this.setIcon();\n  }\n\n  open() {}\n  close() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 24
      },
      "extends": "NavChild",
      "implements": ["OnInit"],
      "templateData": "<vds-button \n  variant=\"split\" \n  icon=\"arrow-expand\"\n  (click)=\"emitClick()\"\n  [attr.aria-expanded]=\"isExpanded\" \n  [attr.ariaLabel]=\"label\">\n    <ng-content></ng-content>\n</vds-button>"
    },
    {
      "name": "NavComponent",
      "id": "component-NavComponent-8f5514a217e5e360fde3ddd76000b715",
      "file": "projects/vds-lib/src/lib/nav/nav.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: ParentNav, useExisting: forwardRef(() => NavComponent),\n}",
          "type": "component"
        }
      ],
      "selector": "vds-nav",
      "styleUrls": ["./nav.component.scss"],
      "styles": [],
      "templateUrl": ["./nav.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "alt",
          "defaultValue": "NAV_DEFAULT.altText",
          "description": "<p>Sets the logo icon&#39;s fallback/aria text.\nDefaults to &#39;Visa icon&#39;.</p>\n",
          "line": 49,
          "type": "string"
        },
        {
          "name": "appName",
          "description": "<p>Name of the application</p>\n",
          "line": 79,
          "type": "string"
        },
        {
          "name": "colorScheme",
          "defaultValue": "NavColorScheme.DEFAULT",
          "description": "<p>Sets the color scheme by application type.</p>\n",
          "line": 58,
          "type": "NavColorScheme"
        },
        {
          "name": "horizontalFullWidth",
          "description": "<p>Sets the horizontal nav content to take up the full width of the viewport.</p>\n",
          "line": 40,
          "type": "boolean"
        },
        {
          "name": "href",
          "description": "<p>The path that the nav goes to when the user\nclicks the logo icon.</p>\n",
          "line": 54,
          "type": "string"
        },
        {
          "name": "position",
          "description": "<p>Sets the nav positioning.\nOptions are &#39;fixed&#39;, &#39;absolute&#39; or &#39;relative&#39;\n(defaults to fixed).</p>\n",
          "line": 65,
          "type": "NavPosition"
        },
        {
          "name": "skipLabel",
          "defaultValue": "NAV_DEFAULT.skipLabel",
          "description": "<p>Sets the text for a11y skip label.\nDefaults to &#39;Skip to main content&#39;.</p>\n",
          "line": 70,
          "type": "string"
        },
        {
          "name": "skipPath",
          "defaultValue": "NAV_DEFAULT.skipPath",
          "description": "<p>Navigation for skip a11y tabbing. Defaults to empty string.</p>\n",
          "line": 74,
          "type": "string"
        },
        {
          "name": "src",
          "description": "<p>Sets the logo icon. Defaults to Visa logo.</p>\n",
          "line": 44,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "allLinks",
          "defaultValue": "{}",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 99
        },
        {
          "name": "currentIcon",
          "defaultValue": "NAV_DEFAULT.menu",
          "type": "",
          "optional": false,
          "description": "",
          "line": 91
        },
        {
          "name": "currentlySelected",
          "type": "NavlinkComponent",
          "optional": false,
          "description": "",
          "line": 97
        },
        {
          "name": "currentURL",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 95
        },
        {
          "name": "isMobile",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 88
        },
        {
          "name": "isRouting",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 89
        },
        {
          "name": "justLoaded",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 98
        },
        {
          "name": "links",
          "type": "QueryList<NavlinkComponent>",
          "optional": false,
          "description": "",
          "line": 81,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "NavlinkComponent"
            }
          ]
        },
        {
          "name": "menu",
          "type": "QueryList<NavmenuComponent>",
          "optional": false,
          "description": "",
          "line": 86,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "NavmenuComponent"
            }
          ]
        },
        {
          "name": "name",
          "defaultValue": "NAV_DEFAULT.name",
          "type": "",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "NAV_DEFAULT",
          "defaultValue": "NAV_DEFAULT",
          "type": "",
          "optional": false,
          "description": "",
          "line": 94
        },
        {
          "name": "NavColorScheme",
          "defaultValue": "NavColorScheme",
          "type": "",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "Position",
          "defaultValue": "NavPosition",
          "type": "",
          "optional": false,
          "description": "",
          "line": 93
        },
        {
          "name": "prevLink",
          "type": "NavlinkComponent",
          "optional": false,
          "description": "",
          "line": 96
        },
        {
          "name": "rightButton",
          "type": "",
          "optional": false,
          "description": "",
          "line": 36,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ButtonComponent"
            }
          ]
        },
        {
          "name": "vdsLibService",
          "type": "VdsLibService",
          "optional": false,
          "description": "",
          "line": 102,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 144
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 134
        },
        {
          "name": "resetHighlighting",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 176
        },
        {
          "name": "setColorScheme",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 123,
          "modifierKind": [112]
        },
        {
          "name": "setLogoSrc",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 182,
          "modifierKind": [112]
        },
        {
          "name": "setPosition",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111,
          "modifierKind": [112]
        },
        {
          "name": "updateLibServiceWithNavInfo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 170,
          "modifierKind": [112]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  ContentChild,\n  forwardRef,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from '@angular/core';\nimport {\n  NAV_DEFAULT,\n  NavColorScheme,\n  NavPosition,\n} from './nav.constants';\nimport { VdsLibService } from '../vds-lib.service';\nimport { ButtonComponent } from '../button/button.component';\nimport { ParentNav } from '../vds-lib.service.constants';\nimport { NavlinkComponent } from '../navlink/navlink.component';\nimport { Router } from '@angular/router';\nimport { NavmenuComponent } from '../navmenu/navmenu.component';\n\n@Component({\n  selector: 'vds-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss'],\n  providers: [\n    {\n      provide: ParentNav,\n      useExisting: forwardRef(() => NavComponent),\n    },\n  ],\n})\nexport class NavComponent\n  implements OnInit, AfterContentInit {\n  @ContentChild(ButtonComponent) rightButton;\n  /**\n   * Sets the horizontal nav content to take up the full width of the viewport.\n   */\n  @Input() horizontalFullWidth: boolean;\n  /**\n   * Sets the logo icon. Defaults to Visa logo.\n   */\n  @Input() src: string;\n  /**\n   * Sets the logo icon's fallback/aria text.\n   * Defaults to 'Visa icon'.\n   */\n  @Input() alt: string = NAV_DEFAULT.altText;\n  /**\n   * The path that the nav goes to when the user\n   * clicks the logo icon.\n   */\n  @Input() href: string;\n  /**\n   * Sets the color scheme by application type.\n   */\n  @Input() colorScheme: NavColorScheme =\n    NavColorScheme.DEFAULT;\n  /**\n   * Sets the nav positioning.\n   * Options are 'fixed', 'absolute' or 'relative'\n   * (defaults to fixed).\n   */\n  @Input() position: NavPosition;\n  /**\n   * Sets the text for a11y skip label.\n   * Defaults to 'Skip to main content'.\n   */\n  @Input() skipLabel: string = NAV_DEFAULT.skipLabel;\n  /**\n   * Navigation for skip a11y tabbing. Defaults to empty string.\n   */\n  @Input() skipPath: string = NAV_DEFAULT.skipPath;\n\n  /**\n   * Name of the application\n   */\n  @Input() appName: string;\n\n  @ContentChildren(NavlinkComponent) links: QueryList<\n    NavlinkComponent\n  >;\n\n  @ContentChildren(NavmenuComponent)\n  menu: QueryList<NavmenuComponent>;\n\n  isMobile: boolean;\n  isRouting: boolean;\n  name = NAV_DEFAULT.name;\n  currentIcon = NAV_DEFAULT.menu;\n  NavColorScheme = NavColorScheme;\n  Position = NavPosition;\n  NAV_DEFAULT = NAV_DEFAULT;\n  currentURL: string;\n  prevLink: NavlinkComponent;\n  currentlySelected: NavlinkComponent;\n  justLoaded = true;\n  allLinks = {};\n\n  constructor(\n    public vdsLibService: VdsLibService,\n    private route: Router\n  ) {\n    const hasHref = this.vdsLibService.triageDisabledValue(\n      this.href\n    );\n    this.href = hasHref ? this.href : '';\n  }\n\n  private setPosition() {\n    const enumValues = this.vdsLibService.getEnumValues(\n      NavPosition\n    );\n    if (\n      !this.position ||\n      !enumValues.includes(this.position.toUpperCase())\n    ) {\n      this.position = NavPosition.FIXED;\n    }\n  }\n\n  private setColorScheme() {\n    const enumValues = this.vdsLibService.getEnumValues(\n      this.NavColorScheme\n    );\n    if (\n      !enumValues.includes(this.colorScheme.toUpperCase())\n    ) {\n      this.colorScheme = this.NavColorScheme.DEFAULT;\n    }\n  }\n\n  ngOnInit() {\n    this.setPosition();\n    this.horizontalFullWidth = this.vdsLibService.triageDisabledValue(\n      this.horizontalFullWidth\n    );\n    this.skipLabel = NAV_DEFAULT.skipLabel;\n    this.setColorScheme();\n    this.setLogoSrc();\n  }\n\n  ngAfterContentInit() {\n    if (this.menu.length > 0) {\n      const _menu = this.menu.toArray()[0];\n      _menu.isInNav = true;\n      _menu.select.subscribe((select) => {\n        if (this.prevLink) {\n          this.prevLink.deselect();\n          this.prevLink = null;\n        }\n      });\n    }\n    if (this.links) {\n      const _links = this.links.toArray();\n      _links.forEach((link) => {\n        link.selectEvent.subscribe((selected) => {\n          selected.component.select();\n          if (this.prevLink) {\n            this.prevLink.deselect();\n          }\n          this.prevLink = selected.component;\n        });\n      });\n    }\n    this.updateLibServiceWithNavInfo();\n  }\n\n  private updateLibServiceWithNavInfo() {\n    this.vdsLibService.setNavInfo({\n      orientation: 'horizontal',\n    });\n  }\n\n  resetHighlighting() {\n    if (this.prevLink) {\n      this.prevLink.deselect();\n    }\n  }\n\n  private setLogoSrc() {\n    if (this.src) {\n      return;\n    }\n    switch (this.colorScheme) {\n      case this.NavColorScheme.LIGHT:\n        this.src = NAV_DEFAULT.srcLight;\n        break;\n      case this.NavColorScheme.CONSUMER:\n      case this.NavColorScheme.DEFAULT:\n      case this.NavColorScheme.MARKETING:\n      default:\n        this.src = NAV_DEFAULT.src;\n        break;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".mobile-nav {\n  top: 56px;\n}\n\n.vds-nav-panel {\n  position: relative !important;\n}\n\n.vds-navmenu {\n  height: 100% !important;\n}\n",
          "styleUrl": "./nav.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "route",
            "type": "Router"
          }
        ],
        "line": 99,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "route",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterContentInit"],
      "templateData": "<!-- Horizontal Nav-->\n<header\n  [class]=\"'vds-nav vds-nav--' + position\"\n  [ngClass]=\"{\n    'vds-nav': true,\n    'vds-type--consumer':\n      colorScheme === NavColorScheme.CONSUMER,\n    'vds-type--marketing':\n      colorScheme === NavColorScheme.MARKETING,\n    'vds-type--light': colorScheme === NavColorScheme.LIGHT\n  }\"\n>\n  <div\n    [ngClass]=\"{\n      'vds-grid': true,\n      'vds-grid--fluid': horizontalFullWidth\n    }\"\n  >\n    <div class=\"row\">\n      <div class=\"col\">\n        <a [attr.href]=\"skipPath\" class=\"vds-nav-skip\">{{\n          skipLabel\n        }}</a>\n        <div class=\"vds-nav-brand\">\n          <div class=\"vds-nav-brand-info\">\n            <vds-button variant=\"icon\" iconType=\"dark\">\n              <vds-icon\n                [icon]=\"currentIcon\"\n                low=\"true\"\n              ></vds-icon>\n            </vds-button>\n            <a\n              [href]=\"href ? href : ''\"\n              class=\"vds-nav-brand-logo\"\n            >\n              <img\n                class=\"vds-nav-brand-logo-image\"\n                [src]=\"src\"\n                [alt]=\"alt\"\n              />\n            </a>\n          </div>\n          <div class=\"vds-nav-brand-cobrand\">\n            {{ appName }}\n          </div>\n        </div>\n        <div class=\"vds-nav-site\">\n          <nav\n            class=\"vds-nav-links\"\n            role=\"navigation\"\n            aria-label=\"Site\"\n          >\n            <ul class=\"vds-tab-list\">\n              <ng-container *ngTemplateOutlet=\"content\">\n              </ng-container>\n            </ul>\n          </nav>\n        </div>\n        <div\n          class=\"vds-nav-user\"\n          *ngIf=\"!vdsLibService.isMobile()\"\n        >\n          <ng-content select=\"vds-navmenu\"></ng-content>\n        </div>\n        <div\n          class=\"col vds-nav-action\"\n          *ngIf=\"this.rightButton\"\n        >\n          <div class=\"vds-nav-action-info\">\n            <ng-content select=\"vds-button\"></ng-content>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</header>\n\n<!-- content template for nested child elements -->\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n"
    },
    {
      "name": "NavDisclosureComponent",
      "id": "component-NavDisclosureComponent-4786807d6be487972a0193a75441044e",
      "file": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: ParentNav, useExisting: forwardRef(() => NavDisclosureComponent),\n}",
          "type": "component"
        }
      ],
      "selector": "vds-nav-disclosure",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./nav-disclosure.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "_open",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "href",
          "description": "<p>Path link of the internal location hierarchy.</p>\n",
          "line": 34,
          "type": "string"
        },
        {
          "name": "isSelected",
          "line": 30,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "selectEvent",
          "defaultValue": "new EventEmitter<NavSelect>()",
          "description": "<p>Emits change event.</p>\n",
          "line": 38,
          "type": "EventEmitter<NavSelect>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_navIsOpen",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "links",
          "type": "QueryList<NavlinkComponent>",
          "optional": false,
          "description": "",
          "line": 42,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "NavlinkComponent"
            }
          ]
        },
        {
          "name": "myParent",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "name",
          "defaultValue": "'disclosure'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "NAVDISCLOSURE_DEFAULT",
          "defaultValue": "NAVDISCLOSURE_DEFAULT",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46
        }
      ],
      "methodsClass": [
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73
        },
        {
          "name": "deselect",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81
        },
        {
          "name": "emitEvent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67
        },
        {
          "name": "select",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 77
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61
        },
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 85,
          "modifierKind": [117],
          "inheritance": {
            "file": "NavChild"
          }
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 84,
          "modifierKind": [117],
          "inheritance": {
            "file": "NavChild"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  QueryList,\n  forwardRef,\n  Input,\n  EventEmitter,\n  Output,\n  ContentChildren,\n} from '@angular/core';\nimport { NAVDISCLOSURE_DEFAULT } from './nav-disclosure.constants';\nimport { NavlinkComponent } from '../navlink/navlink.component';\nimport { ParentNav } from '../vds-lib.service.constants';\nimport { NavChild } from '../nav/nav.constants';\nimport { NavSelect } from '../navmenu/navmenu.constants';\n\n@Component({\n  selector: 'vds-nav-disclosure',\n  templateUrl: './nav-disclosure.component.html',\n  providers: [\n    {\n      provide: ParentNav,\n      useExisting: forwardRef(() => NavDisclosureComponent),\n    },\n  ],\n})\nexport class NavDisclosureComponent extends NavChild\n  implements OnInit {\n  @Input() _open: boolean;\n  @Input() isSelected: boolean;\n  /**\n   * Path link of the internal location hierarchy.\n   */\n  @Input() href: string;\n  /**\n   * Emits change event.\n   */\n  @Output() selectEvent: EventEmitter<\n    NavSelect\n  > = new EventEmitter<NavSelect>();\n\n  @ContentChildren(NavlinkComponent) links: QueryList<\n    NavlinkComponent\n  >;\n\n  NAVDISCLOSURE_DEFAULT = NAVDISCLOSURE_DEFAULT;\n  _navIsOpen: boolean = true;\n  myParent = null;\n  name = 'disclosure';\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    if (this.href && this.href.charAt(0) !== '/') {\n      this.href = `/${this.href}`;\n    }\n  }\n\n  toggle() {\n    if (this._navIsOpen) {\n      this._open = !this._open;\n    }\n  }\n\n  open() {\n    if (this._navIsOpen) {\n      this._open = true;\n    }\n  }\n\n  close() {\n    this._open = false;\n  }\n\n  select() {\n    this.isSelected = true;\n  }\n\n  deselect() {\n    this.isSelected = false;\n  }\n\n  emitEvent() {\n    this.selectEvent.next({\n      href: this.href,\n      role: 'disclosure',\n      component: this,\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 49
      },
      "extends": "NavChild",
      "implements": ["OnInit"],
      "templateData": "<li \n  [ngClass]=\"{\n    'vds-tab-item': true\n  }\"\n  >\n  <!-- vds-disclosure -->\n  <div \n  [ngClass]=\"{\n    'vds-disclosure': true\n  }\">\n    <a \n      (click)=\"emitEvent()\"\n      class=\"vds-disclosure-header vds-tab vds-disclosure-header--reversed\" \n      [attr.aria-expanded]=\"_open\" \n      [ngClass]=\"{\n        'vds-state--selected': isSelected\n      }\">\n      <span class=\"vds-disclosure-header-icon\">\n        <vds-icon\n          [altText]=\"_open ? NAVDISCLOSURE_DEFAULT.COLLAPSE_ALT : NAVDISCLOSURE_DEFAULT.EXPAND_ALT\"\n          tiny=\"true\"\n          [icon]=\"_open ? NAVDISCLOSURE_DEFAULT.COLLAPSE_ICON  :  NAVDISCLOSURE_DEFAULT.EXPAND_ICON\"\n        >\n        </vds-icon>\n      </span>\n      <span class=\"vds-disclosure-header-wrapper\">\n        <ng-content select=\"vds-icon\"></ng-content>\n        <span class=\"vds-tab-item-label\">\n            <ng-content select=\"vds-nav-disclosure-title\"></ng-content>\n        </span>\n      </span>\n    </a>\n    <div [ngClass]=\"{\n      'vds-disclosure-content': 'true',\n      'vds-state--hidden': !_open\n    }\" \n    role=\"region\">\n    <ul class=\"vds-tab-list\">\n      <ng-content select=\"vds-navlink\"></ng-content>\n    </ul>\n    </div>\n  </div>\n  </li>"
    },
    {
      "name": "NavDisclosureTitleComponent",
      "id": "component-NavDisclosureTitleComponent-29a1fa915c6738798a2ddf6fc54b0f01",
      "file": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure-title/nav-disclosure-title.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-nav-disclosure-title",
      "styleUrls": [],
      "styles": [],
      "templateUrl": [
        "./nav-disclosure-title.component.html"
      ],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vds-nav-disclosure-title',\n  templateUrl: './nav-disclosure-title.component.html',\n})\nexport class NavDisclosureTitleComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 7
      },
      "implements": ["OnInit"],
      "templateData": "<ng-content></ng-content>"
    },
    {
      "name": "NavlinkComponent",
      "id": "component-NavlinkComponent-ad366e59b0bbcfb7add7e9a7cbba4814",
      "file": "projects/vds-lib/src/lib/navlink/navlink.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-navlink",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navlink.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "external",
          "description": "<p>Set external to open the link in new tab.</p>\n",
          "line": 31,
          "type": "boolean"
        },
        {
          "name": "href",
          "description": "<p>Path link for external location hierarchy.</p>\n",
          "line": 35,
          "type": "string"
        },
        {
          "name": "route",
          "description": "<p>Flag set for internal routing</p>\n",
          "line": 40,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "selectEvent",
          "defaultValue": "new EventEmitter<NavSelect>()",
          "description": "<p>Emits change event.</p>\n",
          "line": 44,
          "type": "EventEmitter<NavSelect>"
        }
      ],
      "propertiesClass": [
        {
          "name": "element",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "isInNav",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "isSelected",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "myParent",
          "type": "ParentNav",
          "optional": false,
          "description": "",
          "line": 54,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 120
        },
        {
          "name": "deselect",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 115
        },
        {
          "name": "emitEvent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 122
        },
        {
          "name": "inNav",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 74
        },
        {
          "name": "navigate",
          "args": [
            {
              "name": "href",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 104,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "href",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "navigateToLink",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 119
        },
        {
          "name": "select",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111
        },
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 85,
          "modifierKind": [117],
          "inheritance": {
            "file": "NavChild"
          }
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 84,
          "modifierKind": [117],
          "inheritance": {
            "file": "NavChild"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output,\n  Optional,\n  ElementRef,\n} from '@angular/core';\nimport { ParentNav } from '../vds-lib.service.constants';\nimport {\n  NAV_DEFAULT,\n  NavChild,\n} from '../nav/nav.constants';\nimport {\n  NAVMENU_DEFAULT,\n  NavSelect,\n} from '../navmenu/navmenu.constants';\nimport { VdsLibService } from '../vds-lib.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'vds-navlink',\n  templateUrl: './navlink.component.html',\n})\nexport class NavlinkComponent extends NavChild\n  implements OnInit {\n  /**\n   * Set external to open the link in new tab.\n   */\n  @Input() external: boolean;\n  /**\n   * Path link for external location hierarchy.\n   */\n  @Input() href: string;\n\n  /**\n   * Flag set for internal routing\n   */\n  @Input() route: boolean;\n  /**\n   * Emits change event.\n   */\n  @Output() selectEvent: EventEmitter<\n    NavSelect\n  > = new EventEmitter<NavSelect>();\n\n  id: string;\n  element: ElementRef;\n  isSelected: boolean;\n  isInNav: boolean;\n\n  constructor(\n    @Optional() public myParent: ParentNav,\n    private vdsLibService: VdsLibService,\n    private el: ElementRef,\n    private router: Router\n  ) {\n    super();\n    this.id = vdsLibService.getUUID();\n    this.element = el.nativeElement.children;\n  }\n\n  ngOnInit() {\n    this.href = this.href ? this.href : '';\n    this.external = this.vdsLibService.triageDisabledValue(\n      this.external\n    );\n    this.route = this.vdsLibService.triageDisabledValue(\n      this.route\n    );\n  }\n\n  inNav() {\n    if (this.myParent && this.myParent.name) {\n      switch (this.myParent.name) {\n        case NAVMENU_DEFAULT.name:\n          return false;\n        case NAV_DEFAULT.name:\n        default:\n          return true;\n      }\n    }\n  }\n\n  navigateToLink(event?: Event) {\n    if (event) {\n      event.preventDefault();\n    }\n    let newWindow: Window;\n\n    if (this.route) {\n      this.navigate(this.href);\n      return;\n    }\n    newWindow = this.external\n      ? window.open(this.href, '_blank')\n      : window.open(this.href, '_self');\n    if (newWindow) {\n      newWindow.opener = null;\n    }\n  }\n\n  private navigate(href: string): boolean {\n    this.router.navigate([this.href]).then(() => {\n      return true;\n    });\n    return false;\n  }\n\n  select() {\n    this.isSelected = true;\n  }\n\n  deselect() {\n    this.isSelected = false;\n  }\n\n  open() {}\n  close() {}\n\n  emitEvent() {\n    this.selectEvent.next({\n      href: this.href,\n      isNested: this.myParent.name === 'disclosure',\n      parent: this.myParent,\n      role: 'link',\n      component: this,\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "myParent",
            "type": "ParentNav"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "el",
            "type": "ElementRef"
          },
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 51,
        "jsdoctags": [
          {
            "name": "myParent",
            "type": "ParentNav",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "NavChild",
      "implements": ["OnInit"],
      "templateData": "<li\n  (click)=\"emitEvent()\"\n  [ngClass]=\"{\n    'vds-tab-item': inNav(),\n    'vds-listbox-item': !inNav()\n  }\">\n  <a\n    [attr.href]=\"href\"\n    (click)=\"navigateToLink($event)\"\n    [ngClass]=\"{\n      'vds-tab': inNav(),\n      'vds-listbox-item-container': !inNav(),\n      'vds-state--selected': isSelected\n    }\"\n  >\n    <ng-container *ngTemplateOutlet=\"linkContent\">\n    </ng-container>\n  </a>\n</li>\n\n<ng-template\n  #linkContent\n  let-title=\"title\"\n>\n  <ng-content select=\"vds-icon\"></ng-content>\n  <span class=\"vds-tab-item-label\">\n    <ng-content></ng-content>\n  </span>\n</ng-template>\n"
    },
    {
      "name": "NavmenuComponent",
      "id": "component-NavmenuComponent-e2c92c0511dfb7192b4979c9a739d6c4",
      "file": "projects/vds-lib/src/lib/navmenu/navmenu.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: ParentNav, useExisting: forwardRef(() => NavmenuComponent),\n}",
          "type": "component"
        }
      ],
      "selector": "vds-navmenu",
      "styleUrls": ["./navmenu.component.css"],
      "styles": [],
      "templateUrl": ["./navmenu.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "select",
          "defaultValue": "new EventEmitter<NavSelect>()",
          "line": 45,
          "type": "EventEmitter<NavSelect>"
        }
      ],
      "propertiesClass": [
        {
          "name": "dropdownIcon",
          "defaultValue": "NAV_DEFAULT.down",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 50
        },
        {
          "name": "hasLinks",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "icon",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "IconComponent"
            }
          ]
        },
        {
          "name": "image",
          "type": "",
          "optional": false,
          "description": "",
          "line": 42,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "NavmenuImageComponent"
            }
          ]
        },
        {
          "name": "initials",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "NavmenuInitialsComponent"
            }
          ]
        },
        {
          "name": "isInNav",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "isSelected",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "menuType",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "name",
          "defaultValue": "NAVMENU_DEFAULT.name",
          "type": "",
          "optional": false,
          "description": "",
          "line": 55
        },
        {
          "name": "navButton",
          "type": "",
          "optional": false,
          "description": "",
          "line": 43,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "NavbuttonComponent"
            }
          ]
        },
        {
          "name": "navLinks",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "NavlinkComponent"
            }
          ]
        },
        {
          "name": "show",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "textContent",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 54
        },
        {
          "name": "title",
          "type": "",
          "optional": false,
          "description": "",
          "line": 39,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "NavmenuTitleComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "getMenuType",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 87
        },
        {
          "name": "getTitle",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 80
        },
        {
          "name": "hasIcon",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 116
        },
        {
          "name": "hasImage",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 120
        },
        {
          "name": "hasInitials",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 112
        },
        {
          "name": "hasTitle",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 108
        },
        {
          "name": "hide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 132
        },
        {
          "name": "isAvatar",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 99
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 62
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        },
        {
          "name": "setIcon",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73,
          "modifierKind": [112]
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 124
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  ContentChildren,\n  AfterContentInit,\n  ContentChild,\n  forwardRef,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { IconComponent } from '../icon/icon.component';\nimport {\n  MENU_TYPES,\n  NAVMENU_DEFAULT,\n  NavSelect,\n} from './navmenu.constants';\nimport { NavmenuImageComponent } from './navmenu-image/navmenu-image.component';\nimport { NAV_DEFAULT } from '../nav/nav.constants';\nimport { NavbuttonComponent } from './navbutton/navbutton.component';\nimport { ParentNav } from '../vds-lib.service.constants';\nimport { NavlinkComponent } from '../navlink/navlink.component';\nimport { NavmenuTitleComponent } from './navmenu-title/navmenu-title.component';\nimport { NavmenuInitialsComponent } from './navmenu-initials/navmenu-initials.component';\n\n@Component({\n  selector: 'vds-navmenu',\n  templateUrl: './navmenu.component.html',\n  styleUrls: ['./navmenu.component.css'], // Uses same class overwrite as dropdown\n  providers: [\n    {\n      provide: ParentNav,\n      useExisting: forwardRef(() => NavmenuComponent),\n    },\n  ],\n})\nexport class NavmenuComponent\n  implements OnInit, AfterContentInit {\n  @ContentChildren(NavlinkComponent) navLinks = [];\n  @ContentChild(NavmenuTitleComponent) title;\n  @ContentChild(NavmenuInitialsComponent) initials;\n  @ContentChild(IconComponent) icon;\n  @ContentChild(NavmenuImageComponent) image;\n  @ContentChild(NavbuttonComponent) navButton;\n\n  @Output() select: EventEmitter<\n    NavSelect\n  > = new EventEmitter<NavSelect>();\n\n  menuType: string;\n  dropdownIcon: string = NAV_DEFAULT.down;\n  isSelected: boolean;\n  hasLinks = false;\n  show = false;\n  textContent = '';\n  name = NAVMENU_DEFAULT.name;\n  isInNav: boolean;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngAfterContentInit() {\n    if (this.navLinks.length > 0) {\n      this.hasLinks = true;\n    }\n    if (this.navButton) {\n      this.navButton.activate.subscribe(() => {\n        this.toggle();\n      });\n    }\n  }\n\n  private setIcon() {\n    this.dropdownIcon =\n      this.dropdownIcon === NAV_DEFAULT.down\n        ? NAV_DEFAULT.up\n        : NAV_DEFAULT.down;\n  }\n\n  getTitle(): string {\n    if (this.hasTitle()) {\n      return this.title.innerText;\n    }\n    return '';\n  }\n\n  getMenuType(): string {\n    if (this.hasIcon()) {\n      return MENU_TYPES.icon;\n    }\n    if (this.hasInitials()) {\n      return MENU_TYPES.initials;\n    }\n    if (this.hasTitle()) {\n      return MENU_TYPES.dropdown;\n    }\n  }\n\n  isAvatar(): boolean {\n    return (\n      this.hasTitle() ||\n      this.hasInitials() ||\n      this.hasIcon() ||\n      this.hasImage()\n    );\n  }\n\n  hasTitle(): boolean {\n    return this.title ? true : false;\n  }\n\n  hasInitials(): boolean {\n    return this.initials ? true : false;\n  }\n\n  hasIcon(): boolean {\n    return this.icon ? true : false;\n  }\n\n  hasImage(): boolean {\n    return this.image ? true : false;\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.setIcon();\n    this.select.next({\n      component: this,\n    });\n  }\n\n  hide() {\n    this.show = false;\n    this.setIcon();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-btn,\n.vds-nav-navmenu {\n  height: 100%;\n}\n\n.vds-menu--listbox {\n  margin-left: -143px;\n}\n\n/** \n  Remove when VUIWEB-898 resolved\n*/\n.nav-icon {\n  position: absolute;\n  top: 50%;\n  height: 1rem;\n  margin-top: -9px;\n}\n",
          "styleUrl": "./navmenu.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 56
      },
      "implements": ["OnInit", "AfterContentInit"],
      "templateData": "<div [ngClass]=\"{\n  'vds-navmenu': true,\n  'vds-nav-navmenu': isInNav\n}\">\n  <button \n    *ngIf=\"isAvatar()\"\n    (click)=\"toggle()\" \n    [ngClass]=\"{\n      'vds-btn': true,\n      'vds-state--flippable': true,\n      'vds-state--active': show\n    }\"\n    [attr.data-dropdown]=\"'#navmenu-avatar-' + getMenuType()\"\n    [attr.aria-expanded]=\"show\" \n    [attr.aria-label]=\"getTitle()\">\n    <div class=\"vds-avatar\">\n\n      <!-- Title Variation-->\n      <span class=\"vds-avatar--text\" *ngIf=\"hasTitle()\">\n        <ng-content select=\"vds-navmenu-title\"></ng-content>\n      </span>\n\n      <!--Avatar Variation-->\n      <div class=\"vds-avatar--initials\" aria-hidden=\"true\" role=\"presentation\" *ngIf=\"hasInitials()\">\n        <ng-content select=\"vds-navmenu-initials\"></ng-content>\n      </div>\n\n      <!--Icon Variation-->\n      <div class=\"vds-avatar--photo\" *ngIf=\"hasIcon()\">\n        <ng-content select=\"vds-icon\"></ng-content>\n      </div>\n\n      <!--Image Variation-->\n      <ng-content select=\"vds-navmenu-image\" *ngIf=\"hasImage()\"></ng-content>\n\n    </div>\n    <!-- <vds-icon\n      class=\"nav-icon\"\n      *ngIf=\"hasLinks\"\n      [icon]=\"dropdownIcon\"\n      tiny=\"true\">\n    </vds-icon> -->\n    <svg class=\"vds-icon\" focusable=\"false\" tabindex=\"-1\">\n      <use href=\"#arrow-expand--tiny\"></use>\n      </svg>\n  </button>\n  <ng-content select=\"vds-navbutton\"></ng-content>\n  <div [ngClass]=\"{\n    'vds-menu--absolute': true,\n    'vds-menu--show': true,\n    'vds-menu--listbox': isInNav\n  }\"\n  class=\"vds-menu--absolute vds-menu--show\" data-align=\"right\" *ngIf=\"show\">\n    <ul class=\"vds-listbox\" (click)=\"hide()\">\n      <ng-content select=\"vds-navlink\"></ng-content>\n    </ul>\n  </div>\n  <div class=\"vds-menu-curtain\" (click)=\"hide()\" *ngIf=\"show\"></div>\n</div>\n"
    },
    {
      "name": "NavmenuImageComponent",
      "id": "component-NavmenuImageComponent-7cd57e18b8c0c0cc1dab9908e9c53a52",
      "file": "projects/vds-lib/src/lib/navmenu/navmenu-image/navmenu-image.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-navmenu-image",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navmenu-image.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "alt",
          "description": "<p>Alt text</p>\n",
          "line": 11
        },
        {
          "name": "src",
          "description": "<p>Image source</p>\n",
          "line": 15
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'vds-navmenu-image',\n  templateUrl: './navmenu-image.component.html',\n})\nexport class NavmenuImageComponent implements OnInit {\n  /**\n   * Alt text\n   */\n  @Input() alt;\n  /**\n   * Image source\n   */\n  @Input() src;\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 15
      },
      "implements": ["OnInit"],
      "templateData": "<img class=\"vds-avatar--photo\" [attr.src]=\"src\" [attr.alt]=\"alt\">\n"
    },
    {
      "name": "NavmenuInitialsComponent",
      "id": "component-NavmenuInitialsComponent-1a1f97575aa43963b07ae33067d1641e",
      "file": "projects/vds-lib/src/lib/navmenu/navmenu-initials/navmenu-initials.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-navmenu-initials",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navmenu-initials.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "el",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        },
        {
          "name": "innerText",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  AfterContentInit,\n  ElementRef,\n} from '@angular/core';\n\n@Component({\n  selector: 'vds-navmenu-initials',\n  templateUrl: './navmenu-initials.component.html',\n})\nexport class NavmenuInitialsComponent\n  implements OnInit, AfterContentInit {\n  innerText;\n\n  constructor(public el: ElementRef) {}\n\n  ngOnInit() {}\n\n  ngAfterContentInit() {\n    this.innerText = this.el.nativeElement.innerText;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterContentInit"],
      "templateData": "<ng-content></ng-content>"
    },
    {
      "name": "NavmenuTitleComponent",
      "id": "component-NavmenuTitleComponent-01b728b4105fa389a461f114a9489378",
      "file": "projects/vds-lib/src/lib/navmenu/navmenu-title/navmenu-title.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-navmenu-title",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./navmenu-title.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "el",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        },
        {
          "name": "innerText",
          "type": "",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  ContentChild,\n  ElementRef,\n  AfterContentInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'vds-navmenu-title',\n  templateUrl: './navmenu-title.component.html',\n})\nexport class NavmenuTitleComponent\n  implements OnInit, AfterContentInit {\n  innerText;\n\n  constructor(public el: ElementRef) {}\n\n  ngOnInit() {}\n\n  ngAfterContentInit() {\n    this.innerText = this.el.nativeElement.innerText;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterContentInit"],
      "templateData": "<ng-content></ng-content>"
    },
    {
      "name": "NavVerticalComponent",
      "id": "component-NavVerticalComponent-edcd49e46d5e7578eefb112fc919deeb",
      "file": "projects/vds-lib/src/lib/nav-vertical/nav-vertical.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: ParentNav, useExisting: forwardRef(() => NavVerticalComponent),\n}",
          "type": "component"
        }
      ],
      "selector": "vds-nav-vertical",
      "styleUrls": ["./nav-vertical.component.css"],
      "styles": [],
      "templateUrl": ["./nav-vertical.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "alt",
          "defaultValue": "NAV_DEFAULT.altText",
          "description": "<p>Sets the logo icon&#39;s fallback/aria text.\nDefaults to &#39;Visa icon&#39;.</p>\n",
          "line": 41,
          "type": "string"
        },
        {
          "name": "colorScheme",
          "defaultValue": "NavColorScheme.DEFAULT",
          "description": "<p>Sets the color scheme by application type.</p>\n",
          "line": 45,
          "type": "NavColorScheme"
        },
        {
          "name": "href",
          "description": "<p>The path that the nav goes to when the user\nclicks the logo icon.</p>\n",
          "line": 51,
          "type": "string"
        },
        {
          "name": "position",
          "description": "<p>Sets the nav positioning.\nOptions are &#39;fixed&#39;, &#39;absolute&#39; or &#39;relative&#39;\n(defaults to fixed)</p>\n",
          "line": 57,
          "type": "NavPosition"
        },
        {
          "name": "skipLabel",
          "defaultValue": "NAV_DEFAULT.skipLabel",
          "description": "<p>Sets the text for a11y skip label.\nDefaults to &#39;Skip to main content&#39;.</p>\n",
          "line": 66,
          "type": "string"
        },
        {
          "name": "skipPath",
          "defaultValue": "NAV_DEFAULT.skipPath",
          "description": "<p>Navigation for skip a11y tabbing. Defaults to empty string.</p>\n",
          "line": 70,
          "type": "string"
        },
        {
          "name": "src",
          "description": "<p>Sets the logo icon. Defaults to Visa logo.</p>\n",
          "line": 61,
          "type": "string"
        },
        {
          "name": "verticalMini",
          "description": "<p>Sets nav as closed if true, open if false. <br>\nDefaults to <code>false</code>.</p>\n",
          "line": 75,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "allLinks",
          "defaultValue": "{}",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 91
        },
        {
          "name": "currentlySelected",
          "type": "NavlinkComponent",
          "optional": false,
          "description": "",
          "line": 89
        },
        {
          "name": "currentURL",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "disclosures",
          "type": "QueryList<NavDisclosureComponent>",
          "optional": false,
          "description": "",
          "line": 83,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "NavDisclosureComponent"
            }
          ]
        },
        {
          "name": "isRouting",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 87
        },
        {
          "name": "justLoaded",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "links",
          "type": "QueryList<NavlinkComponent>",
          "optional": false,
          "description": "",
          "line": 79,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "NavlinkComponent"
            }
          ]
        },
        {
          "name": "name",
          "defaultValue": "'nav'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 93
        },
        {
          "name": "NAV_DEFAULT",
          "defaultValue": "NAV_DEFAULT",
          "type": "",
          "optional": false,
          "description": "",
          "line": 86
        },
        {
          "name": "NavColorScheme",
          "defaultValue": "NavColorScheme",
          "type": "",
          "optional": false,
          "description": "",
          "line": 85
        },
        {
          "name": "prevLink",
          "type": "NavlinkComponent",
          "optional": false,
          "description": "",
          "line": 88
        }
      ],
      "methodsClass": [
        {
          "name": "getStrategy",
          "args": [
            {
              "name": "data",
              "type": "NavData"
            }
          ],
          "optional": false,
          "returnType": "literal type",
          "typeParameters": [],
          "line": 292,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "data",
              "type": "NavData",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100
        },
        {
          "name": "setLogoSrc",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 406,
          "modifierKind": [112]
        },
        {
          "name": "toggleOpen",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 374,
          "description": "<p>Toggles the vertical Nav.</p>\n"
        },
        {
          "name": "updateLibServiceWithNavInfo",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 393,
          "modifierKind": [112]
        }
      ],
      "hostBindings": [
        {
          "name": "style.minWidth",
          "line": 77
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  forwardRef,\n  Input,\n  HostBinding,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from '@angular/core';\nimport { ParentNav } from '../vds-lib.service.constants';\nimport {\n  NavPosition,\n  NavColorScheme,\n  NAV_DEFAULT,\n  NavStrategy,\n  NavData,\n} from '../nav/nav.constants';\nimport { NavDisclosureComponent } from '../nav-disclosure/nav-disclosure.component';\nimport { NavlinkComponent } from '../navlink/navlink.component';\nimport { VdsLibService } from '../vds-lib.service';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'vds-nav-vertical',\n  templateUrl: './nav-vertical.component.html',\n  styleUrls: ['./nav-vertical.component.css'],\n  providers: [\n    {\n      provide: ParentNav,\n      useExisting: forwardRef(() => NavVerticalComponent),\n    },\n  ],\n})\nexport class NavVerticalComponent\n  implements OnInit, AfterContentInit {\n  /**\n   * Sets the logo icon's fallback/aria text.\n   * Defaults to 'Visa icon'.\n   */\n  @Input() alt: string = NAV_DEFAULT.altText;\n  /**\n   * Sets the color scheme by application type.\n   */\n  @Input() colorScheme: NavColorScheme =\n    NavColorScheme.DEFAULT;\n  /**\n   * The path that the nav goes to when the user\n   * clicks the logo icon.\n   */\n  @Input() href: string;\n  /**\n   * Sets the nav positioning.\n   * Options are 'fixed', 'absolute' or 'relative'\n   * (defaults to fixed)\n   */\n  @Input() position: NavPosition;\n  /**\n   * Sets the logo icon. Defaults to Visa logo.\n   */\n  @Input() src: string;\n  /**\n   * Sets the text for a11y skip label.\n   * Defaults to 'Skip to main content'.\n   */\n  @Input() skipLabel: string = NAV_DEFAULT.skipLabel;\n  /**\n   * Navigation for skip a11y tabbing. Defaults to empty string.\n   */\n  @Input() skipPath: string = NAV_DEFAULT.skipPath;\n  /**\n   * Sets nav as closed if true, open if false. <br>\n   * Defaults to <code>false</code>.\n   */\n  @Input() verticalMini: boolean;\n\n  @HostBinding('style.minWidth') width;\n\n  @ContentChildren(NavlinkComponent) links: QueryList<\n    NavlinkComponent\n  >;\n  @ContentChildren(NavDisclosureComponent)\n  disclosures: QueryList<NavDisclosureComponent>;\n\n  NavColorScheme = NavColorScheme;\n  NAV_DEFAULT = NAV_DEFAULT;\n  isRouting: boolean;\n  prevLink: NavlinkComponent;\n  currentlySelected: NavlinkComponent;\n  currentURL: string;\n  allLinks = {};\n  justLoaded = true;\n  name = 'nav';\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private route: Router\n  ) {}\n\n  ngOnInit() {\n    this.verticalMini = this.vdsLibService.triageDisabledValue(\n      this.verticalMini\n    );\n    this.width = NAV_DEFAULT.openWidth;\n    this.position = this.position\n      ? this.position\n      : NavPosition.FIXED;\n    this.setLogoSrc();\n  }\n\n  ngAfterContentInit() {\n    let temp = [];\n    const rootLinks = this.links.toArray();\n    temp = rootLinks;\n    this.disclosures.forEach((disclosure) => {\n      const leafLinks = disclosure.links.toArray();\n      temp.push(disclosure);\n      temp = temp.concat(leafLinks);\n    });\n\n    temp.forEach((link) => {\n      this.allLinks[link.href] = link;\n    });\n\n    this.route.events.subscribe((change) => {\n      if (\n        change instanceof NavigationEnd &&\n        this.justLoaded\n      ) {\n        this.currentURL = change.urlAfterRedirects;\n        const elements = this.currentURL\n          .split('/')\n          .filter((val) => {\n            return val.length > 0;\n          });\n\n        if (this.allLinks[this.currentURL]) {\n          if (elements.length > 1) {\n            this.prevLink = this.allLinks[\n              `/${elements[0]}`\n            ];\n          }\n\n          this.isRouting = true;\n          this.allLinks[this.currentURL].emitEvent();\n          this.isRouting = false;\n        }\n        this.justLoaded = false;\n      }\n    });\n\n    temp.forEach((link) => {\n      link.selectEvent.subscribe((data: NavData) => {\n        const strategy = this.getStrategy(data);\n\n        // Handles stored link actions.\n        switch (strategy.store) {\n          case NavStrategy.NoneStored:\n            break;\n          case NavStrategy.RootStored:\n            if (data.component.href) {\n              this.prevLink.deselect();\n              this.currentlySelected.deselect();\n            }\n            break;\n          case NavStrategy.DisclosureStored:\n            if (\n              data.component.href &&\n              this.prevLink &&\n              this.currentlySelected\n            ) {\n              this.prevLink.deselect();\n              this.currentlySelected.deselect();\n            }\n            if (\n              data.component.myParent !== this.prevLink &&\n              data.component !== this.prevLink\n            ) {\n              this.prevLink.close();\n            }\n            break;\n          case NavStrategy.SublinkStored:\n            if (data.component.href) {\n              this.prevLink.deselect();\n              this.currentlySelected.deselect();\n            }\n            if (\n              strategy.dimensionState ===\n              NavStrategy.FromMiniState\n            ) {\n              (this.prevLink\n                .myParent as NavDisclosureComponent).deselect();\n              this.prevLink.myParent.close();\n              break;\n            }\n            if (this.prevLink.myParent !== data.parent) {\n              this.prevLink.myParent.close();\n            }\n            break;\n          default:\n            break;\n        }\n\n        // Handles incoming link actions.\n        switch (strategy.incoming) {\n          case NavStrategy.RootIncoming:\n            if (data.component.href) {\n              data.component.select();\n              this.currentlySelected = data.component;\n            }\n            break;\n          case NavStrategy.DisclosureIncoming:\n            if (\n              strategy.dimensionState ===\n                NavStrategy.FromFullState &&\n              this.prevLink instanceof NavlinkComponent &&\n              data.component === this.prevLink.myParent\n            ) {\n              data.component.close();\n              if (data.component.href) {\n                data.component.select();\n                this.currentlySelected = data.component;\n              }\n              break;\n            }\n            if (\n              this.prevLink === data.component &&\n              strategy.dimensionState ===\n                NavStrategy.FromFullState\n            ) {\n              if (data.component.href) {\n                data.component.select();\n                this.currentlySelected = data.component;\n              }\n              if (data.component._open) {\n                data.component.close();\n                break;\n              }\n              data.component.open();\n              break;\n            }\n            if (\n              strategy.dimensionState ===\n              NavStrategy.FromMiniState\n            ) {\n              this.verticalMini = false;\n              data.component._navIsOpen = true;\n              this.width = NAV_DEFAULT.openWidth;\n              data.component.open();\n              if (data.component.href) {\n                data.component.select();\n                this.currentlySelected = data.component;\n              }\n              break;\n            }\n            if (data.component.href) {\n              data.component.toggle();\n              if (data.component.isSelected) {\n                data.component.deselect();\n                break;\n              }\n              data.component.select();\n              break;\n            }\n            data.component.open();\n            break;\n          case NavStrategy.SublinkIncoming:\n            if (this.isRouting) {\n              this.currentlySelected = data.component;\n              this.prevLink.open();\n              data.component.select();\n              break;\n            }\n            if (data.component.href) {\n              data.component.select();\n              this.currentlySelected = data.component;\n            }\n            break;\n          default:\n            break;\n        }\n        this.prevLink = data.component;\n        if (data.href && data.href.length > 0) {\n          this.route.navigateByUrl(data.href);\n        }\n      });\n    });\n\n    this.updateLibServiceWithNavInfo();\n  }\n\n  private getStrategy(\n    data: NavData\n  ): {\n    store: NavStrategy;\n    incoming: NavStrategy;\n    dimensionState: NavStrategy;\n  } {\n    const strategyObj = {\n      store: null,\n      incoming: null,\n      dimensionState: null,\n    };\n\n    // None Stored\n    if (!this.prevLink) {\n      strategyObj.store = NavStrategy.NoneStored;\n    }\n\n    // Root Stored\n    if (\n      this.prevLink instanceof NavlinkComponent &&\n      !(\n        this.prevLink.myParent instanceof\n        NavDisclosureComponent\n      )\n    ) {\n      strategyObj.store = NavStrategy.RootStored;\n    }\n\n    // Disclosure Stored\n    if (this.prevLink instanceof NavDisclosureComponent) {\n      strategyObj.store = NavStrategy.DisclosureStored;\n    }\n\n    // Sublink Stored\n    if (\n      this.prevLink instanceof NavlinkComponent &&\n      this.prevLink.myParent instanceof\n        NavDisclosureComponent\n    ) {\n      strategyObj.store = NavStrategy.SublinkStored;\n    }\n\n    // Incoming Root\n    if (\n      data.component instanceof NavlinkComponent &&\n      !(data.parent instanceof NavDisclosureComponent)\n    ) {\n      strategyObj.incoming = NavStrategy.RootIncoming;\n    }\n\n    // Incoming Disclosure\n    if (data.component instanceof NavDisclosureComponent) {\n      strategyObj.incoming = NavStrategy.DisclosureIncoming;\n    }\n\n    // Sublink incoming\n    if (\n      data.component instanceof NavlinkComponent &&\n      data.parent instanceof NavDisclosureComponent\n    ) {\n      strategyObj.incoming = NavStrategy.SublinkIncoming;\n    }\n\n    // From mini state\n    if (this.verticalMini) {\n      strategyObj.dimensionState =\n        NavStrategy.FromMiniState;\n    }\n\n    // From full state\n    if (!this.verticalMini) {\n      strategyObj.dimensionState =\n        NavStrategy.FromFullState;\n    }\n\n    return strategyObj;\n  }\n\n  /**\n   * Toggles the vertical Nav.\n   */\n  toggleOpen() {\n    this.verticalMini = !this.verticalMini;\n    this.updateLibServiceWithNavInfo();\n    if (\n      this.prevLink &&\n      this.prevLink.myParent instanceof\n        NavDisclosureComponent\n    ) {\n      this.prevLink.myParent.isSelected = this.verticalMini;\n      this.prevLink.myParent._navIsOpen = !this.prevLink\n        .myParent._navIsOpen;\n    }\n    if (this.verticalMini) {\n      this.width = NAV_DEFAULT.closeWidth;\n      return;\n    }\n    this.width = NAV_DEFAULT.openWidth;\n  }\n\n  private updateLibServiceWithNavInfo() {\n    this.vdsLibService.setNavInfo({\n      expanded: !this.verticalMini,\n      orientation: 'vertical',\n    });\n  }\n\n  get currentIcon() {\n    return this.verticalMini\n      ? NAV_DEFAULT.close\n      : NAV_DEFAULT.menu;\n  }\n\n  private setLogoSrc() {\n    if (this.src) {\n      return;\n    }\n    switch (this.colorScheme) {\n      case this.NavColorScheme.LIGHT:\n        this.src = NAV_DEFAULT.srcLight;\n        break;\n      case this.NavColorScheme.CONSUMER:\n      case this.NavColorScheme.DEFAULT:\n      case this.NavColorScheme.MARKETING:\n      default:\n        this.src = NAV_DEFAULT.src;\n        break;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-nav-panel {\n  position: relative !important;\n}\n",
          "styleUrl": "./nav-vertical.component.css"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "route",
            "type": "Router"
          }
        ],
        "line": 93,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "route",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterContentInit"],
      "accessors": {
        "currentIcon": {
          "name": "currentIcon",
          "getSignature": {
            "name": "currentIcon",
            "type": "",
            "returnType": "",
            "line": 400
          }
        }
      },
      "templateData": "<header\n  [ngClass]=\"{\n    'vds-type--consumer': colorScheme === NavColorScheme.CONSUMER,\n    'vds-type--marketing': colorScheme === NavColorScheme.MARKETING,\n    'vds-type--light': colorScheme === NavColorScheme.LIGHT,\n    'vds-nav-vertical-mini': verticalMini\n  }\"\n  [class]=\"'vds-nav vds-nav--vertical vds-nav--' + position\">\n  <div class=\"vds-nav-panel\">\n   <section class=\"vds-nav-vertical-header\">\n    <a [attr.href]=\"skipPath\" class=\"vds-nav-skip\">{{ skipLabel }}</a>\n    <div class=\"vds-nav-brand\">\n     <div class=\"vds-nav-brand-info\">\n      <a [href]=\"href\" class=\"vds-nav-brand-logo\">\n       <img class=\"vds-nav-brand-logo-image\" [src]=\"src\" [alt]=\"alt\">\n      </a>\n     </div>\n    </div>\n   </section>\n   <nav class=\"vds-nav-links\" role=\"navigation\">\n    <ul class=\"vds-tab-list\">\n     <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </ul>\n   </nav>\n   <section class=\"vds-nav-vertical-footer\">\n      <ng-content select=\"vds-avatar\"></ng-content>\n    <button\n      (click)=\"this.toggleOpen()\"\n      class=\"vds-btn-split vds-nav-vertical-toggle-button\"\n      aria-expanded=\"true\"\n      aria-label=\"Toggle vertical nav\">\n     <span class=\"vds-btn--action\">\n      <vds-icon\n        [altText]=\"verticalMini ? NAV_DEFAULT.navOpenText : NAV_DEFAULT.navCloseText\"\n        [icon]=\"verticalMini ? NAV_DEFAULT.navCloseIcon : NAV_DEFAULT.navOpenIcon \"\n        tiny=\"true\">\n      </vds-icon>\n     </span>\n    </button>\n   </section>\n  </div>\n </header>\n <!-- content template for nested child elements -->\n <ng-template #content>\n  <ng-content></ng-content>\n</ng-template>"
    },
    {
      "name": "PaginationComponent",
      "id": "component-PaginationComponent-e216bd1a9be9cb6e43d82cf9af432ab9",
      "file": "projects/vds-lib/src/lib/pagination/pagination.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-pagination",
      "styleUrls": ["./pagination.component.scss"],
      "styles": [],
      "templateUrl": ["./pagination.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaFirstPage",
          "defaultValue": "'First Page'",
          "description": "<p>Aria label for &#39;first page&#39; button <br>\nDefault: <code>'First Page'</code></p>\n",
          "line": 61
        },
        {
          "name": "ariaLastPage",
          "defaultValue": "'Last Page'",
          "description": "<p>Aria label for &#39;last page&#39; button <br>\nDefault: <code>'Last Page'</code></p>\n",
          "line": 79
        },
        {
          "name": "ariaNextPage",
          "defaultValue": "'Next Page'",
          "description": "<p>Aria label for &#39;next page&#39; button <br>\nDefault: <code>'Next Page'</code></p>\n",
          "line": 73
        },
        {
          "name": "ariaPreviousPage",
          "defaultValue": "'Previous Page'",
          "description": "<p>Aria label for &#39;previous page&#39; button <br>\nDefault: <code>'Previous Page'</code></p>\n",
          "line": 67
        },
        {
          "name": "containerClass",
          "defaultValue": "null",
          "description": "<p>Class for container <div> wrapping Pagination component <br>\nDefault: <code>null</code></p>\n",
          "line": 37
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "description": "<p>Whether component is disabled <br>\nDefault: <code>false</code></p>\n",
          "line": 43
        },
        {
          "name": "displayPageCount",
          "defaultValue": "false",
          "description": "<p>If true, a page count display will accompany the paginator <br>\nDefault: <code>false</code></p>\n",
          "line": 55
        },
        {
          "name": "displayPageSize",
          "defaultValue": "false",
          "description": "<p>If true, a page size dropdown will accompany the paginator <br>\nDefault: <code>false</code></p>\n",
          "line": 49
        },
        {
          "name": "length",
          "description": "<p>The length of the total number of items that are being paginated <br>\nDefault: <code>0</code></p>\n",
          "line": 157,
          "type": "number"
        },
        {
          "name": "pageIndex",
          "description": "<p>The zero-based page index of the displayed list of items <br>\nDefault: <code>0</code></p>\n",
          "line": 92,
          "type": "number"
        },
        {
          "name": "pageSize",
          "description": "<p>Number of items to display on a page <br>\nDefault: <code>null</code></p>\n",
          "line": 116,
          "type": "number"
        },
        {
          "name": "pageSizeOptions",
          "description": "<p>The set of provided page size options to display to the user <br>\nDefault: <code>[]</code></p>\n",
          "line": 133,
          "type": "number[]"
        },
        {
          "name": "pageSizeText",
          "defaultValue": "'ITEMS'",
          "description": "<p>Text to accompany page size dropdown <br>\nDefault: <code>'ITEMS'</code></p>\n",
          "line": 85
        }
      ],
      "outputsClass": [
        {
          "name": "paginationEvent",
          "defaultValue": "new EventEmitter<PageEvent>()",
          "description": "<p>Fires when a page index or page size has changed</p>\n",
          "line": 169,
          "type": "EventEmitter<PageEvent>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_displayedPageNumbers",
          "defaultValue": "new BehaviorSubject<number[]>([])",
          "type": "",
          "optional": false,
          "description": "",
          "line": 175
        },
        {
          "name": "_length",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 164
        },
        {
          "name": "_menuOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 173
        },
        {
          "name": "_pageIndex",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 109
        },
        {
          "name": "_pageSize",
          "defaultValue": "null",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 126
        },
        {
          "name": "_pageSizeOptions",
          "defaultValue": "[]",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 150
        },
        {
          "name": "_stateChange",
          "defaultValue": "new Subject()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 174
        },
        {
          "name": "displayedPageNumbers$",
          "defaultValue": "this._displayedPageNumbers.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 178
        },
        {
          "name": "stateChange$",
          "defaultValue": "this._stateChange.asObservable()",
          "type": "",
          "optional": false,
          "description": "",
          "line": 177
        }
      ],
      "methodsClass": [
        {
          "name": "_constructPageNumbers",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 294
        },
        {
          "name": "_emitPageEvent",
          "args": [
            {
              "name": "previousPageIndex",
              "type": "number",
              "defaultValue": "null"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 384,
          "jsdoctags": [
            {
              "name": "previousPageIndex",
              "type": "number",
              "defaultValue": "null",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_emitStateChange",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 395
        },
        {
          "name": "_getPageCountText",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 356
        },
        {
          "name": "_validatePageSizeAndPageSizeOptions",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 368
        },
        {
          "name": "firstPage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 217
        },
        {
          "name": "handleDropdownSelect",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 250,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleListboxSelect",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 255,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handlePageSelect",
          "args": [
            {
              "name": "page",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 244,
          "jsdoctags": [
            {
              "name": "page",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "lastPage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 229
        },
        {
          "name": "nextButtonsDisabled",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 280
        },
        {
          "name": "nextPage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 235
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 201,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 212
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 189
        },
        {
          "name": "numberOfPages",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 290
        },
        {
          "name": "previousButtonsDisabled",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 273
        },
        {
          "name": "previousPage",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 223
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "document:click",
          "args": [],
          "argsDecorator": [],
          "line": 181
        }
      ],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  ViewEncapsulation,\n  OnChanges,\n  HostListener,\n  SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SPACE } from '@angular/cdk/keycodes';\nimport {\n  PageEvent,\n  PAGINATION,\n  sortFn,\n} from './pagination.constant';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PaginationComponent\n  implements OnInit, OnChanges, OnDestroy {\n  /**\n   * Class for container <div> wrapping Pagination component <br>\n   * Default: <code>null</code>\n   */\n  @Input() containerClass = null;\n\n  /**\n   * Whether component is disabled <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled = false;\n\n  /**\n   * If true, a page size dropdown will accompany the paginator <br>\n   * Default: <code>false</code>\n   */\n  @Input() displayPageSize = false;\n\n  /**\n   * If true, a page count display will accompany the paginator <br>\n   * Default: <code>false</code>\n   */\n  @Input() displayPageCount = false;\n\n  /**\n   * Aria label for 'first page' button <br>\n   * Default: <code>'First Page'</code>\n   */\n  @Input() ariaFirstPage = 'First Page';\n\n  /**\n   * Aria label for 'previous page' button <br>\n   * Default: <code>'Previous Page'</code>\n   */\n  @Input() ariaPreviousPage = 'Previous Page';\n\n  /**\n   * Aria label for 'next page' button <br>\n   * Default: <code>'Next Page'</code>\n   */\n  @Input() ariaNextPage = 'Next Page';\n\n  /**\n   * Aria label for 'last page' button <br>\n   * Default: <code>'Last Page'</code>\n   */\n  @Input() ariaLastPage = 'Last Page';\n\n  /**\n   * Text to accompany page size dropdown <br>\n   * Default: <code>'ITEMS'</code>\n   */\n  @Input() pageSizeText = 'ITEMS';\n\n  /**\n   * The zero-based page index of the displayed list of items <br>\n   * Default: <code>0</code>\n   */\n  @Input()\n  get pageIndex(): number {\n    return this._pageIndex;\n  }\n  set pageIndex(value: number) {\n    const numOfPages = this.numberOfPages();\n    const newValue = Math.max(\n      coerceNumberProperty(value),\n      0\n    );\n\n    this._pageIndex =\n      numOfPages > 0\n        ? Math.min(newValue, numOfPages)\n        : newValue;\n\n    this._constructPageNumbers();\n  }\n  _pageIndex = 0;\n\n  /**\n   * Number of items to display on a page <br>\n   * Default: <code>null</code>\n   */\n  @Input()\n  get pageSize(): number {\n    return this._pageSize;\n  }\n  set pageSize(value: number) {\n    this._pageSize = coerceNumberProperty(value);\n\n    this._validatePageSizeAndPageSizeOptions();\n\n    this._constructPageNumbers();\n  }\n  _pageSize = null;\n\n  /**\n   * The set of provided page size options to display to the user <br>\n   * Default: <code>[]</code>\n   */\n  @Input()\n  get pageSizeOptions(): number[] {\n    return this._pageSizeOptions;\n  }\n  set pageSizeOptions(value: number[]) {\n    this._pageSizeOptions = (value || [])\n      .map((p) => {\n        p = coerceNumberProperty(p);\n        if (p > 0) {\n          return p;\n        }\n\n        return null;\n      })\n      .filter(Boolean);\n\n    this._validatePageSizeAndPageSizeOptions();\n  }\n  _pageSizeOptions: number[] = [];\n\n  /**\n   * The length of the total number of items that are being paginated <br>\n   * Default: <code>0</code>\n   */\n  @Input()\n  get length(): number {\n    return this._length;\n  }\n  set length(value: number) {\n    this._length = coerceNumberProperty(value);\n    this._constructPageNumbers();\n  }\n  _length = 0;\n\n  /**\n   * Fires when a page index or page size has changed\n   */\n  @Output() paginationEvent: EventEmitter<\n    PageEvent\n  > = new EventEmitter<PageEvent>();\n\n  _menuOpen = false;\n  _stateChange = new Subject();\n  _displayedPageNumbers = new BehaviorSubject<number[]>([]);\n\n  stateChange$ = this._stateChange.asObservable();\n  displayedPageNumbers$ = this._displayedPageNumbers.asObservable();\n\n  @HostListener('document:click')\n  clickOut() {\n    if (this._menuOpen && !this.disabled) {\n      this._menuOpen = false;\n    }\n  }\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n\n    if (this.pageIndex > this.numberOfPages()) {\n      this.pageIndex = this.numberOfPages();\n    }\n\n    this._constructPageNumbers();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._emitStateChange();\n\n    if (\n      (changes.length && !changes.length.firstChange) ||\n      (changes.pageSize && !changes.pageSize.firstChange)\n    ) {\n      this.pageIndex = 0;\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChange.complete();\n    this._displayedPageNumbers.complete();\n  }\n\n  firstPage() {\n    const previousIndex = this.pageIndex;\n    this.pageIndex = 0;\n    this._emitPageEvent(previousIndex);\n  }\n\n  previousPage() {\n    const previousIndex = this.pageIndex;\n    this.pageIndex = Math.max(0, this.pageIndex - 1);\n    this._emitPageEvent(previousIndex);\n  }\n\n  lastPage() {\n    const previousIndex = this.pageIndex;\n    this.pageIndex = this.numberOfPages();\n    this._emitPageEvent(previousIndex);\n  }\n\n  nextPage() {\n    const previousIndex = this.pageIndex;\n    this.pageIndex = Math.min(\n      this.numberOfPages(),\n      this.pageIndex + 1\n    );\n    this._emitPageEvent(previousIndex);\n  }\n\n  handlePageSelect(page: number) {\n    const previousIndex = this.pageIndex;\n    this.pageIndex = page;\n    this._emitPageEvent(previousIndex);\n  }\n\n  handleDropdownSelect(event) {\n    event.stopPropagation();\n    this._menuOpen = !this._menuOpen;\n  }\n\n  handleListboxSelect(event) {\n    const pageSize = event.target.getAttribute(\n      PAGINATION.DATA_ATTR_PAGE_SIZE_ITEM\n    );\n    if (\n      (event.type === 'keydown' && event.which === SPACE) ||\n      event.type === 'click'\n    ) {\n      event.preventDefault();\n      event.stopPropagation();\n      const previousIndex = this.pageIndex;\n      this._menuOpen = false;\n      this.pageSize = pageSize;\n      this.pageIndex = 0;\n      this._emitPageEvent(previousIndex);\n    }\n  }\n\n  previousButtonsDisabled() {\n    return (\n      this.disabled ||\n      !(this.pageIndex >= 1 && this.pageSize !== 0)\n    );\n  }\n\n  nextButtonsDisabled() {\n    return (\n      this.disabled ||\n      !(\n        this.pageIndex < this.numberOfPages() &&\n        this.pageSize !== 0\n      )\n    );\n  }\n\n  numberOfPages() {\n    return Math.ceil(this.length / this.pageSize) - 1;\n  }\n\n  _constructPageNumbers() {\n    if (this.length === 0) {\n      return this._displayedPageNumbers.next([]);\n    }\n\n    const lastPage = this.numberOfPages() + 1;\n    const adjPageIndex = this.pageIndex + 1;\n    const blockLimit =\n      adjPageIndex <= PAGINATION.START_END_LIMIT ||\n      lastPage - adjPageIndex < PAGINATION.START_END_LIMIT\n        ? PAGINATION.START_END_LIMIT\n        : PAGINATION.MIDDLE_LIMIT;\n    const modIndex = this.pageIndex % blockLimit;\n    const beginBlock = [1, null];\n    const endBlock = [null, lastPage];\n\n    if (lastPage <= PAGINATION.PAGE_LIMIT) {\n      // no need to do anything fancy if `lastPage <= PAGE_LIMIT`\n      this._displayedPageNumbers.next(\n        Array.from({ length: lastPage }, (v, i) => i + 1)\n      );\n    } else if (\n      blockLimit === PAGINATION.START_END_LIMIT &&\n      adjPageIndex > blockLimit\n    ) {\n      // when we are at tail end of pagination we simply use the last 7 page numbers\n      this._displayedPageNumbers.next(\n        beginBlock.concat(\n          Array.from(\n            { length: PAGINATION.START_END_LIMIT },\n            (v, i) => lastPage - i\n          ).sort(sortFn)\n        )\n      );\n    } else {\n      const leftBlock = Array.from(\n        { length: modIndex },\n        (v, i) => this.pageIndex - i\n      ).sort(sortFn);\n      const rightBlock =\n        blockLimit >= this.pageIndex\n          ? Array.from(\n              { length: blockLimit - this.pageIndex },\n              (v, i) => blockLimit - i\n            ).sort(sortFn)\n          : Array.from(\n              { length: blockLimit - modIndex },\n              (v, i) => adjPageIndex + i\n            );\n\n      this._displayedPageNumbers.next(\n        blockLimit === PAGINATION.START_END_LIMIT\n          ? leftBlock.concat(rightBlock).concat(endBlock)\n          : beginBlock\n              .concat(leftBlock.concat(rightBlock))\n              .concat(endBlock)\n      );\n    }\n\n    this._getPageCountText();\n  }\n\n  _getPageCountText() {\n    const leftMarker = this.pageSize * this.pageIndex + 1;\n    const rightMarker =\n      this.pageIndex !== this.numberOfPages()\n        ? this.pageSize * (this.pageIndex + 1)\n        : this.length;\n\n    return `${leftMarker} - ${rightMarker} of ${\n      this.length\n    }`;\n  }\n\n  _validatePageSizeAndPageSizeOptions() {\n    if (!this._pageSize) {\n      this._pageSize =\n        this._pageSizeOptions.length > 0\n          ? this._pageSizeOptions[0]\n          : PAGINATION.DEFAULT_PAGESIZE;\n    }\n\n    if (!this._pageSizeOptions.includes(this._pageSize)) {\n      let pageSizeOptions = this._pageSizeOptions.slice();\n      pageSizeOptions.push(this._pageSize);\n      pageSizeOptions = pageSizeOptions.sort(sortFn);\n      this._pageSizeOptions = pageSizeOptions;\n    }\n  }\n\n  _emitPageEvent(previousPageIndex: number = null) {\n    this._emitStateChange();\n\n    this.paginationEvent.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length,\n    });\n  }\n\n  _emitStateChange() {\n    this._stateChange.next({\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length,\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-pagination-control {\n  .vds-btn-icon {\n    vds-icon {\n      display: inline-flex;\n    }\n  }\n}\n",
          "styleUrl": "./pagination.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 185,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnChanges", "OnDestroy"],
      "accessors": {
        "pageIndex": {
          "name": "pageIndex",
          "setSignature": {
            "name": "pageIndex",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "returnType": "void",
            "line": 95,
            "jsdoctags": [
              {
                "name": "value",
                "type": "number",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "pageSize": {
          "name": "pageSize",
          "setSignature": {
            "name": "pageSize",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "returnType": "void",
            "line": 119,
            "jsdoctags": [
              {
                "name": "value",
                "type": "number",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "pageSizeOptions": {
          "name": "pageSizeOptions",
          "setSignature": {
            "name": "pageSizeOptions",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "[]"
              }
            ],
            "returnType": "void",
            "line": 136,
            "jsdoctags": [
              {
                "name": "value",
                "type": "[]",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "length": {
          "name": "length",
          "setSignature": {
            "name": "length",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "number"
              }
            ],
            "returnType": "void",
            "line": 160,
            "jsdoctags": [
              {
                "name": "value",
                "type": "number",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"!displayPageSize && !displayPageCount; else gridContainer\">\n  <div\n    *ngIf=\"numberOfPages() > 0\"\n    [ngClass]=\"containerClass\"\n    [attr.data-pagination-index]=\"(pageIndex + 1)\"\n    [attr.data-pagination-pagesize]=\"pageSize\">\n    <ng-container [ngTemplateOutlet]=\"paginator\"></ng-container>\n  </div>\n</ng-container>\n\n<ng-template #gridContainer>\n  <div\n    class=\"vds-grid\"\n    [ngClass]=\"containerClass\"\n    [attr.data-pagination-index]=\"(pageIndex + 1)\"\n    [attr.data-pagination-pagesize]=\"pageSize\">\n\n    <div class=\"row vds-pagination-bar\">\n      <!--  Select dropdown and page count display  -->\n      <div class=\"col col--no-gutter\" *ngIf=\"displayPageSize || displayPageCount\">\n        <ng-container *ngIf=\"displayPageSize\" [ngTemplateOutlet]=\"dropdown\"></ng-container>\n        <ng-container *ngIf=\"displayPageCount\" [ngTemplateOutlet]=\"pageCount\"></ng-container>\n      </div>\n\n      <!--  Paginator  -->\n      <div class=\"col col--no-gutter col--align-end\" *ngIf=\"numberOfPages() > 0\">\n        <ng-container [ngTemplateOutlet]=\"paginator\"></ng-container>\n      </div>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #dropdown>\n  <div class=\"vds-navmenu\">\n    <button\n      aria-label=\"change page size\"\n      class=\"vds-btn-split vds-btn-split--secondary\"\n      type=\"button\"\n      [disabled]=\"disabled\"\n      (click)=\"handleDropdownSelect($event)\">\n      <span class=\"vds-btn-label\">\n        {{pageSize}} {{pageSizeText}}\n      </span>\n      <span class=\"vds-btn--action\">\n         <vds-icon [icon]=\"!_menuOpen ? 'visa_arrow-expand' : 'visa_arrow-collapse'\" tiny=\"true\"></vds-icon>\n      </span>\n    </button>\n    <div class=\"vds-menu--absolute\" [ngClass]=\"{ 'vds-menu--show': _menuOpen }\">\n      <ul\n        class=\"vds-listbox\"\n        (click)=\"!disabled ? handleListboxSelect($event) : null\"\n        (keydown)=\"!disabled ? handleListboxSelect($event) : null\">\n        <li\n          [attr.data-item-size]=\"size\"\n          class=\"vds-listbox-item\"\n          tabindex=\"0\"\n          *ngFor=\"let size of pageSizeOptions\">\n          {{size}}\n        </li>\n      </ul>\n    </div>\n  </div>\n</ng-template>\n\n<ng-template #pageCount>\n  <div class=\"vds-pagination-page-items-count\">{{_getPageCountText()}}</div>\n</ng-template>\n\n<ng-template #paginator>\n  <ul role=\"navigation\" class=\"vds-pagination\">\n    <li class=\"vds-pagination-control\">\n      <button\n        type=\"button\"\n        class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n        [disabled]=\"previousButtonsDisabled()\"\n        [attr.aria-label]=\"ariaFirstPage\"\n        (click)=\"firstPage()\">\n        <span class=\"vds-btn-label\">\n          <vds-icon icon=\"visa_arrow-start\" tiny=\"true\"></vds-icon>\n        </span>\n      </button>\n    </li>\n\n    <li class=\"vds-pagination-control\">\n      <button\n        type=\"button\"\n        class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n        [disabled]=\"previousButtonsDisabled()\"\n        [attr.aria-label]=\"ariaPreviousPage\"\n        (click)=\"previousPage()\">\n        <span class=\"vds-btn-label\">\n          <vds-icon icon=\"visa_arrow-previous\" tiny=\"true\"></vds-icon>\n        </span>\n      </button>\n    </li>\n\n    <ng-container *ngIf=\"displayedPageNumbers$ | async as displayedPageNumbers\">\n      <li\n        class=\"vds-pagination-page\"\n        *ngFor=\"let page of displayedPageNumbers\"\n        [attr.aria-current]=\"(page === pageIndex + 1) ? 'true' : null\"\n        [ngClass]=\"{'vds-state--selected': !disabled && (page === pageIndex + 1)}\">\n        <div\n          *ngIf=\"page === null; else pageButton\"\n          type=\"button\"\n          class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n          aria-label=\"more pages\">\n          <span class=\"vds-btn-label\">\n            <vds-icon icon=\"visa_options\" low=\"true\"></vds-icon>\n          </span>\n        </div>\n        <ng-template #pageButton>\n          <button\n            type=\"button\"\n            class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n            [disabled]=\"disabled || (page === pageIndex + 1)\"\n            [attr.aria-label]=\"'Page ' + page\"\n            (click)=\"handlePageSelect(page - 1)\">\n            <span class=\"vds-btn-label\">\n              {{page}}\n            </span>\n          </button>\n        </ng-template>\n      </li>\n    </ng-container>\n\n    <li class=\"vds-pagination-control\">\n      <button\n        type=\"button\"\n        class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n        [disabled]=\"nextButtonsDisabled()\"\n        [attr.aria-label]=\"ariaNextPage\"\n        (click)=\"nextPage()\">\n        <span class=\"vds-btn-label\">\n          <vds-icon icon=\"visa_arrow-next\" tiny=\"true\"></vds-icon>\n        </span>\n      </button>\n    </li>\n\n    <li class=\"vds-pagination-control\">\n      <button\n        type=\"button\"\n        class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n        [disabled]=\"nextButtonsDisabled()\"\n        [attr.aria-label]=\"ariaLastPage\"\n        (click)=\"lastPage()\">\n        <span class=\"vds-btn-label\">\n          <vds-icon icon=\"visa_arrow-end\" tiny=\"true\"></vds-icon>\n        </span>\n      </button>\n    </li>\n  </ul>\n</ng-template>\n"
    },
    {
      "name": "PanelComponent",
      "id": "component-PanelComponent-20030a03cb84c112b79d5909113c3e87",
      "file": "projects/vds-lib/src/lib/panel/panel.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-panel",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./panel.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "animated",
          "description": "<p>Flag that sets the panel to animate on open and close.</p>\n",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "isOpen",
          "description": "<p>Opens the panel on load if set to true</p>\n",
          "line": 28,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [112]
        },
        {
          "name": "dresser",
          "type": "DresserComponent",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "DresserComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  ContentChild,\n  OnInit,\n  AfterContentInit,\n  Input,\n} from '@angular/core';\nimport { DresserComponent } from './dresser/dresser.component';\nimport { VdsLibService } from '../vds-lib.service';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-panel',\n  templateUrl: './panel.component.html',\n})\nexport class PanelComponent\n  implements AfterContentInit, OnInit {\n  @ContentChild(DresserComponent) dresser: DresserComponent;\n  /**\n   * Flag that sets the panel to animate on open and close.\n   */\n  @Input() animated: boolean;\n\n  /**\n   * Opens the panel on load if set to true\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n  set isOpen(value) {\n    this._isOpen = coerceBooleanProperty(value);\n  }\n  private _isOpen = false;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.animated = this.vdsLibService.triageDisabledValue(\n      this.animated\n    );\n  }\n\n  ngAfterContentInit() {\n    if (this.dresser) {\n      this.dresser.open.subscribe((_) => {\n        this.open();\n      });\n      this.dresser.close.subscribe((_) => {\n        this.close();\n      });\n    }\n  }\n\n  open() {\n    this.isOpen = true;\n  }\n\n  close() {\n    this.isOpen = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 34,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterContentInit", "OnInit"],
      "accessors": {
        "isOpen": {
          "name": "isOpen",
          "setSignature": {
            "name": "isOpen",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 31,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"vds-viewport\">\n  <div class=\"vds-content\">\n    <ng-content select=\"vds-content\"></ng-content>\n  </div>\n  <div \n    [ngClass]=\"{\n      'vds-panel': true,\n      'vds-state--close': !isOpen,\n      'vds-state--open': isOpen,\n      'vds-state--animated': animated\n    }\" \n    [attr.aria-expanded]=\"isOpen\">\n    <ng-content \n      (open)=\"open($event)\" \n      (close)=\"close()\" \n      select=\"vds-dresser\">\n    </ng-content>\n  </div>\n</div>"
    },
    {
      "name": "ProgressGaugeComponent",
      "id": "component-ProgressGaugeComponent-8b1ca6160f4b5e01182836103215e278",
      "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-progress-gauge",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./progress-gauge.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "details",
          "defaultValue": "PROGRESS_GAUGE.DEFAULT.DETAILS",
          "description": "<p>Descriptive text. Color dependent on status.</p>\n",
          "line": 17,
          "type": "string"
        },
        {
          "name": "small",
          "description": "<p>Flag that sets component to smaller version.</p>\n",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "status",
          "defaultValue": "ProgressGaugeStatus.DEFAULT",
          "description": "<p>Sets state of component.\nDefaults to <code>default</code>.</p>\n",
          "line": 26,
          "type": "ProgressGaugeStatus"
        },
        {
          "name": "subtitle",
          "defaultValue": "PROGRESS_GAUGE.DEFAULT.SUBTITLE",
          "description": "<p>Subtitle text.</p>\n",
          "line": 31,
          "type": "string"
        },
        {
          "name": "title",
          "defaultValue": "PROGRESS_GAUGE.DEFAULT.TITLE",
          "description": "<p>Title text.</p>\n",
          "line": 36,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "circleData",
          "type": "Circle",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "progressData",
          "defaultValue": "PROGRESS_GAUGE",
          "type": "",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "statusArr",
          "defaultValue": "Object.values(ProgressGaugeStatus)",
          "type": "",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [
        {
          "name": "isProgress",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 48,
          "description": "<p>Used in template to simplify logic</p>\n"
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52
        },
        {
          "name": "setStatus",
          "args": [
            {
              "name": "status",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69,
          "description": "<p>Sets current status</p>\n",
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "status",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport {\n  PROGRESS_GAUGE,\n  ProgressGaugeStatus,\n  Circle,\n} from './progress-gauge.constants';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-progress-gauge',\n  templateUrl: './progress-gauge.component.html',\n})\nexport class ProgressGaugeComponent implements OnInit {\n  /**\n   * Descriptive text. Color dependent on status.\n   */\n  @Input() details: string = PROGRESS_GAUGE.DEFAULT.DETAILS;\n  /**\n   * Flag that sets component to smaller version.\n   */\n  @Input() small: boolean;\n  /**\n   * Sets state of component.\n   * Defaults to <code>default</code>.\n   */\n  @Input() status: ProgressGaugeStatus =\n    ProgressGaugeStatus.DEFAULT;\n  /**\n   * Subtitle text.\n   */\n  @Input() subtitle: string =\n    PROGRESS_GAUGE.DEFAULT.SUBTITLE;\n  /**\n   * Title text.\n   */\n  @Input() title: string = PROGRESS_GAUGE.DEFAULT.TITLE;\n\n  progressData = PROGRESS_GAUGE;\n  // todo fix this. there needs to be a default\n  circleData: Circle;\n  statusArr = Object.values(ProgressGaugeStatus);\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  /**\n   * Used in template to simplify logic\n   */\n  isProgress(): boolean {\n    return this.status === ProgressGaugeStatus.PROGRESS;\n  }\n\n  ngOnInit() {\n    this.setStatus(this.status.toLowerCase());\n    this.small = this.vdsLibService.triageDisabledValue(\n      this.small\n    );\n    if (this.small) {\n      this.circleData =\n        PROGRESS_GAUGE.DEFAULT.CIRCLE_REF.SMALL;\n      return;\n    }\n    this.circleData =\n      PROGRESS_GAUGE.DEFAULT.CIRCLE_REF.LARGE;\n  }\n\n  /**\n   * Sets current status\n   */\n  private setStatus(status: string) {\n    switch (status) {\n      case ProgressGaugeStatus.DEFAULT:\n      case ProgressGaugeStatus.PROGRESS:\n      case ProgressGaugeStatus.COMPLETED:\n      case ProgressGaugeStatus.APPROVED:\n        this.status = status;\n        break;\n      default:\n        console.warn(\n          '[!] VDS: invalid status set in Progress-Gauge'\n        );\n        this.status = ProgressGaugeStatus.DEFAULT;\n        break;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 41,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div \n  [ngClass]=\"{\n    'vds-progress-gauge': true,\n    'vds-status--small': small,\n    'vds-status--not-started': status === 'default',\n    'vds-status--progress': status === 'progress',\n    'vds-status--completed': status === 'completed',\n    'vds-status--approved': status === 'approved'\n  }\">\n<div class=\"vds-progress-gauge-display\">\n  <div class=\"vds-progress-gauge-ring\">\n  <svg \n    [ngClass]=\"{\n      'vds-progress-gauge-track': !isProgress(),\n      'vds-progress--spinner-track': isProgress()\n    }\"\n    [attr.height]=\"circleData?.DIMENSION\" \n    [attr.width]=\"circleData?.DIMENSION\">\n    <circle \n      [ngClass]=\"{\n        'vds-progress-gauge-background': !isProgress(),\n        'vds-progress--spinner-background': isProgress()\n      }\"\n      [attr.cx]=\"circleData?.CX\" \n      [attr.cy]=\"circleData?.CY\" \n      [attr.r]=\"circleData?.R\" \n      [attr.stroke-dashasharray]=\"isProgress() ? circleData?.OUTER.STROKE_DASHARRAY : null\"\n      [attr.stroke-dashoffset]=\"isProgress() ? circleData?.OUTER.STROKE_DASHOFFSET : null\"\n      [attr.stroke-width]=\"isProgress() ? null : progressData.DEFAULT.STROKE_WIDTH\">\n    </circle>\n    <circle \n      class=\"vds-progress--spinner-bar\"\n      [attr.cx]=\"circleData?.CX\"\n      [attr.cy]=\"circleData?.CY\"\n      [attr.r]=\"circleData?.R\"\n      [attr.stroke-dasharray]=\"circleData?.INNER.STROKE_DASHARRAY\"\n      [attr.stroke-dashoffset]=\"circleData?.INNER.STROKE_DASHOFFSET\"\n      *ngIf=\"isProgress()\">\n    </circle>\n  </svg>\n  </div>\n  <div class=\"vds-progress-gauge-icon\" focusable=\"false\" tabindex=\"-1\">\n  <ng-content select=\"vds-icon\"></ng-content>\n  </div>\n</div>\n<div class=\"vds-progress-gauge-step\">{{ title }}</div>\n<div class=\"vds-progress-gauge-date\">{{ subtitle }}</div>\n<div class=\"vds-progress-gauge-label\">{{ details }}</div>\n</div>\n"
    },
    {
      "name": "RadioComponent",
      "id": "component-RadioComponent-550a72fd5491f556a9b4ce8ecfa6661d",
      "file": "projects/vds-lib/src/lib/radio/radio.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MakeProvider(RadioComponent)",
          "type": "component"
        }
      ],
      "selector": "vds-radio",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./radio.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "checked",
          "description": "<p>Checks the radio statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "description": "<p>Disable radio statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 36,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>The id of the input element.</p>\n",
          "line": 40,
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "<p>Set invalid statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 46,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>The user display label of the radio.</p>\n",
          "line": 50,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name of the input element.</p>\n",
          "line": 54,
          "type": "string"
        },
        {
          "name": "value",
          "description": "<p>The value of the input element.</p>\n",
          "line": 58,
          "type": "string | number"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits changed value.</p>\n",
          "line": 62,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64,
          "modifierKind": [114]
        },
        {
          "name": "RADIO",
          "defaultValue": "RADIO",
          "type": "",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "radioID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 65,
          "modifierKind": [114]
        },
        {
          "name": "radioName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 66,
          "modifierKind": [114]
        },
        {
          "name": "radioValue",
          "type": "string | number",
          "optional": false,
          "description": "",
          "line": 67,
          "modifierKind": [114]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "checkAndWrite",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 106
        },
        {
          "name": "click",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 78
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 128
        },
        {
          "name": "onFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 124
        },
        {
          "name": "onKeyDown",
          "args": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 118,
          "jsdoctags": [
            {
              "name": "event",
              "type": "KeyboardEvent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 99,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { RADIO } from './radio.constant';\nimport {\n  AbstractValueAccessor,\n  MakeProvider,\n} from '../abstract-value-accessor';\n\n@Component({\n  selector: 'vds-radio',\n  templateUrl: './radio.component.html',\n  providers: [MakeProvider(RadioComponent)],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RadioComponent extends AbstractValueAccessor\n  implements OnInit {\n  /**\n   * Checks the radio statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() checked: boolean;\n  /**\n   * Disable radio statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * The id of the input element.\n   */\n  @Input() id: string;\n  /**\n   * Set invalid statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() invalid: boolean;\n  /**\n   * The user display label of the radio.\n   */\n  @Input() label: string;\n  /**\n   * The name of the input element.\n   */\n  @Input() name: string;\n  /**\n   * The value of the input element.\n   */\n  @Input() value: string | number;\n  /**\n   * Emits changed value.\n   */\n  @Output() change = new EventEmitter<any>();\n\n  public focused = false;\n  public radioID: string;\n  public radioName: string;\n  public radioValue: string | number;\n\n  RADIO = RADIO;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(RADIO.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + RADIO.SUFFIX.NAME;\n    this.radioID = `${this.id}${RADIO.SUFFIX.NATIVE}`;\n    this.radioName = `${this.name}${RADIO.SUFFIX.NATIVE}`;\n    this.checked = this.vdsLibService.triageDisabledValue(\n      this.checked\n    );\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.invalid = this.vdsLibService.triageDisabledValue(\n      this.invalid\n    );\n    this.radioValue = this.value;\n  }\n\n  writeValue(value: any) {\n    super.writeValue(value);\n    this.checked = value;\n    this.cdRef.detectChanges();\n    this.change.emit(this.checked);\n  }\n\n  checkAndWrite(): void {\n    if (this.disabled) {\n      return;\n    }\n    this.writeValue(!this.checked);\n  }\n\n  click(event: MouseEvent): void {\n    this.checkAndWrite();\n    event.stopPropagation();\n  }\n\n  onKeyDown(event: KeyboardEvent): void {\n    this.checkAndWrite();\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  onFocus(): void {\n    this.focused = true;\n  }\n\n  onBlur(): void {\n    this.focused = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 69,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": ["OnInit"],
      "templateData": "<input\n  [checked]=\"(checked) ? true : null\"\n  [attr.disabled]=\"(disabled) ? true : null\"\n  [attr.value]=\"(radioValue) ? radioValue : RADIO.VALUE.DEFAULT\"\n  [id]=\"radioID\"\n  [name]=\"radioName\"\n  (blur)=\"onBlur()\"\n  (click)=\"click($event)\"\n  (focus)=\"onFocus()\"\n  (keydown.space)=\"onKeyDown($event)\"\n  class=\"vds-radio\"\n  type=\"radio\"\n>\n<label\n  [for]=\"radioID\"\n  [ngClass]=\"{\n    'vds-radio-label': true,\n    'vds-state--checked': (checked) ? true : null,\n    'vds-state--disabled': (disabled) ? true : null,\n    'vds-state--focus': (focused) ? true : null,\n    'vds-state--invalid': (invalid) ? true : null\n  }\"\n  tabindex=\"-1\"\n>\n  {{ label }}\n</label>\n"
    },
    {
      "name": "RadioGroupComponent",
      "id": "component-RadioGroupComponent-cb3807a536a38faf33d204aac2ecdb12",
      "file": "projects/vds-lib/src/lib/radio-group/radio-group.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MakeProvider(RadioGroupComponent)",
          "type": "component"
        }
      ],
      "selector": "vds-radio-group",
      "styleUrls": ["./radio-group.component.scss"],
      "styles": [],
      "templateUrl": ["./radio-group.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disable radio group statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 42,
          "type": "boolean"
        },
        {
          "name": "errorMessage",
          "description": "<p>Error message for the user.</p>\n",
          "line": 46,
          "type": "string"
        },
        {
          "name": "id",
          "description": "<p>The id of the radio group.</p>\n",
          "line": 50,
          "type": "string"
        },
        {
          "name": "legend",
          "description": "<p>Legend header for the field set.</p>\n",
          "line": 60,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name of the radio group.</p>\n",
          "line": 64,
          "type": "string"
        },
        {
          "name": "required",
          "description": "<p>Set required statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 56,
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "<p>The value of the radio group.</p>\n",
          "line": 68,
          "type": "string | number"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits changed value.</p>\n",
          "line": 72,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "radioID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 74,
          "modifierKind": [114]
        },
        {
          "name": "radioItems",
          "type": "Array<RadioComponent>",
          "optional": false,
          "description": "",
          "line": 76,
          "modifierKind": [114]
        },
        {
          "name": "radioName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 75,
          "modifierKind": [114]
        },
        {
          "name": "radios",
          "type": "QueryList<RadioComponent>",
          "optional": false,
          "description": "",
          "line": 33,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "RadioComponent"
            }
          ]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "changed",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 122,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentChecked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 102
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 107
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85
        },
        {
          "name": "runContentUpdates",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { RadioComponent } from '../radio/radio.component';\nimport { RADIO } from '../radio/radio.constant';\nimport {\n  AbstractValueAccessor,\n  MakeProvider,\n} from '../abstract-value-accessor';\nimport { isNumeric } from 'rxjs/internal-compatibility';\n\n@Component({\n  selector: 'vds-radio-group',\n  templateUrl: './radio-group.component.html',\n  styleUrls: ['./radio-group.component.scss'],\n  providers: [MakeProvider(RadioGroupComponent)],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RadioGroupComponent\n  extends AbstractValueAccessor\n  implements OnInit, AfterContentInit, AfterContentChecked {\n  @ContentChildren(RadioComponent) radios: QueryList<\n    RadioComponent\n  >;\n\n  /**\n   * Disable radio group statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * Error message for the user.\n   */\n  @Input() errorMessage: string;\n  /**\n   * The id of the radio group.\n   */\n  @Input() id: string;\n  /**\n   * Set required statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() required: boolean;\n  /**\n   * Legend header for the field set.\n   */\n  @Input() legend: string;\n  /**\n   * The name of the radio group.\n   */\n  @Input() name: string;\n  /**\n   * The value of the radio group.\n   */\n  @Input() value: string | number;\n  /**\n   * Emits changed value.\n   */\n  @Output() change = new EventEmitter<any>();\n\n  public radioID: string;\n  public radioName: string;\n  public radioItems: Array<RadioComponent>;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(RADIO.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + RADIO.SUFFIX.NAME;\n    this.radioID = `${this.id}${RADIO.SUFFIX.NATIVE}`;\n    this.radioName = `${this.name}${RADIO.SUFFIX.NATIVE}`;\n    this.required = this.vdsLibService.triageDisabledValue(\n      this.required\n    );\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n  }\n\n  ngAfterContentChecked() {\n    this.runContentUpdates();\n  }\n\n  // todo not sure we need to do this\n  ngAfterContentInit() {\n    this.runContentUpdates();\n  }\n\n  runContentUpdates() {\n    this.radioItems = this.radios.toArray();\n    const selected = this.radioItems.find(\n      (item) => item.checked\n    );\n    if (selected) {\n      this.value = selected.radioValue;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  changed(event) {\n    let value = event.target.value;\n    value = isNumeric(value) ? Number(value) : value;\n    this.writeValue(value);\n    this.change.emit(value);\n  }\n\n  writeValue(value: any) {\n    value = isNumeric(value) ? Number(value) : value;\n    super.writeValue(value);\n    this.cdRef.detectChanges();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-radio-error-message {\n  vds-icon {\n    display: inline-flex;\n  }\n}\n",
          "styleUrl": "./radio-group.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 76,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": [
        "OnInit",
        "AfterContentInit",
        "AfterContentChecked"
      ],
      "templateData": "<fieldset\n  [attr.disabled]=\"(disabled) ? true : null\"\n  [ngClass]=\"{\n    'vds-radio-group': true,\n    'vds-radio-group--error-required': (required && !value) ? true : null,\n    'vds-state--disabled': (disabled) ? true : null\n  }\"\n  [id]=\"radioID\"\n>\n  <legend\n    *ngIf=\"legend\"\n    class=\"vds-radio-group-legend\"\n  >\n    {{ legend }}\n  </legend>\n  <ul\n    class=\"vds-radio-list\"\n    (change)=\"changed($event)\"\n  >\n    <li\n      class=\"vds-radio-item\"\n      *ngFor=\"let radio of radioItems; index as i\"\n    >\n      <input\n        [attr.checked]=\"(radio.checked || radio.radioValue === value) ? true : null\"\n        [attr.disabled]=\"(radio.disabled || disabled) ? true : null\"\n        [attr.value]=\"(radio.radioValue) ? radio.radioValue : null\"\n        [id]=\"radio.radioID\"\n        [name]=\"radioName\"\n        (blur)=\"radio.onBlur()\"\n        (focus)=\"radio.onFocus()\"\n        class=\"vds-radio\"\n        type=\"radio\"\n      >\n      <label\n        [for]=\"radio.radioID\"\n        [ngClass]=\"{\n          'vds-radio-label': true,\n          'vds-state--checked': (radio.checked || radio.radioValue === value) ? true : null,\n          'vds-state--disabled': (radio.disabled || disabled) ? true : null,\n          'vds-state--focus': (radio.focused) ? true : null,\n          'vds-state--invalid': (required && !value) ? true : null\n        }\"\n      >\n        {{ radio.label }}\n      </label>\n    </li>\n  </ul>\n  <span\n    *ngIf=\"required && !value && errorMessage\"\n    aria-atomic=\"true\"\n    aria-live=\"assertive\"\n    class=\"vds-radio-error-message\"\n    role=\"alert\"\n  >\n    <vds-icon\n      icon=\"visa_error\"\n      tiny=\"true\">\n    </vds-icon>\n   {{ errorMessage }}\n  </span>\n</fieldset>\n"
    },
    {
      "name": "RatingComponent",
      "id": "component-RatingComponent-cf860c348aedcd320160c9fc06b75598",
      "file": "projects/vds-lib/src/lib/rating/rating.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-rating",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./rating.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "total",
          "description": "<p>Total number of stars in rating.</p>\n",
          "line": 21,
          "type": "number"
        },
        {
          "name": "value",
          "description": "<p>Presets rating value.</p>\n",
          "line": 25,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "select",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Outputs value on select (1 indexed).</p>\n",
          "line": 29,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "_stars",
          "defaultValue": "[]",
          "type": "Array<Star>",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "DASH",
          "defaultValue": "DEFAULT.DASH",
          "type": "",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "focusedStar",
          "type": "Star",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "ICONS",
          "defaultValue": "RATING_ICON",
          "type": "",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "selectedStar",
          "type": "Star",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methodsClass": [
        {
          "name": "focus",
          "args": [
            {
              "name": "starID",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94,
          "jsdoctags": [
            {
              "name": "starID",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "loseFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 102
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50
        },
        {
          "name": "onBlur",
          "args": [
            {
              "name": "num",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 70,
          "jsdoctags": [
            {
              "name": "num",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onHover",
          "args": [
            {
              "name": "num",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "jsdoctags": [
            {
              "name": "num",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onSelect",
          "args": [
            {
              "name": "star",
              "type": "Star"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "jsdoctags": [
            {
              "name": "star",
              "type": "Star",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { Star } from './rating.interfaces';\nimport { RATING_ICON, DEFAULT } from './rating.constants';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-rating',\n  templateUrl: './rating.component.html',\n})\nexport class RatingComponent implements OnInit {\n  /**\n   * Total number of stars in rating.\n   */\n  @Input() total: number;\n  /**\n   * Presets rating value.\n   */\n  @Input() value: number;\n  /**\n   * Outputs value on select (1 indexed).\n   */\n  @Output() select: EventEmitter<\n    number\n  > = new EventEmitter();\n\n  DASH = DEFAULT.DASH;\n  ICONS = RATING_ICON;\n  _id: string;\n  _stars: Array<Star> = [];\n  focusedStar: Star;\n  selectedStar: Star;\n\n  constructor(private vdsLibService: VdsLibService) {\n    this.total = this.total\n      ? coerceNumberProperty(this.total)\n      : DEFAULT.TOTAL;\n    this.value = this.total\n      ? coerceNumberProperty(this.value)\n      : DEFAULT.FILLED;\n    this._id = this.vdsLibService.getUUID();\n  }\n\n  ngOnInit() {\n    if (this.value > this.total) {\n      this.value = this.total;\n    }\n    for (let i = 0; i < this.total; i++) {\n      this._stars.push({\n        hovered: false,\n        selected: i < this.value,\n        focused: false,\n        id: i + 1,\n      });\n    }\n  }\n\n  onHover(num: number) {\n    for (let i = num - 1; i >= 0; i--) {\n      this._stars[i].hovered = true;\n    }\n  }\n\n  onBlur(num: number) {\n    for (let i = num - 1; i >= 0; i--) {\n      this._stars[i].hovered = false;\n    }\n  }\n\n  onSelect(star: Star) {\n    this.focus(star.id);\n    this._stars.forEach((_star: Star) => {\n      switch (_star.id <= star.id) {\n        case true:\n          _star.selected = true;\n          break;\n        case false:\n        default:\n          _star.selected = false;\n          break;\n      }\n    });\n    this.focus(star.id);\n    this.selectedStar = star;\n    this.select.emit(star.id);\n  }\n\n  focus(starID: number) {\n    if (this.focusedStar) {\n      this.focusedStar.focused = false;\n    }\n    this.focusedStar = this._stars[starID - 1];\n    this.focusedStar.focused = true;\n  }\n\n  loseFocus() {\n    if (this.focusedStar) {\n      this.focusedStar.focused = false;\n      this.focusedStar = null;\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 38,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"vds-rating\">\n  <label \n    *ngFor=\"let star of _stars\"\n    (click)=\"onSelect(star)\"\n    (focus)=\"onHover(star.id)\"\n    (focusout)=\"loseFocus()\"\n    (keypress.enter)=\"onSelect(star)\"\n    (mouseenter)=\"onHover(star.id)\"\n    (mouseleave)=\"onBlur(star.id)\"\n    [for]=\"'vds-rating--' + _id + DASH + star.id\"  \n    [ngClass]=\"{\n      'vds-rating-label': true,\n      'vds-state--active': star.selected,\n      'vds-state--hover': star.hovered,\n      'vds-state--focus': star.focused\n    }\">\n    <div \n      [ngClass]=\"{\n        'vds-rating-star--outline': !(star.hovered || star.selected),\n        'vds-rating-star--filled': star.hovered || star.selected\n      }\">\n      <vds-icon\n        low=\"true\" \n        [icon]=\"(star.selected || star.hovered) ? ICONS.FILLED : ICONS.EMPTY\">\n      </vds-icon>\n    </div>\n    <input \n      type=\"radio\" \n      [attr.aria-label]=\"star.id + ' star'\"\n      [attr.data-focus-visible-added]=\"star.focused ? '' : null\"\n      [id]=\"'vds-rating--' + star.id\" \n      [name]=\"'rating-group--'+ _id + DASH + star.id\" \n      [ngClass]=\"{\n        'vds-rating-radio': true,\n        'focus-visible': star.hovered\n      }\"\n      [value]=\"selectedStar\">\n  </label>\n</div>\n"
    },
    {
      "name": "SearchComponent",
      "id": "component-SearchComponent-88f63c53a17ad881a0496d404f9a4db2",
      "file": "projects/vds-lib/src/lib/search/search.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-search",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./search.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "assistLength",
          "description": "<p>Set minimum length for search assist menu.</p>\n",
          "line": 32,
          "type": "number"
        },
        {
          "name": "assistList",
          "description": "<p>Search assist menu list items.</p>\n",
          "line": 44,
          "type": "Array<string>"
        },
        {
          "name": "clearOnBlur",
          "description": "<p>Clear assist list on blur of search text field.<br>\nApplies to SearchVariant enums DYNAMIC and CONTEXTUAL.<br>\nDefaults to <code>true</code>.</p>\n",
          "line": 58,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>The id of the search input element.</p>\n",
          "line": 70,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name for the search input element.</p>\n",
          "line": 82,
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "<p>Placeholder string for the search term.</p>\n",
          "line": 94,
          "type": "string"
        },
        {
          "name": "variant",
          "description": "<p>Variant specification for the type of search.</p>\n",
          "line": 106,
          "type": "SearchVariant"
        }
      ],
      "outputsClass": [
        {
          "name": "assistSelection",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits selection from assist menu.</p>\n",
          "line": 117,
          "type": "EventEmitter"
        },
        {
          "name": "keyup",
          "defaultValue": "new EventEmitter<KeyboardEvent>()",
          "description": "<p>Emits value on key press.</p>\n",
          "line": 127,
          "type": "EventEmitter"
        },
        {
          "name": "search",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits search event with keyword value.</p>\n",
          "line": 122,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_assistLength",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [112]
        },
        {
          "name": "_assistList",
          "type": "Array<string>",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [112]
        },
        {
          "name": "_clearOnBlur",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64,
          "modifierKind": [112]
        },
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 76,
          "modifierKind": [112]
        },
        {
          "name": "_name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 88,
          "modifierKind": [112]
        },
        {
          "name": "_placeholder",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 100,
          "modifierKind": [112]
        },
        {
          "name": "_variant",
          "defaultValue": "SearchVariant.STANDARD",
          "type": "SearchVariant",
          "optional": false,
          "description": "",
          "line": 112,
          "modifierKind": [112]
        },
        {
          "name": "blurHappened",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 129
        },
        {
          "name": "clearAssistMenuListing",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 130
        },
        {
          "name": "expanded",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 131
        },
        {
          "name": "focused",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "inputId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 133
        },
        {
          "name": "searchExpandableEl",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 26,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'searchExpandableEl'"
            }
          ]
        },
        {
          "name": "SearchVariantType",
          "defaultValue": "SearchVariant",
          "type": "",
          "optional": false,
          "description": "",
          "line": 134
        },
        {
          "name": "showClear",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 135
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "assistListItemSelected",
          "args": [
            {
              "name": "item",
              "type": ""
            },
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 242,
          "jsdoctags": [
            {
              "name": "item",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "clearAssistMenu",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 232
        },
        {
          "name": "clearDynamicVal",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 226,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 144
        },
        {
          "name": "onFocus",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 194,
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onKeyUp",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 199,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTypingDynamic",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 210,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "searchIntended",
          "args": [
            {
              "name": "el",
              "type": ""
            },
            {
              "name": "blur",
              "type": ""
            },
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 161,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "blur",
              "type": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "searchTriggered",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 154,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 247,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { SEARCH, SearchVariant } from './search.constants';\nimport { AbstractValueAccessor } from '../abstract-value-accessor';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-search',\n  templateUrl: './search.component.html',\n})\nexport class SearchComponent extends AbstractValueAccessor\n  implements OnInit {\n  @ViewChild('searchExpandableEl')\n  searchExpandableEl: ElementRef;\n\n  /**\n   * Set minimum length for search assist menu.\n   */\n  @Input()\n  get assistLength(): number {\n    return this._assistLength;\n  }\n  set assistLength(value) {\n    this._assistLength = coerceNumberProperty(value);\n  }\n  private _assistLength: number;\n\n  /**\n   * Search assist menu list items.\n   */\n  @Input()\n  get assistList(): Array<string> {\n    return this._assistList;\n  }\n  set assistList(value) {\n    this._assistList = value;\n  }\n  private _assistList: Array<string>;\n\n  /**\n   * Clear assist list on blur of search text field.<br>\n   * Applies to SearchVariant enums DYNAMIC and CONTEXTUAL.<br>\n   * Defaults to <code>true</code>.\n   */\n  @Input()\n  get clearOnBlur(): boolean {\n    return this._clearOnBlur;\n  }\n  set clearOnBlur(value) {\n    this._clearOnBlur = coerceBooleanProperty(value);\n  }\n  private _clearOnBlur = true;\n\n  /**\n   * The id of the search input element.\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  private _id: string;\n\n  /**\n   * The name for the search input element.\n   */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n  }\n  private _name: string;\n\n  /**\n   * Placeholder string for the search term.\n   */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n  }\n  private _placeholder: string;\n\n  /**\n   * Variant specification for the type of search.\n   */\n  @Input()\n  get variant(): SearchVariant {\n    return this._variant;\n  }\n  set variant(value) {\n    this._variant = value;\n  }\n  private _variant: SearchVariant = SearchVariant.STANDARD;\n\n  /**\n   * Emits selection from assist menu.\n   */\n  @Output() assistSelection = new EventEmitter<any>();\n\n  /**\n   * Emits search event with keyword value.\n   */\n  @Output() search = new EventEmitter<any>();\n\n  /**\n   * Emits value on key press.\n   */\n  @Output() keyup = new EventEmitter<KeyboardEvent>();\n\n  blurHappened: boolean;\n  clearAssistMenuListing: boolean;\n  expanded: boolean;\n  focused: boolean;\n  inputId: string;\n  SearchVariantType = SearchVariant;\n  showClear: boolean;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(SEARCH.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + SEARCH.SUFFIX.NAME;\n    this.inputId = `${this.id}${SEARCH.SUFFIX.NATIVE}`;\n  }\n\n  searchTriggered(el) {\n    // this.search.emit({\n    //   keyword: el.value,\n    // });\n    this.writeValue(el.value);\n  }\n\n  searchIntended(el, blur, event) {\n    this.focused = false;\n    if (blur) {\n      this.blurHappened = true;\n      setTimeout(() => {\n        this.blurHappened = false;\n      }, 200);\n      if (el.value.length) {\n        this.expanded = true;\n        return;\n      }\n      this.expanded = false;\n      return;\n    }\n    if (el.value.length && this.expanded) {\n      this.expanded = true;\n      this.writeValue(el.value);\n      return;\n    }\n    if (!el.value.length && this.expanded) {\n      this.expanded = false;\n      return;\n    }\n    if (this.blurHappened && !this.expanded) {\n      this.expanded = false;\n      return;\n    }\n    if (!this.expanded && !this.blurHappened) {\n      this.expanded = true;\n      this.searchExpandableEl.nativeElement.focus();\n    }\n  }\n\n  onFocus(event?: Event): void {\n    this.expanded = true;\n    this.focused = true;\n  }\n\n  onKeyUp(el): void {\n    this.keyup.emit(el.value);\n  }\n\n  // onBlur(event, el): void {\n  //   this.focused = false;\n  //   // if (!el.value) {\n  //   //   this.expanded = false;\n  //   // }\n  // }\n\n  onTypingDynamic(el) {\n    if (\n      this.clearOnBlur &&\n      (this.variant === SearchVariant.DYNAMIC ||\n        this.variant === SearchVariant.CONTEXTUAL)\n    ) {\n      this.clearAssistMenuListing = false;\n    }\n    this.writeValue(el.value);\n    if (el.value.length) {\n      this.showClear = true;\n      return;\n    }\n    this.showClear = false;\n  }\n\n  clearDynamicVal(el) {\n    el.value = '';\n    this.showClear = false;\n    this.writeValue(el.value);\n  }\n\n  clearAssistMenu() {\n    if (\n      this.clearOnBlur &&\n      (this.variant === SearchVariant.DYNAMIC ||\n        this.variant === SearchVariant.CONTEXTUAL)\n    ) {\n      this.clearAssistMenuListing = true;\n    }\n  }\n\n  assistListItemSelected(item, el) {\n    this.assistSelection.emit(item[0]);\n    this.clearDynamicVal(el);\n  }\n\n  writeValue(value: any) {\n    super.writeValue(value);\n    this.value = value;\n    this.cdRef.detectChanges();\n    if (\n      this.variant === SearchVariant.DYNAMIC ||\n      this.variant === SearchVariant.CONTEXTUAL\n    ) {\n      if (value.length >= this.assistLength) {\n        this.search.emit({\n          keyword: value,\n        });\n      }\n      return;\n    }\n    this.search.emit({\n      keyword: value,\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          }
        ],
        "line": 135,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": ["OnInit"],
      "accessors": {
        "assistLength": {
          "name": "assistLength",
          "setSignature": {
            "name": "assistLength",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 35,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "assistList": {
          "name": "assistList",
          "setSignature": {
            "name": "assistList",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 47,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "clearOnBlur": {
          "name": "clearOnBlur",
          "setSignature": {
            "name": "clearOnBlur",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 61,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "id": {
          "name": "id",
          "setSignature": {
            "name": "id",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 73,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "name": {
          "name": "name",
          "setSignature": {
            "name": "name",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 85,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "placeholder": {
          "name": "placeholder",
          "setSignature": {
            "name": "placeholder",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 97,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "variant": {
          "name": "variant",
          "setSignature": {
            "name": "variant",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 109,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"variant === SearchVariantType.STANDARD\">\n  <div\n    class=\"vds-search\"\n    (keydown.enter)=\"searchTriggered(searchTerm)\"\n  >\n    <div class=\"vds-search-button\">\n      <vds-button\n        ariaLabel=\"Search\"\n        variant=\"icon\"\n        iconType=\"light\"\n        (click)=\"searchTriggered(searchTerm)\"\n      >\n        <vds-icon\n          icon=\"search\"\n          low=\"true\"\n        >\n        </vds-icon>\n      </vds-button>\n    </div>\n    <vds-text-field\n      [id]=\"inputId\"\n      [name]=\"name\"\n      type=\"search\"\n      [placeholder]=\"placeholder\"\n      (keyup)=\"onKeyUp(searchTerm)\"\n      #searchTerm\n    >\n    </vds-text-field>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"variant === SearchVariantType.EXPANDABLE\">\n  <div\n    class=\"vds-search vds-search--expandable vds-search--container\"\n    (keydown.enter)=\"searchIntended(searchExpandable, false, $event)\"\n  >\n    <div\n      [ngClass]=\"{\n        'vds-input': true,\n        'vds-state--expanded': expanded,\n        'vds-state--focus': focused\n      }\"\n    >\n      <label class=\"vds-input-label\" [for]=\"[inputId]\">Search</label>\n      <div class=\"vds-input-bar\">\n        <div class=\"vds-input-input\">\n          <input\n            aria-label=\"Search through site content\"\n            aria-required=\"false\"\n            autocomplete=\"off\"\n            class=\"vds-input--input-text\"\n            [id]=\"[inputId]\"\n            [name]=\"name\"\n            [attr.placeholder]=\"placeholder\"\n            tabindex=\"-1\"\n            type=\"search\"\n            (blur)=\"searchIntended(searchExpandable, true, $event)\"\n            (focus)=\"onFocus($event)\"\n            (keyup)=\"onKeyUp(searchExpandableEl)\"\n            [(ngModel)]=\"value\"\n            #searchExpandable=\"ngModel\"\n            #searchExpandableEl\n          >\n        </div>\n      </div>\n    </div>\n    <div class=\"vds-search-button\" (click)=\"searchIntended(searchExpandable, false, $event)\">\n      <vds-button\n        ariaLabel=\"Search\"\n        [iconType]=\"(expanded) ? 'light' : null\"\n        variant=\"icon\"\n      >\n        <vds-icon\n          icon=\"search\"\n          low=\"true\"\n        >\n        </vds-icon>\n      </vds-button>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"\n  variant === SearchVariantType.DYNAMIC ||\n  variant === SearchVariantType.CONTEXTUAL\n\">\n  <div class=\"vds-search vds-search--dynamic\">\n    <vds-text-field\n      [id]=\"inputId\"\n      [name]=\"name\"\n      [value]=\"value\"\n      type=\"search\"\n      [placeholder]=\"placeholder\"\n      (blur)=\"clearAssistMenu()\"\n      (keyup)=\"onTypingDynamic(searchDynamic)\"\n      (keyup)=\"onKeyUp(searchDynamic)\"\n      #searchDynamic\n    >\n    </vds-text-field>\n    <div class=\"vds-search-icon\">\n      <vds-icon\n        icon=\"search\"\n        low=\"true\">\n      </vds-icon>\n    </div>\n    <div\n      class=\"vds-search-clear-btn\"\n      [ngStyle]=\"{'display': (showClear) ? 'block' : 'none'}\"\n    >\n      <vds-button\n        ariaLabel=\"Clear\"\n        variant=\"icon\"\n        iconType=\"light-tiny\"\n        (click)=\"clearDynamicVal(searchDynamic)\"\n      >\n        <vds-icon\n          icon=\"clear\"\n          tiny=\"true\"\n        >\n        </vds-icon>\n      </vds-button>\n    </div>\n  </div>\n  <ng-container\n    *ngIf=\"assistList.length &&\n    (searchDynamic.value.length >= assistLength) &&\n    !clearAssistMenuListing\"\n  >\n    <vds-menu>\n      <vds-listbox\n        [items]=\"assistList\"\n        (change)=\"assistListItemSelected($event, searchDynamic)\"\n      >\n      </vds-listbox>\n    </vds-menu>\n  </ng-container>\n</ng-container>\n\n<!--<ng-container *ngIf=\"variant === SearchVariantType.CONTEXTUAL\">-->\n<!--</ng-container>-->\n"
    },
    {
      "name": "SectionComponent",
      "id": "component-SectionComponent-3ae90fa9fbe9216bfbac81749a4f5766",
      "file": "projects/vds-lib/src/lib/accordion/section/section.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-section",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./section.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "subtitle",
          "description": "<p>The subtitle of the section.</p>\n",
          "line": 21,
          "type": "string"
        },
        {
          "name": "title",
          "description": "<p>The title of the section.</p>\n",
          "line": 17,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits selected section.</p>\n",
          "line": 25,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "altText",
          "defaultValue": "SECTION.ALTTEXT.DOWN",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "bodyID",
          "defaultValue": "SECTION.PREFIX.BODY",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "currentIcon",
          "defaultValue": "SECTION.ICON.DOWN",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "disabled",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "headingID",
          "defaultValue": "SECTION.PREFIX.HEADING",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "isOpen",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 32
        }
      ],
      "methodsClass": [
        {
          "name": "close",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51
        },
        {
          "name": "disable",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56
        },
        {
          "name": "enable",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40,
          "description": "<p>Toggles state of section (open or closed) and\nemits section via change output.</p>\n"
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SECTION } from './section.constants';\n\n@Component({\n  selector: 'vds-section',\n  templateUrl: './section.component.html',\n})\nexport class SectionComponent {\n  /**\n   * The title of the section.\n   */\n  @Input() title: string;\n  /**\n   * The subtitle of the section.\n   */\n  @Input() subtitle: string;\n  /**\n   * Emits selected section.\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  altText: string = SECTION.ALTTEXT.DOWN;\n  bodyID: string = SECTION.PREFIX.BODY;\n  currentIcon: string = SECTION.ICON.DOWN;\n  disabled: boolean;\n  headingID: string = SECTION.PREFIX.HEADING;\n  isOpen = false;\n\n  constructor() {}\n\n  /**\n   * Toggles state of section (open or closed) and\n   * emits section via change output.\n   */\n  toggle() {\n    this.isOpen = !this.isOpen;\n    this.currentIcon = this.isOpen\n      ? SECTION.ICON.UP\n      : SECTION.ICON.DOWN;\n    this.altText = this.isOpen\n      ? SECTION.ALTTEXT.UP\n      : SECTION.ALTTEXT.DOWN;\n    this.change.emit(this);\n  }\n\n  close() {\n    this.isOpen = false;\n    this.currentIcon = SECTION.ICON.DOWN;\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  enable() {\n    this.disabled = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 32
      },
      "templateData": "<button \n  type=\"button\" \n  (click)=\"toggle()\"\n  [id]=\"headingID\" \n  [attr.aria-expanded]=\"isOpen\" \n  [attr.aria-controls]=\"bodyID\"\n  [tabindex]=\"disabled ? -1 : 0\"\n  [ngClass]=\"{\n    'vds-accordion-heading': true,\n    'vds-state--active': isOpen\n  }\">\n    <vds-icon\n      [altText]=\"altText\"\n      [icon]=\"currentIcon\"\n      tiny=\"true\">\n    </vds-icon>\n    <span class=\"vds-accordion-title\">{{ title }}</span>\n    <span class=\"vds-accordion-subtitle\">{{ subtitle }}</span>\n</button>\n<div\n  [id]=\"bodyID\" \n  [attr.aria-labelledby]=\"headingID\" \n  [attr.aria-hidden]=\"!isOpen\"\n  [ngClass]=\"{\n    'vds-accordion-body': true,\n    'vds-state--hidden': !isOpen\n  }\">\n    <ng-content></ng-content>\n</div>\n"
    },
    {
      "name": "SelectComponent",
      "id": "component-SelectComponent-01a5025e41d077ec072a450726ee7431",
      "file": "projects/vds-lib/src/lib/select/select.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MakeProvider(SelectComponent)",
          "type": "component"
        }
      ],
      "selector": "vds-select",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./select.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disable select statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 43,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>The id of the select element.</p>\n",
          "line": 47,
          "type": "string"
        },
        {
          "name": "invalid",
          "description": "<p>Validation error for the select.</p>\n",
          "line": 51,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>The user display label of the select.</p>\n",
          "line": 55,
          "type": "string"
        },
        {
          "name": "readonly",
          "description": "<p>Set as read-only statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 61,
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "<p>The value of the select element.</p>\n",
          "line": 65,
          "type": "string | number"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits <code>SimpleChange</code> of selected value.</p>\n",
          "line": 69,
          "type": "EventEmitter<SimpleChange>"
        },
        {
          "name": "optionChange",
          "defaultValue": "new EventEmitter<SelectOptionChange>()",
          "description": "<p>Emits <code>SelectOptionChange</code> of selected value.</p>\n",
          "line": 76,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "errorId",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 88,
          "modifierKind": [114]
        },
        {
          "name": "errors",
          "type": "QueryList<ErrorComponent>",
          "optional": false,
          "description": "",
          "line": 80,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ErrorComponent"
            }
          ]
        },
        {
          "name": "groupError",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 87,
          "modifierKind": [114]
        },
        {
          "name": "selectBar",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 78,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'selectBar'"
            }
          ]
        },
        {
          "name": "selectFocusBoxWidth",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 85,
          "modifierKind": [114]
        },
        {
          "name": "selectID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 84,
          "modifierKind": [114]
        },
        {
          "name": "selectOptionsFocus",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 86,
          "modifierKind": [114]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "blurSelectOptions",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169
        },
        {
          "name": "focusSelectOptions",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 164
        },
        {
          "name": "ngAfterContentChecked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 122
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 111,
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 97
        },
        {
          "name": "onSelectOptionChange",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 140,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  SimpleChange,\n  ContentChildren,\n  QueryList,\n  AfterContentChecked,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  SELECT,\n  SelectOptionChange,\n} from './select.constant';\nimport { isNumeric } from 'rxjs/internal-compatibility';\nimport {\n  AbstractValueAccessor,\n  MakeProvider,\n} from '../abstract-value-accessor';\nimport { ErrorComponent } from '../error/error.component';\n\n@Component({\n  selector: 'vds-select',\n  templateUrl: './select.component.html',\n  providers: [MakeProvider(SelectComponent)],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent extends AbstractValueAccessor\n  implements OnInit, AfterContentChecked, OnChanges {\n  /**\n   * Disable select statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * The id of the select element.\n   */\n  @Input() id: string;\n  /**\n   * Validation error for the select.\n   */\n  @Input() invalid: boolean;\n  /**\n   * The user display label of the select.\n   */\n  @Input() label: string;\n  /**\n   * Set as read-only statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() readonly: boolean;\n  /**\n   * The value of the select element.\n   */\n  @Input() value: string | number;\n  /**\n   * Emits <code>SimpleChange</code> of selected value.\n   */\n  @Output() change: EventEmitter<\n    SimpleChange\n  > = new EventEmitter();\n  /**\n   * Emits <code>SelectOptionChange</code> of selected value.\n   */\n  @Output()\n  optionChange = new EventEmitter<SelectOptionChange>();\n\n  @ViewChild('selectBar') selectBar: ElementRef;\n\n  @ContentChildren(ErrorComponent) errors: QueryList<\n    ErrorComponent\n  >;\n\n  public selectID: string;\n  public selectFocusBoxWidth: number;\n  public selectOptionsFocus = false;\n  public groupError: boolean;\n  public errorId: string;\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private vdsLibService: VdsLibService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(SELECT.PREFIX.ID);\n    this.selectID = `${this.id}${SELECT.SUFFIX.NATIVE}`;\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.readonly = this.vdsLibService.triageDisabledValue(\n      this.readonly\n    );\n    this.writeValue(this.value);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes &&\n      changes.invalid &&\n      !changes.invalid.currentValue\n    ) {\n      this.errorId = null;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  ngAfterContentChecked() {\n    const errorComponent = this.errors.find(\n      (item) => item.id != null\n    );\n    this.errorId =\n      errorComponent && errorComponent.id && this.invalid\n        ? errorComponent.id\n        : null;\n    this.cdRef.detectChanges();\n  }\n\n  writeValue(value: any) {\n    value = isNumeric(value) ? Number(value) : value;\n    super.writeValue(value);\n    this.value = value;\n    this.cdRef.detectChanges();\n  }\n\n  onSelectOptionChange(el) {\n    const emitEvent = new SimpleChange(\n      this.value,\n      el.value,\n      this.value === undefined\n    );\n    emitEvent.currentValue = isNumeric(\n      emitEvent.currentValue\n    )\n      ? Number(emitEvent.currentValue)\n      : emitEvent.currentValue;\n    emitEvent.previousValue = isNumeric(\n      emitEvent.previousValue\n    )\n      ? Number(emitEvent.previousValue)\n      : emitEvent.previousValue;\n    this.change.emit(emitEvent);\n    this.optionChange.emit({\n      source: this,\n      value: emitEvent.currentValue,\n    });\n    this.writeValue(emitEvent.currentValue);\n  }\n\n  focusSelectOptions() {\n    this.selectOptionsFocus = true;\n    this.selectFocusBoxWidth = this.selectBar.nativeElement.clientWidth;\n  }\n\n  blurSelectOptions() {\n    this.selectOptionsFocus = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 88,
        "jsdoctags": [
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": [
        "OnInit",
        "AfterContentChecked",
        "OnChanges"
      ],
      "templateData": "<div\n  [ngClass]=\"{\n    'vds-input': true,\n    'vds-state--disabled': (disabled) ? true : null,\n    'vds-state--error': invalid,\n    'vds-state--filled': (value) ? true : null,\n    'vds-state--focus': selectOptionsFocus,\n    'vds-state--readonly': (readonly) ? true : null\n  }\"\n>\n  <label\n    *ngIf=\"label\"\n    class=\"vds-input-label\"\n    [for]=\"selectID\"\n  >\n    {{ label }}\n  </label>\n  <div class=\"vds-input-bar\" #selectBar>\n    <select\n      [attr.aria-describedby]=\"errorId\"\n      [attr.readonly]=\"(readonly) ? true : null\"\n      [attr.disabled]=\"(disabled || readonly) ? true : null\"\n      [ngClass]=\"{\n        'vds-input--select': true,\n        'vds-state--focus': selectOptionsFocus\n      }\"\n      [id]=\"selectID\"\n      (change)=\"onSelectOptionChange(selectNative)\"\n      (focus)=\"focusSelectOptions()\"\n      (blur)=\"blurSelectOptions()\"\n      #selectNative\n    >\n      <option value=\"\" disabled=\"\" selected=\"\"></option>\n      <ng-content></ng-content>\n    </select>\n    <span class=\"vds-input-option vds-type--actionable\">\n      <vds-icon\n        icon=\"arrow-expand\"\n        tiny=\"true\"\n      >\n      </vds-icon>\n    </span>\n  </div>\n  <div\n    [style.width.px]=\"selectFocusBoxWidth\"\n    class=\"vds-input--select-focusbox\"\n  >\n  </div>\n  <ng-content *ngIf=\"!groupError && invalid\" select=\"vds-error\"></ng-content>\n</div>\n"
    },
    {
      "name": "SliderComponent",
      "id": "component-SliderComponent-17c67c1b1914862f56b868e0cc22fef1",
      "file": "projects/vds-lib/src/lib/slider/slider.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-slider",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./slider.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>The component is disabled or not (Defaults to false).</p>\n",
          "line": 43,
          "type": "boolean"
        },
        {
          "name": "discrete",
          "defaultValue": "false",
          "description": "<p>The discrete flag sets discrete sliders (defaults to false to render a continuous slider).</p>\n",
          "line": 47
        },
        {
          "name": "label",
          "description": "<p>The label on the slider (Defaults to &#39;Slider control&#39;)</p>\n",
          "line": 27,
          "type": "string"
        },
        {
          "name": "markerValues",
          "description": "<p>Values displayed to mark significant portions of the slider for context.</p>\n",
          "line": 55,
          "type": "Array<string>"
        },
        {
          "name": "max",
          "description": "<p>The maximum value of the slider (Defaults to 100).</p>\n",
          "line": 31,
          "type": "number"
        },
        {
          "name": "min",
          "description": "<p>The minimum value of the slider (Defaults to 0).</p>\n",
          "line": 35,
          "type": "number"
        },
        {
          "name": "tooltip",
          "defaultValue": "false",
          "description": "<p>The tooltip is to display tooltip or not (Defaults to false).</p>\n",
          "line": 51
        },
        {
          "name": "value",
          "description": "<p>The starting value of the slider (Defaults to min).</p>\n",
          "line": 39,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits slider value on drag.</p>\n",
          "line": 59,
          "type": "EventEmitter<number>"
        },
        {
          "name": "select",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits slider value on mouse up event.</p>\n",
          "line": 65,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [
        {
          "name": "currentDiscreteKey",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "discreteLeftValues",
          "defaultValue": "[]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 79
        },
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 71
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 78
        },
        {
          "name": "moveListener",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 82
        },
        {
          "name": "nodeValue",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 72
        },
        {
          "name": "range",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 73
        },
        {
          "name": "showTooltip",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 77
        },
        {
          "name": "slider",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 85,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'slider'"
            }
          ]
        },
        {
          "name": "SLIDER_DEFAULT",
          "defaultValue": "SLIDER_DEFAULT",
          "type": "",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "SLIDER_NUMBER",
          "defaultValue": "SLIDER_NUMBER",
          "type": "",
          "optional": false,
          "description": "",
          "line": 69
        },
        {
          "name": "track",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 86,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'track'"
            }
          ]
        },
        {
          "name": "trackValue",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 74
        },
        {
          "name": "trackWidth",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 75
        },
        {
          "name": "trackX",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "upListener",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 83
        }
      ],
      "methodsClass": [
        {
          "name": "checkEndpointLogic",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 93,
          "modifierKind": [112]
        },
        {
          "name": "clearListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 198,
          "modifierKind": [112]
        },
        {
          "name": "decrementDiscrete",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 292,
          "modifierKind": [112]
        },
        {
          "name": "getTicks",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 335
        },
        {
          "name": "incrementDiscrete",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 281,
          "modifierKind": [112]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 246
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 209
        },
        {
          "name": "onArrowDown",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 314,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 311
        },
        {
          "name": "onFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 307
        },
        {
          "name": "onMousedown",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 264
        },
        {
          "name": "onMouseup",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 301
        },
        {
          "name": "position",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent | number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent | number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDiscreteLeftValues",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 250
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  SLIDER_DEFAULT,\n  SLIDER_NUMBER,\n} from './slider.constants';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-slider',\n  templateUrl: './slider.component.html',\n})\nexport class SliderComponent implements OnInit, OnDestroy {\n  /**\n   * The label on the slider (Defaults to 'Slider control')\n   */\n  @Input() label: string;\n  /**\n   * The maximum value of the slider (Defaults to 100).\n   */\n  @Input() max: number;\n  /**\n   * The minimum value of the slider (Defaults to 0).\n   */\n  @Input() min: number;\n  /**\n   * The starting value of the slider (Defaults to min).\n   */\n  @Input() value: number;\n  /**\n   * The component is disabled or not (Defaults to false).\n   */\n  @Input() disabled: boolean;\n  /**\n   * The discrete flag sets discrete sliders (defaults to false to render a continuous slider).\n   */\n  @Input() discrete = false;\n  /**\n   * The tooltip is to display tooltip or not (Defaults to false).\n   */\n  @Input() tooltip = false;\n  /**\n   * Values displayed to mark significant portions of the slider for context.\n   */\n  @Input() markerValues: Array<string>;\n  /**\n   * Emits slider value on drag.\n   */\n  @Output() change: EventEmitter<\n    number\n  > = new EventEmitter();\n  /**\n   * Emits slider value on mouse up event.\n   */\n  @Output() select: EventEmitter<\n    number\n  > = new EventEmitter();\n\n  SLIDER_NUMBER = SLIDER_NUMBER;\n  SLIDER_DEFAULT = SLIDER_DEFAULT;\n  focused = false;\n  nodeValue: number;\n  range: number;\n  trackValue: number;\n  trackWidth: number;\n  trackX: number;\n  showTooltip: boolean;\n  id: string;\n  discreteLeftValues = [];\n  currentDiscreteKey: number;\n\n  moveListener: () => void;\n  upListener: () => void;\n\n  @ViewChild('slider') slider: any;\n  @ViewChild('track') track: any;\n\n  constructor(\n    private renderer: Renderer2,\n    private vdsLibService: VdsLibService\n  ) {}\n\n  private checkEndpointLogic() {\n    if (this.min > this.max) {\n      this.max = this.min + 1;\n    }\n    this.range = this.max - this.min;\n  }\n\n  private position(event: MouseEvent | number) {\n    const midpoint = this.discrete\n      ? SLIDER_NUMBER.NODE.MIDPOINT\n      : SLIDER_DEFAULT.NODE.MIDPOINT;\n    switch (typeof event) {\n      case 'number':\n        if (this.discrete) {\n          this.value = this.discreteLeftValues.includes(\n            event\n          )\n            ? event\n            : this.discreteLeftValues[0];\n        }\n        if (event > this.max) {\n          event = this.max;\n          this.value = event;\n        }\n        if (event < this.min) {\n          event = this.min;\n          this.value = event;\n        }\n        const percentage = (event - this.min) / this.range;\n        this.trackValue = percentage * this.trackWidth;\n        this.nodeValue = this.trackValue - midpoint;\n        break;\n      default:\n        this.trackValue = event.x - this.trackX;\n        if (this.discrete) {\n          if (\n            this.trackValue - midpoint >=\n            this.discreteLeftValues[\n              this.currentDiscreteKey + 1\n            ]\n          ) {\n            this.nodeValue = this.trackValue - midpoint;\n            if (\n              this.discreteLeftValues[\n                this.currentDiscreteKey + 1\n              ]\n            ) {\n              this.value = this.discreteLeftValues[\n                ++this.currentDiscreteKey\n              ];\n              this.change.emit(this.value);\n            }\n          }\n          if (\n            this.trackValue - midpoint <=\n            this.discreteLeftValues[\n              this.currentDiscreteKey - 1\n            ]\n          ) {\n            this.nodeValue = this.trackValue - midpoint;\n            if (\n              this.discreteLeftValues[\n                this.currentDiscreteKey - 1\n              ] !== undefined\n            ) {\n              this.value = this.discreteLeftValues[\n                --this.currentDiscreteKey\n              ];\n              this.change.emit(this.value);\n            }\n          }\n        }\n        if (!this.discrete) {\n          this.nodeValue = this.trackValue - midpoint;\n        }\n    }\n    if (this.trackValue <= -1) {\n      this.trackValue = 0;\n      this.nodeValue = 0 - midpoint;\n      return;\n    }\n    if (this.trackValue >= this.trackWidth + 1) {\n      this.trackValue = this.trackWidth;\n      this.nodeValue = this.trackWidth - midpoint;\n      return;\n    }\n    this.value =\n      typeof event === 'number'\n        ? this.value\n        : Math.round(\n            (this.trackValue / this.trackWidth) *\n              (this.max - this.min) +\n              this.min\n          );\n    if (this.value > this.max) {\n      this.value = this.max;\n    }\n    if (this.value < this.min) {\n      this.value = this.min;\n    }\n    if (!this.discrete) {\n      this.change.emit(this.value);\n    }\n  }\n\n  private clearListeners() {\n    if (this.upListener) {\n      this.upListener();\n      delete this.upListener;\n    }\n    if (this.moveListener) {\n      this.moveListener();\n      delete this.moveListener;\n    }\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID();\n\n    this.max = this.max\n      ? coerceNumberProperty(this.max)\n      : 100;\n    this.min = this.min\n      ? coerceNumberProperty(this.min)\n      : 0;\n    this.value = this.value\n      ? coerceNumberProperty(this.value)\n      : this.min;\n    this.checkEndpointLogic();\n    const coords = this.vdsLibService.getBoundingBoxAndCoords(\n      this.slider.nativeElement\n    );\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.discrete = this.vdsLibService.triageDisabledValue(\n      this.discrete\n    );\n    this.tooltip = this.vdsLibService.triageDisabledValue(\n      this.tooltip\n    );\n    this.trackX = coords.left;\n    this.trackWidth = coords.width;\n    if (this.value || this.value === 0) {\n      this.position(this.value);\n    }\n    if (this.discrete && this.markerValues) {\n      this.setDiscreteLeftValues();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearListeners();\n  }\n\n  setDiscreteLeftValues(): void {\n    const increments =\n      this.trackWidth / (this.markerValues.length - 1);\n    let i = 0;\n    this.discreteLeftValues = [];\n    this.markerValues.forEach(() => {\n      this.discreteLeftValues[i] = increments * i;\n      i++;\n    });\n    this.currentDiscreteKey = this.value\n      ? this.value\n      : this.discreteLeftValues[0];\n  }\n\n  onMousedown(): void {\n    this.moveListener = this.renderer.listen(\n      'document',\n      'mousemove',\n      (event: MouseEvent) => {\n        this.position(event);\n      }\n    );\n    this.upListener = this.renderer.listen(\n      'document',\n      'mouseup',\n      (event: MouseEvent) => {\n        this.onMouseup();\n      }\n    );\n  }\n\n  private incrementDiscrete(): void {\n    if (\n      this.discreteLeftValues[this.currentDiscreteKey + 1]\n    ) {\n      this.value = this.discreteLeftValues[\n        ++this.currentDiscreteKey\n      ];\n    }\n    this.change.emit(this.value);\n  }\n\n  private decrementDiscrete(): void {\n    if (this.discreteLeftValues[this.currentDiscreteKey]) {\n      this.value = this.discreteLeftValues[\n        --this.currentDiscreteKey\n      ];\n    }\n    this.change.emit(this.value);\n  }\n\n  onMouseup(): void {\n    this.select.emit(this.value);\n    this.clearListeners();\n    this.focused = false;\n  }\n\n  onFocus(): void {\n    this.focused = true;\n  }\n\n  onBlur(): void {\n    this.focused = false;\n  }\n  onArrowDown(e): void {\n    switch (e.key) {\n      case 'ArrowRight':\n        if (this.discrete) {\n          this.incrementDiscrete();\n          this.position(this.value);\n          break;\n        }\n        this.position(this.value++);\n        break;\n      case 'ArrowLeft':\n        if (this.discrete) {\n          this.decrementDiscrete();\n          this.position(this.value);\n          break;\n        }\n        this.position(this.value--);\n        break;\n    }\n  }\n\n  getTicks(): string {\n    if (!this.markerValues) {\n      console.warn(\n        '[NG VDS] slider missing markerValues property!'\n      );\n      return `${SLIDER_NUMBER.TICKS[0]}px 4px`;\n    }\n    return `${\n      SLIDER_NUMBER.TICKS[this.markerValues.length]\n    }px 4px`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "renderer",
            "type": "Renderer2"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 86,
        "jsdoctags": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div\n  class=\"vds-slider\"\n  role=\"slider\"\n  [ngClass]=\"{\n    'vds-state--disabled': disabled,\n    'vds-slider--continuous-number': discrete,\n    'vds-slider--discrete-number': discrete,\n    'vds-state--default-value': nodeValue <= 0\n  }\"\n  [id]=\"id\"\n  [attr.data-default-values]=\"value\"\n  [attr.data-marker-values]=\"markerValues\"\n  [attr.data-tick-count]=\"markerValues ? markerValues.length : 0\"\n  [attr.data-max]=\"max\"\n  [attr.data-min]=\"min\"\n  [attr.aria-labelledby]=\"label\"\n  [attr.aria-valuemin]=\"min\" \n  [attr.aria-valuemax]=\"max\"\n  [attr.aria-valuenow]=\"value\"\n  #slider>\n  <label\n    class=\"vds-slider-label\"\n    [id]=\"id + SLIDER_DEFAULT.SUFFIX.LABEL\">\n    <span class=\"vds-slider-label-text\">\n      {{label}}\n    </span>\n    <ng-content select=\".label-value\"></ng-content>\n  </label>\n  <div\n    class=\"vds-slider-track\"\n    [style.backgroundSize]=\"discrete ? getTicks() : null\"\n    [style.width.px]=\"trackWidth\"\n    #track>\n    <div\n      class=\"vds-slider-range\"\n      [style.width.px]=\"nodeValue\"\n      [style.backgroundSize]=\"discrete ? getTicks() : null\">\n    </div>\n    <div \n      *ngIf=\"!tooltip\"\n      [style.left.px]=\"nodeValue\"  \n      (blur)=\"onBlur()\" \n      (mousedown)=\"onMousedown()\" \n      (mouseup)=\"onMouseup()\" \n      (keydown)=\"onArrowDown($event)\"\n      (focus)=\"onFocus()\" \n      [ngClass]=\"{\n          'vds-slider-thumb': true,\n          'vds-state--active': focused\n        }\" \n        tabindex=\"0\">\n    </div>\n    <div \n      *ngIf=\"tooltip\" \n      style=\"position: absolute;\"\n      [style.left.px]=\"!showTooltip ? nodeValue - 6: nodeValue - 12.5\"\n      [style.top.px]=\"!showTooltip ? 0 : -25 \">\n        <!-- vds-tooltip -->\n        <div  \n          class=\"vds-tooltip\"\n          [ngClass]=\"{'vds-state--show': showTooltip}\"\n          id=\"continuous-number-tooltip-example-2\"\n          data-align=\"top\"\n          style=\"position: relative; top: -15px;\">\n          <div class=\"vds-tooltip-content\">\n            <span class=\"vds-tooltip-text\">&{{value}}</span>\n            <span class=\"vds-tooltip-pointer\"></span>\n          </div>\n        </div>\n        <!--/ vds-tooltip -->\n        <div \n          (mouseenter)=\"showTooltip = true\"\n          (mouseleave)=\"showTooltip = false\"\n          (blur)=\"onBlur()\" \n          (mousedown)=\"onMousedown()\" \n          (mouseup)=\"onMouseup()\" \n          (keydown)=\"onArrowDown($event)\"\n          (focus)=\"onFocus()\" \n          [ngClass]=\"{\n              'vds-slider-thumb': true,\n              'vds-state--active': focused\n            }\" \n            tabindex=\"0\"\n            style=\"position: relative; margin: auto;\">\n        </div>\n      </div>\n  </div>\n  <ng-content select=\".slider-content\"></ng-content>\n</div>\n"
    },
    {
      "name": "SortHeaderComponent",
      "id": "component-SortHeaderComponent-5c179153952e73868a7dcd1edadec647",
      "file": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.component.ts",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[vds-datatable-sort-header]",
      "styleUrls": ["./sort-header.component.scss"],
      "styles": [],
      "templateUrl": ["./sort-header.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "isSortable",
          "line": 47,
          "type": "boolean"
        },
        {
          "name": "vds-datatable-sort-disabled",
          "defaultValue": "false",
          "line": 44
        },
        {
          "name": "vds-datatable-sort-fn",
          "line": 41
        },
        {
          "name": "vds-datatable-sort-header",
          "line": 35,
          "type": "string | number"
        },
        {
          "name": "vds-datatable-sort-type",
          "line": 38,
          "type": "ColumnType"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_isSortable",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "sortTable",
          "type": "SortHeaderDirective",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [],
      "hostBindings": [
        {
          "name": "attr.aria-sort",
          "line": 22
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  HostBinding,\n  Input,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SortHeaderDirective } from './sort-header.directive';\nimport {\n  ColumnType,\n  Sortable,\n} from '../datatable.constants';\n\n@Component({\n  selector: '[vds-datatable-sort-header]',\n  templateUrl: './sort-header.component.html',\n  styleUrls: ['./sort-header.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SortHeaderComponent implements Sortable {\n  @HostBinding('attr.aria-sort')\n  get ariaSort() {\n    if (this.isSortable) {\n      if (this.sortTable.sortActiveId === this.id) {\n        return this.sortTable.sortDirection;\n      }\n\n      return 'none';\n    }\n\n    return null;\n  }\n\n  @Input('vds-datatable-sort-header')\n  id: string | number;\n\n  @Input('vds-datatable-sort-type')\n  type: ColumnType;\n\n  @Input('vds-datatable-sort-fn')\n  sortFn;\n\n  @Input('vds-datatable-sort-disabled')\n  disabled = false;\n\n  @Input()\n  get isSortable(): boolean {\n    return this._isSortable;\n  }\n  set isSortable(value) {\n    this._isSortable = coerceBooleanProperty(value);\n  }\n  _isSortable = false;\n\n  constructor(public sortTable: SortHeaderDirective) {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-btn-sortable {\n  vds-icon {\n    display: inline-flex;\n  }\n}\n",
          "styleUrl": "./sort-header.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "sortTable",
            "type": "SortHeaderDirective"
          }
        ],
        "line": 53,
        "jsdoctags": [
          {
            "name": "sortTable",
            "type": "SortHeaderDirective",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["Sortable"],
      "accessors": {
        "isSortable": {
          "name": "isSortable",
          "setSignature": {
            "name": "isSortable",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 50,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"isSortable; else content\">\n  <button\n    class=\"vds-btn-sortable\"\n    type=\"button\"\n    tabindex=\"-1\"\n    (click)=\"!disabled ? sortTable.sort(this) : null\"\n  >\n    <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n    <span class=\"vds-btn-sortable-icon\">\n      <ng-container *ngIf=\"sortTable.sortActiveId === id; else defaultSort\">\n        <vds-icon\n          [icon]=\"\n          (sortTable.sortDirection === 'desc')?\n          'visa_sortable-descending' :\n          'visa_sortable-ascending'\"\n          tiny=\"true\"\n        ></vds-icon>\n      </ng-container>\n      <ng-template #defaultSort>\n        <vds-icon\n          [icon]=\"'visa_sortable'\"\n          tiny=\"true\"\n        ></vds-icon>\n      </ng-template>\n    </span>\n  </button>\n</ng-container>\n\n<ng-template #content>\n  <span class=\"vds-btn-sortable-text\">\n    <ng-content></ng-content>\n  </span>\n</ng-template>\n"
    },
    {
      "name": "SpinnerProgressComponent",
      "id": "component-SpinnerProgressComponent-f5b2eeb65a0f37a90acdd427d22d769c",
      "file": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-spinner-progress",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./spinner-progress.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "determinate",
          "defaultValue": "false",
          "description": "<p>Sets the type of progress bar. (defaults to false)</p>\n",
          "line": 12
        },
        {
          "name": "percentage",
          "defaultValue": "0",
          "description": "<p>Sets the percentage for a <em>determinate</em> spinner.</p>\n",
          "line": 16
        },
        {
          "name": "size",
          "defaultValue": "'large'",
          "description": "<p>Sets the size of the element (defaults to large).</p>\n",
          "line": 20
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "calculatedOffset",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "sizeObj",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        },
        {
          "name": "setOffset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        },
        {
          "name": "setSize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { LARGE, SMALL } from './spinner-progress.constants';\n\n@Component({\n  selector: 'vds-spinner-progress',\n  templateUrl: './spinner-progress.component.html',\n})\nexport class SpinnerProgressComponent implements OnInit {\n  /**\n   * Sets the type of progress bar. (defaults to false)\n   */\n  @Input() determinate = false;\n  /**\n   * Sets the percentage for a *determinate* spinner.\n   */\n  @Input() percentage = 0;\n  /**\n   * Sets the size of the element (defaults to large).\n   */\n  @Input() size = 'large';\n\n  calculatedOffset: number;\n  // todo fix this. there needs to be a default\n  sizeObj: any;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.setSize();\n    if (this.determinate) {\n      this.setOffset();\n    }\n  }\n\n  setSize() {\n    switch (this.size.toLowerCase()) {\n      case 'small':\n        this.sizeObj = SMALL;\n        break;\n      case 'large':\n        this.sizeObj = LARGE;\n        break;\n      default:\n        this.sizeObj = LARGE;\n        break;\n    }\n  }\n\n  setOffset() {\n    if (this.percentage < 0) {\n      this.percentage = 0;\n    }\n    if (this.percentage > 100) {\n      this.percentage = 100;\n    }\n    this.calculatedOffset =\n      this.sizeObj.STROKE_DASHARRAY -\n      this.percentage *\n        0.01 *\n        this.sizeObj.STROKE_DASHARRAY;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 24
      },
      "implements": ["OnInit"],
      "templateData": "<div \n  [ngClass]=\"{\n  'vds-progress--spinner': true,\n  'vds-state--determinate': determinate\n  }\">\n  <svg \n    class=\"vds-progress--spinner-track\" \n    [attr.height]=\"sizeObj?.HEIGHT\" \n    [attr.width]=\"sizeObj?.WIDTH\">\n    <circle \n      class=\"vds-progress--spinner-background\" \n      [attr.r]=\"sizeObj?.R\" \n      [attr.cx]=\"sizeObj?.CX\" \n      [attr.cy]=\"sizeObj?.CY\"\n      [style.strokeDasharray]=\"sizeObj?.STROKE_DASHARRAY\"\n      [ngStyle]=\"{\n        'stroke-dashoffset': determinate ? 0 : sizeObj?.STROKE_DASHOFFSET\n      }\">\n    </circle>\n    <circle \n      class=\"vds-progress--spinner-bar\" \n      [attr.r]=\"sizeObj?.R\" \n      [attr.cx]=\"sizeObj?.CX\" \n      [attr.cy]=\"sizeObj?.CY\"\n      [style.strokeDasharray]=\"sizeObj?.STROKE_DASHARRAY\"\n      [ngStyle]=\"{\n        'stroke-dashoffset': determinate ? calculatedOffset : sizeObj?.STROKE_DASHOFFSET\n      }\">\n    </circle>\n  </svg>\n  <div class=\"vds-progress-label\">{{ percentage }}%</div>\n </div>\n"
    },
    {
      "name": "StepComponent",
      "id": "component-StepComponent-34f7d65f0214f89bbb91eb95d003d202",
      "file": "projects/vds-lib/src/lib/wizard/step/step.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-step",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./step.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "description": "<p>ARIA label for accessibility.</p>\n",
          "line": 46,
          "type": "string"
        },
        {
          "name": "enableClick",
          "description": "<p>If set, allows clicking of step number to route in the wizard</p>\n",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>Label for each step (numbers or roman numerals).</p>\n",
          "line": 26,
          "type": "string"
        },
        {
          "name": "status",
          "description": "<p>Status of the step.</p>\n",
          "line": 42,
          "type": "StepStatus"
        },
        {
          "name": "title",
          "defaultValue": "''",
          "description": "<p>Title for each step.</p>\n",
          "line": 38
        },
        {
          "name": "tooltip",
          "defaultValue": "''",
          "description": "<p>Message displayed in tooltip.</p>\n",
          "line": 30
        }
      ],
      "outputsClass": [
        {
          "name": "clicked",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits zero-based step index of the clicked step.</p>\n",
          "line": 50,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "el",
          "type": "ElementRef",
          "optional": true,
          "description": "",
          "line": 22,
          "modifierKind": [114]
        },
        {
          "name": "errorSymbol",
          "defaultValue": "STEP.DEFAULT.ERROR",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "hasError",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "isActive",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "isCompleted",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59
        },
        {
          "name": "isShowing",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "next",
          "defaultValue": "null",
          "type": "StepComponent | null",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "number",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "prev",
          "defaultValue": "null",
          "type": "StepComponent | null",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "step",
          "type": "HTMLElement",
          "optional": false,
          "description": "",
          "line": 54,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'step'"
            }
          ]
        },
        {
          "name": "STEPID",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "tooltipRef",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 52,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'tooltipReference'"
            }
          ]
        },
        {
          "name": "tooltipText",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 53,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'tooltipText'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "activate",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 125
        },
        {
          "name": "complete",
          "args": [
            {
              "name": "success",
              "type": "boolean",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 139,
          "jsdoctags": [
            {
              "name": "success",
              "type": "boolean",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "deactivate",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133
        },
        {
          "name": "emitClickedStep",
          "args": [
            {
              "name": "stepBtn",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 145,
          "jsdoctags": [
            {
              "name": "stepBtn",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "hide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 121
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72
        },
        {
          "name": "resetActivate",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129
        },
        {
          "name": "setTooltipPosition",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 97,
          "modifierKind": [112]
        },
        {
          "name": "show",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 117
        }
      ],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "window:resize",
          "args": [],
          "argsDecorator": [],
          "line": 68
        }
      ],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  HostListener,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { STEP } from './step.constants';\nimport { StepStatus } from './step.constants';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-step',\n  templateUrl: './step.component.html',\n})\nexport class StepComponent\n  implements OnInit, AfterViewInit {\n  constructor(public el?: ElementRef) {}\n  /**\n   * Label for each step (numbers or roman numerals).\n   */\n  @Input() label: string;\n  /**\n   * Message displayed in tooltip.\n   */\n  @Input() tooltip = '';\n  /**\n   * If set, allows clicking of step number to route in the wizard\n   */\n  @Input() enableClick: boolean;\n  /**\n   * Title for each step.\n   */\n  @Input() title = '';\n  /**\n   * Status of the step.\n   */\n  @Input() status: StepStatus;\n  /**\n   * ARIA label for accessibility.\n   */\n  @Input() ariaLabel: string;\n  /**\n   * Emits zero-based step index of the clicked step.\n   */\n  @Output() clicked: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('tooltipReference') tooltipRef: ElementRef;\n  @ViewChild('tooltipText') tooltipText: ElementRef;\n  @ViewChild('step') step: HTMLElement;\n\n  STEPID = '';\n  isShowing = false;\n  isActive = false;\n  isCompleted = false;\n  hasError = false;\n  errorSymbol = STEP.DEFAULT.ERROR;\n  next: StepComponent | null = null;\n  prev: StepComponent | null = null;\n  number = '';\n\n  // @TODO: Remove tooltip JS - needs to be handled by the tooltip component\n  @HostListener('window:resize', [])\n  onResize() {\n    this.setTooltipPosition();\n  }\n\n  ngOnInit() {\n    this.enableClick = coerceBooleanProperty(\n      this.enableClick\n    );\n    if (this.status) {\n      switch (this.status.toLowerCase()) {\n        case StepStatus.COMPLETE:\n          this.isCompleted = true;\n          break;\n        case StepStatus.ERROR:\n          this.hasError = true;\n          break;\n        case StepStatus.ACTIVE:\n          this.isActive = true;\n          break;\n        default:\n          this.hasError = false;\n          this.isActive = false;\n          this.isCompleted = false;\n          break;\n      }\n    }\n  }\n\n  // @TODO: Remove tooltip JS - needs to be handled by the tooltip component\n  private setTooltipPosition() {\n    const itemLeft = this.el.nativeElement.firstElementChild\n      .offsetLeft;\n    const itemHeight = this.el.nativeElement\n      .firstElementChild.offsetHeight;\n    const itemTop = this.el.nativeElement.firstElementChild\n      .offsetTop;\n\n    if (this.tooltipRef) {\n      this.tooltipRef.nativeElement.style.top =\n        itemTop - itemHeight + STEP.DEFAULT.UNITS;\n      this.tooltipRef.nativeElement.style.left =\n        itemLeft + STEP.DEFAULT.UNITS;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.setTooltipPosition();\n  }\n\n  show() {\n    this.isShowing = true;\n  }\n\n  hide() {\n    this.isShowing = false;\n  }\n\n  activate() {\n    this.isActive = true;\n  }\n\n  resetActivate() {\n    this.isActive = false;\n  }\n\n  deactivate() {\n    this.isActive = false;\n    this.hasError = false;\n    this.isCompleted = false;\n  }\n\n  complete(success?: boolean) {\n    this.isActive = false;\n    this.isCompleted = success;\n    this.hasError = !success;\n  }\n\n  emitClickedStep(stepBtn) {\n    if (this.enableClick) {\n      this.clicked.emit(stepBtn.number - 1);\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "optional": true
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<li\n  [ngClass]=\"{\n    'vds-wizard-step': true,\n    'vds-state--show': isShowing,\n    'vds-state--active': isActive,\n    'vds-state--completed': isCompleted,\n    'vds-state--error': hasError,\n    'vds-wizard-step--titles': title.length\n  }\"\n  [attr.data-tooltip]=\"'#' + STEPID\"\n  [attr.aria-describedby]=\"STEPID\"\n  #step\n>\n  <button\n    (mouseenter)=\"show()\"\n    (mouseleave)=\"hide()\"\n    type=\"button\"\n    class=\"vds-btn-icon vds-btn-icon--light-tiny\"\n    [attr.aria-label]=\"ariaLabel\"\n    [disabled]=\"!enableClick\"\n    (click)=\"emitClickedStep(this)\"\n  >\n    <span class=\"vds-btn-label\">\n      {{ hasError && !isActive ? errorSymbol : label }}\n    </span>\n  </button>\n  <span *ngIf=\"title.length\" class=\"vds-wizard-step-title\">\n    {{ title }}\n  </span>\n</li>\n<br>\n<ng-content></ng-content>\n"
    },
    {
      "name": "SwitchComponent",
      "id": "component-SwitchComponent-7df8d7b45045e8efa6ec7823160feba2",
      "file": "projects/vds-lib/src/lib/switch/switch.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-switch",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./switch.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "checked",
          "description": "<p>Checks the switch statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 32,
          "type": "boolean"
        },
        {
          "name": "checkedLabel",
          "defaultValue": "CHECKED_LABEL_DEFAULT.on",
          "description": "<p>Sets custom checked label. <br>\nDefaults to &#39;on&#39;</p>\n",
          "line": 47,
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "<p>Disable checkbox statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 38,
          "type": "boolean"
        },
        {
          "name": "id",
          "description": "<p>The id of the input element.</p>\n",
          "line": 22,
          "type": "string"
        },
        {
          "name": "label",
          "description": "<p>Adds accessible label.</p>\n",
          "line": 26,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>The name of the input element.</p>\n",
          "line": 42,
          "type": "string"
        },
        {
          "name": "uncheckedLabel",
          "defaultValue": "CHECKED_LABEL_DEFAULT.off",
          "description": "<p>Sets custom unchecked label. <br>\nDefaults to &#39;off&#39;</p>\n",
          "line": 52,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits change event.</p>\n",
          "line": 57,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "currentState",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [114]
        },
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 60,
          "modifierKind": [114]
        },
        {
          "name": "switchID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [114]
        },
        {
          "name": "switchName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 62,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "click",
          "args": [
            {
              "name": "event",
              "type": "any",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "jsdoctags": [
            {
              "name": "event",
              "type": "any",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 99
        },
        {
          "name": "onFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 95
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport {\n  SWITCH,\n  CHECKED_LABEL_DEFAULT,\n} from './switch.constant';\n\n@Component({\n  selector: 'vds-switch',\n  templateUrl: './switch.component.html',\n})\nexport class SwitchComponent implements OnInit {\n  /**\n   * The id of the input element.\n   */\n  @Input() id: string;\n  /**\n   * Adds accessible label.\n   */\n  @Input() label: string;\n  /**\n   * Checks the switch statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() checked: boolean;\n  /**\n   * Disable checkbox statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * The name of the input element.\n   */\n  @Input() name: string;\n  /**\n   * Sets custom checked label. <br>\n   * Defaults to 'on'\n   */\n  @Input() checkedLabel: string = CHECKED_LABEL_DEFAULT.on;\n  /**\n   * Sets custom unchecked label. <br>\n   * Defaults to 'off'\n   */\n  @Input() uncheckedLabel: string =\n    CHECKED_LABEL_DEFAULT.off;\n  /**\n   * Emits change event.\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  public currentState: string;\n  public focused = false;\n  public switchID: string;\n  public switchName: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(SWITCH.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + SWITCH.SUFFIX.NAME;\n    this.switchID = `${this.id}${SWITCH.SUFFIX.NATIVE}`;\n    this.switchName = `${this.name}${SWITCH.SUFFIX.NATIVE}`;\n    this.checked = this.vdsLibService.triageDisabledValue(\n      this.checked\n    );\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n  }\n\n  click(event?: any): void {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n    this.change.emit({\n      checked: this.checked,\n      disabled: this.disabled,\n    });\n  }\n\n  onFocus(): void {\n    this.focused = true;\n  }\n\n  onBlur(): void {\n    this.focused = false;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 62,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div \n  class=\"vds-switch\" \n  tabindex=\"0\"\n  role=\"switch\"\n  (click)=\"click($event)\"\n  (blur)=\"onBlur()\"\n  (focus)=\"onFocus()\"\n  (keydown.space)=\"click($event)\"\n  [attr.aria-checked]=\"checked\" \n  [attr.disabled]=\"(disabled) ? 'disabled' : null\"\n  [ngClass]=\"{\n    'vds-state--disabled': (disabled) ? true : null,\n    'vds-state--focus': (focused) ? true : null,\n    'vds-state--active': checked ? true: null\n  }\">\n    <label class=\"vds-switch-label\" [for]=\"switchID\"  [id]=\"switchID + '-label'\">\n      {{ label ? label : '' }}\n     <input \n      [attr.checked]=\"checked ? true : null\"\n      type=\"checkbox\" \n      [id]=\"switchID\" \n      class=\"vds-switch-input\" \n      [name]=\"switchName\">\n     <div class=\"vds-switch-value\" aria-hidden=\"true\">{{ checked ? checkedLabel : uncheckedLabel }}</div>\n     <span class=\"vds-switch-toggle\"></span>\n    </label>\n   </div>"
    },
    {
      "name": "TabComponent",
      "id": "component-TabComponent-0240d134ae79443f77fe358992ec37b0",
      "file": "projects/vds-lib/src/lib/tab/tab.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-tab",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tab.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "description": "<p>Disable tab statically or programmatically.\nUse as attribute or input property.</p>\n",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "href",
          "description": "<p>Used for link tabs to route to another page.</p>\n",
          "line": 23,
          "type": "string"
        },
        {
          "name": "icon",
          "description": "<p>Used for setting the icon in the tab.</p>\n",
          "line": 27,
          "type": "string"
        },
        {
          "name": "route",
          "description": "<p>Route within the app.</p>\n",
          "line": 31,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "active",
          "type": "boolean",
          "optional": false,
          "description": "<p>active = true loads the tab content. active = false hides the tab content.\nParent Tabs component use only.</p>\n",
          "line": 37,
          "modifierKind": [114]
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "<p>The <code>title</code> is set implicitly from content of element.\nParent Tabs component use only; uses this to set the tab title.</p>\n",
          "line": 42,
          "modifierKind": [112]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        },
        {
          "name": "triageDisabledValue",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 61
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent implements OnInit, AfterViewInit {\n  /**\n   * Disable tab statically or programmatically.\n   * Use as attribute or input property.\n   */\n  @Input() disabled: boolean;\n  /**\n   * Used for link tabs to route to another page.\n   */\n  @Input() href: string;\n  /**\n   * Used for setting the icon in the tab.\n   */\n  @Input() icon: string;\n  /**\n   * Route within the app.\n   */\n  @Input() route: boolean;\n\n  /**\n   * active = true loads the tab content. active = false hides the tab content.\n   * Parent Tabs component use only.\n   */\n  public active: boolean;\n  /**\n   * The <code>title</code> is set implicitly from content of element.\n   * Parent Tabs component use only; uses this to set the tab title.\n   */\n  private title: string;\n\n  constructor(\n    private elem: ElementRef,\n    private vdsLibService: VdsLibService\n  ) {}\n\n  ngOnInit() {\n    this.disabled = this.triageDisabledValue();\n    this.title = this.elem.nativeElement.innerHTML;\n    this.route = this.vdsLibService.triageDisabledValue(\n      this.route\n    );\n  }\n\n  ngAfterViewInit() {\n    this.title = this.elem.nativeElement.innerHTML;\n  }\n\n  triageDisabledValue(): boolean {\n    const disabledStr = String(this.disabled).toLowerCase();\n    return !(\n      disabledStr === 'undefined' ||\n      disabledStr === 'null' ||\n      disabledStr === 'false'\n    );\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "elem",
            "type": "ElementRef"
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 42,
        "jsdoctags": [
          {
            "name": "elem",
            "type": "ElementRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterViewInit"],
      "templateData": "<ng-content></ng-content>\n"
    },
    {
      "name": "TabsComponent",
      "id": "component-TabsComponent-e1cd18750353cea4669bf98111a18d97",
      "file": "projects/vds-lib/src/lib/tabs/tabs.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-tabs",
      "styleUrls": ["./tabs.component.scss"],
      "styles": [],
      "templateUrl": ["./tabs.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "selectedIndex",
          "defaultValue": "0",
          "description": "<p>Programmatically set the selectedIndex. Default: 0.</p>\n",
          "line": 30,
          "type": "number | null"
        },
        {
          "name": "type",
          "defaultValue": "'link'",
          "description": "<p>Type of tabs. Default:\n<code>link. [link|button|menu|icon|iconLabel|iconMenu]</code></p>\n",
          "line": 35
        }
      ],
      "outputsClass": [
        {
          "name": "selectedIndexChange",
          "defaultValue": "new EventEmitter<number>()",
          "description": "<p>Emits the index of selected tab. Zero-based.</p>\n",
          "line": 39,
          "type": "EventEmitter<number>"
        }
      ],
      "propertiesClass": [
        {
          "name": "focusedTabIndex",
          "type": "number | null",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "tabButtons",
          "type": "QueryList<any>",
          "optional": false,
          "description": "",
          "line": 22,
          "decorators": [
            {
              "name": "ViewChildren",
              "stringifiedArguments": "'tabButton'"
            }
          ]
        },
        {
          "name": "tabs",
          "type": "QueryList<TabComponent>",
          "optional": false,
          "description": "",
          "line": 23,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "TabComponent"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "focusNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100
        },
        {
          "name": "focusPrevious",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 88
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47
        },
        {
          "name": "onTabFocus",
          "args": [
            {
              "name": "index",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 112,
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "selectTab",
          "args": [
            {
              "name": "index",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49,
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChildren,\n} from '@angular/core';\nimport { TabComponent } from '../tab/tab.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'vds-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.scss'],\n})\nexport class TabsComponent\n  implements OnInit, AfterContentInit {\n  @ViewChildren('tabButton') tabButtons: QueryList<any>;\n  @ContentChildren(TabComponent) tabs: QueryList<\n    TabComponent\n  >;\n\n  /**\n   * Programmatically set the selectedIndex. Default: 0.\n   */\n  @Input() selectedIndex: number | null = 0;\n  /**\n   * Type of tabs. Default:\n   * <code>link. [link|button|menu|icon|iconLabel|iconMenu]</code>\n   */\n  @Input() type = 'link';\n  /**\n   * Emits the index of selected tab. Zero-based.\n   */\n  @Output() readonly selectedIndexChange: EventEmitter<\n    number\n  > = new EventEmitter<number>();\n\n  focusedTabIndex: number | null;\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {}\n\n  selectTab(index) {\n    index = parseInt(index, 10);\n    if (this.tabs) {\n      if (index === this.selectedIndex) {\n        return;\n      }\n      if (\n        this.tabs.toArray()[index] &&\n        this.tabs.toArray()[index].disabled\n      ) {\n        return;\n      }\n\n      this.tabs\n        .toArray()\n        .forEach((tab) => (tab.active = false));\n      if (this.tabs.toArray()[index]) {\n        this.selectedIndex = index;\n        this.tabs.toArray()[index].active = true;\n        this.selectedIndexChange.emit(this.selectedIndex);\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.tabs) {\n      this.tabs.toArray().forEach((tab, index) => {\n        if (tab.route && tab.href === this.router.url) {\n          this.selectedIndex = index;\n        }\n      });\n      setTimeout(() => {\n        this.selectTab(\n          this.selectedIndex ? this.selectedIndex : 0\n        );\n      }, 0);\n    }\n  }\n\n  focusPrevious() {\n    if (this.focusedTabIndex != null) {\n      this.focusedTabIndex =\n        this.focusedTabIndex === 0\n          ? this.focusedTabIndex\n          : this.focusedTabIndex - 1;\n      this.tabButtons\n        .toArray()\n        [this.focusedTabIndex].nativeElement.focus();\n    }\n  }\n\n  focusNext() {\n    if (this.focusedTabIndex != null) {\n      this.focusedTabIndex =\n        this.focusedTabIndex === this.tabButtons.length - 1\n          ? this.focusedTabIndex\n          : this.focusedTabIndex + 1;\n      this.tabButtons\n        .toArray()\n        [this.focusedTabIndex].nativeElement.focus();\n    }\n  }\n\n  onTabFocus(index: number) {\n    this.focusedTabIndex = index;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-tab {\n  &--action {\n    vds-icon {\n      vertical-align: text-top;\n    }\n  }\n}\n",
          "styleUrl": "./tabs.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 43,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterContentInit"],
      "templateData": "<ul\n  class=\"vds-tab-list\"\n  [attr.role]=\"(type === 'button') ? 'tablist' : null\"\n  (keydown.arrowleft)=\"focusPrevious()\"\n  (keydown.arrowright)=\"focusNext()\"\n  (keydown.enter)=\"selectTab(focusedTabIndex)\"\n>\n  <li\n    *ngFor=\"let tab of tabs; index as i\"\n    class=\"vds-tab-item\"\n    (click)=\"selectTab(i)\"\n  >\n    <ng-container\n      *ngIf=\"type === 'link' || type==='icon' || type === 'iconLabel'\">\n      <ng-container\n        *ngTemplateOutlet=\"link; context:{\n          i: i,\n          tab: tab\n        }\">\n      </ng-container>\n    </ng-container>\n    \n    <ng-container\n      *ngIf=\"type === 'button'\">\n      <ng-container\n        *ngTemplateOutlet=\"button; context:{\n          i: i,\n          tab: tab\n        }\">\n      </ng-container>\n    </ng-container>\n    \n    <ng-container\n      *ngIf=\"type === 'menu'\">\n      <ng-container\n        *ngTemplateOutlet=\"menu; context:{\n          i: i,\n          tab: tab\n        }\">\n      </ng-container>\n    </ng-container>\n    \n    <ng-container\n      *ngIf=\"type === 'iconMenu'\">\n      <ng-container\n        *ngTemplateOutlet=\"iconMenu; context:{\n          i: i,\n          tab: tab\n        }\">\n      </ng-container>\n    </ng-container>\n  </li>\n</ul>\n\n<ng-template\n  #link\n  let-i=\"i\"\n  let-tab=\"tab\"\n>\n  <a\n    #tabButton\n    *ngIf=\"!tab.route\"\n    [attr.tabindex]=\"(type === 'icon' || type==='iconLabel') ? -1 : 0\"\n    [attr.aria-current]=\"(i === selectedIndex) ? 'page' : null\"\n    [attr.aria-disabled]=\"(tab.disabled) ? true : null\"\n    [attr.aria-selected]=\"i === selectedIndex\"\n    [attr.href]=\"(tab.href) ? tab.href : null\"\n    (focus)=\"onTabFocus(i)\"\n    [ngClass]=\"{\n      'vds-tab': true,\n      'vds-tab--tall': type === 'icon',\n      'vds-state--selected': i === selectedIndex,\n      'vds-state--disabled': tab.disabled\n    }\"\n  >\n    <ng-container *ngIf=\"type === 'link' || type === 'menu'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabTitleText; context:{\n          title: tab.title\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"type === 'icon'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabIcon; context:{\n          tab: tab\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"type === 'iconLabel' || type === 'iconMenu'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabIconLabel; context:{\n          tab: tab\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n  </a>\n  <a\n    #tabButton\n    *ngIf=\"tab.route\"\n    [attr.tabindex]=\"(type === 'icon' || type==='iconLabel') ? -1 : 0\"\n    [attr.aria-current]=\"(i === selectedIndex) ? 'page' : null\"\n    [attr.aria-disabled]=\"(tab.disabled) ? true : null\"\n    [attr.aria-selected]=\"i === selectedIndex\"\n    [routerLink]=\"(tab.href) ? tab.href : null\"\n    (focus)=\"onTabFocus(i)\"\n    [ngClass]=\"{\n      'vds-tab': true,\n      'vds-tab--tall': type === 'icon',\n      'vds-state--selected': i === selectedIndex,\n      'vds-state--disabled': tab.disabled\n    }\"\n  >\n    <ng-container *ngIf=\"type === 'link' || type === 'menu'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabTitleText; context:{\n          title: tab.title\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"type === 'icon'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabIcon; context:{\n          tab: tab\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"type === 'iconLabel' || type === 'iconMenu'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabIconLabel; context:{\n          tab: tab\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n  </a>\n</ng-template>\n\n<ng-template\n  #button\n  let-i=\"i\"\n  let-tab=\"tab\"\n>\n  <button\n    #tabButton\n    role=\"tab\"\n    type=\"button\"\n    [attr.aria-current]=\"(i === selectedIndex) ? 'page' : null\"\n    [attr.aria-disabled]=\"(tab.disabled) ? true : null\"\n    [attr.aria-selected]=\"i === selectedIndex\"\n    [attr.href]=\"(tab.href) ? tab.href : null\"\n    (focus)=\"onTabFocus(i)\"\n    [ngClass]=\"{\n      'vds-tab': true,\n      'vds-state--selected': i === selectedIndex,\n      'vds-state--disabled': tab.disabled\n    }\"\n  >\n    <ng-container *ngIf=\"type === 'button'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabTitleText; context:{\n          title: tab.title\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"type === 'menu'\">\n      <ng-container\n        *ngTemplateOutlet=\"tabAction; context:{\n          title: tab.title\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"type === 'iconMenu'\">\n      <vds-icon\n        *ngIf=\"tab.icon\"\n        low=\"true\"\n        [icon]=\"tab.icon\"\n      >\n      </vds-icon>\n      <ng-container\n        *ngTemplateOutlet=\"tabAction; context:{\n          title: tab.title\n        }\"\n      >\n      </ng-container>\n    </ng-container>\n  </button>\n</ng-template>\n\n<ng-template\n  #menu\n  let-i=\"i\"\n  let-tab=\"tab\"\n>\n  <ng-container\n      *ngIf=\"tab.href\">\n    <ng-container\n      *ngTemplateOutlet=\"link; context:{\n        i: i,\n        tab: tab\n      }\">\n    </ng-container>\n  </ng-container>\n  <ng-container\n      *ngIf=\"!tab.href\">\n    <ng-container\n      *ngTemplateOutlet=\"button; context:{\n        i: i,\n        tab: tab\n      }\">\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template\n  #iconMenu\n  let-i=\"i\"\n  let-tab=\"tab\"\n>\n  <ng-container *ngIf=\"tab.href\">\n    <ng-container\n      *ngTemplateOutlet=\"link; context:{\n        i: i,\n        tab: tab\n    }\">\n    </ng-container>\n  </ng-container>\n  <ng-container *ngIf=\"!tab.href\">\n    <ng-container\n      *ngTemplateOutlet=\"button; context:{\n        i: i,\n        tab: tab\n    }\">\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template\n  #tabAction\n  let-title=\"title\"\n>\n  {{ title }}\n  <span class=\"vds-tab--action\">\n    <vds-icon\n      tiny=\"true\"\n      icon=\"arrow-expand\"\n    >\n    </vds-icon>\n  </span>\n</ng-template>\n\n<ng-template\n  #tabTitleText\n  let-title=\"title\"\n>\n  {{ title }}\n</ng-template>\n\n<ng-template\n  #tabIcon\n  let-tab=\"tab\"\n>\n  <div class=\"vds-tab--tall--wrapper\">\n    <vds-icon\n      *ngIf=\"tab.icon\"\n      low=\"true\"\n      [icon]=\"tab.icon\"\n    >\n    </vds-icon>\n    <div\n      class=\"vds-tab--tall--caption\"\n      [innerHTML]=\"tab.title\"\n    >\n    </div>\n  </div>\n</ng-template>\n\n<ng-template\n  #tabIconLabel\n  let-tab=\"tab\"\n>\n  <vds-icon\n    *ngIf=\"tab.icon\"\n    low=\"true\"\n    [icon]=\"tab.icon\"\n  >\n  </vds-icon>\n  {{ tab.title }}\n</ng-template>\n"
    },
    {
      "name": "TemplateCellComponent",
      "id": "component-TemplateCellComponent-26b1cff9a5d8343b67cbf388a36a91f4",
      "file": "projects/vds-lib/src/lib/custom-template/template-cell.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-template-cell",
      "styleUrls": [],
      "styles": [],
      "template": "<ng-container\n  *ngIf=\"template\"\n  [ngTemplateOutlet]=\"template\"\n></ng-container>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "id",
          "line": 23
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "template",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 26,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "TemplateRef"
            }
          ]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\n\n@Component({\n  selector: 'vds-template-cell',\n  template: `\n    <ng-container\n      *ngIf=\"template\"\n      [ngTemplateOutlet]=\"template\"\n    ></ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TemplateCellComponent {\n  @Input()\n  id;\n\n  @ContentChild(TemplateRef)\n  template: TemplateRef<any>;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "TemplateContainerComponent",
      "id": "component-TemplateContainerComponent-ad43bbf6d3b72a04f1fec09977102142",
      "file": "projects/vds-lib/src/lib/custom-template/template-container.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-template-container",
      "styleUrls": [],
      "styles": [],
      "template": "<ng-container></ng-container>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "templateChildren",
          "type": "QueryList<TemplateCellComponent>",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "TemplateCellComponent"
            }
          ]
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { TemplateCellComponent } from './template-cell.component';\n\n@Component({\n  selector: 'vds-template-container',\n  template: `\n    <ng-container></ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TemplateContainerComponent {\n  @ContentChildren(TemplateCellComponent)\n  templateChildren: QueryList<TemplateCellComponent>;\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "TextComponent",
      "id": "component-TextComponent-a40c2c860b142d53caad7dab18c98973",
      "file": "projects/vds-lib/src/lib/text/text.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-text",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./text.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vds-text',\n  templateUrl: './text.component.html',\n})\nexport class TextComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 7
      },
      "implements": ["OnInit"],
      "templateData": "<ng-content></ng-content>"
    },
    {
      "name": "TextFieldComponent",
      "id": "component-TextFieldComponent-108a12aa6c8fc8f0b87a58c5d44b0ddd",
      "file": "projects/vds-lib/src/lib/text-field/text-field.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MakeProvider(TextFieldComponent)",
          "type": "component"
        },
        {
          "name": "{\n    provide: NG_VALIDATORS, useExisting: forwardRef(() => TextFieldComponent), multi: true,\n}",
          "type": "component"
        }
      ],
      "selector": "vds-text-field",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./text-field.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "autoGrow",
          "description": "<p>Sets text area to auto grow statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 57,
          "type": "boolean"
        },
        {
          "name": "characterCounter",
          "description": "<p>Character Counter typed interface to specify limit and message.</p>\n",
          "line": 61,
          "type": "CharacterCounter"
        },
        {
          "name": "disabled",
          "description": "<p>Disable select statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 67,
          "type": "boolean"
        },
        {
          "name": "helpText",
          "description": "<p>The text that articulates the purpose to the user.</p>\n",
          "line": 71,
          "type": "string"
        },
        {
          "name": "hint",
          "description": "<p>Hint of value to guide the user.</p>\n",
          "line": 75,
          "type": "string"
        },
        {
          "name": "id",
          "description": "<p>The id of the element.</p>\n",
          "line": 79,
          "type": "string"
        },
        {
          "name": "label",
          "description": "<p>The user display label of the text-field.</p>\n",
          "line": 83,
          "type": "string"
        },
        {
          "name": "multiline",
          "description": "<p>Set as multiline statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 89,
          "type": "boolean"
        },
        {
          "name": "name",
          "description": "<p>The name of the text-field element.</p>\n",
          "line": 93,
          "type": "string"
        },
        {
          "name": "placeholder",
          "description": "<p>Placeholder for text input.</p>\n",
          "line": 97,
          "type": "string"
        },
        {
          "name": "readOnly",
          "description": "<p>Set as read-only statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 103,
          "type": "boolean"
        },
        {
          "name": "required",
          "description": "<p>Set as required statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 109,
          "type": "boolean"
        },
        {
          "name": "showCheckMark",
          "description": "<p>Toggle check mark usage statically or programmatically. <br>\nUse as attribute or input property. <br>\nDefault: <code>false</code></p>\n",
          "line": 115,
          "type": "boolean"
        },
        {
          "name": "type",
          "description": "<p>The native type of the element.</p>\n",
          "line": 119,
          "type": "string"
        },
        {
          "name": "validateOnLoad",
          "description": "<p>Validate and surface the errors on load with styling and messaging. <br>\nApplies to Reactive Forms.</p>\n",
          "line": 126,
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "<p>The value of the element.</p>\n",
          "line": 136,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "blur",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits blur event.</p>\n",
          "line": 140,
          "type": "EventEmitter"
        },
        {
          "name": "change",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits changed value.</p>\n",
          "line": 144,
          "type": "EventEmitter"
        },
        {
          "name": "error",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits error object.</p>\n",
          "line": 148,
          "type": "EventEmitter"
        },
        {
          "name": "focus",
          "defaultValue": "new EventEmitter<any>()",
          "description": "<p>Emits focus event.</p>\n",
          "line": 152,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_validateOnLoad",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "ariaDescribedBy",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 166,
          "modifierKind": [114]
        },
        {
          "name": "errors",
          "type": "QueryList<ErrorComponent>",
          "optional": false,
          "description": "",
          "line": 156,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ErrorComponent"
            }
          ]
        },
        {
          "name": "focused",
          "defaultValue": "false",
          "type": "",
          "optional": false,
          "description": "",
          "line": 160,
          "modifierKind": [114]
        },
        {
          "name": "initialValue",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 170,
          "modifierKind": [112]
        },
        {
          "name": "input",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 154,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'theInput'"
            }
          ]
        },
        {
          "name": "inputEl",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 171,
          "modifierKind": [112]
        },
        {
          "name": "invalidity",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 167,
          "modifierKind": [114]
        },
        {
          "name": "isTextFieldValid",
          "defaultValue": "true",
          "type": "",
          "optional": false,
          "description": "",
          "line": 168,
          "modifierKind": [114]
        },
        {
          "name": "latestValidateErrors",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 172,
          "modifierKind": [112]
        },
        {
          "name": "preFilledContent",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 161,
          "modifierKind": [114]
        },
        {
          "name": "remainingCount",
          "defaultValue": "0",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 162,
          "modifierKind": [114]
        },
        {
          "name": "textFieldID",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 163,
          "modifierKind": [114]
        },
        {
          "name": "textFieldMessage",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 165,
          "modifierKind": [114]
        },
        {
          "name": "textFieldName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 164,
          "modifierKind": [114]
        },
        {
          "name": "tighterTextArea",
          "defaultValue": "10",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 173,
          "modifierKind": [112]
        },
        {
          "name": "onChange",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 26,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "onTouched",
          "defaultValue": "() => {...}",
          "type": "",
          "optional": false,
          "description": "",
          "line": 28,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "val",
          "defaultValue": "''",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 9,
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 337
        },
        {
          "name": "ngAfterContentChecked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 240
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 229
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 182
        },
        {
          "name": "onBlur",
          "args": [
            {
              "name": "ev",
              "type": "Event",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 274,
          "jsdoctags": [
            {
              "name": "ev",
              "type": "Event",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onFocus",
          "args": [
            {
              "name": "ev",
              "type": "Event",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 253,
          "jsdoctags": [
            {
              "name": "ev",
              "type": "Event",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTyping",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 293,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 331
        },
        {
          "name": "resizeTextarea",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 343
        },
        {
          "name": "validate",
          "args": [
            {
              "name": "c",
              "type": "FormControl"
            }
          ],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 262,
          "modifierKind": [114],
          "jsdoctags": [
            {
              "name": "c",
              "type": "FormControl",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "validityChecks",
          "args": [
            {
              "name": "el",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 311,
          "jsdoctags": [
            {
              "name": "el",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 324,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [
                {
                  "name": "_",
                  "type": "any"
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "function": []
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "AbstractValueAccessor"
          }
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterContentChecked,\n  ContentChildren,\n  QueryList,\n  forwardRef,\n} from '@angular/core';\nimport { VdsLibService } from '../vds-lib.service';\nimport { TEXT_FIELD } from './text-field.constant';\nimport {\n  AbstractValueAccessor,\n  MakeProvider,\n} from '../abstract-value-accessor';\nimport { CharacterCounter } from '../character-counter/character-counter.constants';\nimport { ErrorComponent } from '../error/error.component';\nimport {\n  FormControl,\n  NG_VALIDATORS,\n  Validator,\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'vds-text-field',\n  templateUrl: './text-field.component.html',\n  providers: [\n    MakeProvider(TextFieldComponent),\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TextFieldComponent),\n      multi: true,\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TextFieldComponent\n  extends AbstractValueAccessor\n  implements\n    OnInit,\n    AfterViewInit,\n    AfterContentChecked,\n    Validator {\n  /**\n   * Sets text area to auto grow statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() autoGrow: boolean;\n  /**\n   * Character Counter typed interface to specify limit and message.\n   */\n  @Input() characterCounter: CharacterCounter;\n  /**\n   * Disable select statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() disabled: boolean;\n  /**\n   * The text that articulates the purpose to the user.\n   */\n  @Input() helpText: string;\n  /**\n   * Hint of value to guide the user.\n   */\n  @Input() hint: string;\n  /**\n   * The id of the element.\n   */\n  @Input() id: string;\n  /**\n   * The user display label of the text-field.\n   */\n  @Input() label: string;\n  /**\n   * Set as multiline statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() multiline: boolean;\n  /**\n   * The name of the text-field element.\n   */\n  @Input() name: string;\n  /**\n   * Placeholder for text input.\n   */\n  @Input() placeholder: string;\n  /**\n   * Set as read-only statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() readOnly: boolean;\n  /**\n   * Set as required statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() required: boolean;\n  /**\n   * Toggle check mark usage statically or programmatically. <br>\n   * Use as attribute or input property. <br>\n   * Default: <code>false</code>\n   */\n  @Input() showCheckMark: boolean;\n  /**\n   * The native type of the element.\n   */\n  @Input() type: string;\n  /**\n   * Validate and surface the errors on load with styling and messaging. <br>\n   * Applies to Reactive Forms.\n   */\n  // @Input() validateOnLoad: boolean;\n  @Input()\n  get validateOnLoad(): boolean {\n    return this._validateOnLoad;\n  }\n  set validateOnLoad(value) {\n    this._validateOnLoad = coerceBooleanProperty(value);\n  }\n  _validateOnLoad = false;\n  /**\n   * The value of the element.\n   */\n  @Input() value: string;\n  /**\n   * Emits blur event.\n   */\n  @Output() blur = new EventEmitter<any>();\n  /**\n   * Emits changed value.\n   */\n  @Output() change = new EventEmitter<any>();\n  /**\n   * Emits error object.\n   */\n  @Output() error = new EventEmitter<any>();\n  /**\n   * Emits focus event.\n   */\n  @Output() focus = new EventEmitter<any>();\n\n  @ViewChild('theInput') input: ElementRef;\n\n  @ContentChildren(ErrorComponent) errors: QueryList<\n    ErrorComponent\n  >;\n\n  public focused = false;\n  public preFilledContent: boolean;\n  public remainingCount = 0;\n  public textFieldID: string;\n  public textFieldName: string;\n  public textFieldMessage: string;\n  public ariaDescribedBy: string;\n  public invalidity: boolean;\n  public isTextFieldValid = true;\n\n  private initialValue: string;\n  private inputEl: any;\n  private latestValidateErrors: any;\n  private tighterTextArea = 10;\n\n  constructor(\n    private vdsLibService: VdsLibService,\n    private cdRef: ChangeDetectorRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.id = this.id\n      ? this.id\n      : this.vdsLibService.getUUID(TEXT_FIELD.PREFIX.ID);\n    this.name = this.name\n      ? this.name\n      : this.id + TEXT_FIELD.SUFFIX.NAME;\n    this.autoGrow = this.vdsLibService.triageDisabledValue(\n      this.autoGrow\n    );\n    this.disabled = this.vdsLibService.triageDisabledValue(\n      this.disabled\n    );\n    this.multiline = this.vdsLibService.triageDisabledValue(\n      this.multiline\n    );\n    this.required = this.vdsLibService.triageDisabledValue(\n      this.required\n    );\n    this.readOnly = this.vdsLibService.triageDisabledValue(\n      this.readOnly\n    );\n    this.showCheckMark = this.vdsLibService.triageDisabledValue(\n      this.showCheckMark\n    );\n    this.textFieldID = `${this.id}${\n      TEXT_FIELD.SUFFIX.NATIVE\n    }`;\n    this.textFieldName = `${this.name}${\n      TEXT_FIELD.SUFFIX.NATIVE\n    }`;\n    this.textFieldMessage = `${this.id}${\n      TEXT_FIELD.SUFFIX.MESSAGE\n    }`;\n    this.ariaDescribedBy = this.textFieldMessage;\n    if (\n      this.characterCounter &&\n      this.characterCounter.limit\n    ) {\n      this.remainingCount = this.characterCounter.limit;\n      this.characterCounter.remainder = this.remainingCount;\n      this.cdRef.detectChanges();\n    }\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  ngAfterViewInit() {\n    this.inputEl = this.input.nativeElement;\n    if (this.autoGrow) {\n      setTimeout(() => {\n        this.resizeTextarea();\n      }, 1);\n    }\n    this.initialValue = this.value;\n    this.preFilledContent = !!this.initialValue;\n  }\n\n  ngAfterContentChecked() {\n    if (!this.invalidity) {\n      this.ariaDescribedBy = this.textFieldMessage;\n      return;\n    }\n    const errorComponent = this.errors.find(\n      (item) => item.id != null\n    );\n    if (errorComponent && errorComponent.id) {\n      this.ariaDescribedBy = errorComponent.id;\n    }\n  }\n\n  onFocus(ev?: Event): void {\n    if (this.readOnly || this.disabled) {\n      return;\n    }\n    this.focused = true;\n    this.onTouched();\n    this.focus.emit(ev);\n  }\n\n  public validate(c: FormControl) {\n    this.isTextFieldValid =\n      c.pristine && !this.validateOnLoad ? true : !c.errors;\n    this.latestValidateErrors = c.errors;\n    this.cdRef.detectChanges();\n    if (c && c.errors) {\n      this.error.emit(c.errors);\n      return {};\n    }\n    return null;\n  }\n\n  onBlur(ev?: Event): void {\n    if (this.readOnly || this.disabled) {\n      return;\n    }\n    this.focused = false;\n    if (\n      this.preFilledContent &&\n      this.initialValue &&\n      this.value !== this.initialValue\n    ) {\n      this.preFilledContent = false;\n    }\n    if (this.latestValidateErrors) {\n      this.isTextFieldValid = false;\n    }\n    this.blur.emit(ev);\n    this.change.emit(this.value);\n  }\n\n  onTyping(el) {\n    this.validityChecks(el);\n    this.writeValue(this.value);\n    if (this.characterCounter) {\n      const currentLength: number = this.inputEl.value\n        .length;\n      this.remainingCount =\n        this.characterCounter.limit - currentLength;\n      this.characterCounter.remainder = this.remainingCount;\n      this.cdRef.detectChanges();\n    }\n    if (this.autoGrow) {\n      setTimeout(() => {\n        this.resizeTextarea();\n      }, 1);\n    }\n  }\n\n  validityChecks(el) {\n    if (el.invalid) {\n      this.invalidity = true;\n      this.isTextFieldValid = false;\n      this.error.emit(el.errors);\n    }\n    if (!el.invalid) {\n      this.isTextFieldValid = true;\n      this.invalidity = false;\n    }\n    this.cdRef.detectChanges();\n  }\n\n  writeValue(value: any) {\n    super.writeValue(value);\n    this.value = value;\n    this.cdRef.detectChanges();\n    this.change.emit(this.value);\n  }\n\n  reset() {\n    this.value = this.initialValue;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  clear() {\n    this.value = null;\n    this.writeValue(this.value);\n    this.change.emit(this.value);\n  }\n\n  resizeTextarea(): void {\n    if (window) {\n      this.inputEl.style.height = 'inherit';\n      this.inputEl.style.height =\n        this.inputEl.scrollHeight -\n        this.tighterTextArea +\n        'px';\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef"
          }
        ],
        "line": 173,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "AbstractValueAccessor",
      "implements": [
        "OnInit",
        "AfterViewInit",
        "AfterContentChecked",
        "Validator"
      ],
      "accessors": {
        "validateOnLoad": {
          "name": "validateOnLoad",
          "setSignature": {
            "name": "validateOnLoad",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": ""
              }
            ],
            "returnType": "void",
            "line": 129,
            "jsdoctags": [
              {
                "name": "value",
                "type": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<ng-container *ngIf=\"!multiline\">\n  <div\n    [ngClass]=\"{\n      'vds-input': true,\n      'vds-state--content': preFilledContent && value ? true : null,\n      'vds-state--focus': focused,\n      'vds-state--filled': (value && !preFilledContent) ? true : null,\n      'vds-state--disabled': (disabled) ? true : null,\n      'vds-state--error': (!isTextFieldValid) ? true : null,\n      'vds-state--readonly': (readOnly) ? true : null\n    }\"\n  >\n    <label class=\"vds-input-label\" [for]=\"textFieldID\">\n      {{ label }}\n    </label>\n    <div class=\"vds-input-bar\">\n      <div class=\"vds-input-input\">\n        <span *ngIf=\"hint && !value\" class=\"vds-input-hint\">\n          {{ hint }}\n        </span>\n        <input\n          [attr.aria-describedby]=\"ariaDescribedBy\"\n          [attr.aria-invalid]=\"!isTextFieldValid\"\n          [attr.aria-required]=\"required\"\n          [attr.disabled]=\"disabled ? 'disabled' : null\"\n          [attr.readonly]=\"readOnly ? 'readonly' : null\"\n          [email]=\"type === 'email' ? true : null\"\n          [id]=\"textFieldID\"\n          [name]=\"textFieldName\"\n          [required]=\"required\"\n          [type]=\"type\"\n          (blur)=\"onBlur($event)\"\n          (focus)=\"onFocus($event)\"\n          (keyup)=\"onTyping(textField)\"\n          [(ngModel)]=\"value\"\n          placeholder=\"{{ focused ? placeholder : '' }}\"\n          autocomplete=\"off\"\n          class=\"vds-input--input-text\"\n          #textField=\"ngModel\"\n          #theInput\n        />\n      </div>\n      <div\n        [ngClass]=\"{\n          'vds-input-option': true,\n          'vds-state--hidden': !isTextFieldValid\n            ? true\n            : null\n        }\"\n      >\n        <vds-icon\n          *ngIf=\"showCheckMark && isTextFieldValid\"\n          icon=\"visa_checkmark\"\n          tiny=\"true\"\n        >\n        </vds-icon>\n      </div>\n    </div>\n    <ng-container *ngIf=\"(focused && isTextFieldValid)\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          help;\n          context: {\n            helpText: helpText\n          }\n        \"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"!isTextFieldValid\">\n      <ng-container *ngTemplateOutlet=\"error\">\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"multiline\">\n  <div\n    [ngClass]=\"{\n      'vds-input': (multiline && autoGrow),\n      'vds-input-textarea-container': (multiline && !autoGrow),\n      'vds-state--content': (preFilledContent && value) ? true : null,\n      'vds-state--focus': focused,\n      'vds-state--filled': (value && !preFilledContent) ? true : null,\n      'vds-state--disabled': (disabled) ? true : null,\n      'vds-state--error': (!isTextFieldValid) ? true : null,\n      'vds-state--readonly': (readOnly) ? true : null\n    }\"\n  >\n    <label class=\"vds-input-label\" [for]=\"textFieldID\">\n      {{ label }}\n    </label>\n    <div class=\"vds-input-bar\">\n      <div class=\"vds-input-input\">\n        <textarea\n          [attr.aria-describedby]=\"ariaDescribedBy\"\n          [attr.aria-invalid]=\"!isTextFieldValid\"\n          [attr.aria-required]=\"required\"\n          [attr.disabled]=\"disabled ? 'disabled' : null\"\n          [attr.readonly]=\"readOnly ? 'readonly' : null\"\n          [id]=\"textFieldID\"\n          [name]=\"textFieldName\"\n          [required]=\"required\"\n          (blur)=\"onBlur($event)\"\n          (focus)=\"onFocus($event)\"\n          (keyup)=\"onTyping(textField)\"\n          [(ngModel)]=\"value\"\n          placeholder=\"{{ focused ? placeholder : '' }}\"\n          autocomplete=\"off\"\n          class=\"vds-input--textarea\"\n          rows=\"1\"\n          #textField=\"ngModel\"\n          #theInput\n        >\n        </textarea>\n      </div>\n    </div>\n    <vds-character-counter\n      *ngIf=\"characterCounter\"\n      [characterCounter]=\"characterCounter\"\n    >\n    </vds-character-counter>\n    <ng-container *ngIf=\"!characterCounter && (focused && isTextFieldValid)\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          help;\n          context: {\n            helpText: helpText\n          }\n        \"\n      >\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"!characterCounter && !isTextFieldValid\">\n      <ng-container *ngTemplateOutlet=\"error\">\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n\n<ng-template #error>\n  <ng-content select=\"vds-error\"></ng-content>\n</ng-template>\n\n<ng-template #help let-helpText=\"helpText\">\n  <span\n    [id]=\"textFieldMessage\"\n    [ngClass]=\"{\n      'vds-input-message': true\n    }\"\n    aria-atomic=\"true\"\n    aria-live=\"assertive\"\n    role=\"alert\"\n  >\n    {{ helpText }}\n  </span>\n</ng-template>\n"
    },
    {
      "name": "ToggleButtonComponent",
      "id": "component-ToggleButtonComponent-8a460bc88683cae8bfb5bf6322eb1985",
      "file": "projects/vds-lib/src/lib/toggle-button/toggle-button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-toggle-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./toggle-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "checked",
          "description": "<p>Sets checked option for preselected value.</p>\n",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "<p>The label displayed in the toggle button.</p>\n",
          "line": 24,
          "type": "string"
        },
        {
          "name": "value",
          "description": "<p>The value of the toggle button (this is emitted on selection).</p>\n",
          "line": 35,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_checked",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [112]
        },
        {
          "name": "_label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [112]
        },
        {
          "name": "_value",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [112]
        },
        {
          "name": "focused",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 48
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { VdsLibService } from '../vds-lib.service';\n\n@Component({\n  selector: 'vds-toggle-button',\n  templateUrl: './toggle-button.component.html',\n})\nexport class ToggleButtonComponent implements OnInit {\n  /**\n   * Sets checked option for preselected value.\n   */\n  @Input() get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked: boolean;\n\n  /**\n   * The label displayed in the toggle button.\n   */\n  @Input() get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    this._label = value;\n  }\n  private _label: string;\n\n  /**\n   * The value of the toggle button (this is emitted on selection).\n   */\n  @Input() get value(): string {\n    return this._value;\n  }\n  set value(value: string) {\n    this._value = value;\n  }\n  private _value: string;\n\n  focused: boolean;\n  id: string;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.id = `${\n      this.label\n    }--${this.vdsLibService.getUUID()}`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 44,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "checked": {
          "name": "checked",
          "setSignature": {
            "name": "checked",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "boolean"
              }
            ],
            "returnType": "void",
            "line": 16,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 27,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 38,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<!--\n  No template, completely logical component\n  used to render 'li' elements structurally\n  without breaking descendent-dependent styling\n-->"
    },
    {
      "name": "ToggleButtonSetComponent",
      "id": "component-ToggleButtonSetComponent-1bd9dab2c947e77cf8c8bc81d63e0b54",
      "file": "projects/vds-lib/src/lib/toggle-button/set/toggle-button-set.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-toggle-button-set",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./toggle-button-set.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "label",
          "description": "<p>The legend label for a group of toggle buttons.</p>\n",
          "line": 24,
          "type": "string"
        },
        {
          "name": "name",
          "description": "<p>Shared name for a group of toggle buttons.</p>\n",
          "line": 34,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "select",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits the child toggle button&#39;s value property when selected.</p>\n",
          "line": 44,
          "type": "EventEmitter<string>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_buttons",
          "defaultValue": "[]",
          "type": "Array<ToggleButtonComponent>",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "_label",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [112]
        },
        {
          "name": "_name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [112]
        },
        {
          "name": "buttons",
          "type": "QueryList<ToggleButtonComponent>",
          "optional": false,
          "description": "",
          "line": 49,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ToggleButtonComponent"
            }
          ]
        },
        {
          "name": "focusedToggleButton",
          "type": "ToggleButtonComponent",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "selectedToggleButton",
          "type": "ToggleButtonComponent",
          "optional": false,
          "description": "",
          "line": 52
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 57
        },
        {
          "name": "onBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86
        },
        {
          "name": "onFocus",
          "args": [
            {
              "name": "button",
              "type": "ToggleButtonComponent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 93,
          "jsdoctags": [
            {
              "name": "button",
              "type": "ToggleButtonComponent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "selectButton",
          "args": [
            {
              "name": "button",
              "type": "ToggleButtonComponent"
            },
            {
              "name": "event",
              "type": "MouseEvent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "jsdoctags": [
            {
              "name": "button",
              "type": "ToggleButtonComponent",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "event",
              "type": "MouseEvent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { TOGGLEBUTTON } from './toggle-button-set.constants';\nimport { ToggleButtonComponent } from '../toggle-button.component';\nimport { VdsLibService } from '../../vds-lib.service';\n\n@Component({\n  selector: 'vds-toggle-button-set',\n  templateUrl: './toggle-button-set.component.html',\n})\nexport class ToggleButtonSetComponent\n  implements OnInit, AfterContentInit {\n  /**\n   * The legend label for a group of toggle buttons.\n   */\n  @Input() get label(): string {\n    return this._label;\n  }\n  set label(value: string) {\n    this._label = value;\n  }\n  private _label: string;\n  /**\n   * Shared name for a group of toggle buttons.\n   */\n  @Input() get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  private _name: string;\n  /**\n   * Emits the child toggle button's value property when selected.\n   */\n  @Output() select: EventEmitter<\n    string\n  > = new EventEmitter();\n\n  @ContentChildren(ToggleButtonComponent)\n  buttons: QueryList<ToggleButtonComponent>;\n\n  _buttons: Array<ToggleButtonComponent> = [];\n  selectedToggleButton: ToggleButtonComponent;\n  focusedToggleButton: ToggleButtonComponent;\n\n  constructor(private vdsLibService: VdsLibService) {}\n\n  ngOnInit() {\n    this.label = this.label\n      ? this.label\n      : TOGGLEBUTTON.DEFAULT.LABEL;\n    this.name = this.name\n      ? this.name\n      : `${\n          TOGGLEBUTTON.DEFAULT.NAME_PREFIX\n        }${this.vdsLibService.getUUID()}`;\n  }\n\n  ngAfterContentInit() {\n    this._buttons = this.buttons.toArray();\n    this._buttons.forEach(\n      (button: ToggleButtonComponent) => {\n        if (this.selectedToggleButton && button.checked) {\n          button.checked = false;\n          console.warn(\n            '[VDS NG] Toggle-Button has multiple preselected values. Defaults to first value.'\n          );\n        }\n        if (button.checked) {\n          this.selectedToggleButton = button;\n          this.select.emit(this.selectedToggleButton.value);\n        }\n      }\n    );\n  }\n\n  onBlur() {\n    if (this.focusedToggleButton) {\n      this.focusedToggleButton.focused = false;\n      this.focusedToggleButton = null;\n    }\n  }\n\n  onFocus(button: ToggleButtonComponent) {\n    if (this.focusedToggleButton) {\n      this.focusedToggleButton.focused = false;\n    }\n    this.focusedToggleButton = button;\n    this.focusedToggleButton.focused = true;\n  }\n\n  selectButton(\n    button: ToggleButtonComponent,\n    event: MouseEvent\n  ) {\n    if (event.pageX && this.focusedToggleButton) {\n      this.focusedToggleButton.focused = false;\n      this.focusedToggleButton = null;\n    }\n    if (this.selectedToggleButton) {\n      this.selectedToggleButton.checked = false;\n    }\n    this.selectedToggleButton = button;\n    this.selectedToggleButton.checked = true;\n    this.select.emit(this.selectedToggleButton.value);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService"
          }
        ],
        "line": 53,
        "jsdoctags": [
          {
            "name": "vdsLibService",
            "type": "VdsLibService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterContentInit"],
      "accessors": {
        "label": {
          "name": "label",
          "setSignature": {
            "name": "label",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 27,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "name": {
          "name": "name",
          "setSignature": {
            "name": "name",
            "type": "void",
            "args": [
              {
                "name": "value",
                "type": "string"
              }
            ],
            "returnType": "void",
            "line": 37,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<fieldset class=\"vds-toggle-button-set\">\n  <legend class=\"vds-toggle-button-set-legend\">{{ label }}</legend>\n  <ul class=\"vds-toggle-button-list\">\n    <li class=\"vds-toggle-button-item\" *ngFor=\"let button of _buttons\">\n      <input \n        [ngClass]=\"{\n          'vds-toggle-button': true,\n          'focus-visible': button.focused\n        }\" \n        type=\"radio\" \n        [attr.data-focus-visible-added]='button.focused ? \"\" : null' \n        [attr.id]=\"button.id\"\n        [name]=\"name\" \n        [attr.checked]='button.checked ? \"\" : null' \n        (blur)=\"onBlur()\"\n        (click)=\"selectButton(button, $event)\" \n        (focus)=\"onFocus(button)\" \n        [value]=\"button.value\">\n      <label \n        [ngClass]=\"{\n            'vds-toggle-button-label': true,\n            'vds-state--focus': button.focused,\n            'vds-state--selected': button.checked\n          }\" \n          [for]=\"button.id\">\n        {{ button.label }}\n      </label>\n    </li>\n  </ul>\n</fieldset>"
    },
    {
      "name": "TooltipComponent",
      "id": "component-TooltipComponent-bf589e80901b41fe7657f595e20857f6",
      "file": "projects/vds-lib/src/lib/tooltip/tooltip.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-tooltip",
      "styleUrls": ["./tooltip.component.css"],
      "styles": [],
      "templateUrl": ["./tooltip.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "position",
          "defaultValue": "'top'",
          "line": 32,
          "type": "string"
        },
        {
          "name": "text",
          "defaultValue": "''",
          "line": 31
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\n@Component({\n  selector: 'vds-tooltip',\n  styleUrls: ['./tooltip.component.css'],\n  templateUrl: './tooltip.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('tooltip', [\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(50, style({ opacity: 1 })),\n      ]),\n      transition(':leave', [\n        animate(50, style({ opacity: 0 })),\n      ]),\n    ]),\n  ],\n})\nexport class TooltipComponent {\n  @Input() text = '';\n  @Input() position: string = 'top';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".vds-tooltip {\n  position: initial !important;\n}\n",
          "styleUrl": "./tooltip.component.css"
        }
      ],
      "stylesData": "",
      "templateData": "<div \n  class=\"vds-tooltip vds-state--show\"\n  [attr.data-align]=\"position\">\n  <div class=\"vds-tooltip-content\">\n    <span class=\"vds-tooltip-text\">\n      {{ text }}\n    </span>\n    <span class=\"vds-tooltip-pointer\"></span>\n  </div>\n</div>\n"
    },
    {
      "name": "WizardComponent",
      "id": "component-WizardComponent-4202990887bc9284ebe3dac9181ed4b1",
      "file": "projects/vds-lib/src/lib/wizard/wizard.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "vds-wizard",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./wizard.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "change",
          "defaultValue": "new EventEmitter()",
          "description": "<p>Emits zero-based step indices.</p>\n",
          "line": 33,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "activeStep",
          "type": "StepComponent",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "currentStep",
          "type": "StepComponent",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "endStep",
          "type": "StepComponent",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "leftPosition",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "steps",
          "type": "QueryList<StepComponent>",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "StepComponent"
            }
          ]
        },
        {
          "name": "stepsArray",
          "type": "Array<StepComponent>",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "getCurrentStep",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 142,
          "description": "<p>Returns current step zero-based index.</p>\n"
        },
        {
          "name": "initializeSteps",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 89,
          "modifierKind": [112]
        },
        {
          "name": "next",
          "args": [
            {
              "name": "success",
              "type": "boolean",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "description": "<p>Moves wizard progress forward one step if possible.</p>\n",
          "jsdoctags": [
            {
              "name": {
                "pos": 2415,
                "end": 2422,
                "flags": 0,
                "escapedText": "success"
              },
              "type": "boolean",
              "optional": true,
              "tagName": {
                "pos": 2409,
                "end": 2414,
                "flags": 0,
                "escapedText": "param"
              },
              "comment": "<p>When true, shows positive progress. When false, shows error.</p>\n"
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "previous",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 116,
          "description": "<p>Moves wizard progress back one step if possible.</p>\n"
        },
        {
          "name": "reset",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 128,
          "description": "<p>Resets status of all steps and sets the first step in the wizard as current</p>\n"
        },
        {
          "name": "setCurrentStep",
          "args": [
            {
              "name": "stepNumber",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 150,
          "description": "<p>Sets passed step index as the current step</p>\n",
          "jsdoctags": [
            {
              "name": {
                "pos": 3773,
                "end": 3783,
                "flags": 0,
                "escapedText": "stepNumber"
              },
              "type": "number",
              "tagName": {
                "pos": 3767,
                "end": 3772,
                "flags": 0,
                "escapedText": "param"
              },
              "comment": "<p>Zero-based index of the step that should be set as active</p>\n"
            }
          ]
        },
        {
          "name": "setRefs",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "modifierKind": [112]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import {\n  Component,\n  OnInit,\n  ContentChildren,\n  AfterContentInit,\n  Output,\n  EventEmitter,\n  QueryList,\n  ElementRef,\n} from '@angular/core';\nimport { StepComponent } from './step/step.component';\nimport { StepStatus } from './step/step.constants';\n\n@Component({\n  selector: 'vds-wizard',\n  templateUrl: './wizard.component.html',\n})\nexport class WizardComponent\n  implements OnInit, AfterContentInit {\n  @ContentChildren(StepComponent) steps: QueryList<\n    StepComponent\n  >;\n\n  endStep: StepComponent;\n  currentStep: StepComponent;\n  activeStep: StepComponent;\n  leftPosition: number;\n  stepsArray: Array<StepComponent>;\n\n  /**\n   * Emits zero-based step indices.\n   */\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  constructor() {\n    this.endStep = new StepComponent();\n  }\n\n  ngOnInit() {}\n\n  private setRefs() {\n    this.stepsArray = this.steps.toArray();\n    let stepNumber: number;\n    for (let i = 0; i < this.stepsArray.length; i++) {\n      this.stepsArray[i].number = (i + 1).toString();\n      stepNumber = parseInt(this.stepsArray[i].number, 10);\n      this.stepsArray[i].prev =\n        stepNumber === 1 ? null : this.stepsArray[i - 1];\n      this.stepsArray[i].next =\n        stepNumber === this.stepsArray.length\n          ? this.endStep\n          : this.stepsArray[i + 1];\n      if (\n        this.stepsArray[i].status &&\n        this.stepsArray[i].status.toLowerCase() ===\n          StepStatus.ACTIVE\n      ) {\n        this.activeStep = this.stepsArray[i];\n      }\n    }\n    if (this.stepsArray.length) {\n      this.endStep.ngOnInit();\n      this.endStep.prev = this.stepsArray[\n        this.stepsArray.length - 1\n      ];\n      this.stepsArray.push(this.endStep);\n      this.currentStep = this.activeStep\n        ? this.activeStep\n        : this.stepsArray[0];\n      this.currentStep.activate();\n      this.change.emit(this.getCurrentStep());\n    }\n  }\n\n  ngAfterContentInit() {\n    this.initializeSteps();\n    // support asynchronously loaded steps\n    this.steps.changes.subscribe(() => {\n      this.initializeSteps();\n    });\n\n    this.steps.forEach((steps) => {\n      steps.clicked.subscribe((stepNumber) => {\n        this.setCurrentStep(stepNumber);\n      });\n    });\n  }\n\n  private initializeSteps() {\n    setTimeout(() => {\n      if (this.steps) {\n        this.setRefs();\n      }\n    });\n  }\n\n  /**\n   * Moves wizard progress forward one step if possible.\n   * @param success When true, shows positive progress. When false, shows error.\n   */\n  next(success?: boolean) {\n    if (this.currentStep.next) {\n      this.currentStep.complete(success);\n      this.currentStep.next.activate();\n      this.currentStep = this.currentStep.next;\n      this.change.emit(this.getCurrentStep());\n      return;\n    }\n    this.currentStep.complete(success);\n    this.change.emit(this.getCurrentStep() + 1);\n  }\n\n  /**\n   * Moves wizard progress back one step if possible.\n   */\n  previous() {\n    if (this.currentStep.prev) {\n      this.currentStep.deactivate();\n      this.currentStep.prev.activate();\n      this.currentStep = this.currentStep.prev;\n      this.change.emit(this.getCurrentStep());\n    }\n  }\n\n  /**\n   * Resets status of all steps and sets the first step in the wizard as current\n   */\n  reset() {\n    for (let i = 0; i < this.stepsArray.length - 1; i++) {\n      this.stepsArray[i].deactivate();\n      this.stepsArray[i].hasError = false;\n      this.stepsArray[i].isCompleted = false;\n    }\n    this.currentStep = this.stepsArray[0];\n    this.currentStep.activate();\n    this.change.emit(this.getCurrentStep());\n  }\n\n  /**\n   * Returns current step zero-based index.\n   */\n  getCurrentStep(): number {\n    return parseInt(this.currentStep.number, 10) - 1;\n  }\n\n  /**\n   * Sets passed step index as the current step\n   * @param stepNumber Zero-based index of the step that should be set as active\n   */\n  setCurrentStep(stepNumber: number) {\n    for (let i = 0; i < this.stepsArray.length - 1; i++) {\n      this.stepsArray[i].resetActivate();\n    }\n    this.currentStep = this.stepsArray[stepNumber];\n    this.currentStep.activate();\n    this.change.emit(this.getCurrentStep());\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 33
      },
      "implements": ["OnInit", "AfterContentInit"],
      "templateData": "<div class=\"vds-wizard-container\">\n  <ul class=\"vds-wizard\">\n    <ng-content select=\"vds-step\"></ng-content>\n  </ul>\n  <span class=\"vds-wizard-border\"></span>\n</div>\n"
    }
  ],
  "modules": [
    {
      "name": "TemplateModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "TemplateCellComponent"
            },
            {
              "name": "TemplateContainerComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "TemplateCellComponent"
            },
            {
              "name": "TemplateContainerComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "TestModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "IconLibraryComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "VdsLibModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AccordionComponent"
            },
            {
              "name": "ActionBarComponent"
            },
            {
              "name": "AlertComponent"
            },
            {
              "name": "AvatarComponent"
            },
            {
              "name": "BadgeComponent"
            },
            {
              "name": "BadgeComponent"
            },
            {
              "name": "BlockChildEventDirective"
            },
            {
              "name": "BreadcrumbComponent"
            },
            {
              "name": "BreadcrumbsComponent"
            },
            {
              "name": "ButtonComponent"
            },
            {
              "name": "ButtonGroupComponent"
            },
            {
              "name": "CardArtComponent"
            },
            {
              "name": "CardComponent"
            },
            {
              "name": "CardExpirationComponent"
            },
            {
              "name": "CellButtonComponent"
            },
            {
              "name": "CellButtonComponent"
            },
            {
              "name": "CellFactoryComponent"
            },
            {
              "name": "CellFactoryComponent"
            },
            {
              "name": "CellInputComponent"
            },
            {
              "name": "CellInputComponent"
            },
            {
              "name": "CharacterCounterComponent"
            },
            {
              "name": "CheckboxComponent"
            },
            {
              "name": "CheckboxListComponent"
            },
            {
              "name": "CheckboxListItemComponent"
            },
            {
              "name": "CheckboxSetComponent"
            },
            {
              "name": "ChipComponent"
            },
            {
              "name": "ChipsComponent"
            },
            {
              "name": "ColumnFilterComponent"
            },
            {
              "name": "ColumnFilterComponent"
            },
            {
              "name": "ComboboxComponent"
            },
            {
              "name": "ComboboxComponent"
            },
            {
              "name": "ComboboxInputComponent"
            },
            {
              "name": "ComboboxInputComponent"
            },
            {
              "name": "ComboboxListboxComponent"
            },
            {
              "name": "ComboboxListboxComponent"
            },
            {
              "name": "ContentComponent"
            },
            {
              "name": "DatagridComponent"
            },
            {
              "name": "DatatableComponent"
            },
            {
              "name": "DatatableComponent"
            },
            {
              "name": "DialogComponent"
            },
            {
              "name": "DialogComponent"
            },
            {
              "name": "DisclosureComponent"
            },
            {
              "name": "DisclosureContentDirective"
            },
            {
              "name": "DisclosureHeaderComponent"
            },
            {
              "name": "DisclosureLazyContentDirective"
            },
            {
              "name": "DividerComponent"
            },
            {
              "name": "DotsComponent"
            },
            {
              "name": "DrawerComponent"
            },
            {
              "name": "DresserComponent"
            },
            {
              "name": "ErrorComponent"
            },
            {
              "name": "ExpandableCellComponent"
            },
            {
              "name": "ExpandableCellComponent"
            },
            {
              "name": "FileUploadComponent"
            },
            {
              "name": "FileUploadDropzoneComponent"
            },
            {
              "name": "FileUploadInputComponent"
            },
            {
              "name": "FileUploadListComponent"
            },
            {
              "name": "FooterComponent"
            },
            {
              "name": "FormControlComponent"
            },
            {
              "name": "IconComponent"
            },
            {
              "name": "IconLibraryComponent"
            },
            {
              "name": "IllustrationComponent"
            },
            {
              "name": "InputCardComponent"
            },
            {
              "name": "InputCvvComponent"
            },
            {
              "name": "KeyboardFocusDirective"
            },
            {
              "name": "KeyboardFocusDirective"
            },
            {
              "name": "LinearProgressComponent"
            },
            {
              "name": "LinkComponent"
            },
            {
              "name": "LinkComponent"
            },
            {
              "name": "LinkComponent"
            },
            {
              "name": "LinkComponent"
            },
            {
              "name": "ListComponent"
            },
            {
              "name": "ListboxComponent"
            },
            {
              "name": "MenuComponent"
            },
            {
              "name": "NavComponent"
            },
            {
              "name": "NavDisclosureComponent"
            },
            {
              "name": "NavDisclosureTitleComponent"
            },
            {
              "name": "NavVerticalComponent"
            },
            {
              "name": "NavbuttonComponent"
            },
            {
              "name": "NavlinkComponent"
            },
            {
              "name": "NavmenuComponent"
            },
            {
              "name": "NavmenuImageComponent"
            },
            {
              "name": "NavmenuInitialsComponent"
            },
            {
              "name": "NavmenuTitleComponent"
            },
            {
              "name": "PaginationComponent"
            },
            {
              "name": "PaginationComponent"
            },
            {
              "name": "PanelComponent"
            },
            {
              "name": "ProgressGaugeComponent"
            },
            {
              "name": "ProgressGaugeComponent"
            },
            {
              "name": "RadioComponent"
            },
            {
              "name": "RadioGroupComponent"
            },
            {
              "name": "RatingComponent"
            },
            {
              "name": "SearchComponent"
            },
            {
              "name": "SectionComponent"
            },
            {
              "name": "SelectComponent"
            },
            {
              "name": "SliderComponent"
            },
            {
              "name": "SortHeaderComponent"
            },
            {
              "name": "SortHeaderComponent"
            },
            {
              "name": "SortHeaderDirective"
            },
            {
              "name": "SortHeaderDirective"
            },
            {
              "name": "SpinnerProgressComponent"
            },
            {
              "name": "StepComponent"
            },
            {
              "name": "StepComponent"
            },
            {
              "name": "SwitchComponent"
            },
            {
              "name": "TabComponent"
            },
            {
              "name": "TabsComponent"
            },
            {
              "name": "TextComponent"
            },
            {
              "name": "TextComponent"
            },
            {
              "name": "TextFieldComponent"
            },
            {
              "name": "ToggleButtonComponent"
            },
            {
              "name": "ToggleButtonSetComponent"
            },
            {
              "name": "TooltipComponent"
            },
            {
              "name": "TooltipDirective"
            },
            {
              "name": "WizardComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "TemplateModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AccordionComponent"
            },
            {
              "name": "ActionBarComponent"
            },
            {
              "name": "AlertComponent"
            },
            {
              "name": "AvatarComponent"
            },
            {
              "name": "BadgeComponent"
            },
            {
              "name": "BlockChildEventDirective"
            },
            {
              "name": "BreadcrumbComponent"
            },
            {
              "name": "BreadcrumbsComponent"
            },
            {
              "name": "ButtonComponent"
            },
            {
              "name": "ButtonGroupComponent"
            },
            {
              "name": "CardArtComponent"
            },
            {
              "name": "CardComponent"
            },
            {
              "name": "CardExpirationComponent"
            },
            {
              "name": "CharacterCounterComponent"
            },
            {
              "name": "CheckboxComponent"
            },
            {
              "name": "CheckboxListComponent"
            },
            {
              "name": "CheckboxListItemComponent"
            },
            {
              "name": "CheckboxSetComponent"
            },
            {
              "name": "ChipComponent"
            },
            {
              "name": "ChipsComponent"
            },
            {
              "name": "ComboboxComponent"
            },
            {
              "name": "ComboboxComponent"
            },
            {
              "name": "ContentComponent"
            },
            {
              "name": "DatagridComponent"
            },
            {
              "name": "DatatableComponent"
            },
            {
              "name": "DatatableComponent"
            },
            {
              "name": "DialogComponent"
            },
            {
              "name": "DialogComponent"
            },
            {
              "name": "DisclosureComponent"
            },
            {
              "name": "DisclosureContentDirective"
            },
            {
              "name": "DisclosureHeaderComponent"
            },
            {
              "name": "DisclosureLazyContentDirective"
            },
            {
              "name": "DividerComponent"
            },
            {
              "name": "DotsComponent"
            },
            {
              "name": "DrawerComponent"
            },
            {
              "name": "DresserComponent"
            },
            {
              "name": "ErrorComponent"
            },
            {
              "name": "FileUploadComponent"
            },
            {
              "name": "FileUploadDropzoneComponent"
            },
            {
              "name": "FileUploadInputComponent"
            },
            {
              "name": "FileUploadListComponent"
            },
            {
              "name": "FooterComponent"
            },
            {
              "name": "FormControlComponent"
            },
            {
              "name": "IconComponent"
            },
            {
              "name": "IconLibraryComponent"
            },
            {
              "name": "IllustrationComponent"
            },
            {
              "name": "InputCardComponent"
            },
            {
              "name": "InputCvvComponent"
            },
            {
              "name": "LinearProgressComponent"
            },
            {
              "name": "LinkComponent"
            },
            {
              "name": "ListComponent"
            },
            {
              "name": "ListboxComponent"
            },
            {
              "name": "MenuComponent"
            },
            {
              "name": "NavComponent"
            },
            {
              "name": "NavDisclosureComponent"
            },
            {
              "name": "NavDisclosureTitleComponent"
            },
            {
              "name": "NavVerticalComponent"
            },
            {
              "name": "NavbuttonComponent"
            },
            {
              "name": "NavlinkComponent"
            },
            {
              "name": "NavmenuComponent"
            },
            {
              "name": "NavmenuImageComponent"
            },
            {
              "name": "NavmenuInitialsComponent"
            },
            {
              "name": "NavmenuTitleComponent"
            },
            {
              "name": "PaginationComponent"
            },
            {
              "name": "PaginationComponent"
            },
            {
              "name": "PanelComponent"
            },
            {
              "name": "ProgressGaugeComponent"
            },
            {
              "name": "ProgressGaugeComponent"
            },
            {
              "name": "RadioComponent"
            },
            {
              "name": "RadioGroupComponent"
            },
            {
              "name": "RatingComponent"
            },
            {
              "name": "SearchComponent"
            },
            {
              "name": "SectionComponent"
            },
            {
              "name": "SelectComponent"
            },
            {
              "name": "SliderComponent"
            },
            {
              "name": "SpinnerProgressComponent"
            },
            {
              "name": "StepComponent"
            },
            {
              "name": "StepComponent"
            },
            {
              "name": "SwitchComponent"
            },
            {
              "name": "TabComponent"
            },
            {
              "name": "TabsComponent"
            },
            {
              "name": "TemplateModule"
            },
            {
              "name": "TemplateModule"
            },
            {
              "name": "TextComponent"
            },
            {
              "name": "TextComponent"
            },
            {
              "name": "TextFieldComponent"
            },
            {
              "name": "ToggleButtonComponent"
            },
            {
              "name": "ToggleButtonSetComponent"
            },
            {
              "name": "TooltipComponent"
            },
            {
              "name": "TooltipDirective"
            },
            {
              "name": "WizardComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "acceptedTypes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "[]",
        "defaultValue": "['none', 'manual', 'auto', 'inline']"
      },
      {
        "name": "ALERT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/alert/alert.constants.ts",
        "type": "object",
        "defaultValue": "{\n  slideInTime: 50,\n  slideOutTime: 100,\n}"
      },
      {
        "name": "ALERT_SERVICE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/alert.service.ts",
        "type": "object",
        "defaultValue": "{\n  MESSAGING: {\n    MISSING_CONFIG:\n      '[VDS NG] Alert missing alert config. Please refer API',\n    MISSING_LABEL:\n      '[VDS NG] Alert missing message label. Please refer API',\n    MISSING_LABEL_TEMPLATE:\n      '[VDS NG] Alert missing message label template. Please refer API',\n    ACTION_ITEMS_EXCEED:\n      '[VDS NG] Alert actions exceed 2 items. UI Pattern not recommended.',\n  },\n}"
      },
      {
        "name": "ANIM_STYLES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/expandable-cell/expandable-cell.component.ts",
        "type": "object",
        "defaultValue": "{\n  collapsed: {\n    maxHeight: '0px',\n    opacity: 0,\n    visibility: 'hidden',\n  },\n  expanded: {\n    maxHeight: '650px',\n    opacity: 1,\n    visibility: 'visible',\n  },\n  transition: animate('225ms cubic-bezier(0.4, 0, 0.2, 1)'),\n}"
      },
      {
        "name": "ARROW_ICON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/panel/dresser/dresser.constants.ts",
        "type": "object",
        "defaultValue": "{\n  OPEN: 'visa_arrow-next',\n  CLOSE: 'visa_arrow-previous',\n}"
      },
      {
        "name": "AVATAR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/avatar/avatar.constant.ts",
        "type": "object",
        "defaultValue": "{\n  ALT_TEXT_ERROR_MSG:\n    'altText property required on AvatarComponent!',\n  ICON_DEFAULT: 'account',\n  PHOTO_URL_DEFAULT: 'default',\n  USERNAME_ERROR_MSG:\n    'userName property required on AvatarComponent!',\n}"
      },
      {
        "name": "BREADCRUMBS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/breadcrumb/breadcrumb.constant.ts",
        "type": "object",
        "defaultValue": "{\n  CLASS: {\n    ACTIVE: 'vds-state--active',\n    DEFAULT: 'vds-breadcrumb',\n  },\n  ARIA: {\n    CURRENT_ATTRIBUTE: 'aria-current',\n    CURRENT_VALUE: 'page',\n  },\n}"
      },
      {
        "name": "BUTTON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/button/button.constant.ts",
        "type": "object",
        "defaultValue": "{\n  COLOR_SCHEME: {\n    PRIMARY: 'primary',\n    SECONDARY: 'secondary',\n    TERTIARY: 'tertiary',\n  },\n  ICON: {\n    DEFAULT: 'arrow-expand',\n  },\n  ICON_TYPE: {\n    DEFAULT: 'light-default',\n    LIGHT_DEFAULT: 'light-default',\n    LIGHT: 'light',\n    LIGHT_OUTLINE: 'light-outline',\n    LIGHT_TINY: 'light-tiny',\n    LIGHT_FILL: 'light-fill',\n    DARK: 'dark',\n    DARK_OUTLINE: 'dark-outline',\n    DARK_TINY: 'dark-tiny',\n  },\n  TAG: {\n    A: 'a',\n    BUTTON: 'button',\n    DIV: 'div',\n    SPAN: 'span',\n  },\n  VARIANT: {\n    ICON: 'icon',\n    LINK: 'link',\n    SPLIT: 'split',\n    TEXT: 'text',\n  },\n  HEIGHT: {\n    LOW: '24px',\n    TINY: '16px',\n    HIGH: '48px',\n  },\n}"
      },
      {
        "name": "CHARACTER_COUNTER",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/character-counter/character-counter.constants.ts",
        "type": "object",
        "defaultValue": "{\n  MESSAGE: {\n    SCREEN_READER: 'Characters remaining',\n    USER: 'Characters over limit:',\n  },\n}"
      },
      {
        "name": "CHECKBOX",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/checkbox/checkbox.constant.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-checkbox-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n}"
      },
      {
        "name": "CHECKED_LABEL_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/switch/switch.constant.ts",
        "type": "object",
        "defaultValue": "{\n  on: 'on',\n  off: 'off',\n}"
      },
      {
        "name": "CHIP",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/chip/chip.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT: {\n    DESCRIPTION: {\n      DISABLED: 'chips-button-disabled',\n      READONLY: 'chips-button-readonly',\n    },\n  },\n  PREFIX: {\n    ID: 'vds-chip-',\n  },\n  SUFFIX: {\n    NAME: '-chip',\n    NATIVE: '-native-input',\n  },\n}"
      },
      {
        "name": "COLUMN_HEADER_SELECTOR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'[role=\"columnheader\"]'"
      },
      {
        "name": "columnPrepMapFn",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/datatable.component.ts",
        "type": "",
        "defaultValue": "(column: any) => {\n  const isColumnFiltered = column.hasOwnProperty(\n    'isColumnFiltered'\n  )\n    ? !!column.isColumnFiltered\n    : false;\n  const isSortable = column.hasOwnProperty('isSortable')\n    ? !!column.isSortable\n    : false;\n\n  if (!column.hasOwnProperty('id')) {\n    throw new Error(\n      'Every column object must have an `id` property containing a unique string'\n    );\n  }\n\n  let sortFn = null;\n  if (typeof column.sortFn === 'function') {\n    let retValue = column.sortFn(1, 2);\n    if (retValue !== undefined && retValue !== null) {\n      retValue = Number(retValue);\n      if (\n        retValue === 0 ||\n        retValue === 1 ||\n        retValue === -1\n      ) {\n        sortFn = column.sortFn;\n      }\n    }\n  }\n\n  return {\n    id: column.id.toString(),\n    value:\n      column.value !== undefined && column.value !== null\n        ? column.value\n        : '',\n    type: (column.type || '').toString().trim(),\n    header:\n      column.header !== undefined && column.header !== null\n        ? column.header\n        : '',\n    tooltipValue:\n      column.tooltipValue !== undefined &&\n      column.tooltipValue !== null\n        ? column.tooltipValue\n        : '',\n    sortFn,\n    isColumnFiltered,\n    isSortable,\n  };\n}"
      },
      {
        "name": "COMBOBOX",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/combobox/combobox.constants.ts",
        "type": "object",
        "defaultValue": "{\n  CLASSES: {\n    DEFAULT: 'vds-listbox-item',\n    SELECTED: 'vds-listbox-item vds-listbox--item-selected',\n  },\n}"
      },
      {
        "name": "configureTestSuite",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/test-helper.ts",
        "type": "",
        "defaultValue": "() => {\n  const testBedApi: any = getTestBed();\n  const originReset = TestBed.resetTestingModule;\n\n  beforeAll(() => {\n    TestBed.resetTestingModule();\n    TestBed.resetTestingModule = () => TestBed;\n  });\n\n  afterEach(() => {\n    testBedApi._activeFixtures.forEach(\n      (fixture: ComponentFixture<any>) => fixture.destroy()\n    );\n    testBedApi._instantiated = false;\n  });\n\n  afterAll(() => {\n    try {\n      TestBed.resetTestingModule = originReset;\n      TestBed.resetTestingModule();\n    } catch (error) {\n      console.log(JSON.stringify(error));\n    }\n  });\n}"
      },
      {
        "name": "DATA_COLUMN_INDEX",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'data-dg-column-index'"
      },
      {
        "name": "DATA_FOCUS_DISABLED",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'data-dg-focus-disabled'"
      },
      {
        "name": "DATA_ROW_INDEX",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'data-dg-row-index'"
      },
      {
        "name": "DATATABLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n}"
      },
      {
        "name": "DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/rating/rating.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DASH: '--',\n  FILLED: 0,\n  TOTAL: 5,\n}"
      },
      {
        "name": "DISCLOSURE_ID_PREFIX",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
        "type": "string",
        "defaultValue": "'vds-disclosure-'"
      },
      {
        "name": "DIVIDER",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/divider/divider.constants.ts",
        "type": "object",
        "defaultValue": "{\n  TITLE: 'Separator for header',\n}"
      },
      {
        "name": "ERROR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/error/error.constants.ts",
        "type": "object",
        "defaultValue": "{\n  ARIA_LABEL: 'Error',\n  ICON: 'error',\n}"
      },
      {
        "name": "EXPIRATION",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/card-expiration/card-expiration.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT: {\n    DELIMITER: '/',\n    GROUP_ERROR:\n      'Please fill out the Card Expiration field.',\n    LABEL: 'Expires (MM/YY)',\n  },\n}"
      },
      {
        "name": "FILEUPLOAD",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "object",
        "defaultValue": "{\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n}"
      },
      {
        "name": "FOOTER",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/footer/footer.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT: {\n    ALT: 'Visa logo',\n    COPYRIGHT:\n      'Copyright © 2019-2020 Visa. All Rights Reserved',\n    COUNTRY: 'United States',\n    LANGUAGE: 'English',\n    SRC: 'assets/imgs/visa-logo--blue.svg',\n  },\n}"
      },
      {
        "name": "FORM_CONTROL",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/form-control/form-control.constants.ts",
        "type": "object",
        "defaultValue": "{\n  MESSAGING: {\n    SPLIT_INVALID:\n      '[VDS NG] Form Control Split value is invalid. Refer to `enum FormControlSplit`',\n  },\n}"
      },
      {
        "name": "GRID_CELL_SELECTOR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'[role=\"gridcell\"]'"
      },
      {
        "name": "ICON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/icon/icon.constant.ts",
        "type": "object",
        "defaultValue": "{\n  SUFFIX: {\n    TINY: '--tiny',\n    LOW: '--low',\n    HIGH: '--high',\n  },\n  PREFIX: {\n    VISA: 'visa_',\n  },\n}"
      },
      {
        "name": "ImproveChangeDetection",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/test-helper.ts",
        "type": "",
        "defaultValue": "() => {\n  const originalCreate = TestBed.createComponent;\n  TestBed.createComponent = <T>(component: Type<T>) => {\n    const componentFixture: ComponentFixture<\n      T\n    > = originalCreate(component);\n    componentFixture.detectChanges = runOnPushChangeDetection(\n      componentFixture\n    );\n    return componentFixture;\n  };\n}"
      },
      {
        "name": "INPUT_CARD",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/input-card/input-card.constants.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-input-card-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n}"
      },
      {
        "name": "INPUT_CVV",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/input-cvv/input-cvv.constants.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-input-cvv-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n  LENGTH: {\n    MAX: 3,\n  },\n}"
      },
      {
        "name": "isSortDirectionValid",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.directive.ts",
        "type": "",
        "defaultValue": "(value: any) => {\n  return (\n    value !== null &&\n    value !== undefined &&\n    [SortDirection.ASC, SortDirection.DESC].includes(value)\n  );\n}"
      },
      {
        "name": "isValidString",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/combobox/utils.ts",
        "type": "",
        "defaultValue": "(value) =>\n  isValueValid(value) && value.toString().trim().length > 0"
      },
      {
        "name": "isValidString",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/utils.ts",
        "type": "",
        "defaultValue": "(value) =>\n  isValueValid(value) && value.toString().trim().length > 0"
      },
      {
        "name": "isValueValid",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/combobox/utils.ts",
        "type": "",
        "defaultValue": "(value) =>\n  value !== null && value !== undefined"
      },
      {
        "name": "isValueValid",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/utils.ts",
        "type": "",
        "defaultValue": "(value) =>\n  value !== null && value !== undefined"
      },
      {
        "name": "keyupKeyCodeBlock",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "[]",
        "defaultValue": "[\n  ESCAPE,\n  TAB,\n  ENTER,\n  UP_ARROW,\n  DOWN_ARROW,\n  DELETE,\n  ALT,\n  SHIFT,\n]"
      },
      {
        "name": "KNOWN_MOBILE_DEVICES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "object",
        "defaultValue": "{\n  ANDROID: 'Android',\n  IPHONE: 'iPhone',\n  WEBOS: 'webOS',\n  IPAD: 'iPad',\n  IPOD: 'Ipod',\n  BLACKBERRY: 'Blackberry',\n  WINDOWS: 'Windows Phone',\n}"
      },
      {
        "name": "LABEL_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts",
        "type": "object",
        "defaultValue": "{\n  FIRST_CLAUSE: 'Progress bar',\n  SECOND_CLAUSE: 'loaded',\n}"
      },
      {
        "name": "LARGE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts",
        "type": "object",
        "defaultValue": "{\n  CX: 36,\n  CY: 36,\n  HEIGHT: 72,\n  R: 32,\n  STROKE_DASHARRAY: '201.062',\n  STROKE_DASHOFFSET: '56.2973',\n  WIDTH: 72,\n}"
      },
      {
        "name": "LARGE_CIRCLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "Circle",
        "defaultValue": "{\n  OUTER: {\n    STROKE_DASHARRAY: '255, 7',\n    STROKE_DASHOFFSET: '3',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '180, 180',\n    STROKE_DASHOFFSET: '101',\n  },\n  DIMENSION: 112,\n  CX: 56,\n  CY: 56,\n  R: 54,\n}"
      },
      {
        "name": "LINK",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/link/link.constants.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-link-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n  ICON: {\n    EXTERNAL: 'maximize',\n  },\n}"
      },
      {
        "name": "LISTBOX",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/listbox/listbox.constant.ts",
        "type": "object",
        "defaultValue": "{\n  ATTRIBUTES: {\n    CHECKBOX: 'checkbox',\n    CLASS: 'class',\n    DATA_INDEX: 'data-index',\n    FOR: 'for',\n  },\n  PREFIX: {\n    ID: 'vds-listbox-',\n  },\n  SUFFIX: {\n    LABEL: '-label',\n    LIST: '-list',\n    LIST_ITEM: '-list-item',\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n  SYMBOLS: {\n    COMMA: ',',\n    HYPHEN: '-',\n  },\n}"
      },
      {
        "name": "MENU_TYPES",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
        "type": "object",
        "defaultValue": "{\n  icon: 'icon',\n  dropdown: 'dropdown',\n  initials: 'initials',\n}"
      },
      {
        "name": "MOBILE_WIDTH",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "number",
        "defaultValue": "1024"
      },
      {
        "name": "NAV_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/nav/nav.constants.ts",
        "type": "object",
        "defaultValue": "{\n  name: 'nav',\n  altText: 'Visa',\n  class: {\n    active: 'vds-state--selected',\n    default: 'vds-tab',\n  },\n  menu: 'visa_menu',\n  close: 'visa_close',\n  down: 'arrow-expand',\n  up: 'visa_dropdown-up',\n  navOpenIcon: 'visa_arrow-previous',\n  navOpenText: 'open arrow',\n  navCloseIcon: 'visa_arrow-next',\n  navCloseText: 'close arrow',\n  orientation: 'horizontal',\n  skipLabel: 'Skip to main content',\n  skipPath: '',\n  src: 'assets/logos/visa/visa_vbm_wht.svg',\n  srcLight: 'assets/logos/visa/visa_vbm_blu.svg',\n  path: '',\n  openWidth: '240px',\n  closeWidth: '56px',\n  vertical: 'vertical',\n}"
      },
      {
        "name": "NAVDISCLOSURE_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure.constants.ts",
        "type": "object",
        "defaultValue": "{\n  COLLAPSE_ICON: 'visa_arrow-collapse',\n  COLLAPSE_ALT: 'collapse arrow',\n  EXPAND_ICON: 'visa_arrow-expand',\n  EXPAND_ALT: 'expand arrow',\n}"
      },
      {
        "name": "NAVMENU_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
        "type": "object",
        "defaultValue": "{\n  name: 'menu',\n}"
      },
      {
        "name": "PAGINATION",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT_PAGESIZE: 20,\n  PAGE_LIMIT: 9,\n  START_END_LIMIT: 7,\n  MIDDLE_LIMIT: 5,\n  DATA_ATTR_PAGE_SIZE_ITEM: 'data-item-size',\n}"
      },
      {
        "name": "PROGRESS_GAUGE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT: {\n    TITLE: 'Application',\n    SUBTITLE: 'February 11 , 2054',\n    DETAILS: 'Not Started',\n    SIZE: {\n      LARGE: 'large',\n      SMALL: 'small',\n    },\n    CIRCLE_REF: {\n      LARGE: LARGE_CIRCLE,\n      SMALL: SMALL_CIRCLE,\n    },\n    STROKE_WIDTH: 4,\n  },\n  ERROR: 'VDS: \"setStatus\" method given wrong parameter',\n}"
      },
      {
        "name": "RADIO",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/radio/radio.constant.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-radio-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n  VALUE: {\n    DEFAULT: 'on',\n  },\n}"
      },
      {
        "name": "RATING_ICON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/rating/rating.constants.ts",
        "type": "object",
        "defaultValue": "{\n  EMPTY: 'visa_favorite-star-border',\n  FILLED: 'visa_favorite-star',\n}"
      },
      {
        "name": "ROW_SELECTOR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'[role=\"row\"]'"
      },
      {
        "name": "SEARCH",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/search/search.constants.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-search-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n}"
      },
      {
        "name": "SECTION",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/accordion/section/section.constants.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    HEADING: 'accordian-heading-',\n    BODY: 'accordian-body-',\n  },\n  ICON: {\n    DOWN: 'visa_arrow-expand',\n    UP: 'visa_arrow-collapse',\n  },\n  ALTTEXT: {\n    DOWN: 'expand',\n    UP: 'collapse',\n  },\n}"
      },
      {
        "name": "SELECT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/select/select.constant.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-select-',\n    ERROR_ID: 'vds-select-error-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n}"
      },
      {
        "name": "SLIDER_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/slider/slider.constants.ts",
        "type": "object",
        "defaultValue": "{\n  LABEL: 'Slider Control',\n  NODE: {\n    MIDPOINT: 12.5,\n    MAX_LEFT: 279,\n  },\n  TRACK_MAX_WIDTH: 290,\n  VALUE_MAX_WIDTH: 279,\n  SUFFIX: {\n    LABEL: '-label',\n  },\n}"
      },
      {
        "name": "SLIDER_NUMBER",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/slider/slider.constants.ts",
        "type": "object",
        "defaultValue": "{\n  NODE: {\n    MIDPOINT: 0,\n    MAX_LEFT: 279,\n  },\n  TRACK_MAX_WIDTH: 290,\n  VALUE_MAX_WIDTH: 279,\n  TICKS: {\n    0: 0,\n    3: 180,\n    4: 92,\n    5: 69,\n    6: 55,\n    7: 46,\n    8: 39,\n    9: 34,\n    10: 30,\n    11: 27,\n    12: 25,\n    13: 23,\n    14: 21,\n    15: 19,\n    16: 17,\n    17: 16,\n    18: 15,\n    19: 14,\n    20: 13,\n    21: 12,\n    22: 11,\n    23: 10,\n    24: 9,\n    25: 8,\n    26: 7,\n    27: 6,\n    28: 5,\n  },\n}"
      },
      {
        "name": "SMALL",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts",
        "type": "object",
        "defaultValue": "{\n  CX: 24,\n  CY: 24,\n  HEIGHT: 48,\n  R: 20,\n  STROKE_DASHARRAY: '125.664',\n  STROKE_DASHOFFSET: '35.1858',\n  WIDTH: 24,\n}"
      },
      {
        "name": "SMALL_CIRCLE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "Circle",
        "defaultValue": "{\n  OUTER: {\n    STROKE_DASHARRAY: '90, 8',\n    STROKE_DASHOFFSET: '50',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '135, 100',\n    STROKE_DASHOFFSET: '90',\n  },\n  DIMENSION: 64,\n  CX: 32,\n  CY: 32,\n  R: 30,\n}"
      },
      {
        "name": "sortFn",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
        "type": "",
        "defaultValue": "(a, b) => a - b"
      },
      {
        "name": "STEP",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/wizard/step/step.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT: {\n    UNITS: 'px',\n    ERROR: '!',\n  },\n}"
      },
      {
        "name": "SWITCH",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/switch/switch.constant.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-switch-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n}"
      },
      {
        "name": "TABINDEX_SELECTOR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "string",
        "defaultValue": "'[tabindex]'"
      },
      {
        "name": "TEXT_FIELD",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/text-field/text-field.constant.ts",
        "type": "object",
        "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-text-field-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n}"
      },
      {
        "name": "TOGGLEBUTTON",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/toggle-button/set/toggle-button-set.constants.ts",
        "type": "object",
        "defaultValue": "{\n  DEFAULT: {\n    LABEL: 'Choose A Size',\n    NAME_PREFIX: 'vds-toggle-button-set--',\n  },\n}"
      },
      {
        "name": "TOOLTIP",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/tooltip/tooltip.constant.ts",
        "type": "object",
        "defaultValue": "{\n  POSITION: {\n    BOTTOM: {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'bottom',\n    },\n    LEFT: {\n      offsetX: 0,\n      offsetY: 0,\n    },\n    RIGHT: {\n      originX: 'center',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: 48,\n      offsetY: 0,\n    },\n    TOP: {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetX: 0,\n      offsetY: -16,\n    },\n  },\n}"
      },
      {
        "name": "UNIT_DEFAULT",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts",
        "type": "string",
        "defaultValue": "'MB'"
      },
      {
        "name": "validateSearchFn",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "",
        "defaultValue": "(fn) => {\n  const boolCheck = fn('', '');\n  if (typeof boolCheck !== 'boolean') {\n    throw new Error(\n      'Your search function must return a boolean.'\n    );\n  }\n\n  return true;\n}"
      },
      {
        "name": "VISIBLE_ELEMENT_PROPS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "object",
        "defaultValue": "{\n  display: 'block',\n  visibility: 'hidden',\n  position: 'absolute',\n}"
      }
    ],
    "functions": [
      {
        "name": "findElementWithTabIndex",
        "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "element",
            "type": ""
          }
        ],
        "jsdoctags": [
          {
            "name": "element",
            "type": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "MakeProvider",
        "file": "projects/vds-lib/src/lib/abstract-value-accessor.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "",
        "args": [
          {
            "name": "type",
            "type": "any"
          }
        ],
        "jsdoctags": [
          {
            "name": "type",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "runOnPushChangeDetection",
        "file": "projects/vds-lib/src/test-helper.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "description": "<p>The below methods are required when you set your components ChangeDetectionStrategy to\nChangeDetectionStrategy.OnPush\nIt looks like fixture.detectChanges is only good for one call. All subsequent calls will\nnot work. These methods will override the detectChanges call with a new method using the\nchangedection.\nhttps://github.com/angular/angular/issues/12313</p>\n",
        "args": [
          {
            "name": "cf"
          }
        ],
        "jsdoctags": [
          {
            "name": "cf",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [
      {
        "name": "ComboboxType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"none\" | \"manual\" | \"auto\" | \"inline\"",
        "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
        "description": "",
        "kind": 168
      },
      {
        "name": "FilterFunction",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "function",
        "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
        "description": "",
        "kind": 162
      },
      {
        "name": "ListDataType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "Array<string> | Array<ListDataObject>",
        "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
        "description": "",
        "kind": 168
      },
      {
        "name": "SortFn",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "function",
        "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "description": "",
        "kind": 162
      }
    ],
    "enumerations": [
      {
        "name": "AlertType",
        "childs": [
          {
            "name": "ERROR",
            "value": "error"
          },
          {
            "name": "INFO",
            "value": "info"
          },
          {
            "name": "SUCCESS",
            "value": "success"
          },
          {
            "name": "WARNING",
            "value": "warning"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/alert/alert.constants.ts"
      },
      {
        "name": "BadgeType",
        "childs": [
          {
            "name": "ACCENT",
            "value": "accent"
          },
          {
            "name": "CRITICAL",
            "value": "critical"
          },
          {
            "name": "DISABLED",
            "value": "disabled"
          },
          {
            "name": "STABLE",
            "value": "stable"
          },
          {
            "name": "STATUS",
            "value": "status"
          },
          {
            "name": "WARNING",
            "value": "warning"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/badge/badge.constants.ts"
      },
      {
        "name": "ButtonType",
        "childs": [
          {
            "name": "BUTTON",
            "value": "button"
          },
          {
            "name": "RESET",
            "value": "reset"
          },
          {
            "name": "SUBMIT",
            "value": "submit"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/button/button.constant.ts"
      },
      {
        "name": "CardArtMotion",
        "childs": [
          {
            "name": "NONE",
            "value": "none"
          },
          {
            "name": "RIPPLE",
            "value": "ripple"
          },
          {
            "name": "GOLD_RIPPLE",
            "value": "gold-ripple"
          },
          {
            "name": "ZOOM_BOUNCE",
            "value": "zoom-bounce"
          },
          {
            "name": "WIGGLE",
            "value": "wiggle"
          },
          {
            "name": "DOUBLE_WIGGLE",
            "value": "double-wiggle"
          },
          {
            "name": "MUTE_COLOR",
            "value": "mute-color"
          },
          {
            "name": "UNMUTE_COLOR",
            "value": "unmute-color"
          },
          {
            "name": "SHIMMER",
            "value": "shimmer"
          },
          {
            "name": "DOUBLE_SHIMMER",
            "value": "double-shimmer"
          },
          {
            "name": "COMBO_1",
            "value": "combo-1"
          },
          {
            "name": "COMBO_2",
            "value": "combo-2"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/card-art/card-art.constants.ts"
      },
      {
        "name": "CardArtSize",
        "childs": [
          {
            "name": "x334x210",
            "value": "334x210"
          },
          {
            "name": "x286x180",
            "value": "286x180"
          },
          {
            "name": "x146x92",
            "value": "146x92"
          },
          {
            "name": "x108x68",
            "value": "108x68"
          },
          {
            "name": "x48x30",
            "value": "48x30"
          },
          {
            "name": "x40x25",
            "value": "40x25"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/card-art/card-art.constants.ts"
      },
      {
        "name": "ColumnType",
        "childs": [
          {
            "name": "LINK",
            "value": "link"
          },
          {
            "name": "EMAIL",
            "value": "email"
          },
          {
            "name": "DATE",
            "value": "date"
          },
          {
            "name": "BUTTON",
            "value": "button"
          },
          {
            "name": "ACTIONS",
            "value": "actions"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts"
      },
      {
        "name": "DialogType",
        "childs": [
          {
            "name": "ERROR",
            "value": "error"
          },
          {
            "name": "DEFAULT",
            "value": "default"
          },
          {
            "name": "SUCCESS",
            "value": "success"
          },
          {
            "name": "WARNING",
            "value": "warning"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts"
      },
      {
        "name": "DialogVariant",
        "childs": [
          {
            "name": "CALL_TO_ACTION",
            "value": "call-to-action"
          },
          {
            "name": "CLOSEABLE",
            "value": "closeable"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts"
      },
      {
        "name": "FormControlSplit",
        "childs": [
          {
            "name": "THIRTY",
            "value": "30"
          },
          {
            "name": "FORTY",
            "value": "40"
          },
          {
            "name": "FIFTY",
            "value": "50"
          },
          {
            "name": "SIXTY",
            "value": "60"
          },
          {
            "name": "SEVENTY",
            "value": "70"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/form-control/form-control.constants.ts"
      },
      {
        "name": "InputCardNetwork",
        "childs": [
          {
            "name": "DEFAULT",
            "value": "default"
          },
          {
            "name": "VISA",
            "value": "visa"
          },
          {
            "name": "MASTERCARD",
            "value": "mastercard"
          },
          {
            "name": "AMEX",
            "value": "amex"
          },
          {
            "name": "DISCOVER",
            "value": "discover"
          },
          {
            "name": "ELO",
            "value": "elo"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/input-card/input-card.constants.ts"
      },
      {
        "name": "NavColorScheme",
        "childs": [
          {
            "name": "DEFAULT",
            "value": "default"
          },
          {
            "name": "CONSUMER",
            "value": "consumer"
          },
          {
            "name": "MARKETING",
            "value": "marketing"
          },
          {
            "name": "LIGHT",
            "value": "light"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/nav/nav.constants.ts"
      },
      {
        "name": "NavPosition",
        "childs": [
          {
            "name": "FIXED",
            "value": "fixed"
          },
          {
            "name": "RELATIVE",
            "value": "relative"
          },
          {
            "name": "ABSOLUTE",
            "value": "absolute"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/nav/nav.constants.ts"
      },
      {
        "name": "NavStrategy",
        "childs": [
          {
            "name": "NoneStored",
            "value": "None Stored"
          },
          {
            "name": "RootStored",
            "value": "Root Stored"
          },
          {
            "name": "DisclosureStored",
            "value": "Disclosure Stored"
          },
          {
            "name": "SublinkStored",
            "value": "Sublink Stored"
          },
          {
            "name": "RootIncoming",
            "value": "Root Incoming"
          },
          {
            "name": "DisclosureIncoming",
            "value": "Disclosure Incoming"
          },
          {
            "name": "SublinkIncoming",
            "value": "Sublink Incoming"
          },
          {
            "name": "FromMiniState",
            "value": "From Mini State"
          },
          {
            "name": "FromFullState",
            "value": "From Full State"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/nav/nav.constants.ts"
      },
      {
        "name": "ProgressGaugeStatus",
        "childs": [
          {
            "name": "DEFAULT",
            "value": "default"
          },
          {
            "name": "PROGRESS",
            "value": "progress"
          },
          {
            "name": "COMPLETED",
            "value": "completed"
          },
          {
            "name": "APPROVED",
            "value": "approved"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts"
      },
      {
        "name": "RowActionType",
        "childs": [
          {
            "name": "NONE",
            "value": "none"
          },
          {
            "name": "SINGLE",
            "value": "single"
          },
          {
            "name": "MULTI",
            "value": "multi"
          },
          {
            "name": "EXPAND",
            "value": "expand"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts"
      },
      {
        "name": "SearchVariant",
        "childs": [
          {
            "name": "STANDARD",
            "value": "standard"
          },
          {
            "name": "EXPANDABLE",
            "value": "expandable"
          },
          {
            "name": "DYNAMIC",
            "value": "dynamic"
          },
          {
            "name": "CONTEXTUAL",
            "value": "contextual"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/search/search.constants.ts"
      },
      {
        "name": "SortDirection",
        "childs": [
          {
            "name": "ASC",
            "value": "asc"
          },
          {
            "name": "DESC",
            "value": "desc"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts"
      },
      {
        "name": "StepStatus",
        "childs": [
          {
            "name": "ACTIVE",
            "value": "active"
          },
          {
            "name": "COMPLETE",
            "value": "complete"
          },
          {
            "name": "ERROR",
            "value": "error"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/wizard/step/step.constants.ts"
      },
      {
        "name": "UPLOAD_ERROR_MSG",
        "childs": [
          {
            "name": "SIZE",
            "value": "The file is too big. Upload a file less than 100MB in size."
          },
          {
            "name": "INVALID_NAME",
            "value": "The file name has characters that are not allowed: / \\ < > : * \" ? | "
          },
          {
            "name": "INVALID_GENERIC",
            "value": "An unexpected error happened during upload."
          },
          {
            "name": "INVALID_NETWORK",
            "value": "Network issues interrupted the file upload."
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts"
      },
      {
        "name": "UPLOAD_STATUS",
        "childs": [
          {
            "name": "ADD",
            "value": "ADD"
          },
          {
            "name": "REMOVE",
            "value": "REMOVE"
          },
          {
            "name": "RETRY",
            "value": "RETRY"
          },
          {
            "name": "SUBMIT",
            "value": "SUBMIT"
          },
          {
            "name": "PROGRESS",
            "value": "PROGRESS"
          },
          {
            "name": "COMPLETE",
            "value": "COMPLETE"
          },
          {
            "name": "COMPLETE_ALL",
            "value": "COMPLETE_ALL"
          },
          {
            "name": "ERROR",
            "value": "ERROR"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "description": "",
        "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts"
      }
    ],
    "groupedVariables": {
      "projects/vds-lib/src/lib/combobox/combobox.component.ts": [
        {
          "name": "acceptedTypes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
          "type": "[]",
          "defaultValue": "['none', 'manual', 'auto', 'inline']"
        },
        {
          "name": "keyupKeyCodeBlock",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
          "type": "[]",
          "defaultValue": "[\n  ESCAPE,\n  TAB,\n  ENTER,\n  UP_ARROW,\n  DOWN_ARROW,\n  DELETE,\n  ALT,\n  SHIFT,\n]"
        },
        {
          "name": "validateSearchFn",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
          "type": "",
          "defaultValue": "(fn) => {\n  const boolCheck = fn('', '');\n  if (typeof boolCheck !== 'boolean') {\n    throw new Error(\n      'Your search function must return a boolean.'\n    );\n  }\n\n  return true;\n}"
        }
      ],
      "projects/vds-lib/src/lib/alert/alert.constants.ts": [
        {
          "name": "ALERT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/alert/alert.constants.ts",
          "type": "object",
          "defaultValue": "{\n  slideInTime: 50,\n  slideOutTime: 100,\n}"
        }
      ],
      "projects/vds-lib/src/lib/alert.service.ts": [
        {
          "name": "ALERT_SERVICE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/alert.service.ts",
          "type": "object",
          "defaultValue": "{\n  MESSAGING: {\n    MISSING_CONFIG:\n      '[VDS NG] Alert missing alert config. Please refer API',\n    MISSING_LABEL:\n      '[VDS NG] Alert missing message label. Please refer API',\n    MISSING_LABEL_TEMPLATE:\n      '[VDS NG] Alert missing message label template. Please refer API',\n    ACTION_ITEMS_EXCEED:\n      '[VDS NG] Alert actions exceed 2 items. UI Pattern not recommended.',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/datatable/expandable-cell/expandable-cell.component.ts": [
        {
          "name": "ANIM_STYLES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/expandable-cell/expandable-cell.component.ts",
          "type": "object",
          "defaultValue": "{\n  collapsed: {\n    maxHeight: '0px',\n    opacity: 0,\n    visibility: 'hidden',\n  },\n  expanded: {\n    maxHeight: '650px',\n    opacity: 1,\n    visibility: 'visible',\n  },\n  transition: animate('225ms cubic-bezier(0.4, 0, 0.2, 1)'),\n}"
        }
      ],
      "projects/vds-lib/src/lib/panel/dresser/dresser.constants.ts": [
        {
          "name": "ARROW_ICON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/panel/dresser/dresser.constants.ts",
          "type": "object",
          "defaultValue": "{\n  OPEN: 'visa_arrow-next',\n  CLOSE: 'visa_arrow-previous',\n}"
        }
      ],
      "projects/vds-lib/src/lib/avatar/avatar.constant.ts": [
        {
          "name": "AVATAR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/avatar/avatar.constant.ts",
          "type": "object",
          "defaultValue": "{\n  ALT_TEXT_ERROR_MSG:\n    'altText property required on AvatarComponent!',\n  ICON_DEFAULT: 'account',\n  PHOTO_URL_DEFAULT: 'default',\n  USERNAME_ERROR_MSG:\n    'userName property required on AvatarComponent!',\n}"
        }
      ],
      "projects/vds-lib/src/lib/breadcrumb/breadcrumb.constant.ts": [
        {
          "name": "BREADCRUMBS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/breadcrumb/breadcrumb.constant.ts",
          "type": "object",
          "defaultValue": "{\n  CLASS: {\n    ACTIVE: 'vds-state--active',\n    DEFAULT: 'vds-breadcrumb',\n  },\n  ARIA: {\n    CURRENT_ATTRIBUTE: 'aria-current',\n    CURRENT_VALUE: 'page',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/button/button.constant.ts": [
        {
          "name": "BUTTON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/button/button.constant.ts",
          "type": "object",
          "defaultValue": "{\n  COLOR_SCHEME: {\n    PRIMARY: 'primary',\n    SECONDARY: 'secondary',\n    TERTIARY: 'tertiary',\n  },\n  ICON: {\n    DEFAULT: 'arrow-expand',\n  },\n  ICON_TYPE: {\n    DEFAULT: 'light-default',\n    LIGHT_DEFAULT: 'light-default',\n    LIGHT: 'light',\n    LIGHT_OUTLINE: 'light-outline',\n    LIGHT_TINY: 'light-tiny',\n    LIGHT_FILL: 'light-fill',\n    DARK: 'dark',\n    DARK_OUTLINE: 'dark-outline',\n    DARK_TINY: 'dark-tiny',\n  },\n  TAG: {\n    A: 'a',\n    BUTTON: 'button',\n    DIV: 'div',\n    SPAN: 'span',\n  },\n  VARIANT: {\n    ICON: 'icon',\n    LINK: 'link',\n    SPLIT: 'split',\n    TEXT: 'text',\n  },\n  HEIGHT: {\n    LOW: '24px',\n    TINY: '16px',\n    HIGH: '48px',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/character-counter/character-counter.constants.ts": [
        {
          "name": "CHARACTER_COUNTER",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/character-counter/character-counter.constants.ts",
          "type": "object",
          "defaultValue": "{\n  MESSAGE: {\n    SCREEN_READER: 'Characters remaining',\n    USER: 'Characters over limit:',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/checkbox/checkbox.constant.ts": [
        {
          "name": "CHECKBOX",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/checkbox/checkbox.constant.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-checkbox-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/switch/switch.constant.ts": [
        {
          "name": "CHECKED_LABEL_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/switch/switch.constant.ts",
          "type": "object",
          "defaultValue": "{\n  on: 'on',\n  off: 'off',\n}"
        },
        {
          "name": "SWITCH",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/switch/switch.constant.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-switch-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/chip/chip.constants.ts": [
        {
          "name": "CHIP",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/chip/chip.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT: {\n    DESCRIPTION: {\n      DISABLED: 'chips-button-disabled',\n      READONLY: 'chips-button-readonly',\n    },\n  },\n  PREFIX: {\n    ID: 'vds-chip-',\n  },\n  SUFFIX: {\n    NAME: '-chip',\n    NATIVE: '-native-input',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts": [
        {
          "name": "COLUMN_HEADER_SELECTOR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'[role=\"columnheader\"]'"
        },
        {
          "name": "DATA_COLUMN_INDEX",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'data-dg-column-index'"
        },
        {
          "name": "DATA_FOCUS_DISABLED",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'data-dg-focus-disabled'"
        },
        {
          "name": "DATA_ROW_INDEX",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'data-dg-row-index'"
        },
        {
          "name": "GRID_CELL_SELECTOR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'[role=\"gridcell\"]'"
        },
        {
          "name": "ROW_SELECTOR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'[role=\"row\"]'"
        },
        {
          "name": "TABINDEX_SELECTOR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "type": "string",
          "defaultValue": "'[tabindex]'"
        }
      ],
      "projects/vds-lib/src/lib/datatable/datatable.component.ts": [
        {
          "name": "columnPrepMapFn",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/datatable.component.ts",
          "type": "",
          "defaultValue": "(column: any) => {\n  const isColumnFiltered = column.hasOwnProperty(\n    'isColumnFiltered'\n  )\n    ? !!column.isColumnFiltered\n    : false;\n  const isSortable = column.hasOwnProperty('isSortable')\n    ? !!column.isSortable\n    : false;\n\n  if (!column.hasOwnProperty('id')) {\n    throw new Error(\n      'Every column object must have an `id` property containing a unique string'\n    );\n  }\n\n  let sortFn = null;\n  if (typeof column.sortFn === 'function') {\n    let retValue = column.sortFn(1, 2);\n    if (retValue !== undefined && retValue !== null) {\n      retValue = Number(retValue);\n      if (\n        retValue === 0 ||\n        retValue === 1 ||\n        retValue === -1\n      ) {\n        sortFn = column.sortFn;\n      }\n    }\n  }\n\n  return {\n    id: column.id.toString(),\n    value:\n      column.value !== undefined && column.value !== null\n        ? column.value\n        : '',\n    type: (column.type || '').toString().trim(),\n    header:\n      column.header !== undefined && column.header !== null\n        ? column.header\n        : '',\n    tooltipValue:\n      column.tooltipValue !== undefined &&\n      column.tooltipValue !== null\n        ? column.tooltipValue\n        : '',\n    sortFn,\n    isColumnFiltered,\n    isSortable,\n  };\n}"
        }
      ],
      "projects/vds-lib/src/lib/combobox/combobox.constants.ts": [
        {
          "name": "COMBOBOX",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/combobox/combobox.constants.ts",
          "type": "object",
          "defaultValue": "{\n  CLASSES: {\n    DEFAULT: 'vds-listbox-item',\n    SELECTED: 'vds-listbox-item vds-listbox--item-selected',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/test-helper.ts": [
        {
          "name": "configureTestSuite",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/test-helper.ts",
          "type": "",
          "defaultValue": "() => {\n  const testBedApi: any = getTestBed();\n  const originReset = TestBed.resetTestingModule;\n\n  beforeAll(() => {\n    TestBed.resetTestingModule();\n    TestBed.resetTestingModule = () => TestBed;\n  });\n\n  afterEach(() => {\n    testBedApi._activeFixtures.forEach(\n      (fixture: ComponentFixture<any>) => fixture.destroy()\n    );\n    testBedApi._instantiated = false;\n  });\n\n  afterAll(() => {\n    try {\n      TestBed.resetTestingModule = originReset;\n      TestBed.resetTestingModule();\n    } catch (error) {\n      console.log(JSON.stringify(error));\n    }\n  });\n}"
        },
        {
          "name": "ImproveChangeDetection",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/test-helper.ts",
          "type": "",
          "defaultValue": "() => {\n  const originalCreate = TestBed.createComponent;\n  TestBed.createComponent = <T>(component: Type<T>) => {\n    const componentFixture: ComponentFixture<\n      T\n    > = originalCreate(component);\n    componentFixture.detectChanges = runOnPushChangeDetection(\n      componentFixture\n    );\n    return componentFixture;\n  };\n}"
        }
      ],
      "projects/vds-lib/src/lib/datatable/datatable.constants.ts": [
        {
          "name": "DATATABLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULTS: {\n    ROW_DETAILS: '__rowDetails__',\n    NO_DATA_MSG: 'No records found',\n    LOADING_MSG: 'Loading...',\n    MAX_NUMBER_EXPANDED_ROWS: 5,\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/rating/rating.constants.ts": [
        {
          "name": "DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/rating/rating.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DASH: '--',\n  FILLED: 0,\n  TOTAL: 5,\n}"
        },
        {
          "name": "RATING_ICON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/rating/rating.constants.ts",
          "type": "object",
          "defaultValue": "{\n  EMPTY: 'visa_favorite-star-border',\n  FILLED: 'visa_favorite-star',\n}"
        }
      ],
      "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts": [
        {
          "name": "DISCLOSURE_ID_PREFIX",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
          "type": "string",
          "defaultValue": "'vds-disclosure-'"
        }
      ],
      "projects/vds-lib/src/lib/divider/divider.constants.ts": [
        {
          "name": "DIVIDER",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/divider/divider.constants.ts",
          "type": "object",
          "defaultValue": "{\n  TITLE: 'Separator for header',\n}"
        }
      ],
      "projects/vds-lib/src/lib/error/error.constants.ts": [
        {
          "name": "ERROR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/error/error.constants.ts",
          "type": "object",
          "defaultValue": "{\n  ARIA_LABEL: 'Error',\n  ICON: 'error',\n}"
        }
      ],
      "projects/vds-lib/src/lib/card-expiration/card-expiration.constants.ts": [
        {
          "name": "EXPIRATION",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/card-expiration/card-expiration.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT: {\n    DELIMITER: '/',\n    GROUP_ERROR:\n      'Please fill out the Card Expiration field.',\n    LABEL: 'Expires (MM/YY)',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts": [
        {
          "name": "FILEUPLOAD",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
          "type": "object",
          "defaultValue": "{\n  MAX_FILESIZE: 100,\n  DROPZONE_LABEL: 'Drag and drop files here or',\n  INPUT_LABEL: 'Choose File',\n  COMPLETE_LABEL: 'Complete',\n  SUBMIT_LABEL: 'Upload',\n  ICONS: {\n    JPG: 'visa_document-jpg',\n    PNG: 'visa_document-png',\n    PHOTO: 'visa_photo',\n    MOV: 'visa_document-mov',\n    AVI: 'visa_document-avi',\n    PDF: 'visa_document-pdf',\n    JSON: 'visa_document-json',\n    XLS: 'visa_document-xls',\n    XML: 'visa_document-xml',\n    DEFAULT: 'visa_document',\n  },\n  TEMPLATES: {\n    BUTTON_ACTION: '__buttonAction__',\n    LIST_ITEM: '__listItem__',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/footer/footer.constants.ts": [
        {
          "name": "FOOTER",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/footer/footer.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT: {\n    ALT: 'Visa logo',\n    COPYRIGHT:\n      'Copyright © 2019-2020 Visa. All Rights Reserved',\n    COUNTRY: 'United States',\n    LANGUAGE: 'English',\n    SRC: 'assets/imgs/visa-logo--blue.svg',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/form-control/form-control.constants.ts": [
        {
          "name": "FORM_CONTROL",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/form-control/form-control.constants.ts",
          "type": "object",
          "defaultValue": "{\n  MESSAGING: {\n    SPLIT_INVALID:\n      '[VDS NG] Form Control Split value is invalid. Refer to `enum FormControlSplit`',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/icon/icon.constant.ts": [
        {
          "name": "ICON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/icon/icon.constant.ts",
          "type": "object",
          "defaultValue": "{\n  SUFFIX: {\n    TINY: '--tiny',\n    LOW: '--low',\n    HIGH: '--high',\n  },\n  PREFIX: {\n    VISA: 'visa_',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/input-card/input-card.constants.ts": [
        {
          "name": "INPUT_CARD",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/input-card/input-card.constants.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-input-card-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/input-cvv/input-cvv.constants.ts": [
        {
          "name": "INPUT_CVV",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/input-cvv/input-cvv.constants.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-input-cvv-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n  LENGTH: {\n    MAX: 3,\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/datatable/sort-header/sort-header.directive.ts": [
        {
          "name": "isSortDirectionValid",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.directive.ts",
          "type": "",
          "defaultValue": "(value: any) => {\n  return (\n    value !== null &&\n    value !== undefined &&\n    [SortDirection.ASC, SortDirection.DESC].includes(value)\n  );\n}"
        }
      ],
      "projects/vds-lib/src/lib/combobox/utils.ts": [
        {
          "name": "isValidString",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/combobox/utils.ts",
          "type": "",
          "defaultValue": "(value) =>\n  isValueValid(value) && value.toString().trim().length > 0"
        },
        {
          "name": "isValueValid",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/combobox/utils.ts",
          "type": "",
          "defaultValue": "(value) =>\n  value !== null && value !== undefined"
        }
      ],
      "projects/vds-lib/src/lib/datatable/utils.ts": [
        {
          "name": "isValidString",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/utils.ts",
          "type": "",
          "defaultValue": "(value) =>\n  isValueValid(value) && value.toString().trim().length > 0"
        },
        {
          "name": "isValueValid",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/datatable/utils.ts",
          "type": "",
          "defaultValue": "(value) =>\n  value !== null && value !== undefined"
        }
      ],
      "projects/vds-lib/src/lib/vds-lib.service.constants.ts": [
        {
          "name": "KNOWN_MOBILE_DEVICES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
          "type": "object",
          "defaultValue": "{\n  ANDROID: 'Android',\n  IPHONE: 'iPhone',\n  WEBOS: 'webOS',\n  IPAD: 'iPad',\n  IPOD: 'Ipod',\n  BLACKBERRY: 'Blackberry',\n  WINDOWS: 'Windows Phone',\n}"
        },
        {
          "name": "MOBILE_WIDTH",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
          "type": "number",
          "defaultValue": "1024"
        },
        {
          "name": "VISIBLE_ELEMENT_PROPS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
          "type": "object",
          "defaultValue": "{\n  display: 'block',\n  visibility: 'hidden',\n  position: 'absolute',\n}"
        }
      ],
      "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts": [
        {
          "name": "LABEL_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts",
          "type": "object",
          "defaultValue": "{\n  FIRST_CLAUSE: 'Progress bar',\n  SECOND_CLAUSE: 'loaded',\n}"
        },
        {
          "name": "UNIT_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts",
          "type": "string",
          "defaultValue": "'MB'"
        }
      ],
      "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts": [
        {
          "name": "LARGE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts",
          "type": "object",
          "defaultValue": "{\n  CX: 36,\n  CY: 36,\n  HEIGHT: 72,\n  R: 32,\n  STROKE_DASHARRAY: '201.062',\n  STROKE_DASHOFFSET: '56.2973',\n  WIDTH: 72,\n}"
        },
        {
          "name": "SMALL",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts",
          "type": "object",
          "defaultValue": "{\n  CX: 24,\n  CY: 24,\n  HEIGHT: 48,\n  R: 20,\n  STROKE_DASHARRAY: '125.664',\n  STROKE_DASHOFFSET: '35.1858',\n  WIDTH: 24,\n}"
        }
      ],
      "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts": [
        {
          "name": "LARGE_CIRCLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
          "type": "Circle",
          "defaultValue": "{\n  OUTER: {\n    STROKE_DASHARRAY: '255, 7',\n    STROKE_DASHOFFSET: '3',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '180, 180',\n    STROKE_DASHOFFSET: '101',\n  },\n  DIMENSION: 112,\n  CX: 56,\n  CY: 56,\n  R: 54,\n}"
        },
        {
          "name": "PROGRESS_GAUGE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT: {\n    TITLE: 'Application',\n    SUBTITLE: 'February 11 , 2054',\n    DETAILS: 'Not Started',\n    SIZE: {\n      LARGE: 'large',\n      SMALL: 'small',\n    },\n    CIRCLE_REF: {\n      LARGE: LARGE_CIRCLE,\n      SMALL: SMALL_CIRCLE,\n    },\n    STROKE_WIDTH: 4,\n  },\n  ERROR: 'VDS: \"setStatus\" method given wrong parameter',\n}"
        },
        {
          "name": "SMALL_CIRCLE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
          "type": "Circle",
          "defaultValue": "{\n  OUTER: {\n    STROKE_DASHARRAY: '90, 8',\n    STROKE_DASHOFFSET: '50',\n  },\n  INNER: {\n    STROKE_DASHARRAY: '135, 100',\n    STROKE_DASHOFFSET: '90',\n  },\n  DIMENSION: 64,\n  CX: 32,\n  CY: 32,\n  R: 30,\n}"
        }
      ],
      "projects/vds-lib/src/lib/link/link.constants.ts": [
        {
          "name": "LINK",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/link/link.constants.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-link-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n  ICON: {\n    EXTERNAL: 'maximize',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/listbox/listbox.constant.ts": [
        {
          "name": "LISTBOX",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/listbox/listbox.constant.ts",
          "type": "object",
          "defaultValue": "{\n  ATTRIBUTES: {\n    CHECKBOX: 'checkbox',\n    CLASS: 'class',\n    DATA_INDEX: 'data-index',\n    FOR: 'for',\n  },\n  PREFIX: {\n    ID: 'vds-listbox-',\n  },\n  SUFFIX: {\n    LABEL: '-label',\n    LIST: '-list',\n    LIST_ITEM: '-list-item',\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n  SYMBOLS: {\n    COMMA: ',',\n    HYPHEN: '-',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts": [
        {
          "name": "MENU_TYPES",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
          "type": "object",
          "defaultValue": "{\n  icon: 'icon',\n  dropdown: 'dropdown',\n  initials: 'initials',\n}"
        },
        {
          "name": "NAVMENU_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
          "type": "object",
          "defaultValue": "{\n  name: 'menu',\n}"
        }
      ],
      "projects/vds-lib/src/lib/nav/nav.constants.ts": [
        {
          "name": "NAV_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/nav/nav.constants.ts",
          "type": "object",
          "defaultValue": "{\n  name: 'nav',\n  altText: 'Visa',\n  class: {\n    active: 'vds-state--selected',\n    default: 'vds-tab',\n  },\n  menu: 'visa_menu',\n  close: 'visa_close',\n  down: 'arrow-expand',\n  up: 'visa_dropdown-up',\n  navOpenIcon: 'visa_arrow-previous',\n  navOpenText: 'open arrow',\n  navCloseIcon: 'visa_arrow-next',\n  navCloseText: 'close arrow',\n  orientation: 'horizontal',\n  skipLabel: 'Skip to main content',\n  skipPath: '',\n  src: 'assets/logos/visa/visa_vbm_wht.svg',\n  srcLight: 'assets/logos/visa/visa_vbm_blu.svg',\n  path: '',\n  openWidth: '240px',\n  closeWidth: '56px',\n  vertical: 'vertical',\n}"
        }
      ],
      "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure.constants.ts": [
        {
          "name": "NAVDISCLOSURE_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure.constants.ts",
          "type": "object",
          "defaultValue": "{\n  COLLAPSE_ICON: 'visa_arrow-collapse',\n  COLLAPSE_ALT: 'collapse arrow',\n  EXPAND_ICON: 'visa_arrow-expand',\n  EXPAND_ALT: 'expand arrow',\n}"
        }
      ],
      "projects/vds-lib/src/lib/pagination/pagination.constant.ts": [
        {
          "name": "PAGINATION",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT_PAGESIZE: 20,\n  PAGE_LIMIT: 9,\n  START_END_LIMIT: 7,\n  MIDDLE_LIMIT: 5,\n  DATA_ATTR_PAGE_SIZE_ITEM: 'data-item-size',\n}"
        },
        {
          "name": "sortFn",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
          "type": "",
          "defaultValue": "(a, b) => a - b"
        }
      ],
      "projects/vds-lib/src/lib/radio/radio.constant.ts": [
        {
          "name": "RADIO",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/radio/radio.constant.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-radio-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n  VALUE: {\n    DEFAULT: 'on',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/search/search.constants.ts": [
        {
          "name": "SEARCH",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/search/search.constants.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-search-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/accordion/section/section.constants.ts": [
        {
          "name": "SECTION",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/accordion/section/section.constants.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    HEADING: 'accordian-heading-',\n    BODY: 'accordian-body-',\n  },\n  ICON: {\n    DOWN: 'visa_arrow-expand',\n    UP: 'visa_arrow-collapse',\n  },\n  ALTTEXT: {\n    DOWN: 'expand',\n    UP: 'collapse',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/select/select.constant.ts": [
        {
          "name": "SELECT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/select/select.constant.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-select-',\n    ERROR_ID: 'vds-select-error-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/slider/slider.constants.ts": [
        {
          "name": "SLIDER_DEFAULT",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/slider/slider.constants.ts",
          "type": "object",
          "defaultValue": "{\n  LABEL: 'Slider Control',\n  NODE: {\n    MIDPOINT: 12.5,\n    MAX_LEFT: 279,\n  },\n  TRACK_MAX_WIDTH: 290,\n  VALUE_MAX_WIDTH: 279,\n  SUFFIX: {\n    LABEL: '-label',\n  },\n}"
        },
        {
          "name": "SLIDER_NUMBER",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/slider/slider.constants.ts",
          "type": "object",
          "defaultValue": "{\n  NODE: {\n    MIDPOINT: 0,\n    MAX_LEFT: 279,\n  },\n  TRACK_MAX_WIDTH: 290,\n  VALUE_MAX_WIDTH: 279,\n  TICKS: {\n    0: 0,\n    3: 180,\n    4: 92,\n    5: 69,\n    6: 55,\n    7: 46,\n    8: 39,\n    9: 34,\n    10: 30,\n    11: 27,\n    12: 25,\n    13: 23,\n    14: 21,\n    15: 19,\n    16: 17,\n    17: 16,\n    18: 15,\n    19: 14,\n    20: 13,\n    21: 12,\n    22: 11,\n    23: 10,\n    24: 9,\n    25: 8,\n    26: 7,\n    27: 6,\n    28: 5,\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/wizard/step/step.constants.ts": [
        {
          "name": "STEP",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/wizard/step/step.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT: {\n    UNITS: 'px',\n    ERROR: '!',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/text-field/text-field.constant.ts": [
        {
          "name": "TEXT_FIELD",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/text-field/text-field.constant.ts",
          "type": "object",
          "defaultValue": "{\n  PREFIX: {\n    ID: 'vds-text-field-',\n  },\n  SUFFIX: {\n    NAME: '-name',\n    NATIVE: '-native-input',\n    MESSAGE: '-message',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/toggle-button/set/toggle-button-set.constants.ts": [
        {
          "name": "TOGGLEBUTTON",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/toggle-button/set/toggle-button-set.constants.ts",
          "type": "object",
          "defaultValue": "{\n  DEFAULT: {\n    LABEL: 'Choose A Size',\n    NAME_PREFIX: 'vds-toggle-button-set--',\n  },\n}"
        }
      ],
      "projects/vds-lib/src/lib/tooltip/tooltip.constant.ts": [
        {
          "name": "TOOLTIP",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/vds-lib/src/lib/tooltip/tooltip.constant.ts",
          "type": "object",
          "defaultValue": "{\n  POSITION: {\n    BOTTOM: {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'bottom',\n    },\n    LEFT: {\n      offsetX: 0,\n      offsetY: 0,\n    },\n    RIGHT: {\n      originX: 'center',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: 48,\n      offsetY: 0,\n    },\n    TOP: {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetX: 0,\n      offsetY: -16,\n    },\n  },\n}"
        }
      ]
    },
    "groupedFunctions": {
      "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts": [
        {
          "name": "findElementWithTabIndex",
          "file": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "element",
              "type": ""
            }
          ],
          "jsdoctags": [
            {
              "name": "element",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/vds-lib/src/lib/abstract-value-accessor.ts": [
        {
          "name": "MakeProvider",
          "file": "projects/vds-lib/src/lib/abstract-value-accessor.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "",
          "args": [
            {
              "name": "type",
              "type": "any"
            }
          ],
          "jsdoctags": [
            {
              "name": "type",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "projects/vds-lib/src/test-helper.ts": [
        {
          "name": "runOnPushChangeDetection",
          "file": "projects/vds-lib/src/test-helper.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "description": "<p>The below methods are required when you set your components ChangeDetectionStrategy to\nChangeDetectionStrategy.OnPush\nIt looks like fixture.detectChanges is only good for one call. All subsequent calls will\nnot work. These methods will override the detectChanges call with a new method using the\nchangedection.\nhttps://github.com/angular/angular/issues/12313</p>\n",
          "args": [
            {
              "name": "cf"
            }
          ],
          "jsdoctags": [
            {
              "name": "cf",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {
      "projects/vds-lib/src/lib/alert/alert.constants.ts": [
        {
          "name": "AlertType",
          "childs": [
            {
              "name": "ERROR",
              "value": "error"
            },
            {
              "name": "INFO",
              "value": "info"
            },
            {
              "name": "SUCCESS",
              "value": "success"
            },
            {
              "name": "WARNING",
              "value": "warning"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/alert/alert.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/badge/badge.constants.ts": [
        {
          "name": "BadgeType",
          "childs": [
            {
              "name": "ACCENT",
              "value": "accent"
            },
            {
              "name": "CRITICAL",
              "value": "critical"
            },
            {
              "name": "DISABLED",
              "value": "disabled"
            },
            {
              "name": "STABLE",
              "value": "stable"
            },
            {
              "name": "STATUS",
              "value": "status"
            },
            {
              "name": "WARNING",
              "value": "warning"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/badge/badge.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/button/button.constant.ts": [
        {
          "name": "ButtonType",
          "childs": [
            {
              "name": "BUTTON",
              "value": "button"
            },
            {
              "name": "RESET",
              "value": "reset"
            },
            {
              "name": "SUBMIT",
              "value": "submit"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/button/button.constant.ts"
        }
      ],
      "projects/vds-lib/src/lib/card-art/card-art.constants.ts": [
        {
          "name": "CardArtMotion",
          "childs": [
            {
              "name": "NONE",
              "value": "none"
            },
            {
              "name": "RIPPLE",
              "value": "ripple"
            },
            {
              "name": "GOLD_RIPPLE",
              "value": "gold-ripple"
            },
            {
              "name": "ZOOM_BOUNCE",
              "value": "zoom-bounce"
            },
            {
              "name": "WIGGLE",
              "value": "wiggle"
            },
            {
              "name": "DOUBLE_WIGGLE",
              "value": "double-wiggle"
            },
            {
              "name": "MUTE_COLOR",
              "value": "mute-color"
            },
            {
              "name": "UNMUTE_COLOR",
              "value": "unmute-color"
            },
            {
              "name": "SHIMMER",
              "value": "shimmer"
            },
            {
              "name": "DOUBLE_SHIMMER",
              "value": "double-shimmer"
            },
            {
              "name": "COMBO_1",
              "value": "combo-1"
            },
            {
              "name": "COMBO_2",
              "value": "combo-2"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/card-art/card-art.constants.ts"
        },
        {
          "name": "CardArtSize",
          "childs": [
            {
              "name": "x334x210",
              "value": "334x210"
            },
            {
              "name": "x286x180",
              "value": "286x180"
            },
            {
              "name": "x146x92",
              "value": "146x92"
            },
            {
              "name": "x108x68",
              "value": "108x68"
            },
            {
              "name": "x48x30",
              "value": "48x30"
            },
            {
              "name": "x40x25",
              "value": "40x25"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/card-art/card-art.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/datatable/datatable.constants.ts": [
        {
          "name": "ColumnType",
          "childs": [
            {
              "name": "LINK",
              "value": "link"
            },
            {
              "name": "EMAIL",
              "value": "email"
            },
            {
              "name": "DATE",
              "value": "date"
            },
            {
              "name": "BUTTON",
              "value": "button"
            },
            {
              "name": "ACTIONS",
              "value": "actions"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts"
        },
        {
          "name": "RowActionType",
          "childs": [
            {
              "name": "NONE",
              "value": "none"
            },
            {
              "name": "SINGLE",
              "value": "single"
            },
            {
              "name": "MULTI",
              "value": "multi"
            },
            {
              "name": "EXPAND",
              "value": "expand"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts"
        },
        {
          "name": "SortDirection",
          "childs": [
            {
              "name": "ASC",
              "value": "asc"
            },
            {
              "name": "DESC",
              "value": "desc"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/dialog/dialog.constant.ts": [
        {
          "name": "DialogType",
          "childs": [
            {
              "name": "ERROR",
              "value": "error"
            },
            {
              "name": "DEFAULT",
              "value": "default"
            },
            {
              "name": "SUCCESS",
              "value": "success"
            },
            {
              "name": "WARNING",
              "value": "warning"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts"
        },
        {
          "name": "DialogVariant",
          "childs": [
            {
              "name": "CALL_TO_ACTION",
              "value": "call-to-action"
            },
            {
              "name": "CLOSEABLE",
              "value": "closeable"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/dialog/dialog.constant.ts"
        }
      ],
      "projects/vds-lib/src/lib/form-control/form-control.constants.ts": [
        {
          "name": "FormControlSplit",
          "childs": [
            {
              "name": "THIRTY",
              "value": "30"
            },
            {
              "name": "FORTY",
              "value": "40"
            },
            {
              "name": "FIFTY",
              "value": "50"
            },
            {
              "name": "SIXTY",
              "value": "60"
            },
            {
              "name": "SEVENTY",
              "value": "70"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/form-control/form-control.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/input-card/input-card.constants.ts": [
        {
          "name": "InputCardNetwork",
          "childs": [
            {
              "name": "DEFAULT",
              "value": "default"
            },
            {
              "name": "VISA",
              "value": "visa"
            },
            {
              "name": "MASTERCARD",
              "value": "mastercard"
            },
            {
              "name": "AMEX",
              "value": "amex"
            },
            {
              "name": "DISCOVER",
              "value": "discover"
            },
            {
              "name": "ELO",
              "value": "elo"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/input-card/input-card.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/nav/nav.constants.ts": [
        {
          "name": "NavColorScheme",
          "childs": [
            {
              "name": "DEFAULT",
              "value": "default"
            },
            {
              "name": "CONSUMER",
              "value": "consumer"
            },
            {
              "name": "MARKETING",
              "value": "marketing"
            },
            {
              "name": "LIGHT",
              "value": "light"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/nav/nav.constants.ts"
        },
        {
          "name": "NavPosition",
          "childs": [
            {
              "name": "FIXED",
              "value": "fixed"
            },
            {
              "name": "RELATIVE",
              "value": "relative"
            },
            {
              "name": "ABSOLUTE",
              "value": "absolute"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/nav/nav.constants.ts"
        },
        {
          "name": "NavStrategy",
          "childs": [
            {
              "name": "NoneStored",
              "value": "None Stored"
            },
            {
              "name": "RootStored",
              "value": "Root Stored"
            },
            {
              "name": "DisclosureStored",
              "value": "Disclosure Stored"
            },
            {
              "name": "SublinkStored",
              "value": "Sublink Stored"
            },
            {
              "name": "RootIncoming",
              "value": "Root Incoming"
            },
            {
              "name": "DisclosureIncoming",
              "value": "Disclosure Incoming"
            },
            {
              "name": "SublinkIncoming",
              "value": "Sublink Incoming"
            },
            {
              "name": "FromMiniState",
              "value": "From Mini State"
            },
            {
              "name": "FromFullState",
              "value": "From Full State"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/nav/nav.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts": [
        {
          "name": "ProgressGaugeStatus",
          "childs": [
            {
              "name": "DEFAULT",
              "value": "default"
            },
            {
              "name": "PROGRESS",
              "value": "progress"
            },
            {
              "name": "COMPLETED",
              "value": "completed"
            },
            {
              "name": "APPROVED",
              "value": "approved"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/search/search.constants.ts": [
        {
          "name": "SearchVariant",
          "childs": [
            {
              "name": "STANDARD",
              "value": "standard"
            },
            {
              "name": "EXPANDABLE",
              "value": "expandable"
            },
            {
              "name": "DYNAMIC",
              "value": "dynamic"
            },
            {
              "name": "CONTEXTUAL",
              "value": "contextual"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/search/search.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/wizard/step/step.constants.ts": [
        {
          "name": "StepStatus",
          "childs": [
            {
              "name": "ACTIVE",
              "value": "active"
            },
            {
              "name": "COMPLETE",
              "value": "complete"
            },
            {
              "name": "ERROR",
              "value": "error"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/wizard/step/step.constants.ts"
        }
      ],
      "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts": [
        {
          "name": "UPLOAD_ERROR_MSG",
          "childs": [
            {
              "name": "SIZE",
              "value": "The file is too big. Upload a file less than 100MB in size."
            },
            {
              "name": "INVALID_NAME",
              "value": "The file name has characters that are not allowed: / \\ < > : * \" ? | "
            },
            {
              "name": "INVALID_GENERIC",
              "value": "An unexpected error happened during upload."
            },
            {
              "name": "INVALID_NETWORK",
              "value": "Network issues interrupted the file upload."
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts"
        },
        {
          "name": "UPLOAD_STATUS",
          "childs": [
            {
              "name": "ADD",
              "value": "ADD"
            },
            {
              "name": "REMOVE",
              "value": "REMOVE"
            },
            {
              "name": "RETRY",
              "value": "RETRY"
            },
            {
              "name": "SUBMIT",
              "value": "SUBMIT"
            },
            {
              "name": "PROGRESS",
              "value": "PROGRESS"
            },
            {
              "name": "COMPLETE",
              "value": "COMPLETE"
            },
            {
              "name": "COMPLETE_ALL",
              "value": "COMPLETE_ALL"
            },
            {
              "name": "ERROR",
              "value": "ERROR"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "description": "",
          "file": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts"
        }
      ]
    },
    "groupedTypeAliases": {
      "projects/vds-lib/src/lib/combobox/combobox.model.ts": [
        {
          "name": "ComboboxType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"none\" | \"manual\" | \"auto\" | \"inline\"",
          "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
          "description": "",
          "kind": 168
        },
        {
          "name": "FilterFunction",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "function",
          "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
          "description": "",
          "kind": 162
        },
        {
          "name": "ListDataType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "Array<string> | Array<ListDataObject>",
          "file": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
          "description": "",
          "kind": 168
        }
      ],
      "projects/vds-lib/src/lib/datatable/datatable.constants.ts": [
        {
          "name": "SortFn",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "function",
          "file": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
          "description": "",
          "kind": 162
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 20,
    "status": "low",
    "files": [
      {
        "filePath": "projects/vds-lib/src/lib/abstract-value-accessor.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AbstractValueAccessor",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/abstract-value-accessor.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "MakeProvider",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/accordion/accordion.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AccordionComponent",
        "coveragePercent": 20,
        "coverageCount": "2/10",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/accordion/section/section.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SectionComponent",
        "coveragePercent": 26,
        "coverageCount": "4/15",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/accordion/section/section.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SECTION",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/action-bar/action-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ActionBarComponent",
        "coveragePercent": 20,
        "coverageCount": "1/5",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "AlertService",
        "coveragePercent": 30,
        "coverageCount": "3/10",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert.service.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALERT_SERVICE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert/alert.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AlertComponent",
        "coveragePercent": 13,
        "coverageCount": "3/22",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert/alert.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AlertActionConfig",
        "coveragePercent": 75,
        "coverageCount": "3/4",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert/alert.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AlertConfig",
        "coveragePercent": 75,
        "coverageCount": "3/4",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert/alert.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AlertDetailsConfig",
        "coveragePercent": 83,
        "coverageCount": "5/6",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert/alert.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "AlertMessageConfig",
        "coveragePercent": 75,
        "coverageCount": "3/4",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/alert/alert.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ALERT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/avatar/avatar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AvatarComponent",
        "coveragePercent": 70,
        "coverageCount": "7/10",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/avatar/avatar.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AVATAR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/badge/badge.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BadgeComponent",
        "coveragePercent": 33,
        "coverageCount": "2/6",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/breadcrumb/breadcrumb.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BreadcrumbComponent",
        "coveragePercent": 22,
        "coverageCount": "2/9",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/breadcrumb/breadcrumb.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BREADCRUMBS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/breadcrumbs/breadcrumbs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BreadcrumbsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/button-group/button-group.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonGroupComponent",
        "coveragePercent": 33,
        "coverageCount": "1/3",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 66,
        "coverageCount": "14/21",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/button/button.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BUTTON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/card-art/card-art.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardArtComponent",
        "coveragePercent": 33,
        "coverageCount": "2/6",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/card-expiration/card-expiration.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardExpirationComponent",
        "coveragePercent": 23,
        "coverageCount": "3/13",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/card-expiration/card-expiration.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXPIRATION",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/card/card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CardComponent",
        "coveragePercent": 45,
        "coverageCount": "11/24",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/character-counter/character-counter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CharacterCounterComponent",
        "coveragePercent": 16,
        "coverageCount": "1/6",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/character-counter/character-counter.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CharacterCounter",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/character-counter/character-counter.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHARACTER_COUNTER",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/checkbox-list-item/checkbox-list-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxListItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/checkbox-list/checkbox-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxListComponent",
        "coveragePercent": 25,
        "coverageCount": "1/4",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/checkbox-set/checkbox-set.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxSetComponent",
        "coveragePercent": 50,
        "coverageCount": "3/6",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/checkbox/checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckboxComponent",
        "coveragePercent": 38,
        "coverageCount": "12/31",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/checkbox/checkbox.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CheckboxChange",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/checkbox/checkbox.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKBOX",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/chip/chip.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ChipComponent",
        "coveragePercent": 17,
        "coverageCount": "4/23",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/chip/chip.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHIP",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/chips/chips.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ChipsComponent",
        "coveragePercent": 22,
        "coverageCount": "2/9",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ComboboxComponent",
        "coveragePercent": 25,
        "coverageCount": "18/71",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "acceptedTypes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "keyupKeyCodeBlock",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "validateSearchFn",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COMBOBOX",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "InputKeyupEvent",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ListDataObject",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/combobox.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ListItemSelectEvent",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/38",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/listbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/23",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "isValidString",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/combobox/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "isValueValid",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/custom-template/template-cell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TemplateCellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/custom-template/template-container.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TemplateContainerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datagrid/datagrid.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatagridComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/cell-factory/cell-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CellButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/cell-factory/cell-factory.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CellFactoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/cell-factory/cell-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CellInputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/column-filter/column-filter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ColumnFilterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DatatableComponent",
        "coveragePercent": 28,
        "coverageCount": "20/71",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "columnPrepMapFn",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CellActionEvent",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ColumnDataItem",
        "coveragePercent": 90,
        "coverageCount": "9/10",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "GroupHeaderItem",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RowActionEvent",
        "coveragePercent": 80,
        "coverageCount": "4/5",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Sortable",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SortEvent",
        "coveragePercent": 75,
        "coverageCount": "3/4",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/datatable.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DATATABLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/expandable-cell/expandable-cell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ExpandableCellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/expandable-cell/expandable-cell.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ANIM_STYLES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "KeyboardFocusDirective",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "findElementWithTabIndex",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "COLUMN_HEADER_SELECTOR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DATA_COLUMN_INDEX",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DATA_FOCUS_DISABLED",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DATA_ROW_INDEX",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "GRID_CELL_SELECTOR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ROW_SELECTOR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/keyboard-focus.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TABINDEX_SELECTOR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/row-selection.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "RowSelectionService",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SortHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "SortHeaderDirective",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/sort-header/sort-header.directive.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "isSortDirectionValid",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "isValidString",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/datatable/utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "isValueValid",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/dialog.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "DialogService",
        "coveragePercent": 14,
        "coverageCount": "1/7",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/dialog/dialog.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DialogComponent",
        "coveragePercent": 41,
        "coverageCount": "7/17",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/dialog/dialog.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DialogActionConfig",
        "coveragePercent": 75,
        "coverageCount": "3/4",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/dialog/dialog.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DialogConfig",
        "coveragePercent": 83,
        "coverageCount": "5/6",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/dialog/dialog.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DialogContentConfig",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/block-child-event.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BlockChildEventDirective",
        "coveragePercent": 12,
        "coverageCount": "1/8",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure-content.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "DisclosureContentDirective",
        "coveragePercent": 50,
        "coverageCount": "1/2",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure-header/disclosure-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DisclosureHeaderComponent",
        "coveragePercent": 34,
        "coverageCount": "8/23",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure-lazy-content.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "DisclosureLazyContentDirective",
        "coveragePercent": 33,
        "coverageCount": "1/3",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DisclosureComponent",
        "coveragePercent": 36,
        "coverageCount": "8/22",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DisclosureContainerConfig",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DisclosureContentConfig",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DisclosureHeaderConfig",
        "coveragePercent": 85,
        "coverageCount": "6/7",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/disclosure/disclosure.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DISCLOSURE_ID_PREFIX",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/divider/divider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DividerComponent",
        "coveragePercent": 28,
        "coverageCount": "2/7",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/divider/divider.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DIVIDER",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/dots/dots.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DotsComponent",
        "coveragePercent": 36,
        "coverageCount": "4/11",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/error/error.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ErrorComponent",
        "coveragePercent": 50,
        "coverageCount": "3/6",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/error/error.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ERROR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload-dropzone.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FileUploadDropzoneComponent",
        "coveragePercent": 23,
        "coverageCount": "3/13",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FileUploadInputComponent",
        "coveragePercent": 33,
        "coverageCount": "8/24",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FileUploadListComponent",
        "coveragePercent": 18,
        "coverageCount": "2/11",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FileUploadComponent",
        "coveragePercent": 40,
        "coverageCount": "23/57",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "HttpRequestOptions",
        "coveragePercent": 80,
        "coverageCount": "4/5",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UploadError",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UploadEvent",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UploadItem",
        "coveragePercent": 91,
        "coverageCount": "11/12",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "UploadProgress",
        "coveragePercent": 75,
        "coverageCount": "3/4",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FILEUPLOAD",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/fileupload/fileupload.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "FileUploadService",
        "coveragePercent": 0,
        "coverageCount": "0/30",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/footer/footer.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FooterComponent",
        "coveragePercent": 70,
        "coverageCount": "7/10",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/footer/footer.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FOOTER",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/form-control/form-control.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FormControlComponent",
        "coveragePercent": 16,
        "coverageCount": "1/6",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/form-control/form-control.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FORM_CONTROL",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/icon-library/icon-library.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconLibraryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/icon/icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconComponent",
        "coveragePercent": 55,
        "coverageCount": "5/9",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/icon/icon.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ICON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/illustration/illustration.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "IllustrationComponent",
        "coveragePercent": 25,
        "coverageCount": "3/12",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/input-card/input-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputCardComponent",
        "coveragePercent": 28,
        "coverageCount": "11/39",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/input-card/input-card.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "INPUT_CARD",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/input-cvv/input-cvv.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InputCvvComponent",
        "coveragePercent": 27,
        "coverageCount": "10/37",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/input-cvv/input-cvv.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "INPUT_CVV",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/link/link.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LinkComponent",
        "coveragePercent": 60,
        "coverageCount": "9/15",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/link/link.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LINK",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/list/list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListComponent",
        "coveragePercent": 28,
        "coverageCount": "2/7",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/listbox/listbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ListboxComponent",
        "coveragePercent": 25,
        "coverageCount": "7/27",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/listbox/listbox.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LISTBOX",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/menu/menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MenuComponent",
        "coveragePercent": 33,
        "coverageCount": "2/6",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure-title/nav-disclosure-title.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavDisclosureTitleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavDisclosureComponent",
        "coveragePercent": 10,
        "coverageCount": "2/20",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav-disclosure/nav-disclosure.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NAVDISCLOSURE_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav-vertical/nav-vertical.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavVerticalComponent",
        "coveragePercent": 32,
        "coverageCount": "9/28",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav/nav.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavComponent",
        "coveragePercent": 26,
        "coverageCount": "9/34",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav/nav.constants.ts",
        "type": "class",
        "linktype": "classe",
        "name": "NavChild",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav/nav.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Button",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav/nav.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ListItem",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav/nav.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "NavData",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/nav/nav.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NAV_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navlink/navlink.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavlinkComponent",
        "coveragePercent": 18,
        "coverageCount": "4/22",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navbutton/navbutton.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavbuttonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu-image/navmenu-image.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavmenuImageComponent",
        "coveragePercent": 40,
        "coverageCount": "2/5",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu-initials/navmenu-initials.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavmenuInitialsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu-title/navmenu-title.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavmenuTitleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavmenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/29",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "NavSelect",
        "coveragePercent": 83,
        "coverageCount": "5/6",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MENU_TYPES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/navmenu/navmenu.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NAVMENU_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/pagination/pagination.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PaginationComponent",
        "coveragePercent": 31,
        "coverageCount": "14/44",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "PageEvent",
        "coveragePercent": 80,
        "coverageCount": "4/5",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PAGINATION",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/pagination/pagination.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "sortFn",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/panel/content/content.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ContentComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/panel/drawer/drawer.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DrawerComponent",
        "coveragePercent": 37,
        "coverageCount": "3/8",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/panel/dresser/dresser.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DresserComponent",
        "coveragePercent": 25,
        "coverageCount": "4/16",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/panel/dresser/dresser.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ARROW_ICON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/panel/panel.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PanelComponent",
        "coveragePercent": 20,
        "coverageCount": "2/10",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProgressGaugeComponent",
        "coveragePercent": 53,
        "coverageCount": "7/13",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Circle",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SubCircle",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LARGE_CIRCLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PROGRESS_GAUGE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress-gauge/progress-gauge.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SMALL_CIRCLE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LinearProgressComponent",
        "coveragePercent": 50,
        "coverageCount": "6/12",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LABEL_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress/linear-progress/linear-progress.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "UNIT_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SpinnerProgressComponent",
        "coveragePercent": 30,
        "coverageCount": "3/10",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LARGE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/progress/spinner-progress/spinner-progress.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SMALL",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/radio-group/radio-group.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RadioGroupComponent",
        "coveragePercent": 30,
        "coverageCount": "8/26",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/radio/radio.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RadioComponent",
        "coveragePercent": 28,
        "coverageCount": "8/28",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/radio/radio.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RADIO",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/rating/rating.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RatingComponent",
        "coveragePercent": 17,
        "coverageCount": "3/17",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/rating/rating.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/rating/rating.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RATING_ICON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/rating/rating.interfaces.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Star",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/search/search.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SearchComponent",
        "coveragePercent": 23,
        "coverageCount": "10/43",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/search/search.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SEARCH",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/select/select.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SelectComponent",
        "coveragePercent": 26,
        "coverageCount": "8/30",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/select/select.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SelectOptionChange",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/select/select.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SELECT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/slider/slider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SliderComponent",
        "coveragePercent": 23,
        "coverageCount": "10/42",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/slider/slider.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SLIDER_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/slider/slider.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SLIDER_NUMBER",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/switch/switch.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SwitchComponent",
        "coveragePercent": 44,
        "coverageCount": "8/18",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/switch/switch.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKED_LABEL_DEFAULT",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/switch/switch.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SWITCH",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/tab/tab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabComponent",
        "coveragePercent": 54,
        "coverageCount": "6/11",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/tabs/tabs.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabsComponent",
        "coveragePercent": 21,
        "coverageCount": "3/14",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/text-field/text-field.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TextFieldComponent",
        "coveragePercent": 35,
        "coverageCount": "20/56",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/text-field/text-field.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TEXT_FIELD",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/text/text.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TextComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/toggle-button/set/toggle-button-set.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ToggleButtonSetComponent",
        "coveragePercent": 18,
        "coverageCount": "3/16",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/toggle-button/set/toggle-button-set.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TOGGLEBUTTON",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/toggle-button/toggle-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ToggleButtonComponent",
        "coveragePercent": 27,
        "coverageCount": "3/11",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/lib/tooltip/tooltip.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/tooltip/tooltip.constant.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "TooltipOption",
        "coveragePercent": 66,
        "coverageCount": "2/3",
        "status": "good"
      },
      {
        "filePath": "projects/vds-lib/src/lib/tooltip/tooltip.constant.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TOOLTIP",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/tooltip/tooltip.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "TooltipDirective",
        "coveragePercent": 11,
        "coverageCount": "1/9",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ParentNav",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "KNOWN_MOBILE_DEVICES",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MOBILE_WIDTH",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/vds-lib.service.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "VISIBLE_ELEMENT_PROPS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/vds-lib.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "VdsLibService",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/wizard/step/step.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "StepComponent",
        "coveragePercent": 21,
        "coverageCount": "7/33",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/wizard/step/step.constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "STEP",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/lib/wizard/wizard.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "WizardComponent",
        "coveragePercent": 33,
        "coverageCount": "6/18",
        "status": "medium"
      },
      {
        "filePath": "projects/vds-lib/src/test-helper.ts",
        "type": "function",
        "linksubtype": "function",
        "name": "runOnPushChangeDetection",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "projects/vds-lib/src/test-helper.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "configureTestSuite",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/vds-lib/src/test-helper.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ImproveChangeDetection",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
