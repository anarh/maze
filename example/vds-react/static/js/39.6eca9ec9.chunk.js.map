{"version":3,"sources":["components/action-bar/index.js","components/action-bar-selected-items-count/index.js","components/action-bar/example/index.js","pages/components/action-bar.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","../../../src/utils.ts","../../../src/Tooltip.tsx","../../../src/TooltipTrigger.tsx","components/tooltip/index.js"],"names":["KEY_CODES","ActionBar","forwardRef","ref","ariaLabel","children","className","role","type","remainingProps","useRef","useState","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","useEffect","focusChildren","Array","from","current","querySelectorAll","map","child","i","tabIndex","aria-label","classnames","Boolean","Children","k","cloneElement","key","onKeyDown","e","code","charCode","keyCode","count","length","fIndex","preventDefault","focus","props","handleKeyDown","defaultProps","displayName","ActionBarSelectedItemsCount","ActionBarExample","showActiveTooltip","setShowActiveTooltip","showAlternateTooltip","setShowAlternateTooltip","tag","noGutter","flippable","colorScheme","name","resolution","alignEnd","id","tooltip","tooltipShown","placement","trigger","aria-describedby","iconType","onFocus","onBlur","onMouseEnter","onMouseLeave","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","Object","entries","filter","doc","description","required","value","color","isArray","v","join","undefined","defaultValue","ScreenReader","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","disabled","isFullWidth","includes","oneOfType","number","ButtonIcon","TooltipContext","React","callAll","fns","args","fn","canUseDOM","window","setRef","MUTATION_OBSERVER_CONFIG","childList","subtree","Tooltip","observer","tooltipRef","handleOutsideClick","event","parentOutsideClickHandler","hideTooltip","clearScheduled","handleOutsideRightClick","parentOutsideRightClickHandler","addOutsideClickHandler","document","removeOutsideClickHandler","addOutsideRightClickHandler","removeOutsideRightClickHandler","getTooltipRef","getArrowProps","getTooltipProps","contextValue","isParentNoneTriggered","addParentOutsideClickHandler","addParentOutsideRightClickHandler","removeParentOutsideClickHandler","removeParentOutsideRightClickHandler","componentDidMount","this","MutationObserver","isTriggeredBy","componentDidUpdate","closeOnOutOfBoundaries","componentWillUnmount","render","arrowProps","arrowRef","Component","contextType","DEFAULT_MODIFIERS","preventOverflow","boundariesElement","TooltipTrigger","state","defaultTooltipShown","hideTimeout","showTimeout","popperOffset","setTooltipState","cb","clearTimeout","showTooltip","pageX","pageY","toggleTooltip","action","clickToggle","contextMenuToggle","getTriggerProps","onClick","onTouchEnd","onContextMenu","onMouseMove","getTriggerRef","modifiers","usePortal","portalContainer","followCursor","restProps","popper","innerRef","followCursorModifier","enabled","order","outOfBoundaries","scheduleUpdate","height","x","y","triggerRef","getState","createPortal","isControlled","delayHide","delayShow","onVisibilityChange","shortid","generate","uid","offset","hidden","aria-hidden"],"mappings":"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","file":"static/js/39.6eca9ec9.chunk.js","sourcesContent":["import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-action-bar';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst ActionBar = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  role,\n  type,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    const focusChildren = Array.from(\n      ref.current.querySelectorAll(\n        'button:not([disabled]):not(.vds-state--disabled)')\n    );\n    focusChildren.map((child, i) => child.tabIndex = i === 0 ? 0 : -1);\n    setFocusChildren(focusChildren);\n  }, [ref]);\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(0);\n  };\n\n  return (\n    <div\n      aria-label={ariaLabel}\n      className={classnames('row', CSS_PREFIX, {\n        [`${CSS_PREFIX}--${type}-controls`]: Boolean(type)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) =>\n          cloneElement(child, {\n            key: k,\n            onKeyDown: e => handleKeyDown(e, k, child)\n          })\n        )\n      }\n    </div>\n  );\n});\n\nActionBar.propTypes = {\n  /**\n   * @ignore\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Active\n   */\n  type: oneOf(['active', 'standard'])\n};\n\nActionBar.defaultProps = {\n  ariaLabel: 'action bar',\n  role: 'region'\n};\n\nActionBar.displayName = 'ActionBar';\n\nexport default ActionBar;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-action-bar-selected-items-count';\n\nconst ActionBarSelectedItemsCount = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nActionBarSelectedItemsCount.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nActionBarSelectedItemsCount.displayName = 'ActionBarSelectedItemsCount';\n\nexport default ActionBarSelectedItemsCount;\n","import React, { useState } from 'react';\nimport ActionBar from '../../action-bar';\nimport ActionBarSelectedItemsCount from '../../action-bar-selected-items-count';\nimport ButtonAction from '../../button-action';\nimport ButtonIcon from '../../button-icon';\nimport ButtonLabel from '../../button-label';\nimport ButtonMenu from '../../button-menu';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Tooltip from '../../tooltip';\nimport Typography from '../../typography';\n\nconst ActionBarExample = () => {\n  const [showActiveTooltip, setShowActiveTooltip] = useState(false);\n  const [showAlternateTooltip, setShowAlternateTooltip] = useState(false);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Standard Controls</Typography>\n          <Typography>\n            Action bar will load actions that the user can\n            apply or initiate broadly to the page content loaded.\n            These actions allow users to manipulate the items loaded such as sort and filter.\n          </Typography>\n          <Typography>\n            If using icon buttons, include a tooltip\n            for additional clarity.\n          </Typography>\n          <Typography>\n            At this point, user has not made any selection\n            of items in the grid, table or list.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ActionBar>\n            <Col noGutter>\n              <ButtonText>Create Alert</ButtonText>\n              <ButtonMenu flippable colorScheme=\"secondary\">\n                <ButtonLabel>Export</ButtonLabel>\n                <ButtonAction><Icon name=\"arrow-expand\" resolution=\"tiny\" /></ButtonAction>\n              </ButtonMenu>\n            </Col>\n            <Col noGutter alignEnd>\n              <ButtonMenu flippable colorScheme=\"secondary\">\n                <ButtonLabel>Sort</ButtonLabel>\n                <ButtonAction><Icon name=\"arrow-expand\" resolution=\"tiny\" /></ButtonAction>\n              </ButtonMenu>\n            </Col>\n          </ActionBar>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Active Controls</Typography>\n          <Typography>\n            Once the user has made one or more item selections,\n            the action bar will contextually change to host controls\n            that can be applied. It will also list how many active items.\n          </Typography>\n          <Typography>\n            If using icon buttons, include a tooltip for additional clarity.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ActionBar type=\"active\">\n            <Col noGutter>\n              <ButtonMenu flippable>\n                <ButtonLabel>Add New</ButtonLabel>\n                <ButtonAction><Icon name=\"arrow-expand\" resolution=\"tiny\" /></ButtonAction>\n              </ButtonMenu>\n              <ButtonText colorScheme=\"secondary\">Close</ButtonText>\n              <ButtonText colorScheme=\"secondary\">Force Close</ButtonText>\n              <ButtonText colorScheme=\"secondary\">Acknowledge</ButtonText>\n            </Col>\n            <Col noGutter alignEnd>\n              <ActionBarSelectedItemsCount id=\"selection-count-active\">1 selected</ActionBarSelectedItemsCount>\n              <Tooltip\n                tooltip=\"Clear Selected Items\"\n                tooltipShown={showActiveTooltip}\n                placement=\"top\"\n                trigger=\"none\"\n                id=\"tooltip-close-active\"\n              >\n                <ButtonIcon\n                  aria-describedby=\"selection-count-active\"\n                  ariaLabel=\"1 selected\"\n                  iconType=\"light\"\n                  onFocus={() => setShowActiveTooltip(true)}\n                  onBlur={() => setShowActiveTooltip(false)}\n                  onMouseEnter={() => setShowActiveTooltip(true)}\n                  onMouseLeave={() => setShowActiveTooltip(false)}\n                >\n                  <Icon name=\"close\" resolution=\"low\" />\n                </ButtonIcon>\n              </Tooltip>\n            </Col>\n          </ActionBar>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Active Controls: Alternate Layout</Typography>\n          <Typography>\n            Adjust the hierarchy of the controls in the action bar as\n            needed and as it relates to the other elements on the page.\n          </Typography>\n          <Typography>\n            Maintain appropriate hierarchy among items in the set as well and use overflow when needed.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ActionBar type=\"active\">\n            <Col noGutter>\n              <ActionBarSelectedItemsCount id=\"selection-count-alternate\" >1 selected</ActionBarSelectedItemsCount>\n              <ButtonText\n                colorScheme=\"tertiary\"\n                aria-describedby=\"selection-count-alternate\"\n              >\n                Clear\n              </ButtonText>\n            </Col>\n            <Col noGutter alignEnd>\n              <ButtonText colorScheme=\"tertiary\">Close</ButtonText>\n              <ButtonText colorScheme=\"tertiary\">Force Close</ButtonText>\n              <ButtonText colorScheme=\"tertiary\">Acknowledge</ButtonText>\n              <Tooltip\n                tooltip=\"More Actions\"\n                tooltipShown={showAlternateTooltip}\n                placement=\"top\"\n                trigger=\"none\"\n                id=\"tooltip-close-alternate\"\n              >\n                <ButtonIcon\n                  iconType=\"light\"\n                  onFocus={() => setShowAlternateTooltip(true)}\n                  onBlur={() => setShowAlternateTooltip(false)}\n                  onMouseEnter={() => setShowAlternateTooltip(true)}\n                  onMouseLeave={() => setShowAlternateTooltip(false)}\n                >\n                  <Icon name=\"options\" resolution=\"tiny\" />\n                </ButtonIcon>\n              </Tooltip>\n            </Col>\n          </ActionBar>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ActionBarExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/action-bar/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/action-bar/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/action-bar/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ActionBarExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for ActionBar\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Action Bar</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/action-bar`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Action Bar Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/action-bar/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/action-bar/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/action-bar`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/action-bar`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/action-bar/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/action-bar/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/action-bar/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/action-bar/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nActionBarExample.displayName = 'ActionBarExample';\n\nexport default ActionBarExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport {Ref} from './types';\n\nexport const TooltipContext = React.createContext({});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Fn = (...args: any[]) => void;\ntype FnOrBool = undefined | Fn;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const callAll = (...fns: FnOrBool[]) => (...args: any[]) =>\n  fns.forEach(fn => fn && fn(...args));\n\nexport const noop = () => {};\n\nexport const canUseDOM = () =>\n  !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  );\n\nexport const setRef = (ref: Ref, node: HTMLElement | null) => {\n  if (typeof ref === 'function') {\n    return ref(node);\n  } else if (ref != null) {\n    ref.current = node;\n  }\n};\n","import React, {Component} from 'react';\nimport {\n  GetArrowPropsArg,\n  GetTooltipPropsArg,\n  TooltipProps,\n  TriggerTypes\n} from './types';\nimport {callAll, TooltipContext, setRef} from './utils';\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  subtree: true\n};\n\nclass Tooltip extends Component<TooltipProps> {\n  public static contextType = TooltipContext;\n\n  private observer?: MutationObserver;\n  private tooltipRef!: HTMLElement | null;\n\n  public componentDidMount() {\n    const observer = (this.observer = new MutationObserver(() => {\n      this.props.scheduleUpdate();\n    }));\n    observer.observe(this.tooltipRef!, MUTATION_OBSERVER_CONFIG);\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        removeParentOutsideClickHandler,\n        removeParentOutsideRightClickHandler\n      } = this.context;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.closeOnOutOfBoundaries && this.props.outOfBoundaries) {\n      this.props.hideTooltip();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        isParentNoneTriggered,\n        addParentOutsideClickHandler,\n        addParentOutsideRightClickHandler\n      } = this.context;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public render() {\n    const {arrowProps, placement, tooltip} = this.props;\n\n    return (\n      <TooltipContext.Provider value={this.contextValue}>\n        {tooltip({\n          arrowRef: arrowProps.ref,\n          getArrowProps: this.getArrowProps,\n          getTooltipProps: this.getTooltipProps,\n          placement,\n          tooltipRef: this.getTooltipRef\n        })}\n      </TooltipContext.Provider>\n    );\n  }\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private handleOutsideClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideClickHandler) {\n        parentOutsideClickHandler(event);\n      }\n    }\n  };\n\n  private handleOutsideRightClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideRightClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideRightClickHandler) {\n        parentOutsideRightClickHandler(event);\n      }\n    }\n  };\n\n  private addOutsideClickHandler = () => {\n    document.body.addEventListener('touchend', this.handleOutsideClick!);\n    document.body.addEventListener('click', this.handleOutsideClick!);\n  };\n\n  private removeOutsideClickHandler = () => {\n    document.body.removeEventListener('touchend', this.handleOutsideClick!);\n    document.body.removeEventListener('click', this.handleOutsideClick!);\n  };\n\n  private addOutsideRightClickHandler = () =>\n    document.body.addEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private removeOutsideRightClickHandler = () =>\n    document.body.removeEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private getTooltipRef = (node: HTMLElement | null) => {\n    this.tooltipRef = node;\n    setRef(this.props.innerRef, node);\n  };\n\n  private getArrowProps = (props: GetArrowPropsArg = {}) => ({\n    ...props,\n    style: {...props.style, ...this.props.arrowProps.style}\n  });\n\n  private getTooltipProps = (props: GetTooltipPropsArg = {}) => ({\n    ...props,\n    ...(this.isTriggeredBy('hover') && {\n      onMouseEnter: callAll(this.props.clearScheduled, props.onMouseEnter),\n      onMouseLeave: callAll(this.props.hideTooltip, props.onMouseLeave)\n    }),\n    style: {...props.style, ...this.props.style}\n  });\n\n  private contextValue = {\n    isParentNoneTriggered: this.props.trigger === 'none',\n    addParentOutsideClickHandler: this.addOutsideClickHandler,\n    addParentOutsideRightClickHandler: this.addOutsideRightClickHandler,\n    parentOutsideClickHandler: this.handleOutsideClick,\n    parentOutsideRightClickHandler: this.handleOutsideRightClick,\n    removeParentOutsideClickHandler: this.removeOutsideClickHandler,\n    removeParentOutsideRightClickHandler: this.removeOutsideRightClickHandler\n  };\n}\n\nexport default Tooltip;\n","/**\n * @author Mohsin Ul Haq <mohsinulhaq01@gmail.com>\n */\nimport PopperJS from 'popper.js';\nimport React, {Component} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Manager, Popper, Reference} from 'react-popper';\nimport Tooltip from './Tooltip';\nimport {\n  GetTriggerPropsArg,\n  TooltipTriggerProps,\n  TooltipTriggerState,\n  TriggerTypes\n} from './types';\nimport {callAll, canUseDOM, noop} from './utils';\n\nconst DEFAULT_MODIFIERS: PopperJS.Modifiers = {\n  preventOverflow: {\n    boundariesElement: 'viewport'\n  }\n};\n\nclass TooltipTrigger extends Component<\n  TooltipTriggerProps,\n  TooltipTriggerState\n> {\n  public static defaultProps = {\n    closeOnOutOfBoundaries: true,\n    defaultTooltipShown: false,\n    delayHide: 0,\n    delayShow: 0,\n    followCursor: false,\n    onVisibilityChange: noop,\n    placement: 'right',\n    portalContainer: canUseDOM() ? document.body : null,\n    trigger: 'hover',\n    usePortal: canUseDOM()\n  };\n\n  public state: TooltipTriggerState = {\n    tooltipShown: this.props.defaultTooltipShown\n  };\n\n  private hideTimeout?: number;\n  private showTimeout?: number;\n  private popperOffset?: PopperJS.Offset;\n\n  public componentWillUnmount() {\n    this.clearScheduled();\n  }\n\n  public render() {\n    const {\n      children,\n      tooltip,\n      placement,\n      trigger,\n      getTriggerRef,\n      modifiers,\n      closeOnOutOfBoundaries,\n      usePortal,\n      portalContainer,\n      followCursor,\n      getTooltipRef,\n      ...restProps\n    } = this.props;\n\n    const popper = (\n      <Popper\n        innerRef={getTooltipRef}\n        placement={placement}\n        modifiers={{\n          ...DEFAULT_MODIFIERS,\n          ...(followCursor && {\n            followCursorModifier: {\n              enabled: true,\n              fn: data => {\n                this.popperOffset = data.offsets.popper;\n                return data;\n              },\n              order: 1000\n            }\n          }),\n          ...modifiers\n        }}\n        {...restProps}\n      >\n        {({\n          ref,\n          style,\n          // tslint:disable-next-line\n          placement,\n          arrowProps,\n          outOfBoundaries,\n          scheduleUpdate\n        }) => {\n          if (followCursor && this.popperOffset) {\n            const {pageX, pageY} = this.state;\n            const {width, height} = this.popperOffset;\n            const x =\n              pageX! + width > window.scrollX + document.body.offsetWidth\n                ? pageX! - width\n                : pageX;\n            const y =\n              pageY! + height > window.scrollY + document.body.offsetHeight\n                ? pageY! - height\n                : pageY;\n            style.transform = `translate3d(${x}px, ${y}px, 0`;\n          }\n\n          return (\n            <Tooltip\n              {...{\n                arrowProps,\n                closeOnOutOfBoundaries,\n                outOfBoundaries,\n                placement,\n                scheduleUpdate,\n                style,\n                tooltip,\n                trigger\n              }}\n              clearScheduled={this.clearScheduled}\n              hideTooltip={this.hideTooltip}\n              innerRef={ref}\n            />\n          );\n        }}\n      </Popper>\n    );\n\n    return (\n      <Manager>\n        <Reference innerRef={getTriggerRef}>\n          {({ref}) =>\n            children({getTriggerProps: this.getTriggerProps, triggerRef: ref})\n          }\n        </Reference>\n        {this.getState() &&\n          (usePortal ? createPortal(popper, portalContainer) : popper)}\n      </Manager>\n    );\n  }\n\n  private isControlled() {\n    return this.props.tooltipShown !== undefined;\n  }\n\n  private getState() {\n    return this.isControlled()\n      ? this.props.tooltipShown\n      : this.state.tooltipShown;\n  }\n\n  private setTooltipState = (state: TooltipTriggerState) => {\n    const cb = () => this.props.onVisibilityChange(state.tooltipShown);\n    this.isControlled() ? cb() : this.setState(state, cb);\n  };\n\n  private clearScheduled = () => {\n    clearTimeout(this.hideTimeout);\n    clearTimeout(this.showTimeout);\n  };\n\n  private showTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    this.clearScheduled();\n    let state: TooltipTriggerState = {\n      tooltipShown: true\n    };\n    if (this.props.followCursor) {\n      state = {\n        ...state,\n        pageX,\n        pageY\n      };\n    }\n    this.showTimeout = window.setTimeout(\n      () => this.setTooltipState(state),\n      this.props.delayShow\n    );\n  };\n\n  private hideTooltip = () => {\n    this.clearScheduled();\n    this.hideTimeout = window.setTimeout(\n      () => this.setTooltipState({tooltipShown: false}),\n      this.props.delayHide\n    );\n  };\n\n  private toggleTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    const action = this.getState() ? 'hideTooltip' : 'showTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private clickToggle: React.MouseEventHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private contextMenuToggle: React.MouseEventHandler = event => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private getTriggerProps = (props: GetTriggerPropsArg = {}) => {\n    return {\n      ...props,\n      ...(this.isTriggeredBy('click') && {\n        onClick: callAll(this.clickToggle, props.onClick),\n        onTouchEnd: callAll(this.clickToggle, props.onTouchEnd)\n      }),\n      ...(this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(this.contextMenuToggle, props.onContextMenu)\n      }),\n      ...(this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(this.hideTooltip, props.onMouseLeave),\n        ...(this.props.followCursor && {\n          onMouseMove: callAll(this.showTooltip, props.onMouseMove)\n        })\n      }),\n      ...(this.isTriggeredBy('focus') && {\n        onFocus: callAll(this.showTooltip, props.onFocus),\n        onBlur: callAll(this.hideTooltip, props.onBlur)\n      })\n    };\n  };\n}\n\nexport default TooltipTrigger;\n","import React, { cloneElement, Fragment, useRef } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport TooltipTrigger from 'react-popper-tooltip';\n\nconst CSS_PREFIX = 'vds-tooltip';\nconst CSS_STATE = 'vds-state';\n\nconst Tooltip = ({ className, tooltip, children, id = shortid.generate(), trigger, ...remainingProps }) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <TooltipTrigger\n      trigger={trigger}\n      {...remainingProps}\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: '0, 4px'\n        }\n      }}\n      tooltip={({ getTooltipProps, tooltipRef }) => (\n        <div\n          hidden\n          {...getTooltipProps({\n            className: classnames(CSS_PREFIX, `${CSS_STATE}--show`, className),\n            ref: tooltipRef\n          })}\n        >\n          <div className={`${CSS_PREFIX}-content`}>\n            <span className={`${CSS_PREFIX}-text`}>{tooltip}</span>\n            <span className={`${CSS_PREFIX}-pointer`} />\n          </div>\n        </div>\n      )}\n    >\n      {({ getTriggerProps, triggerRef }) => (\n        <Fragment>\n          {cloneElement(children, {\n            ...getTriggerProps({\n              'aria-controls': uid,\n              'aria-describedby': uid,\n              ref: triggerRef\n            })\n          })}\n          <span aria-hidden=\"true\" id={uid} style={{ display: 'none' }}>\n            {tooltip}\n          </span>\n        </Fragment>\n      )}\n    </TooltipTrigger>\n  );\n};\nTooltip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Popper Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Tooltip\n   */\n  tooltip: node.isRequired,\n\n  /**\n   * Trigger\n   */\n  trigger: oneOf([\n    'click',\n    'hover',\n    'right-click',\n    'none'\n  ])\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n"],"sourceRoot":""}