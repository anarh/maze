{"version":3,"sources":["components/accordion/index.js","components/accordion-body/index.js","components/accordion-item/index.js","components/accordion-heading/index.js","components/accordion-title/index.js","components/accordion-subtitle/index.js","components/accordion/example/index.js","pages/components/accordion.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/use-panel-expand/index.js"],"names":["Accordion","forwardRef","ref","allowMultipleExpanded","children","className","defaultExpandedId","id","shortid","generate","onChange","remainingProps","uid","useRef","current","usePanelExpand","focusedId","expandedId","updateFocusedId","updateExpandedId","classnames","Children","map","child","k","cloneElement","expanded","includes","focus","index","onClick","e","onKeyDown","count","defaultProps","displayName","AccordionBody","AccordionItem","AccordionHeading","iconCollapse","iconExpand","onBlur","onFocus","useState","focused","setFocused","useEffect","handleClick","event","handleKeyDown","aria-controls","aria-expanded","Boolean","name","resolution","AccordionTitle","AccordionSubtitle","AccordionExample","type","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","tag","role","aria-label","undefined","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","value","length","color","Array","isArray","v","join","defaultValue","ScreenReader","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","setFocusedId","slice","setExpandedId","charCode","keyCode","preventDefault","ids","disclosureIndex","findIndex","Number","isInteger"],"mappings":"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","file":"static/js/48.df2aac3e.chunk.js","sourcesContent":["import React, { Children, cloneElement, forwardRef, useRef } from 'react';\nimport { array, bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport usePanelExpand from '../use-panel-expand';\n\nconst CSS_PREFIX = 'vds-accordion';\n\nconst Accordion = forwardRef(({\n  allowMultipleExpanded,\n  children,\n  className,\n  defaultExpandedId,\n  id = shortid.generate(),\n  onChange,\n  ...remainingProps\n}, ref) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const { focusedId, expandedId, updateFocusedId, updateExpandedId } = usePanelExpand(\n    defaultExpandedId,\n    onChange,\n    allowMultipleExpanded\n  );\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, className)}\n      id={uid}\n      ref={ref}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) =>  cloneElement(child, {\n          expanded: expandedId.includes(k),\n          focus: k === focusedId,\n          id: `${k}--${uid}`,\n          index: k,\n          onClick: (e, index) => updateExpandedId(e, index),\n          onKeyDown: (e, index) => updateFocusedId(e, index, Children.count(children))\n        }))\n      }\n    </div>\n  );\n});\n\nAccordion.propTypes = {\n  /**\n  * Allow multiple expanded\n  */\n  allowMultipleExpanded: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Array of panel indexes to initially show as expanded\n  */\n  defaultExpandedId: array,\n\n  /**\n  * disabled\n  */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n  * On Change fn\n  */\n  onChange: func\n};\n\nAccordion.defaultProps = {\n  defaultExpandedId: []\n};\n\n\nAccordion.displayName = 'Accordion';\n\nexport default Accordion;\n","import React from 'react';\nimport { bool, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-accordion-body';\nconst CSS_STATE = 'vds-state';\n\nconst AccordionBody = ({ children, className, expanded, focus, id, index, ...remainingProps }) => ( // eslint-disable-line\n  <div\n    aria-hidden={expanded ? 'false' : 'true'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: Boolean(expanded) === false\n    }, className)}\n    id={`accordion-body-${id}`}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nAccordionBody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number\n};\n\nAccordionBody.displayName = 'AccordionBody';\n\nexport default AccordionBody;\n","import React, { Children, cloneElement, Fragment } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst AccordionItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <Fragment>\n    {\n      Children.map(children, child =>  cloneElement(child, { expanded, focus, id, index, onClick, onKeyDown }))\n    }\n  </Fragment>\n);\n\nAccordionItem.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nAccordionItem.displayName = 'AccordionItem';\n\nexport default AccordionItem;\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\n\nconst CSS_PREFIX = 'vds-accordion-heading';\nconst CSS_STATE = 'vds-state';\n\nconst AccordionHeading = forwardRef(({\n  children,\n  className,\n  expanded,\n  focus,\n  iconCollapse,\n  iconExpand,\n  id,\n  index,\n  onBlur,\n  onClick,\n  onFocus,\n  onKeyDown,\n  ...remainingProps\n}, ref) => {\n  const [focused, setFocused] = useState(focus);\n\n  ref = ref || useRef(null);\n\n  useEffect(() => {\n    if (focus && ref.current) {\n      ref.current.focus();\n    }\n    setFocused(focus);\n  }, [focus, ref]);\n\n  const handleFocus = event => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  const handleClick = (event, id) => {\n    if (typeof onClick === 'function') {\n      onClick(event, id);\n    }\n  };\n\n  const handleKeyDown = (event, id) => {\n    if (typeof onKeyDown === 'function') {\n      onKeyDown(event, id);\n    }\n  };\n\n  return (\n    <button\n      aria-controls={`accordion-body-${id}`}\n      aria-expanded={expanded ? 'true' : 'false'}\n      className={classnames(CSS_PREFIX, {\n        [`${CSS_STATE}--active`]: Boolean(expanded),\n        [`${CSS_STATE}--focus`]: Boolean(focused)\n      }, className)}\n      id={`accordion-heading-${id}`}\n      onBlur={handleBlur}\n      onClick={e => handleClick(e, index)}\n      onFocus={handleFocus}\n      onKeyDown={e => handleKeyDown(e, index)}\n      ref={ref}\n      {...remainingProps}\n    >\n      {expanded ? iconCollapse : iconExpand}\n      {children}\n    </button>\n  );\n});\n\nAccordionHeading.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Expanded\n  */\n  expanded: bool,\n\n  /**\n  * Focus\n  */\n  focus: bool,\n\n  /**\n  * Icon collapsed\n  */\n  iconCollapse: node,\n\n  /**\n  * Icon expanded\n  */\n  iconExpand: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onClick: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onKeyDown: func\n};\n\nAccordionHeading.defaultProps = {\n  iconCollapse: <Icon name=\"arrow-collapse\" resolution=\"tiny\" />,\n  iconExpand: <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n};\n\nAccordionHeading.displayName = 'AccordionHeading';\n\nexport default AccordionHeading;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-accordion-title';\n\nconst AccordionTitle = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nAccordionTitle.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nAccordionTitle.displayName = 'AccordionTitle';\n\nexport default AccordionTitle;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-accordion-subtitle';\n\nconst AccordionSubtitle = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nAccordionSubtitle.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nAccordionSubtitle.displayName = 'AccordionSubtitle';\n\nexport default AccordionSubtitle;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport List from '../../list';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Accordion from '../../accordion';\nimport AccordionBody from '../../accordion-body';\nimport AccordionItem from '../../accordion-item';\nimport AccordionHeading from '../../accordion-heading';\nimport AccordionTitle from '../../accordion-title';\nimport AccordionSubtitle from '../../accordion-subtitle';\n\nconst AccordionExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Accordion id=\"accordion-test-id\">\n          <AccordionItem>\n            <AccordionHeading>\n              <AccordionTitle>\n                Section A\n              </AccordionTitle>\n            </AccordionHeading>\n            <AccordionBody>\n              <Typography>\n                Camelot! On second thoughts, let&apos;s not go there. It is a silly place.\n                What a strange person. And this isn&apos;t my nose. This is a false one.\n                Burn her anyway! Listen. Strange women lying in ponds distributing swords is no basis\n                for a system of government. Supreme executive power derives from a mandate from the masses,\n                not from some farcical aquatic ceremony.\n              </Typography>\n            </AccordionBody>\n          </AccordionItem>\n          <AccordionItem>\n            <AccordionHeading>\n              <AccordionTitle>\n                Section B\n              </AccordionTitle>\n              <AccordionSubtitle>\n                Subtitle\n              </AccordionSubtitle>\n            </AccordionHeading>\n            <AccordionBody>\n              <Typography>\n                The swallow may fly south with the sun, and the house martin or\n                the plover may seek warmer climes in winter, yet these are not strangers to our land.\n                Oh! Come and see the violence inherent in the system! Help, help, I&apos;m being repressed!\n              </Typography>\n            </AccordionBody>\n          </AccordionItem>\n          <AccordionItem>\n            <AccordionHeading>\n              <AccordionTitle>\n                Section C\n              </AccordionTitle>\n            </AccordionHeading>\n            <AccordionBody>\n              <Typography>\n                But with the blast shield down, I can&apos;t even see! How am I supposed to fight?\n                Escape is not his plan. I must face him, alone. I call it luck.\n                Your eyes can deceive you. Don&apos;t trust them. I don&apos;t know what you&apos;re talking about.\n                I am a member of the Imperial Senate on a diplomatic mission to\n              </Typography>\n              <List type=\"ordered\">\n                <li>Apples</li>\n                <li>Bananas</li>\n                <li>Bread</li>\n                <li>Pineapple cake</li>\n                <li>Coffee beans</li>\n              </List>\n            </AccordionBody>\n          </AccordionItem>\n        </Accordion>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default AccordionExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/accordion/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/accordion/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/accordion/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst AccordionExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Accordion\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Accordion</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/accordion`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Accordion Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/accordion/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/accordion/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/accordion`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/accordion`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/accordion/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/accordion/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/accordion/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/accordion/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nAccordionExample.displayName = 'AccordionExample';\n\nexport default AccordionExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import { useState } from 'react';\n\nexport default (defaultExpandedId, onChange, allowMultipleExpanded) => {\n  const [focusedId, setFocusedId] = useState();\n\n  const [expandedId, setExpandedId] = useState(\n    !allowMultipleExpanded ? defaultExpandedId.slice(0, 1) : defaultExpandedId\n  );\n\n  const updateFocusedId = (e, index, count) => {\n    const code = e.charCode || e.keyCode;\n\n    if (code === 35) {\n      e.preventDefault();\n      setFocusedId(count - 1);\n    }\n\n    if (code === 36) {\n      e.preventDefault();\n      setFocusedId(0);\n    }\n\n    if (code === 38) {\n      e.preventDefault();\n      setFocusedId(index - 1 < 0 ? count - 1 : index - 1);\n    }\n\n    if (code === 40) {\n      e.preventDefault();\n      setFocusedId((index + 1) % count);\n    }\n  };\n\n  const updateExpandedId = (e, index) => {\n    let ids = [...expandedId];\n    const disclosureIndex = ids.findIndex(i => i === index);\n\n    if (disclosureIndex === -1 && Number.isInteger(index)) {\n      ids = allowMultipleExpanded ? [...ids, index] : [index];\n    }\n\n    if (disclosureIndex > -1) {\n      ids = [...ids.slice(0, disclosureIndex), ...ids.slice(disclosureIndex + 1)];\n    }\n\n    setExpandedId(ids);\n    if (typeof onChange === 'function') {\n      onChange(index);\n    }\n  };\n\n  return { focusedId, expandedId, updateFocusedId, updateExpandedId };\n};\n"],"sourceRoot":""}