{"version":3,"sources":["components/wizard/index.js","components/wizard-step/index.js","components/wizard/example/index.js","pages/components/wizard.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","components/tooltip/index.js"],"names":["Wizard","children","className","remainingProps","classnames","displayName","WizardStep","forwardRef","ref","active","completed","error","Boolean","style","boxShadow","undefined","propTypes","bool","node","string","WizardExample","useState","steps","label","state","setState","tag","map","step","key","tooltip","placement","trigger","id","ariaLabel","iconType","disabled","findIndex","onClick","index","length","k","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","Array","isArray","v","join","defaultValue","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","colorScheme","flippable","isFullWidth","includes","oneOfType","number","ButtonIcon","aria-label","isRequired","Tooltip","shortid","generate","uid","useRef","current","modifiers","offset","enabled","getTooltipProps","tooltipRef","getTriggerProps","triggerRef","cloneElement","aria-hidden"],"mappings":"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","file":"static/js/39.17dc5472.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-wizard';\n\nconst Wizard = ({ children, className, ...remainingProps }) => (\n  <ul\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n);\n\nWizard.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nWizard.displayName = 'Wizard';\n\nexport default Wizard;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-wizard-step';\nconst CSS_STATE = 'vds-state';\n\nconst WizardStep = forwardRef(({\n  active,\n  children,\n  className,\n  completed,\n  error,\n  ...remainingProps\n}, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--completed`]: Boolean(completed),\n      [`${CSS_STATE}--error`]: Boolean(error)\n    }, className)}\n    ref={ref}\n    style={active ? { boxShadow: '0 0 0 1px #003ea9' } : undefined}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nWizardStep.propTypes = {\n  /**\n  * Active\n  */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Completed\n  */\n  completed: bool,\n\n  /**\n  * Error\n  */\n  error: bool\n};\n\nWizardStep.displayName = 'WizardStep';\n\nexport default WizardStep;\n","import React, { useState } from 'react';\nimport ButtonIcon from '../../button-icon';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Tooltip from '../../tooltip';\nimport Typography from '../../typography';\nimport Wizard from '../../wizard';\nimport WizardStep from '../../wizard-step';\n\nconst WizardExample = () => {\n  const [state, setState] = useState({\n    steps: [\n      {\n        active: true,\n        completed: false,\n        error: false,\n        label: '1'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '2'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '3'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '4'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '5'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '6'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '7'\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '8'\n      }]\n  });\n\n  const handleClickPrevious = () => {\n    let index = state.steps.findIndex(step => step.active === true);\n    index = index === -1 ? state.steps.length : index;\n    const steps = state.steps.map((step, k) => ({\n      active: k === index - 1,\n      completed: k < index - 1, // use your own logic to determine completed state\n      error: k <= index - 1 ? (k === 0 ? true : step.error) : false, // set first item to error for demo\n      label: step.label\n    }));\n\n    setState({ steps });\n  };\n\n  const handleClickNext = () => {\n    const index = state.steps.findIndex(step => step.active === true);\n    const steps = state.steps.map((step, k) => ({\n      active: k === index + 1,\n      completed: k <= index, // use your own logic/state to determine completed state\n      error: k <= index ? (k === 0 ? true : step.error) : false, // set first item to error for demo\n      label: step.label\n    }));\n\n    setState({ steps });\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Wizard (BYO-State) Bring your own state</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Wizard>\n            {\n              state.steps.map((step, key) => (\n                <WizardStep\n                  key={key}\n                  active={step.active}\n                  completed={step.completed}\n                  error={step.error}\n                >\n                  <Tooltip\n                    tooltip={`Step ${step.label}`}\n                    placement=\"top\"\n                    trigger=\"hover\"\n                    id={`stepper-${key}`}\n                  >\n                    <ButtonIcon\n                      ariaLabel={step.label}\n                      iconType=\"light-tiny\"\n                    >\n                      {step.error ? '!' : step.label}\n                    </ButtonIcon>\n                  </Tooltip>\n                </WizardStep>\n              ))\n            }\n          </Wizard>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonText\n            disabled={state.steps.findIndex(step => step.active === true) === 0}\n            onClick={handleClickPrevious}\n          >\n            Previous\n          </ButtonText>\n\n          <ButtonText\n            disabled={state.steps.findIndex(step => step.active === true) === -1}\n            onClick={handleClickNext}\n          >\n            Next\n          </ButtonText>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default WizardExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/wizard/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/wizard/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/wizard/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst WizardExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Wizard\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Wizard</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/wizard`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Wizard Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/wizard/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/wizard/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/wizard`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/wizard`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/wizard/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/wizard/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/wizard/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/wizard/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nWizardExample.displayName = 'WizardExample';\n\nexport default WizardExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { cloneElement, Fragment, useRef } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport TooltipTrigger from 'react-popper-tooltip';\n\nconst CSS_PREFIX = 'vds-tooltip';\nconst CSS_STATE = 'vds-state';\n\nconst Tooltip = ({ className, tooltip, children, id = shortid.generate(), trigger, ...remainingProps }) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <TooltipTrigger\n      trigger={trigger}\n      {...remainingProps}\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: '0, 4px'\n        }\n      }}\n      tooltip={({ getTooltipProps, tooltipRef }) => (\n        <div\n          {...getTooltipProps({\n            className: classnames(CSS_PREFIX, `${CSS_STATE}--show`, className),\n            ref: tooltipRef\n          })}\n        >\n          <div className={`${CSS_PREFIX}-content`}>\n            <span className={`${CSS_PREFIX}-text`}>{tooltip}</span>\n            <span className={`${CSS_PREFIX}-pointer`} />\n          </div>\n        </div>\n      )}\n    >\n      {({ getTriggerProps, triggerRef }) => (\n        <Fragment>\n          {cloneElement(children, {\n            ...getTriggerProps({\n              'aria-controls': uid,\n              'aria-describedby': uid,\n              ref: triggerRef\n            })\n          })}\n          <span aria-hidden=\"true\" id={uid} style={{ display: 'none' }}>\n            {tooltip}\n          </span>\n        </Fragment>\n      )}\n    </TooltipTrigger>\n  );\n};\nTooltip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Popper Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Tooltip\n   */\n  tooltip: node.isRequired,\n\n  /**\n   * Trigger\n   */\n  trigger: oneOf([\n    'click',\n    'hover',\n    'right-click',\n    'none'\n  ])\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n"],"sourceRoot":""}