{"version":3,"sources":["components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","../../../src/utils.ts","../../../src/Tooltip.tsx","../../../src/TooltipTrigger.tsx","components/tooltip/index.js"],"names":["ScreenReader","forwardRef","ref","children","className","Tag","tag","remainingProps","classnames","propTypes","node","string","elementType","defaultProps","displayName","KEY_CODES","TabList","orientation","role","selectedTab","useRef","useState","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","useEffect","Array","from","current","querySelectorAll","Boolean","Children","map","child","k","cloneElement","key","onClick","e","props","handleClick","onKeyDown","code","charCode","keyCode","count","length","fIndex","preventDefault","focus","handleKeyDown","selected","tabIndex","Number","isInteger","DataTable","customizableColumns","dividerLines","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","size","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","colorScheme","disabled","flippable","isFullWidth","type","undefined","TooltipContext","React","callAll","fns","args","fn","canUseDOM","window","setRef","MUTATION_OBSERVER_CONFIG","childList","subtree","Tooltip","observer","tooltipRef","handleOutsideClick","event","parentOutsideClickHandler","hideTooltip","clearScheduled","handleOutsideRightClick","parentOutsideRightClickHandler","addOutsideClickHandler","document","removeOutsideClickHandler","addOutsideRightClickHandler","removeOutsideRightClickHandler","getTooltipRef","getArrowProps","style","getTooltipProps","onMouseEnter","onMouseLeave","contextValue","isParentNoneTriggered","addParentOutsideClickHandler","addParentOutsideRightClickHandler","removeParentOutsideClickHandler","removeParentOutsideRightClickHandler","componentDidMount","this","MutationObserver","isTriggeredBy","componentDidUpdate","closeOnOutOfBoundaries","componentWillUnmount","render","arrowProps","placement","tooltip","value","arrowRef","trigger","Component","contextType","DEFAULT_MODIFIERS","preventOverflow","boundariesElement","TooltipTrigger","state","tooltipShown","defaultTooltipShown","hideTimeout","showTimeout","popperOffset","setTooltipState","cb","clearTimeout","showTooltip","pageX","pageY","toggleTooltip","action","clickToggle","contextMenuToggle","getTriggerProps","onTouchEnd","onContextMenu","onMouseMove","onFocus","onBlur","getTriggerRef","modifiers","usePortal","portalContainer","followCursor","restProps","popper","innerRef","followCursorModifier","enabled","order","outOfBoundaries","scheduleUpdate","width","height","x","y","triggerRef","getState","createPortal","isControlled","delayHide","delayShow","onVisibilityChange","id","shortid","generate","uid","offset","hidden","aria-hidden","display"],"mappings":"4KAMMA,EAAeC,sBAAW,WAAuDC,GAAvD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAgBC,EAA7B,EAAwBC,IAAaC,EAArC,qDAC9B,kBAACF,EAAD,eACED,UAAWI,IAJI,oBAImBJ,GAClCF,IAAKA,GACDK,GAEHJ,MAILH,EAAaS,UAAY,CAIvBN,SAAUO,OAKVN,UAAWO,SAKXL,IAAKM,eAGPZ,EAAaa,aAAe,CAC1BP,IAAK,QAGPN,EAAac,YAAc,eAEZd,O,oGCjCTe,EACQ,GADRA,EAEQ,GAFRA,EAGS,GAHTA,EAIM,GAJNA,EAKC,GALDA,EAME,GAGFC,EAAUf,sBAAW,WAOxBC,GAAS,IANVC,EAMS,EANTA,SACAC,EAKS,EALTA,UACAa,EAIS,EAJTA,YACAC,EAGS,EAHTA,KACAC,EAES,EAFTA,YACGZ,EACM,2EACTL,EAAMA,GAAOkB,mBADJ,MAEuCC,mBAASF,GAFhD,mBAEFG,EAFE,KAEgBC,EAFhB,OAG+BF,mBAASC,GAHxC,mBAGFE,EAHE,KAGYC,EAHZ,OAIqCJ,mBAAS,IAJ9C,mBAIFK,EAJE,KAIiBC,EAJjB,KAMTC,qBAAU,WACRD,EAAiBE,MAAMC,KACrB5B,EAAI6B,QAAQC,iBAAiB,+CAE9B,CAAC7B,EAAUD,IAEd0B,qBAAU,WACRL,EAAoBJ,KACnB,CAACA,IAsDJ,OACE,sCACEf,UAAWI,IAAW,GAAD,OAvFR,UAuFQ,kCAvFR,UAuFQ,aACAS,GAAgBgB,QAAQhB,IAC1Cb,GACHF,IAAKA,EACLgB,KAAMA,GACFX,GAGF2B,WAASC,IAAIhC,GAAU,SAACiC,EAAOC,GAAR,OACrB,kBAAC,IAAD,CAASnB,KAAK,QAEVoB,uBAAaF,EAAO,CAClBG,IAAKF,EACLG,QAAS,SAAAC,GAAC,OAnEJ,SAACA,EAAGJ,EAAGD,GACzBb,EAAoBc,GACpBZ,EAAgBY,GAEmB,oBAAxBD,EAAMM,MAAMF,SACrBJ,EAAMM,MAAMF,QAAQC,EAAGJ,GA8DCM,CAAYF,EAAGJ,EAAGD,IAChCQ,UAAW,SAAAH,GAAC,OA3DJ,SAACA,EAAGJ,EAAGD,GAC3B,IAAMS,EAAOJ,EAAEK,UAAYL,EAAEM,QACvBC,EAAQtB,EAAkBuB,OAC1BC,EAAS1B,GAAgB,EAE/B,OAAQqB,GACN,KAAK9B,EAGH,OAFA0B,EAAEU,iBACF1B,EAAgBuB,EAAQ,GACjBtB,EAAkBsB,EAAQ,GAAGI,QAGtC,KAAKrC,EAGH,OAFA0B,EAAEU,iBACF1B,EAAgB,GACTC,EAAkB,GAAG0B,QAG9B,KAAKrC,EACL,KAAKA,EAGH,OAFA0B,EAAEU,iBACF1B,EAAgByB,EAAS,EAAI,EAAIF,EAAQ,EAAIE,EAAS,GAC/CxB,EAAkBwB,EAAS,EAAI,EAAIF,EAAQ,EAAIE,EAAS,GAAGE,QAGpE,KAAKrC,EACL,KAAKA,EAGH,OAFA0B,EAAEU,iBACF1B,GAAiByB,EAAS,GAAKF,GACxBtB,GAAmBwB,EAAS,GAAKF,GAAOI,QAWnD,MAJqC,oBAA1BhB,EAAMM,MAAME,WACrBR,EAAMM,MAAME,UAAUH,EAAGJ,GAGpBZ,EAAgBH,GAmBK+B,CAAcZ,EAAGJ,EAAGD,IACpCkB,SAAUhC,IAAqBe,EAC/BkB,SAAUC,OAAOC,UAAUjC,GACvBA,IAAiBa,EAAI,GAAK,EACpB,IAANA,EAAU,GAAK,YAqCnCrB,EAAQH,aAAe,CACrBK,KAAM,WAGRF,EAAQF,YAAc,UAEPE,O,0FClJT0C,EAAYzD,sBAAW,WAa1BC,GAb0B,MAC3BC,EAD2B,EAC3BA,SACAC,EAF2B,EAE3BA,UACAuD,EAH2B,EAG3BA,oBACAC,EAJ2B,EAI3BA,aACAC,EAL2B,EAK3BA,cACAC,EAN2B,EAM3BA,OACAC,EAP2B,EAO3BA,kBACAC,EAR2B,EAQ3BA,iBACAC,EAT2B,EAS3BA,aACAC,EAV2B,EAU3BA,KACAC,EAX2B,EAW3BA,aACG5D,EAZwB,yLAc3B,2CACMA,EADN,CAEEH,UAAWI,IAnBI,kBAmBM,6BAlBP,YAkBO,0BACqByB,QAAQ0B,IAD7B,wBAlBP,YAkBO,mBAEc1B,QAAQ2B,IAFtB,wBAlBP,YAkBO,qBAGgB3B,QAAQ4B,IAHxB,wBAlBP,YAkBO,aAIDK,GAASjC,QAAQiC,IAJhB,wBAlBP,YAkBO,YAKOjC,QAAQ6B,IALf,wBAlBP,YAkBO,yBAMoB7B,QAAQ8B,IAN5B,wBAlBP,YAkBO,wBAOmB9B,QAAQ+B,IAP3B,wBAlBP,YAkBO,aAQDC,GAAiBhC,QAAQgC,IARxB,wBAlBP,YAkBO,mBASchC,QAAQkC,IATtB,GAUlB/D,GACHF,IAAKA,IAEJC,MAILuD,EAAUjD,UAAY,CAIpBN,SAAUO,OAKVN,UAAWO,SAKXyD,QAASC,kBAAQC,gBAAM,KAKvBX,oBAAqBY,OAKrBC,KAAMH,kBAAQC,gBAAM,KAKpBV,aAAcW,OAKdV,cAAeU,OAKfT,OAAQS,OAKRR,kBAAmBQ,OAKnBP,iBAAkBO,OAKlBN,aAAcQ,gBAAM,CAAC,eAAgB,kBAKrCP,KAAMO,gBAAM,CAAC,YAKbN,aAAcI,QAGhBb,EAAU5C,YAAc,YAET4C,O,mFCvGTgB,EAAQzE,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcG,EAA3B,+CACvB,yCACEH,UAAWI,IAJI,YAImBJ,GAClCF,IAAKA,GACDK,GAEHJ,MAILuE,EAAMjE,UAAY,CAIhBN,SAAUO,OAKVN,UAAWO,UAGb+D,EAAM5D,YAAc,QAEL4D,O,0FCxBTC,EAAK1E,sBAAW,WAKnBC,GALmB,IACpBC,EADoB,EACpBA,SACAC,EAFoB,EAEpBA,UACAwE,EAHoB,EAGpBA,UACGrE,EAJiB,2DAMpB,sCACEH,UAAWI,IATI,SASM,mCACLoE,GAAc3C,QAAQ2C,IACnCxE,GACHF,IAAKA,GACDK,GAEHJ,MAILwE,EAAGlE,UAAY,CAIbN,SAAUO,OAKVN,UAAWO,SAKXiE,UAAWH,gBAAM,CAAC,SAAU,OAAQ,WAGtCE,EAAG7D,YAAc,KAEF6D,O,mFCpCTE,EAAK5E,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcG,EAA3B,+CACpB,sCACEH,UAAWI,IAJI,SAImBJ,GAClCF,IAAKA,GACDK,GAEHJ,MAIL0E,EAAGpE,UAAY,CAIbN,SAAUO,OAKVN,UAAWO,UAGbkE,EAAG/D,YAAc,KAEF+D,O,mFCxBTC,EAAQ7E,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcG,EAA3B,+CACvB,yCACEH,UAAWI,IAJI,YAImBJ,GAClCF,IAAKA,GACDK,GAEHJ,MAIL2E,EAAMrE,UAAY,CAIhBN,SAAUO,OAKVN,UAAWO,UAGbmE,EAAMhE,YAAc,QAELgE,O,mFCxBTC,EAAK9E,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcG,EAA3B,+CACpB,sCACEH,UAAWI,IAJI,SAImBJ,GAClCF,IAAKA,GACDK,GAEHJ,MAIL4E,EAAGtE,UAAY,CAIbN,SAAUO,OAKVN,UAAWO,UAGboE,EAAGjE,YAAc,KAEFiE,O,oHCxBTC,EAAc,SAAC,GAAD,IAAG7E,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAgBC,EAA7B,EAAwBC,IAAaC,EAArC,qDAClB,kBAACF,EAAD,eACED,UAAWI,IAJI,gBAImBJ,IAC9BG,GAEHJ,IAwBL6E,EAAYlE,YAAc,cAE1BkE,EAAYnE,aAAe,CACzBP,IAAK,QAGQ0E,O,mGCjCTC,EAAahF,sBAAW,WAY3BC,GAZ2B,MAC5BgF,EAD4B,EAC5BA,OACA/E,EAF4B,EAE5BA,SACAC,EAH4B,EAG5BA,UACA+E,EAJ4B,EAI5BA,YACAC,EAL4B,EAK5BA,SACAC,EAN4B,EAM5BA,UACAC,EAP4B,EAO5BA,YACApE,EAR4B,EAQ5BA,KACKb,EATuB,EAS5BC,IACAiF,EAV4B,EAU5BA,KACGhF,EAXyB,+HAa5B,kBAACF,EAAD,eACED,UAAWI,KAAU,6BAjBN,iBAkB+B,IAAzByB,QAAQkD,IADR,wBAhBP,YAgBO,YAEOlD,QAAQiD,IAFf,wBAjBN,eAiBM,aAGAC,GAAgBlD,QAAQkD,IAHxB,wBAhBP,YAgBO,eAIUlD,QAAQoD,IAJlB,wBAjBN,eAiBM,eAKWpD,QAAQqD,IALnB,wBAhBP,YAgBO,cAMSrD,QAAQmD,IANjB,GAOlBhF,GACHgF,SAAUA,EACVlE,KAAc,WAARb,OAAmBmF,EAAYtE,EACrCqE,KAAc,WAARlF,EAAmBkF,OAAOC,EAChCtF,IAAKA,GACDK,GAEJ,kBAAC,IAAD,KAAcJ,OAIlB8E,EAAWxE,UAAY,CAIrByE,OAAQX,OAKRpE,SAAUO,OAKVN,UAAWO,SAKXwE,YAAaV,gBAAM,CACjB,UACA,YACA,aAMFW,SAAUb,OAKVc,UAAWd,OAKXe,YAAaf,OAKbrD,KAAMP,SAKNL,IAAKmE,gBAAM,CACT,IACA,SACA,MACA,SAMFc,KAAM5E,UAGRsE,EAAWpE,aAAe,CACxBK,KAAM,SACNZ,IAAK,SACLiF,KAAM,UAGRN,EAAWnE,YAAc,aAEVmE,O,oKC1GFQ,EAAiBC,kBAAvB,IAOMC,EAAU,W,2BAAIC,EAAJ,yBAAIA,EAAJ,gB,OAAwB,W,2BAAIC,EAAJ,yBAAIA,EAAJ,gB,OAC7CD,EAAA,SAAY,SAAAE,G,OAAMA,GAAMA,eAAV,QAIHC,EAAY,W,QAEH,qBAAXC,SACPA,OADA,WAEAA,gBAJqB,gBAOZC,EAAS,SAAC/F,EAAD,G,GACpB,oBAAWA,E,OACFA,EAAP,GACK,MAAIA,IACTA,cCjBEgG,EAAiD,CACrDC,WADqD,EAErDC,SAAS,GAGLC,E,oJAGIC,gB,EACAC,kB,EAqFAC,mBAAqC,SAAAC,G,GACvC,eAAoB,sBAAyBA,EAAjD,QAAwE,C,IAC/DC,EAA6B,EADkC,kC,EAEhC,EAFgC,MAE/DC,EAF+D,eAItEC,EAJsE,oBAKtED,IACA,GACED,O,EAKEG,wBAA0C,SAAAJ,G,GAC5C,eAAoB,sBAAyBA,EAAjD,QAAwE,C,IAC/DK,EAAkC,EAD6B,uC,EAEhC,EAFgC,MAE/DH,EAF+D,eAItEC,EAJsE,oBAKtED,IACA,GACEG,O,EAKEC,uBAAyB,WAC/BC,0CAA2C,EAA3CA,oBACAA,uCAAwC,EAAxCA,qB,EAGMC,0BAA4B,WAClCD,6CAA8C,EAA9CA,oBACAA,0CAA2C,EAA3CA,qB,EAGME,4BAA8B,W,OACpCF,6CAEE,EAHkC,0B,EAM9BG,+BAAiC,W,OACvCH,gDAEE,EAHqC,0B,EAMjCI,cAAgB,Y,EACtB,aACAnB,EAAO,QAAD,SAANA,I,EAGMoB,cAAgB,Y,YAAA,IAAC3E,MAAD,I,eAAA,GAEtB4E,MAAO,OAAF,IAAE,CAAF,GAAM5E,EAAN,SAAsB,mBAAtB,U,EAGC6E,gBAAkB,Y,YAAA,IAAC7E,MAAD,I,eAAA,KAEpB,0BAA+B,CACjC8E,aAAc7B,EAAQ,QAAD,eAA4BjD,EADhB,cAEjC+E,aAAc9B,EAAQ,QAAD,YAAyBjD,EAAzB,eAJC,CAMxB4E,MAAO,OAAF,IAAE,CAAF,GAAM5E,EAAN,SAAsB,QAAtB,U,EAGCgF,aAAe,CACrBC,sBADqB,SACE,gBACvBC,6BAA8B,EAFT,uBAGrBC,kCAAmC,EAHd,4BAIrBnB,0BAA2B,EAJN,mBAKrBI,+BAAgC,EALX,wBAMrBgB,gCAAiC,EANZ,0BAOrBC,qCAAsC,EAAKZ,gC,8CA7JtCa,kBAAP,W,eACoBC,KAAK3B,SAAW,IAAI4B,kBAAiB,WACrD,6BAEF5B,QAAiB2B,KAAjB3B,cAGE2B,KAAKE,cAAc,UACnBF,KAAKE,cADL,UAEAF,KAAKE,cAHP,eAIE,C,MAIIF,KAJJ,QAEEH,EAFF,kCAGEC,EAHF,uC,KAKA,yB,KACA,8BACA,GACED,IAEF,GACEC,M,EAKCK,mBAAP,WACMH,KAAKvF,MAAM2F,wBAA0BJ,KAAKvF,MAA9C,iB,KACE,qB,EAIG4F,qBAAP,W,GACML,KAAJ,U,KACE,sBAIAA,KAAKE,cAAc,UACnBF,KAAKE,cADL,UAEAF,KAAKE,cAHP,eAIE,C,MAKIF,KALJ,QAEEN,EAFF,wBAGEC,EAHF,+BAIEC,EAJF,oC,KAMA,4B,KACA,iC,KACA,0B,KACA,gCACKF,GAAL,GACEC,KAEGD,GAAL,GACEE,M,EAKCU,OAAP,W,MAC2CN,KAD3B,MACPO,EADO,aACKC,EADL,YACgBC,EADhB,U,OAIZ,kBAACjD,EAAD,UAAyBkD,MAAOV,KAAKP,cAClCgB,EAAQ,CACPE,SAAUJ,EADH,IAEPnB,cAAeY,KAFR,cAGPV,gBAAiBU,KAHV,gBAIPQ,UAJO,EAKPlC,WAAY0B,KAAKb,kB,EAMjBe,cAAR,Y,IACSU,EAAWZ,KADuB,c,OAGvCY,OAAsBhH,kBAA0BgH,WADlD,I,GApFkBC,aAAhBzC,EACU0C,YAActD,ECC9B,IAAMuD,EAAwC,CAC5CC,gBAAiB,CACfC,kBAAmB,aAIjBC,E,oJAiBGC,MAA6B,CAClCC,aAAc,QAAWC,qB,EAGnBC,mB,EACAC,mB,EACAC,oB,EA6GAC,gBAAkB,Y,IAClBC,EAAK,W,OAAM,2BAA8BP,EAApC,e,EACX,eAAsBO,IAAO,aAA7B,I,EAGM/C,eAAiB,WACvBgD,aAAa,EAAbA,aACAA,aAAa,EAAbA,c,EAGMC,YAAc,Y,IAAEC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,M,EAC7B,iB,IACIX,EAA6B,CAC/BC,cAAc,GAEZ,QAAJ,eACED,EAAQ,OAAH,IAAG,CAAH,MAEHU,MAFG,EAGHC,W,EAGJ,YAAmB/D,OAAA,YACjB,W,OAAM,kBAAN,KACA,QAFF,Y,EAMMW,YAAc,W,EACpB,iB,EACA,YAAmBX,OAAA,YACjB,W,OAAM,kBAAqB,CAACqD,cAAc,MAC1C,QAFF,Y,EAMMW,cAAgB,Y,IAAEF,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,MACzBE,EAAS,2BAAf,c,EACA,GAAa,CAACH,MAAD,EAAQC,W,EAGfG,YAAuC,YAC7CzD,mB,IACOqD,EAAgBrD,EAFmD,MAE5DsD,EAAStD,EAFmD,MAGpEwD,EAAS,mCAAf,gB,EACA,GAAa,CAACH,MAAD,EAAQC,W,EAGfI,kBAA6C,SAAA1D,GACnDA,mB,IACOqD,EAAgBrD,EAFqC,MAE9CsD,EAAStD,EAFqC,MAGtDwD,EAAS,mCAAf,gB,EACA,GAAa,CAACH,MAAD,EAAQC,W,EAUfK,gBAAkB,Y,YAAoC,IAAnC1H,MAA4B,I,eACrD,KAEM,0BAA+B,CACjCF,QAASmD,EAAQ,EAAD,YAAmBjD,EADF,SAEjC2H,WAAY1E,EAAQ,EAAD,YAAmBjD,EAAnB,aAJvB,GAMM,gCAAqC,CACvC4H,cAAe3E,EAAQ,EAAD,kBAAyBjD,EAAzB,gBAP1B,GASM,uCACF8E,aAAc7B,EAAQ,EAAD,YAAmBjD,EADtC,cAEF+E,aAAc9B,EAAQ,EAAD,YAAmBjD,EAAnB,eACjB,sBAA2B,CAC7B6H,YAAa5E,EAAQ,EAAD,YAAmBjD,EAAnB,eAb1B,GAgBM,0BAA+B,CACjC8H,QAAS7E,EAAQ,EAAD,YAAmBjD,EADF,SAEjC+H,OAAQ9E,EAAQ,EAAD,YAAmBjD,EAAnB,W,8CA5Ld4F,qBAAP,W,KACE,kB,EAGKC,OAAP,W,aAcMN,KAdU,MAEZ9H,EAFY,WAGZuI,EAHY,UAIZD,EAJY,YAKZI,EALY,UAMZ6B,EANY,gBAOZC,EAPY,YAQZtC,EARY,yBASZuC,EATY,YAUZC,EAVY,kBAWZC,EAXY,eAYZ1D,EAZY,gBAaT2D,EAbS,8KAgBRC,EACJ,mCACEC,SADF,EAEExC,UAFF,EAGEkC,UAAS,oBAEHG,GAAgB,CAClBI,qBAAsB,CACpBC,SADoB,EAEpBrF,GAAI,SAAAtB,G,OACF,eAAoBA,UAApB,OACA,GAEF4G,MAAO,MATJ,OAHX,IAmBG,Y,IACClL,EAOI,EAPJA,IACAoH,EAMI,EANJA,MAEAmB,EAII,EAJJA,UACAD,EAGI,EAHJA,WACA6C,EAEI,EAFJA,gBACAC,EACI,EADJA,e,GAEIR,GAAgB,EAApB,aAAuC,C,MACd,EADc,MAC9BhB,EAD8B,QACvBC,EADuB,Q,EAEb,EAFa,aAE9BwB,EAF8B,QAEvBC,EAFuB,SAG/BC,EACJ3B,IAAiB9D,eAAiBgB,cAAlC8C,YACIA,EADJA,EADF,EAIM4B,EACJ3B,IAAkB/D,eAAiBgB,cAAnC+C,aACIA,EADJA,EADF,EAIAzC,8C,OAIA,gCACM,CACFkB,WADE,EAEFH,uBAFE,EAGFgD,gBAHE,EAIF5C,UAJE,EAKF6C,eALE,EAMFhE,MANE,EAOFoB,QAPE,EAQFG,WATJ,CAWEjC,eAAgB,EAXlB,eAYED,YAAa,EAZf,YAaEsE,SAAU/K,Q,OAQlB,2BACE,uBAAW+K,SAAUP,IAClB,Y,IAAExK,EAAF,M,OACCC,EAAS,CAACiK,gBAAiB,EAAlB,gBAAwCuB,WAAYzL,OAGhE+H,KAAK2D,aACHhB,EAAYiB,uBAAab,EAAhB,GARhB,K,EAaMc,aAAR,W,YACE,IAAO7D,KAAKvF,MAAM2G,c,EAGZuC,SAAR,W,OACS3D,KAAK6D,eACR7D,KAAKvF,MADF,aAEHuF,KAAKmB,MAFT,c,EA4DMjB,cAAR,Y,IACSU,EAAWZ,KADuB,c,OAGvCY,OAAsBhH,kBAA0BgH,WADlD,I,GA7LyBC,aAAvBK,EAIUtI,aAAe,CAC3BwH,wBAD2B,EAE3BiB,qBAF2B,EAG3ByC,UAH2B,EAI3BC,UAJ2B,EAK3BlB,cAL2B,EAM3BmB,mBFnBgB,aEoBhBxD,UAP2B,QAQ3BoC,gBAAiB9E,IAAciB,SAAL,KARC,KAS3B6B,QAT2B,QAU3B+B,UAAW7E,K,QC3BTM,EAAU,SAAC,GAA2F,IAAzFjG,EAAwF,EAAxFA,UAAWsI,EAA6E,EAA7EA,QAASvI,EAAoE,EAApEA,SAAoE,IAA1D+L,UAA0D,MAArDC,IAAQC,WAA6C,EAAjCvD,EAAiC,EAAjCA,QAAYtI,EAAqB,iEAEnG8L,EADWjL,iBAAO8K,GACHnK,QAErB,OACE,kBAAC,EAAD,eACE8G,QAASA,GACLtI,EAFN,CAGEoK,UAAW,CACT2B,OAAQ,CACNnB,SAAS,EACTmB,OAAQ,WAGZ5D,QAAS,gBAAGnB,EAAH,EAAGA,gBAAiBhB,EAApB,EAAoBA,WAApB,OACP,uCACEgG,QAAM,GACFhF,EAAgB,CAClBnH,UAAWI,IArBJ,cAqBc,UApBf,YAoBe,UAAmCJ,GACxDF,IAAKqG,KAGP,yBAAKnG,UAAS,UAzBL,cAyBK,aACZ,0BAAMA,UAAS,UA1BR,cA0BQ,UAAyBsI,GACxC,0BAAMtI,UAAS,UA3BR,cA2BQ,oBAKpB,gBAAGgK,EAAH,EAAGA,gBAAiBuB,EAApB,EAAoBA,WAApB,OACC,kBAAC,WAAD,KACGrJ,uBAAanC,EAAD,eACRiK,EAAgB,CACjB,gBAAiBiC,EACjB,mBAAoBA,EACpBnM,IAAKyL,MAGT,0BAAMa,cAAY,OAAON,GAAIG,EAAK/E,MAAO,CAAEmF,QAAS,SACjD/D,QA0DbrC,EAAQvF,YAAc,UAEPuF","file":"static/js/5.8dd77856.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport {Ref} from './types';\n\nexport const TooltipContext = React.createContext({});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Fn = (...args: any[]) => void;\ntype FnOrBool = undefined | Fn;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const callAll = (...fns: FnOrBool[]) => (...args: any[]) =>\n  fns.forEach(fn => fn && fn(...args));\n\nexport const noop = () => {};\n\nexport const canUseDOM = () =>\n  !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  );\n\nexport const setRef = (ref: Ref, node: HTMLElement | null) => {\n  if (typeof ref === 'function') {\n    return ref(node);\n  } else if (ref != null) {\n    ref.current = node;\n  }\n};\n","import React, {Component} from 'react';\nimport {\n  GetArrowPropsArg,\n  GetTooltipPropsArg,\n  TooltipProps,\n  TriggerTypes\n} from './types';\nimport {callAll, TooltipContext, setRef} from './utils';\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  subtree: true\n};\n\nclass Tooltip extends Component<TooltipProps> {\n  public static contextType = TooltipContext;\n\n  private observer?: MutationObserver;\n  private tooltipRef!: HTMLElement | null;\n\n  public componentDidMount() {\n    const observer = (this.observer = new MutationObserver(() => {\n      this.props.scheduleUpdate();\n    }));\n    observer.observe(this.tooltipRef!, MUTATION_OBSERVER_CONFIG);\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        removeParentOutsideClickHandler,\n        removeParentOutsideRightClickHandler\n      } = this.context;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.closeOnOutOfBoundaries && this.props.outOfBoundaries) {\n      this.props.hideTooltip();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        isParentNoneTriggered,\n        addParentOutsideClickHandler,\n        addParentOutsideRightClickHandler\n      } = this.context;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public render() {\n    const {arrowProps, placement, tooltip} = this.props;\n\n    return (\n      <TooltipContext.Provider value={this.contextValue}>\n        {tooltip({\n          arrowRef: arrowProps.ref,\n          getArrowProps: this.getArrowProps,\n          getTooltipProps: this.getTooltipProps,\n          placement,\n          tooltipRef: this.getTooltipRef\n        })}\n      </TooltipContext.Provider>\n    );\n  }\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private handleOutsideClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideClickHandler) {\n        parentOutsideClickHandler(event);\n      }\n    }\n  };\n\n  private handleOutsideRightClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideRightClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideRightClickHandler) {\n        parentOutsideRightClickHandler(event);\n      }\n    }\n  };\n\n  private addOutsideClickHandler = () => {\n    document.body.addEventListener('touchend', this.handleOutsideClick!);\n    document.body.addEventListener('click', this.handleOutsideClick!);\n  };\n\n  private removeOutsideClickHandler = () => {\n    document.body.removeEventListener('touchend', this.handleOutsideClick!);\n    document.body.removeEventListener('click', this.handleOutsideClick!);\n  };\n\n  private addOutsideRightClickHandler = () =>\n    document.body.addEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private removeOutsideRightClickHandler = () =>\n    document.body.removeEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private getTooltipRef = (node: HTMLElement | null) => {\n    this.tooltipRef = node;\n    setRef(this.props.innerRef, node);\n  };\n\n  private getArrowProps = (props: GetArrowPropsArg = {}) => ({\n    ...props,\n    style: {...props.style, ...this.props.arrowProps.style}\n  });\n\n  private getTooltipProps = (props: GetTooltipPropsArg = {}) => ({\n    ...props,\n    ...(this.isTriggeredBy('hover') && {\n      onMouseEnter: callAll(this.props.clearScheduled, props.onMouseEnter),\n      onMouseLeave: callAll(this.props.hideTooltip, props.onMouseLeave)\n    }),\n    style: {...props.style, ...this.props.style}\n  });\n\n  private contextValue = {\n    isParentNoneTriggered: this.props.trigger === 'none',\n    addParentOutsideClickHandler: this.addOutsideClickHandler,\n    addParentOutsideRightClickHandler: this.addOutsideRightClickHandler,\n    parentOutsideClickHandler: this.handleOutsideClick,\n    parentOutsideRightClickHandler: this.handleOutsideRightClick,\n    removeParentOutsideClickHandler: this.removeOutsideClickHandler,\n    removeParentOutsideRightClickHandler: this.removeOutsideRightClickHandler\n  };\n}\n\nexport default Tooltip;\n","/**\n * @author Mohsin Ul Haq <mohsinulhaq01@gmail.com>\n */\nimport PopperJS from 'popper.js';\nimport React, {Component} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Manager, Popper, Reference} from 'react-popper';\nimport Tooltip from './Tooltip';\nimport {\n  GetTriggerPropsArg,\n  TooltipTriggerProps,\n  TooltipTriggerState,\n  TriggerTypes\n} from './types';\nimport {callAll, canUseDOM, noop} from './utils';\n\nconst DEFAULT_MODIFIERS: PopperJS.Modifiers = {\n  preventOverflow: {\n    boundariesElement: 'viewport'\n  }\n};\n\nclass TooltipTrigger extends Component<\n  TooltipTriggerProps,\n  TooltipTriggerState\n> {\n  public static defaultProps = {\n    closeOnOutOfBoundaries: true,\n    defaultTooltipShown: false,\n    delayHide: 0,\n    delayShow: 0,\n    followCursor: false,\n    onVisibilityChange: noop,\n    placement: 'right',\n    portalContainer: canUseDOM() ? document.body : null,\n    trigger: 'hover',\n    usePortal: canUseDOM()\n  };\n\n  public state: TooltipTriggerState = {\n    tooltipShown: this.props.defaultTooltipShown\n  };\n\n  private hideTimeout?: number;\n  private showTimeout?: number;\n  private popperOffset?: PopperJS.Offset;\n\n  public componentWillUnmount() {\n    this.clearScheduled();\n  }\n\n  public render() {\n    const {\n      children,\n      tooltip,\n      placement,\n      trigger,\n      getTriggerRef,\n      modifiers,\n      closeOnOutOfBoundaries,\n      usePortal,\n      portalContainer,\n      followCursor,\n      getTooltipRef,\n      ...restProps\n    } = this.props;\n\n    const popper = (\n      <Popper\n        innerRef={getTooltipRef}\n        placement={placement}\n        modifiers={{\n          ...DEFAULT_MODIFIERS,\n          ...(followCursor && {\n            followCursorModifier: {\n              enabled: true,\n              fn: data => {\n                this.popperOffset = data.offsets.popper;\n                return data;\n              },\n              order: 1000\n            }\n          }),\n          ...modifiers\n        }}\n        {...restProps}\n      >\n        {({\n          ref,\n          style,\n          // tslint:disable-next-line\n          placement,\n          arrowProps,\n          outOfBoundaries,\n          scheduleUpdate\n        }) => {\n          if (followCursor && this.popperOffset) {\n            const {pageX, pageY} = this.state;\n            const {width, height} = this.popperOffset;\n            const x =\n              pageX! + width > window.scrollX + document.body.offsetWidth\n                ? pageX! - width\n                : pageX;\n            const y =\n              pageY! + height > window.scrollY + document.body.offsetHeight\n                ? pageY! - height\n                : pageY;\n            style.transform = `translate3d(${x}px, ${y}px, 0`;\n          }\n\n          return (\n            <Tooltip\n              {...{\n                arrowProps,\n                closeOnOutOfBoundaries,\n                outOfBoundaries,\n                placement,\n                scheduleUpdate,\n                style,\n                tooltip,\n                trigger\n              }}\n              clearScheduled={this.clearScheduled}\n              hideTooltip={this.hideTooltip}\n              innerRef={ref}\n            />\n          );\n        }}\n      </Popper>\n    );\n\n    return (\n      <Manager>\n        <Reference innerRef={getTriggerRef}>\n          {({ref}) =>\n            children({getTriggerProps: this.getTriggerProps, triggerRef: ref})\n          }\n        </Reference>\n        {this.getState() &&\n          (usePortal ? createPortal(popper, portalContainer) : popper)}\n      </Manager>\n    );\n  }\n\n  private isControlled() {\n    return this.props.tooltipShown !== undefined;\n  }\n\n  private getState() {\n    return this.isControlled()\n      ? this.props.tooltipShown\n      : this.state.tooltipShown;\n  }\n\n  private setTooltipState = (state: TooltipTriggerState) => {\n    const cb = () => this.props.onVisibilityChange(state.tooltipShown);\n    this.isControlled() ? cb() : this.setState(state, cb);\n  };\n\n  private clearScheduled = () => {\n    clearTimeout(this.hideTimeout);\n    clearTimeout(this.showTimeout);\n  };\n\n  private showTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    this.clearScheduled();\n    let state: TooltipTriggerState = {\n      tooltipShown: true\n    };\n    if (this.props.followCursor) {\n      state = {\n        ...state,\n        pageX,\n        pageY\n      };\n    }\n    this.showTimeout = window.setTimeout(\n      () => this.setTooltipState(state),\n      this.props.delayShow\n    );\n  };\n\n  private hideTooltip = () => {\n    this.clearScheduled();\n    this.hideTimeout = window.setTimeout(\n      () => this.setTooltipState({tooltipShown: false}),\n      this.props.delayHide\n    );\n  };\n\n  private toggleTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    const action = this.getState() ? 'hideTooltip' : 'showTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private clickToggle: React.MouseEventHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private contextMenuToggle: React.MouseEventHandler = event => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private getTriggerProps = (props: GetTriggerPropsArg = {}) => {\n    return {\n      ...props,\n      ...(this.isTriggeredBy('click') && {\n        onClick: callAll(this.clickToggle, props.onClick),\n        onTouchEnd: callAll(this.clickToggle, props.onTouchEnd)\n      }),\n      ...(this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(this.contextMenuToggle, props.onContextMenu)\n      }),\n      ...(this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(this.hideTooltip, props.onMouseLeave),\n        ...(this.props.followCursor && {\n          onMouseMove: callAll(this.showTooltip, props.onMouseMove)\n        })\n      }),\n      ...(this.isTriggeredBy('focus') && {\n        onFocus: callAll(this.showTooltip, props.onFocus),\n        onBlur: callAll(this.hideTooltip, props.onBlur)\n      })\n    };\n  };\n}\n\nexport default TooltipTrigger;\n","import React, { cloneElement, Fragment, useRef } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport TooltipTrigger from 'react-popper-tooltip';\n\nconst CSS_PREFIX = 'vds-tooltip';\nconst CSS_STATE = 'vds-state';\n\nconst Tooltip = ({ className, tooltip, children, id = shortid.generate(), trigger, ...remainingProps }) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <TooltipTrigger\n      trigger={trigger}\n      {...remainingProps}\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: '0, 4px'\n        }\n      }}\n      tooltip={({ getTooltipProps, tooltipRef }) => (\n        <div\n          hidden\n          {...getTooltipProps({\n            className: classnames(CSS_PREFIX, `${CSS_STATE}--show`, className),\n            ref: tooltipRef\n          })}\n        >\n          <div className={`${CSS_PREFIX}-content`}>\n            <span className={`${CSS_PREFIX}-text`}>{tooltip}</span>\n            <span className={`${CSS_PREFIX}-pointer`} />\n          </div>\n        </div>\n      )}\n    >\n      {({ getTriggerProps, triggerRef }) => (\n        <Fragment>\n          {cloneElement(children, {\n            ...getTriggerProps({\n              'aria-controls': uid,\n              'aria-describedby': uid,\n              ref: triggerRef\n            })\n          })}\n          <span aria-hidden=\"true\" id={uid} style={{ display: 'none' }}>\n            {tooltip}\n          </span>\n        </Fragment>\n      )}\n    </TooltipTrigger>\n  );\n};\nTooltip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Popper Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Tooltip\n   */\n  tooltip: node.isRequired,\n\n  /**\n   * Trigger\n   */\n  trigger: oneOf([\n    'click',\n    'hover',\n    'right-click',\n    'none'\n  ])\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n"],"sourceRoot":""}