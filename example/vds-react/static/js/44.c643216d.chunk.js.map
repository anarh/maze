{"version":3,"sources":["components/panel/index.js","components/panel-content/index.js","components/panel-panel/index.js","components/panel-tabs/index.js","components/panel-tabs-close/index.js","components/panel/example/index.js","pages/components/panel.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js"],"names":["Panel","forwardRef","ref","animated","children","className","hide","open","remainingProps","aria-expanded","classnames","Boolean","propTypes","bool","node","string","displayName","PanelContent","show","PanelPanel","PanelTabs","PanelTabsClose","PanelExample","useState","selectedTabId","undefined","state","setState","tag","onClick","ReactDOM","createPortal","orientation","selectedTab","aria-label","name","resolution","variant","document","getElementById","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","defaultValue","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","colorScheme","disabled","flippable","isFullWidth","includes","oneOfType","number"],"mappings":"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","file":"static/js/44.c643216d.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-panel';\nconst CSS_STATE = 'vds-state';\n\nconst Panel = forwardRef(({\n  animated,\n  children,\n  className,\n  hide,\n  open,\n  ...remainingProps\n}, ref) => (\n  <div\n    aria-expanded={open ? 'true' : 'false'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--close`]: !open,\n      [`${CSS_STATE}--open`]: Boolean(open),\n      [`${CSS_STATE}--animated`]: Boolean(animated),\n      [`${CSS_STATE}--hidden`]: Boolean(hide)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nPanel.propTypes = {\n  /**\n   * Animated\n   */\n  animated: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Hide\n   */\n  hide: bool,\n\n  /**\n   * Open\n   */\n  open: bool\n};\n\nPanel.displayName = 'Panel';\n\nexport default Panel;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-panel-content';\nconst CSS_STATE = 'vds-state';\n\nconst PanelContent = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nPanelContent.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nPanelContent.displayName = 'PanelContent';\n\nexport default PanelContent;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-panel-panel';\n\nconst PanelPanel = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nPanelPanel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPanelPanel.displayName = 'PanelPanel';\n\nexport default PanelPanel;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-panel-tabs';\n\nconst PanelTabs = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nPanelTabs.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPanelTabs.displayName = 'PanelTabs';\n\nexport default PanelTabs;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabListStateless from '../tab-list';\n\nconst CSS_PREFIX = 'vds-panel-tabs-close';\n\nconst PanelTabsClose = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <TabListStateless\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </TabListStateless>\n));\n\nPanelTabsClose.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPanelTabsClose.displayName = 'PanelTabsClose';\n\nexport default PanelTabsClose;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Panel from '../../panel';\nimport PanelContent from '../../panel-content';\nimport PanelPanel from '../../panel-panel';\nimport PanelTabs from '../../panel-tabs';\nimport PanelTabsClose from '../../panel-tabs-close';\nimport Row from '../../row';\nimport Tab from '../../tab';\nimport TabList from '../../tab-list';\nimport Typography from '../../typography';\n\nconst PanelExample = () => {\n  const [state, setState] = useState({\n    hide: false,\n    open: false,\n    selectedTabId: undefined\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Panel composed with state</Typography>\n          <Typography>\n            Use the approach below to create wrappers that\n            satisfy requirements of your product\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonText\n            onClick={() => setState({\n              ...state,\n              hide: !state.hide\n            })}\n          >\n            {state.hide ? 'Show' : 'Hide'} Panel\n          </ButtonText>\n\n          <ButtonText\n            onClick={() => setState({\n              ...state,\n              open: !state.open,\n              selectedTabId: state.selectedTabId || 0\n            })}\n          >\n            {state.open ? 'Close' : 'Open'} Panel\n          </ButtonText>\n          {\n            ReactDOM.createPortal(\n              <Panel hide={state.hide} open={state.open}>\n                <PanelTabs>\n                  <TabList orientation=\"vertical\" selectedTab={state.selectedTabId}>\n                    <Tab\n                      aria-label=\"Global Settings\"\n                      onClick={() => setState({ ...state, open: true, selectedTabId: 0 })}\n                      tag={<button />}\n                    >\n                      <Icon name=\"global\" resolution=\"low\" />\n                    </Tab>\n                    <Tab\n                      aria-label=\"Merchant Settings\"\n                      onClick={() => setState({ ...state, open: true, selectedTabId: 1 })}\n                      tag={<button />}\n                    >\n                      <Icon name=\"merchant\" resolution=\"low\" />\n                    </Tab>\n                    <Tab\n                      aria-label=\"Calendar View\"\n                      onClick={() => setState({ ...state, open: true, selectedTabId: 2 })}\n                      tag={<button />}\n                    >\n                      <Icon name=\"calendar\" resolution=\"low\" />\n                    </Tab>\n                    <Tab\n                      aria-label=\"Other Settings\"\n                      onClick={() => setState({ ...state, open: true, selectedTabId: 3 })}\n                      tag={<button />}\n                    >\n                      <Icon name=\"controls\" resolution=\"low\" />\n                    </Tab>\n                  </TabList>\n                  <PanelTabsClose orientation=\"vertical\">\n                    <Tab\n                      aria-label=\"Toggle Panel\"\n                      onClick={() => setState({\n                        ...state,\n                        open: !state.open,\n                        selectedTabId: state.selectedTabId || 0\n                      })}\n                      tag={<button />}\n                    >\n                      {\n                        state.open\n                          ? <Icon name=\"arrow-next\" resolution=\"low\" />\n                          : <Icon name=\"arrow-previous\" resolution=\"low\" />\n                      }\n                    </Tab>\n                  </PanelTabsClose>\n                </PanelTabs>\n                <PanelPanel>\n                  <PanelContent show={state.selectedTabId === 0}>\n                    <Typography tag=\"h2\">Panel Title</Typography>\n                    <Typography tag=\"h3\" variant=\"subtitle\">Panel Subtitle</Typography>\n                  </PanelContent>\n                  <PanelContent show={state.selectedTabId === 1}>\n                    <Typography tag=\"h2\">Panel Second Title</Typography>\n                    <Typography tag=\"h3\" variant=\"subtitle\">Panel Subtitle</Typography>\n                  </PanelContent>\n                  <PanelContent show={state.selectedTabId === 2}>\n                    <Typography tag=\"h2\">Panel Third Title</Typography>\n                    <Typography tag=\"h3\" variant=\"subtitle\">Panel Subtitle</Typography>\n                  </PanelContent>\n                  <PanelContent show={state.selectedTabId === 3}>\n                    <Typography tag=\"h2\">Panel Fourth Title</Typography>\n                    <Typography tag=\"h3\" variant=\"subtitle\">Panel Subtitle</Typography>\n                  </PanelContent>\n                </PanelPanel>\n              </Panel>, document.getElementById('content'))\n          }\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default PanelExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/panel/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/panel/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/panel/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst PanelExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Panel\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Panel</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/panel`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Panel Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/panel/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/panel/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/panel`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/panel`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/panel/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/panel/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/panel/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/panel/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nPanelExample.displayName = 'PanelExample';\n\nexport default PanelExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n"],"sourceRoot":""}