{"version":3,"sources":["components/nav/example/index.js","pages/components/nav.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/listbox/index.js","components/listbox-item/index.js","components/menu/index.js","components/listbox-item-container/index.js","components/navmenu/index.js","components/button/index.js","components/nav-user/index.js","components/nav-site/index.js"],"names":["NavExample","tag","position","href","aria-label","menu","role","placement","ariaLabel","iconType","name","resolution","alt","src","Logo","undefined","flippable","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","KEY_CODES","TabList","orientation","selectedTab","useRef","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","current","querySelectorAll","Boolean","Children","child","k","cloneElement","onClick","e","handleClick","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","focus","handleKeyDown","selected","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","active","disabled","Listbox","multiselect","ListboxItem","listItemValue","aria-disabled","data-list-item-value","Menu","show","ListboxItemContainer","element","Navmenu","id","shortid","generate","modifiers","open","setOpen","focusVisible","setFocusVisible","uid","listboxRef","buttonRef","useCallback","isButton","target","tagName","toLowerCase","isLink","handleClickOutside","menuEl","document","querySelector","contains","addEventListener","removeEventListener","lastLink","lastChild","isEqualNode","handleKeyUp","handleBlur","scheduleUpdate","onBlur","onKeyUp","overflowY","offset","enabled","Button","NavUser","NavSite"],"mappings":"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","file":"static/js/19.a066a0b5.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport React from 'react';\nimport Avatar from '../../avatar';\nimport AvatarText from '../../avatar-text';\nimport Button from '../../button';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Listbox from '../../listbox';\nimport ListboxItem from '../../listbox-item';\nimport ListboxItemContainer from '../../listbox-item-container';\nimport Nav from '../../nav';\nimport NavBrand from '../../nav-brand';\nimport NavBrandInfo from '../../nav-brand-info';\nimport NavBrandLogo from '../../nav-brand-logo';\nimport NavBrandLogoImage from '../../nav-brand-logo-image';\nimport NavLinks from '../../nav-links';\nimport Navmenu from '../../navmenu';\nimport NavSite from '../../nav-site';\nimport NavSkip from '../../nav-skip';\nimport NavUser from '../../nav-user';\nimport Row from '../../row';\nimport Tab from '../../tab';\nimport TabItem from '../../tab-item';\nimport TabListStateless from '../../tab-list-stateless';\nimport Typography from '../../typography';\nimport Logo from '@visa/vds-web/dist/_logos/visa/visa_vbm_wht.svg';\n\nconst NavExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Horizontal Nav</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Nav position=\"relative\">\n          <Grid>\n            <Row>\n              <Col>\n                <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                <NavBrand>\n                  <NavBrandInfo>\n                  {<Navmenu\n                      aria-label=\"Mobile Demo Navigation\"\n                      menu={\n                        <Listbox>\n                          <ListboxItem role=\"none\">\n                            <ListboxItemContainer>\n                              <a href=\"http://www.visa.com\">Contact</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem role=\"none\">\n                            <ListboxItemContainer>\n                              <a href=\"http://www.visa.com\">Service</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem role=\"none\">\n                            <ListboxItemContainer>\n                              <a href=\"http://www.visa.com\">Statistics</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                        </Listbox>\n                      }\n                      placement=\"bottom-start\"\n                      role=\"navigation\"\n                      tag=\"nav\"\n                    >\n                      <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                        <Icon name=\"menu\" resolution=\"low\" />\n                      </ButtonIcon>\n                    </Navmenu>}\n                    <NavBrandLogo href=\"http://www.visa.com\">\n                      <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                    </NavBrandLogo>\n                  </NavBrandInfo>\n                </NavBrand>\n                <NavSite>\n                  <NavLinks ariaLabel=\"Demo Horizontal Site Navigation\">\n                    <TabListStateless role=\"none\">\n                      <TabItem>\n                        <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>Contact</Tab>\n                      </TabItem>\n                      <TabItem>\n                        <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>Service</Tab>\n                      </TabItem>\n                      <TabItem>\n                        <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>Statistics</Tab>\n                      </TabItem>\n                    </TabListStateless>\n                  </NavLinks>\n                </NavSite>\n                <NavUser>\n                  <Navmenu\n                    aria-label=\"Profile Settings Navigation\"\n                    menu={\n                      <Listbox>\n                        <ListboxItem role=\"none\">\n                          <ListboxItemContainer>\n                            <a href=\"./\">My Profile</a>\n                          </ListboxItemContainer>\n                        </ListboxItem>\n                        <ListboxItem role=\"none\">\n                          <ListboxItemContainer>\n                            <a href=\"./\">My Rewards</a>\n                          </ListboxItemContainer>\n                        </ListboxItem>\n                        <ListboxItem role=\"none\">\n                          <ListboxItemContainer>\n                            <a href=\"./\">My Account</a>\n                          </ListboxItemContainer>\n                        </ListboxItem>\n                        <ListboxItem role=\"none\">\n                          <ListboxItemContainer>\n                            <a href=\"./\">Send Email</a>\n                          </ListboxItemContainer>\n                        </ListboxItem>\n                        <ListboxItem role=\"none\">\n                          <ListboxItemContainer>\n                            <a href=\"./\">Sign Out</a>\n                          </ListboxItemContainer>\n                        </ListboxItem>\n                      </Listbox>\n                    }\n                    placement=\"bottom-end\"\n                    role=\"navigation\"\n                    tag=\"nav\"\n                  >\n                    <Button flippable>\n                      <Avatar>\n                        <AvatarText>Adam Smith</AvatarText>\n                      </Avatar>\n                      <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n                    </Button>\n                  </Navmenu>\n                </NavUser>\n              </Col>\n            </Row>\n          </Grid>\n        </Nav>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Vertical Nav example on left side of this page</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n      <Typography>\n        <a href=\"https://stash.trusted.visa.com:7990/projects/VC/repos/vds/browse/src/index.js#134\">Vertical Nav example code</a>\n      </Typography>\n      {/*\n        // this example is not showing up properly in IE11\n        // the sidebar vertical navigation is now the default example\n        // investigate and fix after a11y release\n        <Nav orientation=\"vertical\" size={open ? undefined : 'mini'}>\n          <NavPanel style={{ position: 'inherit' }}>\n            <NavVerticalHeader>\n              <NavSkip href=\"#content\">Skip to main content</NavSkip>\n              <NavBrand>\n                <NavBrandInfo>\n                  <NavBrandLogo href=\"/\">\n                    <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                  </NavBrandLogo>\n                </NavBrandInfo>\n              </NavBrand>\n            </NavVerticalHeader>\n            <NavLinks ariaLabel=\"Demo Vertical Site Navigation\">\n              <TabListStateless orientation=\"vertical\" role=\"none\">\n                <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>\n                  <Icon name=\"savings-account\" resolution=\"low\" /> <TabItemLabel>Info</TabItemLabel>\n                </Tab>\n                <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>\n                  <Icon name=\"note\" resolution=\"low\" /> <TabItemLabel>Docs</TabItemLabel>\n                </Tab>\n                <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>\n                  <Icon name=\"view-grid\" resolution=\"low\" /> <TabItemLabel>Components</TabItemLabel>\n                </Tab>\n                <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>\n                  <Icon name=\"folder-multiple\" resolution=\"low\" /> <TabItemLabel>Resources</TabItemLabel>\n                </Tab>\n                <Tab tag={<a />} href=\"http://www.visa.com\" role={undefined}>\n                  <Icon name=\"analytics\" resolution=\"low\" /> <TabItemLabel>Charts Library</TabItemLabel>\n                </Tab>\n              </TabListStateless>\n            </NavLinks>\n            <NavVerticalFooter>\n              <NavVersionMenu>\n                <Avatar><AvatarText>0.0.0</AvatarText></Avatar>\n              </NavVersionMenu>\n              <NavVerticalToggleButton aria-expanded={open ? 'true' : 'false' } aria-label=\"navigation example control\" onClick={() => setOpen(!open)}>\n                <ButtonAction>\n                  {\n                    open\n                      ? <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n                      : <Icon name=\"arrow-next\" resolution=\"tiny\" />\n                  }\n                </ButtonAction>\n              </NavVerticalToggleButton>\n            </NavVerticalFooter>\n          </NavPanel>\n        </Nav>*/}\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default NavExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/nav/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/nav/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/nav/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst NavExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Nav\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Nav Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nNavExample.displayName = 'NavExample';\n\nexport default NavExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox';\n\nconst Listbox = forwardRef(({\n  children,\n  className,\n  multiselect,\n  role,\n  ...remainingProps\n}, ref) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      'vds-select--multi': Boolean(multiselect)\n    }, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n));\n\nListbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Multi select\n   */\n  multiselect: bool,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nListbox.defaultProps = {\n  role: 'listbox'\n};\n\nListbox.displayName = 'Listbox';\n\nexport default Listbox;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItem = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  focus,\n  listItemValue,\n  role,\n  selected,\n  ...remainingProps\n}, ref) => (\n  <li\n    aria-disabled={Boolean(disabled) ? 'true' : undefined}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    data-list-item-value={listItemValue}\n    ref={ref}\n    role={role}\n    tabIndex={Boolean(disabled) ? '-1' : undefined}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nListboxItem.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * List item value\n   */\n  listItemValue: string,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Selected\n   */\n  selected: bool\n};\n\nListboxItem.defaultProps = {\n  role: 'option'\n};\n\nListboxItem.displayName = 'ListboxItem';\n\nexport default ListboxItem;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst Menu = forwardRef(({\n  children,\n  className,\n  position,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !position,\n      [`${CSS_PREFIX}--${position}`]: Boolean(position),\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenu.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Position\n   */\n  position: oneOf(['absolute', 'fixed']),\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenu.displayName = 'Menu';\n\nexport default Menu;\n","import { cloneElement, forwardRef } from 'react';\nimport { bool, element, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item-container';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItemContainer = forwardRef(({\n  children,\n  className,\n  disabled,\n  ...remainingProps\n}, ref) => (\n  cloneElement(children, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nListboxItemContainer.propTypes = {\n  /**\n   * @ignore\n   */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool\n};\n\nListboxItemContainer.displayName = 'ListboxItemContainer';\n\nexport default ListboxItemContainer;\n","import React, { cloneElement, useCallback, useEffect, useRef, useState, Fragment } from 'react';\nimport { element, elementType, number, oneOf, oneOfType, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport Menu from '../menu';\n\nconst CSS_PREFIX = 'vds-navmenu';\nconst CSS_POPPER_CONTAINER = 'vds-popper-container';\n\nconst keyCode = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  PAGEDOWN: 34,\n  PAGEUP: 33,\n  RETURN: 13,\n  SPACE: 32,\n  TAB: 9,\n  UP: 38\n};\n\nconst Navmenu = ({\n  children,\n  className,\n  id = shortid.generate(),\n  menu,\n  modifiers,\n  placement,\n  tag: Tag,\n  ...remainingProps\n}) => {\n  const [open, setOpen] = useState(false);\n  const [focusVisible, setFocusVisible] = useState(false);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const listboxRef = useRef();\n  const buttonRef = useRef();\n\n  const handleClick = useCallback(e => {\n    const isButton = e.target.tagName.toLowerCase() === 'button';\n    const isLink = e.target.tagName.toLowerCase() === 'a';\n\n    setOpen(!open);\n    if (!isButton && !isLink) {\n      e.preventDefault();\n    }\n  }, [open, setOpen]);\n\n  useEffect(() => {\n    if (!open) {\n      return;\n    }\n    const handleClickOutside = e => {\n      const menuEl = document.querySelector(`#${CSS_PREFIX}-menu-${uid}`);\n      if (buttonRef.current.contains(e.target) || menuEl.contains(e.target)) {\n        // let the button handle its own clicking functionality\n        // and don't close if the menu itself is clicked\n        return;\n      }\n\n      // the click is outside, close the menu\n      handleClick(e);\n    };\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('touchend', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('touchend', handleClickOutside);\n    };\n  }, [open, handleClick, buttonRef, uid]);\n\n  const handleKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const listbox = listboxRef.current;\n    const lastLink = listbox.lastChild.querySelector('a');\n\n    if (code === keyCode.TAB) {\n      if (e.target.isEqualNode(lastLink)) {\n        handleClick(e);\n      }\n    }\n  };\n\n  const handleKeyUp = e => {\n    const code = e.charCode || e.keyCode;\n\n    if (code === keyCode.TAB) {\n      setFocusVisible(true);\n    }\n  };\n\n  const handleBlur = () => {\n    setFocusVisible(false);\n  };\n\n  return (\n    <Manager>\n      <Tag className={classnames(CSS_PREFIX, className)} {...remainingProps}>\n        <Popper modifiers={modifiers} placement={placement}>\n          {({ ref, style, scheduleUpdate }) => (\n            <Fragment>\n              <Reference>\n                {({ ref }) => (\n                  <span ref={ref} className={CSS_POPPER_CONTAINER}>\n                    {cloneElement(children, {\n                      active: open,\n                      'aria-controls': `${CSS_PREFIX}-listbox-${uid}`,\n                      'aria-expanded': open ? 'true' : 'false',\n                      className: focusVisible ? 'focus-visible' : '',\n                      id: uid,\n                      onBlur: handleBlur,\n                      onClick: e => {\n                        // the popper position is not always positioned properly until it re-renders after being shown\n                        scheduleUpdate();\n                        handleClick(e);\n                      },\n                      onKeyUp: handleKeyUp,\n                      ref: buttonRef\n                    })}\n                  </span>\n                )}\n              </Reference>\n              <Menu\n                id={`${CSS_PREFIX}-menu-${uid}`}\n                position=\"absolute\"\n                ref={ref}\n                show={open}\n                style={{ ...style, overflowY: 'inherit' }}\n              >\n                {cloneElement(menu, {\n                  'aria-hidden': open ? 'false' : 'true',\n                  'aria-labelledby': uid,\n                  id: `${CSS_PREFIX}-listbox-${uid}`,\n                  onClick: handleClick,\n                  onKeyDown: handleKeyDown,\n                  ref: listboxRef\n                })}\n              </Menu>\n            </Fragment>\n          )}\n        </Popper>\n      </Tag>\n    </Manager>\n  );\n};\n\nNavmenu.propTypes = {\n  /**\n   * @ignore\n   */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Menu\n   */\n  menu: element.isRequired,\n\n  /**\n   * Modifiers\n   */\n  modifiers: shape({}),\n\n  /**\n   * Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n  * Should be tag name and not an actual element\n  */\n  tag: elementType\n};\n\nNavmenu.defaultProps = {\n  modifiers: {\n    offset: {\n      enabled: true,\n      offset: '0'\n    }\n  },\n  placement: 'bottom-start',\n  tag: 'div'\n};\n\nNavmenu.displayName = 'Navmenu';\n\nexport default Navmenu;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn';\nconst CSS_STATE = 'vds-state';\n\nconst Button = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  flippable,\n  ...remainingProps\n}, ref) => (\n  <button\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </button>\n));\n\nButton.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-user';\n\nconst NavUser = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavUser.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavUser.displayName = 'NavUser';\n\nexport default NavUser;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-site';\nconst CSS_STATE = 'vds-state';\n\nconst NavSite = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavSite.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show in mobile\n   */\n  show: bool\n};\n\nNavSite.displayName = 'NavSite';\n\nexport default NavSite;\n"],"sourceRoot":""}