{"version":3,"sources":["components/checkbox-error-message/index.js","components/checkbox-list/index.js","components/checkbox-list-item/index.js","components/checkbox-set/index.js","components/checkbox-set-legend/index.js","components/checkbox/example/index.js","pages/components/checkbox.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/link/index.js","components/checkbox/index.js"],"names":["CheckboxErrorMessage","ariaAtomic","ariaLive","children","className","remainingProps","aria-atomic","aria-live","classnames","defaultProps","displayName","CheckboxList","orientation","type","Boolean","CheckboxListItem","CheckboxSet","CheckboxSetLegend","forwardRef","ref","invalid","Tag","tag","propTypes","node","string","bool","elementType","CheckboxExample","useRef","refOneValidation","refTwoValidation","refThreeValidation","refValidationArray","useState","validationTrigger","setValidation","showIndividualError","setIndividualError","showGroupError","setGroupError","items","checked","id","label","value","stateOne","setStateOne","values","stateTwo","setStateTwo","required","stateThree","setStateThree","list","disabled","indeterminate","stateFour","setStateFour","stateFive","setStateFive","useEffect","current","focus","handleChangeOne","e","map","item","target","handleChangeTwo","index","findIndex","v","slice","handleChangeFour","itemId","childId","parentIndex","parent","childIndex","child","filter","c","length","handleChangeFive","defaultChecked","name","k","key","onChange","join","includes","aria-describedby","aria-invalid","aria-required","resolution","style","display","onClick","invalidChecker","i","href","inline","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","line","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","doc","description","color","Array","isArray","defaultValue","ScreenReader","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","colorScheme","flippable","isFullWidth","tabIndex","oneOfType","number","Link","cloneElement","element","Checkbox","shortid","generate","onBlur","onFocus","setFocus","check","setCheck","indetermined","setIndetermined","uid","aria-checked","event","htmlFor","stopPropagation","onKeyPress"],"mappings":"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","file":"static/js/31.efc7e055.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-error-message';\n\nconst CheckboxErrorMessage = ({ ariaAtomic, ariaLive, children, className, ...remainingProps }) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nCheckboxErrorMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: string,\n\n  /**\n   * Aria Live\n   */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxErrorMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive'\n};\n\nCheckboxErrorMessage.displayName = 'CheckboxErrorMessage';\n\nexport default CheckboxErrorMessage;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-list';\n\nconst CheckboxList = ({ children, className, orientation, type, ...remainingProps }) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}-${type}`]: Boolean(type),\n      [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n);\n\nCheckboxList.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * orientation\n   */\n  orientation: oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Type\n   */\n  type: oneOf([\n    'inner'\n  ])\n};\n\nCheckboxList.displayName = 'CheckboxList';\n\nexport default CheckboxList;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-list-item';\n\nconst CheckboxListItem = ({ children, className, ...remainingProps }) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n);\n\nCheckboxListItem.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxListItem.displayName = 'CheckboxListItem';\n\nexport default CheckboxListItem;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-set';\n\nconst CheckboxSet = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nCheckboxSet.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxSet.displayName = 'CheckboxSet';\n\nexport default CheckboxSet;\n","import React, { forwardRef } from 'react';\nimport { bool, elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-set-legend';\nconst CSS_STATE = 'vds-state';\n\nconst CheckboxSetLegend = forwardRef(({ children, className, invalid, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--invalid`]: Boolean(invalid)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nCheckboxSetLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Invalid\n  */\n  invalid: bool,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nCheckboxSetLegend.defaultProps = {\n  tag: 'legend'\n};\n\nCheckboxSetLegend.displayName = 'CheckboxSetLegend';\n\nexport default CheckboxSetLegend;\n","import React, { Fragment, useRef, useState, useEffect } from 'react';\nimport ButtonText from '../../button-text';\nimport Checkbox from '../../checkbox';\nimport CheckboxErrorMessage from '../../checkbox-error-message';\nimport CheckboxList from '../../checkbox-list';\nimport CheckboxListItem from '../../checkbox-list-item';\nimport CheckboxSet from '../../checkbox-set';\nimport CheckboxSetLegend from '../../checkbox-set-legend';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Link from '../../link';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst CheckboxExample = () => {\n  const ref = useRef();\n  const refOneValidation = useRef();\n  const refTwoValidation = useRef();\n  const refThreeValidation = useRef();\n  const refValidationArray = [refOneValidation, refTwoValidation, refThreeValidation];\n  const [validationTrigger, setValidation] = useState(false);\n  const [showIndividualError, setIndividualError] = useState(false);\n  const [showGroupError, setGroupError] = useState(false);\n  const [stateOne, setStateOne] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'item-1',\n        label: 'One',\n        value: 'one'\n      },\n      {\n        checked: true,\n        id: 'item-2',\n        label: 'Two',\n        value: 'two'\n      },\n      {\n        checked: false,\n        id: 'item-3',\n        label: 'Three',\n        value: 'three'\n      },\n      {\n        checked: false,\n        id: 'item-4',\n        label: 'Four',\n        value: 'four'\n      }\n    ]\n  });\n\n  const [stateTwo, setStateTwo] = useState({ values : ['6', '8'] });\n  const [stateThree, setStateThree] = useState({\n    checked: false,\n    id: 'validation-individual',\n    invalid: false,\n    label: 'I have read and agree to the Terms and Conditions',\n    required: true,\n    value: '1'\n  });\n  const [stateFour, setStateFour] = useState({\n    list: [\n      {\n        checked: false,\n        children: [\n          {\n            checked: true,\n            id: 'checkbox-indeterminate-100',\n            label: 'Pepperoni',\n            value: '1-10'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-101',\n            label: 'Sausage',\n            value: '1-11'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-102',\n            label: 'BBQ Chicken',\n            value: '1-12'\n          }\n        ],\n        disabled: false,\n        id: 'checkbox-indeterminate-1',\n        indeterminate: true,\n        label: 'All Meats',\n        value: '1'\n      },\n      {\n        checked: false,\n        children: [\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-200',\n            label: 'Mushrooms',\n            value: '2-13'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-201',\n            label: 'Black Olives',\n            value: '2-14'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-202',\n            label: 'Pineapple',\n            value: '2-15'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-203',\n            label: 'Red Onion',\n            value: '2-16'\n          }\n        ],\n        disabled: false,\n        id: 'checkbox-indeterminate-2',\n        indeterminate: false,\n        label: 'All Vegetables',\n        value: '2'\n      },\n      {\n        checked: true,\n        disabled: false,\n        id: 'checkbox-indeterminate-3',\n        indeterminate: false,\n        label: 'Extra Cheese',\n        value: '3'\n      }\n    ]\n  });\n\n  const [stateFive, setStateFive] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'validation-1',\n        invalid: false,\n        label: 'Regular',\n        required: true,\n        value: '1'\n      }, {\n        checked: false,\n        id: 'validation-2',\n        invalid: false,\n        label: 'Deep Dish',\n        required: true,\n        value: '2'\n      }, {\n        checked: false,\n        id: 'validation-3',\n        invalid: false,\n        label: 'Thin Crust',\n        required: true,\n        value: '3'\n      }\n    ]\n  });\n\n  useEffect(() => {\n    if (stateFive.items[0].invalid === true && validationTrigger === true) {\n      refOneValidation.current.focus();\n    } else if (stateFive.items[1].invalid === true && validationTrigger === true) {\n      refTwoValidation.current.focus();\n    } else if (stateFive.items[2].invalid === true && validationTrigger === true) {\n      refThreeValidation.current.focus();\n    }\n    setValidation(false);\n  }, [validationTrigger, stateFive.items]);\n\n  const handleChangeOne = e => setStateOne({\n    items: [\n      ...stateOne.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked\n      }))\n    ]\n  });\n\n  const handleChangeTwo = e => {\n    const index = stateTwo.values.findIndex(v => v === e.target.value);\n    if (index !== -1) {\n      return setStateTwo({\n        values: [...stateTwo.values.slice(0, index), ...stateTwo.values.slice(index + 1)]\n      });\n    }\n\n    return setStateTwo({\n      values: [...stateTwo.values, e.target.value]\n    });\n  };\n\n  const handleChangeThree = e => setStateThree({\n    ...stateThree,\n    checked: e.target.id === stateThree.id ? !stateThree.checked : stateThree.checked,\n    invalid: e.target.id === stateThree.id && stateThree.invalid ? stateThree.checked : stateThree.invalid\n  });\n\n  const handleSubmitThree = () => {\n    let invalidChecker = false;\n    if (stateThree.checked === false) {\n      invalidChecker = true;\n      ref.current.focus();\n      setIndividualError(true);\n    } else {\n      invalidChecker = false;\n      setIndividualError(false);\n    }\n\n    setStateThree({\n      ...stateThree,\n      invalid: invalidChecker\n    });\n  };\n\n  const handleChangeFour = (itemId, childId) => {\n    const parentIndex = stateFour.list.findIndex(item => item.id === itemId);\n    const parent = stateFour.list[parentIndex];\n\n    if (childId) {\n      const childIndex = parent.children.findIndex(child => child.id === childId);\n      const child = parent.children[childIndex];\n      parent.children = [...parent.children.slice(0, childIndex), { ...child, checked: !child.checked }, ...parent.children.slice(childIndex + 1)];\n      parent.checked = parent.children.filter(c => c.checked === true).length === parent.children.length;\n      parent.indeterminate = parent.children.filter(c => c.checked === true).length > 0;\n    }\n\n    if (typeof childId === 'undefined') {\n      parent.checked = !parent.checked;\n      parent.indeterminate = false;\n      if (parent.children) {\n        parent.children = parent.children.map(child => ({ ...child, checked: parent.checked }));\n      }\n    }\n\n    setStateFour({\n      list: [\n        ...stateFour.list.slice(0, parentIndex),\n        parent,\n        ...stateFour.list.slice(parentIndex + 1)\n      ]\n    });\n  };\n\n  const handleChangeFive = e => setStateFive({\n    items: [\n      ...stateFive.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked,\n        invalid: e.target.id === item.id && item.invalid ? item.checked : item.invalid\n      }))\n    ]\n  });\n\n  const handleSubmitFive = () => {\n    let invalidChecker = false;\n    if (stateFive.items.filter(item => item.checked).length === 0) {\n      invalidChecker = true;\n      setGroupError(true);\n    } else {\n      invalidChecker = false;\n      setGroupError(false);\n    }\n\n    setStateFive({\n      items: [\n        ...stateFive.items.map(item => ({\n          ...item,\n          invalid: invalidChecker\n        }))\n      ]\n    });\n\n    setValidation(true);\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateful)</Typography>\n          <Typography>\n            All checkbox props are mapped to the checkbox\n            component, e.g. defaultChecked, onClick, etc\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Checkbox Options</CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  defaultChecked\n                  name=\"example\"\n                  label=\"First option\"\n                  value=\"1\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"example\"\n                  label=\"Second option\"\n                  value=\"2\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"example\"\n                  label=\"Third option\"\n                  value=\"3\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"example\"\n                  label=\"Fourth option\"\n                  value=\"4\"\n                  disabled\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"example\"\n                  label=\"Fifth option\"\n                  value=\"5\"\n                  defaultChecked\n                  disabled\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateless) data approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Stateless Data Approach Checkbox Options</CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateOne.items.map((item, k) => (\n                  <CheckboxListItem key={k}>\n                    <Checkbox\n                      checked={item.checked}\n                      id={item.id}\n                      label={item.label}\n                      name=\"checkbox-stateless\"\n                      onChange={handleChangeOne}\n                      value={item.value}\n                    />\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateless) composition approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography>Selected values [{stateTwo.values.join(', ')}] </Typography>\n          <CheckboxSet>\n            <CheckboxSetLegend>Stateless Composition Approach Checkbox Options</CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  checked={stateTwo.values.includes(\"6\")}\n                  name=\"example\"\n                  label=\"First option\"\n                  value=\"6\"\n                  onChange={handleChangeTwo}\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  checked={stateTwo.values.includes(\"7\")}\n                  name=\"example\"\n                  label=\"Second option\"\n                  value=\"7\"\n                  onChange={handleChangeTwo}\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  checked={stateTwo.values.includes(\"8\")}\n                  name=\"example\"\n                  label=\"Third option\"\n                  value=\"8\"\n                  onChange={handleChangeTwo}\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  checked={stateTwo.values.includes(\"9\")}\n                  name=\"example\"\n                  label=\"Fourth option\"\n                  value=\"9\"\n                  onChange={handleChangeTwo}\n                  disabled\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  checked={stateTwo.values.includes(\"10\")}\n                  name=\"example\"\n                  label=\"Fifth option\"\n                  value=\"10\"\n                  onChange={handleChangeTwo}\n                  disabled\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Indeterminate</Typography>\n          <Typography>This standalone indeterminate checkbox is for developer example only. <br />\n             To see an accessible indeterminate checkbox in action, view the Checkbox Set with Validation below.</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n        <CheckboxSet>\n          <CheckboxSetLegend>Indeterminate checkbox examples</CheckboxSetLegend>\n          <CheckboxList>\n            <CheckboxListItem>\n              <Checkbox\n                name=\"example\"\n                label=\"Indeterminate Checkbox\"\n                id=\"checkbox-test-21\"\n                value=\"2\"\n                indeterminate\n              />\n            </CheckboxListItem>\n            <CheckboxListItem>\n             <Checkbox\n                name=\"example\"\n                label=\"Disabled Indeterminate Checkbox\"\n                id=\"checkbox-test-22\"\n                value=\"2\"\n                disabled\n                indeterminate\n              />\n            </CheckboxListItem>\n          </CheckboxList>\n        </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox with Validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend\n              invalid={showIndividualError}\n              aria-describedby=\"single-validation-error-message\"\n            >\n              Terms and Conditions\n            </CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  checked={stateThree.checked}\n                  id={stateThree.id}\n                  invalid={stateThree.invalid}\n                  aria-invalid={stateThree.invalid}\n                  label={stateThree.label}\n                  onChange={handleChangeThree}\n                  ref={ref}\n                  aria-required={stateThree.required}\n                  required={stateThree.required}\n                  value={stateThree.value}\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n          </CheckboxSet>\n        <CheckboxErrorMessage id=\"single-validation-error-message\">\n          {\n            showIndividualError === true\n              ? <Fragment><Icon\n                    name=\"error\"\n                    resolution=\"tiny\"\n                  />Error: Please check the box.</Fragment>\n              : ''\n          }\n          </CheckboxErrorMessage>\n          <ButtonText\n            style={{ display: \"block\" }}\n            onClick={handleSubmitThree}\n          >\n            Submit (test validation)\n          </ButtonText>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Group with Indeterminate</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Select Pizza Toppings</CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateFour.list.map((item, i) => (\n                  <CheckboxListItem key={i}>\n                    <Checkbox\n                      checked={item.checked}\n                      disabled={item.disabled}\n                      indeterminate={item.indeterminate}\n                      id={item.id}\n                      label={item.label}\n                      name=\"pizza-topping-group\"\n                      onChange={() => handleChangeFour(item.id)}\n                      value={item.value}\n                    />\n                    {\n                      item.children\n                        ? <CheckboxList type=\"inner\">\n                          {item.children.map((child, k) => (\n                            <CheckboxListItem key={k}>\n                              <Checkbox\n                                checked={child.checked}\n                                id={child.id}\n                                label={child.label}\n                                name=\"pizza-topping-item\"\n                                onChange={() => handleChangeFour(item.id, child.id)}\n                                value={child.value}\n                              />\n                            </CheckboxListItem>\n                          ))}\n                        </CheckboxList>\n                        : null\n                    }\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Select Drink Toppings</CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Boba\"\n                  value=\"1\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Lychee jelly\"\n                  value=\"2\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Mango star jelly\"\n                  value=\"3\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Aloe vera pieces (not available)\"\n                  value=\"4\"\n                  disabled\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Coconut jelly (included)\"\n                  value=\"5\"\n                  defaultChecked\n                  disabled\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set with Validation (BYO-State)</Typography>\n          <Typography><Link href=\"https://www.w3.org/TR/WCAG20-TECHS/H90.html#H90-ex4\" inline>Indicating required state on checkbox groups</Link> is different than what is needed for individual checkboxes.</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet\n            aria-required=\"true\"\n            required\n          >\n            <CheckboxSetLegend\n              invalid={showGroupError}\n              aria-describedby=\"validation-error-message\"\n            >\n              Pizza topping (select at least one)\n            </CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateFive.items.map((item, k) => (\n                  <CheckboxListItem key={k}>\n                    <Checkbox\n                      checked={item.checked}\n                      id={item.id}\n                      invalid={item.invalid}\n                      label={item.label}\n                      name=\"checkbox-validation-data-example\"\n                      onChange={handleChangeFive}\n                      ref={refValidationArray[k]}\n                      value={item.value}\n                    />\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n            <CheckboxErrorMessage id=\"validation-error-message\">\n              {\n                showGroupError === true\n                  ? <Fragment><Icon name=\"error\" resolution=\"tiny\" />\n                    Error: Please select at least one pizza topping.</Fragment>\n                  : ''\n              }\n            </CheckboxErrorMessage>\n          </CheckboxSet>\n          <ButtonText\n            onClick={handleSubmitFive}\n          >\n            Submit (test validation)\n          </ButtonText>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default CheckboxExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/checkbox/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/checkbox/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/checkbox/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst CheckboxExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Checkbox\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Checkbox</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Checkbox Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nCheckboxExample.displayName = 'CheckboxExample';\n\nexport default CheckboxExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-checkbox';\nconst CSS_STATE = 'vds-state';\n\nconst Checkbox = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  indeterminate,\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const [indetermined, setIndetermined] = useState(indeterminate);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setIndetermined(indeterminate);\n  }, [indeterminate]);\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setIndetermined(false);\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        aria-checked={indetermined ? 'mixed' : check ? 'true' : 'false'}\n        className={classnames(CSS_PREFIX, {\n          'focus-visible': Boolean(focus)\n        }, className)}\n        disabled={disabled}\n        id={uid}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        ref={ref}\n        type=\"checkbox\"\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focus),\n            [`${CSS_STATE}--indeterminate`]: indetermined && !check,\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          }\n        )}\n        htmlFor={uid}\n        onClick={e => e.stopPropagation()} // if not click event fires 2x, one for checkbox and one for label\n        onKeyPress={e  => e.stopPropagation()} // if not key-press event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nCheckbox.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the checkbox will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   *   Indeterminate\n   */\n  indeterminate: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the checkbox element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n"],"sourceRoot":""}