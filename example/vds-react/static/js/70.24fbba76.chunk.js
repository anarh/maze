(this["webpackJsonp@visa/vds-react"]=this["webpackJsonp@visa/vds-react"]||[]).push([[70],{301:function(e,t,n){"use strict";n.r(t);var o=n(144),a=n(0),r=n.n(a),l=n(538),i=n.n(l),s=n(2),c=n.n(s),p=n(544),m=n(543),u=n(39),d=n(8),g=n(532),h=n(18),f=n(23),E=n(16),y=n(530),v=n(64),T=n(531),b=n(533),w=n(534),x=n(535),R=n(536),k=n(537),S=n(7),N=n(553),B=n(590),O=n(840),C=function(){var e=Object(a.useState)(!1),t=Object(o.a)(e,2),n=t[0],l=t[1];return r.a.createElement(f.a,null,r.a.createElement(E.a,null,r.a.createElement(S.a,{tag:"h2"},"Raw state, mouse-only interactions")),r.a.createElement(E.a,null,r.a.createElement(d.a,{textAlign:"center"},r.a.createElement(O.a,{tooltip:"Because it's for demo purposes only",placement:"right",trigger:"hover",id:"tooltip-12"},r.a.createElement(N.a,null,"Right")))),r.a.createElement(E.a,null,r.a.createElement(d.a,{textAlign:"center"},r.a.createElement(O.a,{tooltip:"Because it's for demo purposes only",placement:"top",trigger:"hover",id:"tooltip-1"},r.a.createElement(N.a,null,"Top")))),r.a.createElement(E.a,null,r.a.createElement(d.a,{textAlign:"center"},r.a.createElement(O.a,{tooltip:"Because it's for demo purposes only",placement:"bottom",trigger:"hover",id:"tooltip-15"},r.a.createElement(N.a,null,"Bottom")))),r.a.createElement(E.a,null,r.a.createElement(d.a,{textAlign:"center"},r.a.createElement(O.a,{tooltip:"Because it's for demo purposes only",placement:"left",trigger:"hover",id:"tooltip-13"},r.a.createElement(N.a,{colorScheme:"primary"},"Left")))),r.a.createElement(E.a,null,r.a.createElement(d.a,{textAlign:"center"},r.a.createElement(S.a,null,"This is an example of a ",r.a.createElement(O.a,{trigger:"hover",id:"tooltip-20",tooltip:"Because it's for demo purposes only"},r.a.createElement(B.a,{href:"#"},"link"))," with a tooltip."))),r.a.createElement(E.a,null,r.a.createElement(S.a,{tag:"h2"},"A11y/VGAR usage, with mouse + keyboard/focus interactions"),r.a.createElement(S.a,{tag:"h4"},"Use the Tooltip component as a stateless wrapper component to take control of the visibility of the tooltip. See code example for how to proceed...")),r.a.createElement(E.a,null,r.a.createElement(d.a,{textAlign:"center"},r.a.createElement(O.a,{tooltip:"Because it's for demo purposes only",tooltipShown:n,placement:"right",trigger:"none",id:"tooltip-012"},r.a.createElement(N.a,{onFocus:function(){return l(!0)},onBlur:function(){return l(!1)},onMouseEnter:function(){return l(!0)},onMouseLeave:function(){return l(!1)}},"Supports keyboard(focus) and mouse(hover)")))))},j=n(540),A=[n(541)],P=n(542),L="import React, { cloneElement, Fragment, useRef } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport TooltipTrigger from 'react-popper-tooltip';\n\nconst CSS_PREFIX = 'vds-tooltip';\nconst CSS_STATE = 'vds-state';\n\nconst Tooltip = ({ className, tooltip, children, id = shortid.generate(), trigger, ...remainingProps }) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <TooltipTrigger\n      trigger={trigger}\n      {...remainingProps}\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: '0, 4px'\n        }\n      }}\n      tooltip={({ getTooltipProps, tooltipRef }) => (\n        <div\n          hidden\n          {...getTooltipProps({\n            className: classnames(CSS_PREFIX, `${CSS_STATE}--show`, className),\n            ref: tooltipRef\n          })}\n        >\n          <div className={`${CSS_PREFIX}-content`}>\n            <span className={`${CSS_PREFIX}-text`}>{tooltip}</span>\n            <span className={`${CSS_PREFIX}-pointer`} />\n          </div>\n        </div>\n      )}\n    >\n      {({ getTriggerProps, triggerRef }) => (\n        <Fragment>\n          {cloneElement(children, {\n            ...getTriggerProps({\n              'aria-controls': uid,\n              'aria-describedby': uid,\n              ref: triggerRef\n            })\n          })}\n          <span aria-hidden=\"true\" id={uid} style={{ display: 'none' }}>\n            {tooltip}\n          </span>\n        </Fragment>\n      )}\n    </TooltipTrigger>\n  );\n};\nTooltip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Popper Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Tooltip\n   */\n  tooltip: node.isRequired,\n\n  /**\n   * Trigger\n   */\n  trigger: oneOf([\n    'click',\n    'hover',\n    'right-click',\n    'none'\n  ])\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n".replace("= memo(({","= React.forwardRef(({").replace("cloneElement(","React.cloneElement("),F='import React, { useState } from \'react\';\nimport ButtonText from \'../../button-text\';\nimport Col from \'../../col\';\nimport Grid from \'../../grid\';\nimport Link from \'../../link\';\nimport Row from \'../../row\';\nimport Tooltip from \'../../tooltip\';\nimport Typography from \'../../typography\';\n\nconst TooltipExample = () => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <Grid>\n      <Row>\n        <Typography tag="h2">Raw state, mouse-only interactions</Typography>\n      </Row>\n      <Row>\n        <Col textAlign="center">\n          <Tooltip\n            tooltip="Because it\'s for demo purposes only"\n            placement="right"\n            trigger="hover"\n            id="tooltip-12"\n          >\n            <ButtonText>Right</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign="center">\n          <Tooltip\n            tooltip="Because it\'s for demo purposes only"\n            placement="top"\n            trigger="hover"\n            id="tooltip-1"\n          >\n            <ButtonText>Top</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign="center">\n          <Tooltip\n            tooltip="Because it\'s for demo purposes only"\n            placement="bottom"\n            trigger="hover"\n            id="tooltip-15"\n          >\n            <ButtonText>Bottom</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign="center">\n          <Tooltip\n            tooltip="Because it\'s for demo purposes only"\n            placement="left"\n            trigger="hover"\n            id="tooltip-13"\n          >\n            <ButtonText colorScheme="primary">Left</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign="center">\n          <Typography>{"This is an example of a "}\n            <Tooltip\n              trigger="hover"\n              id="tooltip-20"\n              tooltip="Because it\'s for demo purposes only"\n            >\n              <Link href="#">link</Link>\n            </Tooltip> with a tooltip.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Typography tag="h2">A11y/VGAR usage, with mouse + keyboard/focus interactions</Typography>\n        <Typography tag="h4">\n          Use the Tooltip component as a stateless wrapper component\n          to take control of the visibility of the tooltip. See code example for how to proceed...\n        </Typography>\n      </Row>\n      <Row>\n        <Col textAlign="center">\n          <Tooltip\n            tooltip="Because it\'s for demo purposes only"\n            tooltipShown={showTooltip}\n            placement="right"\n            trigger="none"\n            id="tooltip-012"\n          >\n            <ButtonText\n              onFocus={() => setShowTooltip(true)}\n              onBlur={() => setShowTooltip(false)}\n              onMouseEnter={() => setShowTooltip(true)}\n              onMouseLeave={() => setShowTooltip(false)}\n            >\n              Supports keyboard(focus) and mouse(hover)\n            </ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TooltipExample;\n'.replace(/'..\/..\//g,"'@visa/vds-react/"),I=function(e){var t=Object.assign({},e),n=Object(a.useState)({}),l=Object(o.a)(n,2),s=l[0],N=l[1];return Object(a.useEffect)((function(){try{N(P.parse(L))}catch(e){console.log("\n        React-docgen could not parse props for Tooltip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342")}}),[]),r.a.createElement(f.a,{siblingOfStickyFooter:!0},r.a.createElement(E.a,null,r.a.createElement(d.a,null,r.a.createElement(S.a,{tag:"h1"},"Tooltip"))),r.a.createElement(E.a,null,r.a.createElement(d.a,{role:"navigation","aria-label":"Secondary"},r.a.createElement(T.a,{role:"none"},r.a.createElement(v.a,{role:void 0,tag:r.a.createElement(u.c,{exact:!0,to:"".concat("/vds-react","/components/tooltip"),activeClassName:"vds-state--selected"})},r.a.createElement(h.a,{name:"log",resolution:"low"}),"Tooltip Example"),r.a.createElement(v.a,{role:void 0,tag:r.a.createElement(u.c,{exact:!0,to:"".concat("/vds-react","/components/tooltip/code"),activeClassName:"vds-state--selected"})},r.a.createElement(h.a,{name:"code-fork-code-alt",resolution:"low"}),"JSX of Example"),r.a.createElement(v.a,{role:void 0,tag:r.a.createElement(u.c,{exact:!0,to:"".concat("/vds-react","/components/tooltip/html"),activeClassName:"vds-state--selected"})},r.a.createElement(h.a,{name:"code-fork-code-alt",resolution:"low"}),"HTML of Example")))),r.a.createElement(E.a,null,r.a.createElement(d.a,null,r.a.createElement("div",{className:c()({"vds-state--hidden":t.match.path!=="".concat("/vds-react","/components/tooltip"),"vds-state--show":t.match.path==="".concat("/vds-react","/components/tooltip")})},r.a.createElement(C,t)),r.a.createElement("div",{className:c()({"vds-state--hidden":t.match.path!=="".concat("/vds-react","/components/tooltip/code"),"vds-state--show":t.match.path==="".concat("/vds-react","/components/tooltip/code")})},r.a.createElement(p.a,Object.assign({},p.b,{theme:m.a,code:F,language:"jsx"}),(function(e){var t=e.className,n=e.style,o=e.tokens,a=e.getLineProps,l=e.getTokenProps;return r.a.createElement("pre",{className:t,style:n},o.map((function(e,t){return r.a.createElement("div",Object.assign({},a({key:t,line:e}),{key:t}),r.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},t+1),e.map((function(e,t){return r.a.createElement("span",Object.assign({},l({key:t,token:e}),{key:t}))})))})))}))),r.a.createElement("div",{className:c()({"vds-state--hidden":t.match.path!=="".concat("/vds-react","/components/tooltip/html"),"vds-state--show":t.match.path==="".concat("/vds-react","/components/tooltip/html")})},r.a.createElement(p.a,Object.assign({},p.b,{theme:m.a,code:j.format(i.a.renderToStaticMarkup(r.a.createElement(C,t)),{css:"ignore",parser:"html",plugins:A,printWidth:120}),language:"html"}),(function(e){var t=e.className,n=e.style,o=e.tokens,a=e.getLineProps,l=e.getTokenProps;return r.a.createElement("pre",{className:t,style:n},o.map((function(e,t){return r.a.createElement("div",Object.assign({},a({key:t,line:e}),{key:t}),r.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},t+1),e.map((function(e,t){return r.a.createElement("span",Object.assign({},l({key:t,token:e}),{key:t}))})))})))}))))),r.a.createElement(E.a,null,r.a.createElement(d.a,null,r.a.createElement(g.a,{className:c()(["components"]),dividerLines:!0,size:"compact"},r.a.createElement(y.a,{tag:"caption"},"Props"),r.a.createElement(R.a,null,r.a.createElement(k.a,{className:"vds-tr"},r.a.createElement(x.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Prop"),r.a.createElement(x.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Type"),r.a.createElement(x.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Default"),r.a.createElement(x.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Description"))),r.a.createElement(b.a,null,s.props&&Object.entries(s.props).filter((function(e){return"@ignore"!==e[1].description})).map((function(e,t){return r.a.createElement(k.a,{className:"vds-tr",key:t},r.a.createElement(x.a,{className:"vds-td",scope:"row"},e[0]," ",e[1].required?r.a.createElement("strong",null," - required"):""),r.a.createElement(w.a,{className:"vds-td"},r.a.createElement("strong",null,e[1].type.name),e[1].type.value&&e[1].type.value.length?r.a.createElement("small",{style:{color:"#1a1f71"}},r.a.createElement("br",null),Array.isArray(e[1].type.value)?e[1].type.value.map((function(e){return e.value||e.name})).join(", "):"string"===typeof e[1].type.value?e[1].type.value:void 0):""),r.a.createElement(w.a,{className:"vds-td"},e[1].defaultValue?e[1].defaultValue.value:""),r.a.createElement(w.a,{className:"vds-td"},e[1].description))})))))))};I.displayName="TooltipExample";t.default=I},590:function(e,t,n){"use strict";var o=n(4),a=n(13),r=n(5),l=n(0),i=n.n(l),s=n(3),c=n(2),p=n.n(c),m=Object(l.forwardRef)((function(e,t){var n,i=e.className,s=e.disabled,c=e.inline,m=e.tag,u=Object(r.a)(e,["className","disabled","inline","tag"]);return Object(l.cloneElement)(m,Object(a.a)({className:p()("vds-link",(n={},Object(o.a)(n,"".concat("vds-link","--inline"),Boolean(c)),Object(o.a)(n,"".concat("vds-state","--disabled"),Boolean(s)),n),i),ref:t},u))}));m.propTypes={children:s.node,className:s.string,disabled:s.bool,inline:s.bool,tag:s.element},m.defaultProps={tag:i.a.createElement("a",null)},m.displayName="Link",t.a=m}}]);
//# sourceMappingURL=70.24fbba76.chunk.js.map