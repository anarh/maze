{"version":3,"sources":["components/date-selector/date-utilities.js","components/date-selector/index.js","components/date-selector/example/index.js","pages/components/date-selector.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/button-text/index.js","components/input-option/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input/index.js","components/input-hint/index.js","components/input-text/index.js","components/input-input/index.js","components/date-selector-locale/index.js"],"names":["getDateElementById","CSS_PREFIX","focusedDate","formatDateForIdString","locale","ref","uid","dateId","format","current","querySelector","getWeekDayNames","date","map","offset","day","addDays","ariaAbbr","name","getDayNames","getNextDateNotDisabled","before","disabledDates","maxDate","minDate","isDisabledDate","isDisabled","nextDate","prevDate","subDays","hasValidMinDate","Boolean","isValid","hasValidMaxDate","isLessThanMinDate","isBefore","isGreaterThanMaxDate","isAfter","disabled","Array","isArray","findIndex","d","isSameDay","isWithinInterval","DateSelector","forwardRef","ariaLabelCalendarButtonIcon","className","ariaLabelNextMonth","ariaLabelNextYear","ariaLabelPreviousMonth","ariaLabelPreviousYear","ariaNavigationInstructions","containerProps","closeCalendarButton","endDate","formatAriaLabelDate","formatCalendarTitle","formatInputValue","iconCalendarButton","formatWeekDay","highlightedDates","iconNextMonth","iconNextYear","iconPrevMonth","iconPrevYear","id","shortid","generate","onChange","onSelect","popperProps","selected","selectsEnd","startDate","selectsStart","remainingProps","useRef","getLocaleObject","getDefaultLocale","inputButtonRef","useState","showCalendar","setShowCalendar","isDayFocusActive","setIsDayFocusActive","Date","setFocusedDate","selectedDate","setSelectedDate","Intl","DateTimeFormat","code","inputValue","setInputValue","weeksInMonth","eachWeekOfInterval","start","startOfMonth","end","endOfMonth","getWeeksInSelectedMonth","week","eachDayOfInterval","startOfWeek","endOfWeek","useEffect","handleClickOutside","e","contains","target","document","addEventListener","removeEventListener","el","setTimeout","focus","handleInputChange","value","parseValue","handleShowCalendar","classnames","Manager","Reference","aria-label","undefined","iconType","onClick","Popper","style","placement","displayName","defaultProps","handleClickCloseButton","colorScheme","resolution","registerLocale","ja","ko","DateSelectorExample","setStartDate","setEndDate","tag","href","label","type","lang","es","formatLong","width","toLowerCase","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","role","exact","to","process","activeClassName","match","path","theme","language","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","token","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","length","color","v","join","defaultValue","ScreenReader","children","Tag","propTypes","node","string","elementType","KEY_CODES","TabList","orientation","selectedTab","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","querySelectorAll","Children","child","k","cloneElement","handleClick","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","handleKeyDown","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","active","ariaLabel","ButtonText","flippable","isFullWidth","InputOption","InputContainer","expanded","filled","invalid","isTextarea","readOnly","func","InputLabel","InputBar","InputMessage","show","Input","checkmarkIcon","contentAfterInput","contentBeforeInput","errorIcon","errorText","helpIcon","helpText","inputContainerProps","labelId","noValidate","onBlur","onFocus","placeholder","showCheckmark","showErrorText","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","InputHint","InputText","InputInput","localeName","localeData","window","global","__localeData__","__localeId__","localeSpec","warn"],"mappings":"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","file":"static/js/15.55e2a23c.chunk.js","sourcesContent":["import addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isBefore from 'date-fns/isBefore';\nimport isSameDay from 'date-fns/isSameDay';\nimport isValid from 'date-fns/isValid';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport subDays from \"date-fns/subDays\";\n\nexport const getDateElementById = ({\n  CSS_PREFIX,\n  focusedDate,\n  formatDateForIdString,\n  locale,\n  ref,\n  uid\n}) => {\n  const dateId = `#${CSS_PREFIX}-day-${format(focusedDate, formatDateForIdString, { locale })}-${uid}`;\n  return ref && ref.current ? ref.current.querySelector(dateId) : null;\n};\n\nexport const getDayNames = (date, locale) => {\n  return [0, 1, 2, 3, 4, 5, 6].map(offset => {\n    const day = addDays(date, offset);\n    return {\n      ariaAbbr: format(day, 'EEEE', locale),\n      name: format(day, 'EEEEEE', locale)\n    }\n  });\n};\n\nexport const getWeekDayNames = (date, locale) => getDayNames(date, locale);\n\nexport const getWeeksInSelectedMonth = (date, locale) => eachWeekOfInterval({\n  start: startOfMonth(date),\n  end: endOfMonth(date)\n}, locale);\n\nexport const getNextDateNotDisabled = (date, { before, disabledDates, maxDate, minDate }) => {\n  let isDisabledDate = isDisabled(date, disabledDates, maxDate, minDate);\n  const nextDate = addDays(date, 1);\n  const prevDate = subDays(date, 1);\n  const hasValidMinDate = Boolean(minDate) && isValid(minDate);\n  const hasValidMaxDate = Boolean(maxDate) && isValid(maxDate);\n  const isLessThanMinDate = hasValidMinDate && isBefore(date, minDate);\n  const isGreaterThanMaxDate = hasValidMaxDate && isAfter(date, maxDate);\n\n  if (isDisabledDate && isLessThanMinDate) {\n    return getNextDateNotDisabled(nextDate, {\n      before: true,\n      disabledDates,\n      maxDate,\n      minDate\n    });\n  }\n\n  if (isDisabledDate && isGreaterThanMaxDate) {\n    return getNextDateNotDisabled(prevDate, {\n      before: false,\n      disabledDates,\n      maxDate,\n      minDate\n    });\n  }\n\n  if (isDisabledDate) {\n    return getNextDateNotDisabled(before ? nextDate: prevDate, {\n      before,\n      disabledDates,\n      maxDate,\n      minDate\n    });\n  }\n  return date;\n};\n\nexport const isDisabled = (date, disabled, maxDate, minDate) => {\n  const hasValidMinDate = Boolean(minDate) && isValid(minDate);\n  const hasValidMaxDate = Boolean(maxDate) && isValid(maxDate);\n  const isLessThanMinDate = hasValidMinDate && isBefore(date, minDate);\n  const isGreaterThanMaxDate = hasValidMaxDate && isAfter(date, maxDate);\n  let isDisabledDate = false;\n\n  if (Array.isArray(disabled)) {\n    isDisabledDate = disabled.findIndex(d => isSameDay(date, d)) > -1;\n  }\n\n  if (typeof disabled === \"object\" && !Array.isArray(disabled) && disabled !== null) {\n    isDisabledDate = isWithinInterval(date, {...disabled });\n  }\n  return isLessThanMinDate || isGreaterThanMaxDate || isDisabledDate;\n};\n\nexport const isHighlighted = (date, highlightedDates) => {\n  if (Array.isArray(highlightedDates)) {\n    return highlightedDates.findIndex(d => isSameDay(date, d)) > -1;\n  }\n\n  if (typeof highlightedDates === \"object\" && !Array.isArray(highlightedDates) && highlightedDates !== null) {\n    return isWithinInterval(date, {...highlightedDates });\n  }\n};\n\nexport const isInHoverRange = (date, { startDate, endDate, mouseEnterDate, selectsEnd, selectsStart }) => {\n  startDate = startDate || endDate || new Date();\n  endDate = endDate || startDate || new Date();\n\n  if (!isValid(startDate) || !isValid(endDate) || !isValid(mouseEnterDate)) {\n    return;\n  }\n\n  if (Boolean(selectsStart) && isBefore(mouseEnterDate, startDate)) {\n    return isWithinInterval(date, { start: mouseEnterDate, end: startDate });\n  }\n\n  if (Boolean(selectsEnd) && isAfter(mouseEnterDate, endDate)) {\n    return isWithinInterval(date, { start: endDate, end: mouseEnterDate });\n  }\n};\n\nexport const isInRange = (date, { startDate, endDate }) => {\n  if (!isValid(startDate) || !isValid(endDate)) {\n    return;\n  }\n  if (isBefore(startDate, endDate)) {\n    return isWithinInterval(date, { start: startDate, end: endDate });\n  }\n};\n\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { arrayOf, bool, func, instanceOf, node, number, object, oneOfType, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport shortid from 'shortid';\nimport addDays from \"date-fns/addDays\";\nimport addMonths from \"date-fns/addMonths\";\nimport addWeeks from \"date-fns/addWeeks\";\nimport addYears from \"date-fns/addYears\";\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from \"date-fns/endOfWeek\";\nimport format from 'date-fns/format';\nimport isBefore from 'date-fns/isBefore';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isToday from 'date-fns/isToday';\nimport isValid from 'date-fns/isValid';\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport subDays from \"date-fns/subDays\";\nimport subMonths from \"date-fns/subMonths\";\nimport subWeeks from \"date-fns/subWeeks\";\nimport subYears from \"date-fns/subYears\";\nimport Input from '../input';\nimport InputOption from '../input-option';\nimport ButtonIcon from '../button-icon';\nimport ButtonText from '../button-text';\nimport Icon from '../icon';\nimport ScreenReader from '../screen-reader';\nimport {\n  getDateElementById,\n  getNextDateNotDisabled,\n  getWeekDayNames,\n  getWeeksInSelectedMonth,\n  isDisabled,\n  isHighlighted,\n  isInHoverRange,\n  isInRange\n} from \"./date-utilities\";\nimport {\n  getDefaultLocale,\n  getLocaleObject\n} from '../date-selector-locale';\n\nconst CSS_PREFIX = 'vds-date-selector';\nconst CSS_STATE = 'vds-state';\n\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  TAB: 9,\n  PAGEUP: 33,\n  PAGEDOWN: 34\n};\n\nconst DateSelector = forwardRef(({\n  ariaLabelCalendarButtonIcon,\n  ariaLabelNextMonth,\n  ariaLabelNextYear,\n  ariaLabelPreviousMonth,\n  ariaLabelPreviousYear,\n  ariaNavigationInstructions,\n  className,\n  closeCalendarButton,\n  containerProps,\n  disabledDates,\n  endDate,\n  formatAriaLabelDate,\n  formatCalendarTitle,\n  formatDateForIdString,\n  formatInputValue,\n  formatWeekDay,\n  highlightedDates,\n  iconCalendarButton,\n  iconNextMonth,\n  iconNextYear,\n  iconPrevMonth,\n  iconPrevYear,\n  id = shortid.generate(),\n  locale,\n  maxDate,\n  minDate,\n  onChange,\n  onSelect,\n  popperProps,\n  selected,\n  selectsEnd,\n  selectsStart,\n  startDate,\n  ...remainingProps\n  }, ref) => {\n\n  ref = ref || useRef();\n  locale = getLocaleObject(locale) || getLocaleObject(getDefaultLocale());\n  const inputButtonRef = useRef();\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  let dialogBlurTimeout = null;\n\n  const [showCalendar, setShowCalendar] = useState();\n  const [isDayFocusActive, setIsDayFocusActive] = useState(false)\n  const [showNavigationHelpMessage, setShowNavigationHelpMessage] = useState();\n  const [focusedDate, setFocusedDate] = useState(\n    getNextDateNotDisabled((selected || new Date()), {\n    before: true,\n    disabledDates,\n    maxDate,\n    minDate\n  }));\n  const [selectedDate, setSelectedDate] = useState(selected);\n  const [mouseEnterDate, setMouseEnterDate] = useState();\n  const [inputValue, setInputValue] = useState(\n    Boolean(selected) && isValid(selected)\n      ? formatInputValue\n        ? format(selected, formatInputValue, { locale })\n        : new Intl.DateTimeFormat((locale && locale.code) || 'en-US').format(selected)\n      : ''\n  );\n  const weeksInMonth = getWeeksInSelectedMonth(focusedDate, { locale });\n  const dayNames = getWeekDayNames(weeksInMonth[0], { locale });\n  const weeksWithDaysInMonth = weeksInMonth.map(week => {\n    return eachDayOfInterval({\n      start: startOfWeek(week, { locale }),\n      end: endOfWeek(week, { locale })\n    });\n  });\n\n  useEffect(() => {\n    if (typeof onSelect === 'function') {\n      onSelect(selectedDate);\n    }\n\n    if (showCalendar === false) {\n      setFocusedDate(selectedDate || getNextDateNotDisabled((new Date()), {\n        before: true,\n        disabledDates,\n        maxDate,\n        minDate\n      }));\n    }\n\n    const handleClickOutside = e => {\n      if (ref.current.contains(e.target)) {\n        return;\n      }\n      setShowCalendar(false);\n    };\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('touchend', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('touchend', handleClickOutside);\n    };\n  }, [disabledDates, maxDate, minDate, onSelect, ref, showCalendar, selectedDate]);\n\n  useEffect(() => {\n    if (Boolean(selectsEnd) && isValid(selectedDate || focusedDate) && isValid(startDate)) {\n      if (isBefore((selectedDate || focusedDate), startDate)) {\n        setSelectedDate(startDate);\n        setFocusedDate(startDate);\n        setInputValue('');\n      }\n    }\n  }, [focusedDate, formatInputValue, locale, selectedDate, selectsEnd, startDate]);\n\n  useEffect(() => {\n    const el = getDateElementById({\n      CSS_PREFIX,\n      focusedDate,\n      formatDateForIdString,\n      locale,\n      ref,\n      uid\n    });\n    if (el && showCalendar && isDayFocusActive) {\n      setTimeout(() => el.focus());\n      setIsDayFocusActive(false);\n    }\n  }, [isDayFocusActive, uid, formatDateForIdString, locale, showCalendar, focusedDate, ref]);\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    const parseValue = new Date(value);\n\n    setShowCalendar(false);\n    setInputValue(value);\n\n    if (isValid(parseValue)) {\n      setFocusedDate(parseValue);\n      setSelectedDate(parseValue);\n    } else {\n      setFocusedDate(focusedDate);\n      setSelectedDate(null);\n    }\n\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleShowCalendar = () => {\n    setShowCalendar(!showCalendar);\n    setIsDayFocusActive(!showCalendar);\n  };\n\n  const handleSelectedDate = date => {\n    setFocusedDate(date);\n    if (formatInputValue) {\n      setInputValue(format(date, formatInputValue, { locale }));\n    } else {\n      setInputValue(new Intl.DateTimeFormat((locale && locale.code) || 'en-US').format(date))\n    }\n    setSelectedDate(date);\n    setShowCalendar(false);\n    inputButtonRef.current.focus();\n  };\n\n  const gotoPreviousYear = () => {\n    setFocusedDate(getNextDateNotDisabled(subYears(focusedDate, 1), {\n      before: false,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const gotoNextYear = () => {\n    setFocusedDate(getNextDateNotDisabled(addYears(focusedDate, 1), {\n      before: true,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const gotoPreviousMonth= () => {\n    setFocusedDate(getNextDateNotDisabled(subMonths(focusedDate, 1), {\n      before: false,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const gotoNextMonth= () => {\n    setFocusedDate(getNextDateNotDisabled(addMonths(focusedDate, 1), {\n      before: true,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const handleDialogKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const focusableElements = ref.current.querySelectorAll(`.${CSS_PREFIX}-calendar button:not([disabled]):not(.vds-state--disabled)`);\n    const firstFocusableElement = focusableElements[0];\n    const lastFocusableElement = focusableElements[focusableElements.length - 1];\n    if ([KEY_CODES.ESC].includes(code)) {\n      setShowCalendar(false);\n      inputButtonRef.current.focus();\n    }\n\n    if ([KEY_CODES.TAB].includes(code)) {\n      if (firstFocusableElement === e.target && e.shiftKey) {\n        e.preventDefault();\n        lastFocusableElement.focus();\n      }\n\n      if (lastFocusableElement === e.target && !e.shiftKey) {\n        e.preventDefault();\n        firstFocusableElement.focus();\n      }\n    }\n  };\n\n  const handleClickCloseButton = e => {\n    setShowCalendar(false);\n    inputButtonRef.current.focus();\n  };\n\n  const handleDialogFocus = e => {\n    setShowNavigationHelpMessage(e.target.classList.contains(`${CSS_PREFIX}-day`));\n    if (dialogBlurTimeout) {\n      clearTimeout(dialogBlurTimeout);\n    }\n  };\n\n  const handleDialogBlur = e => dialogBlurTimeout = setTimeout(() => {\n    setShowNavigationHelpMessage(false);\n    setShowCalendar(false);\n  }, 200);\n\n  const handleDialogClick = e => {\n    if (e.target.tagName.toLowerCase() !== 'button' && dialogBlurTimeout) {\n      clearTimeout(dialogBlurTimeout);\n      const el = getDateElementById({\n        CSS_PREFIX,\n        focusedDate,\n        formatDateForIdString,\n        locale,\n        ref,\n        uid\n      });\n      if (el && showCalendar) {\n        setTimeout(() => el.focus());\n      }\n    }\n  };\n\n  const handleDayMouseEnter = date => setMouseEnterDate(date);\n\n  const handleDayMouseLeave = () => setMouseEnterDate(null);\n\n  const handleNavigation = (e, day, locale) => {\n    const code = e.charCode || e.keyCode;\n    let nextDate = day;\n    let before = true;\n\n    if (!Object.keys(KEY_CODES).map(k => KEY_CODES[k]).includes(code) || [KEY_CODES.TAB].includes(code)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    switch (e.keyCode) {\n      case KEY_CODES.ARROW_DOWN:\n        nextDate = addWeeks(day, 1);\n        break;\n\n      case KEY_CODES.ARROW_LEFT:\n        before = false;\n        nextDate = subDays(day, 1);\n        break;\n\n      case KEY_CODES.ARROW_RIGHT:\n        nextDate = addDays(day, 1);\n        break;\n\n      case KEY_CODES.ARROW_UP:\n        before = false;\n        nextDate = subWeeks(day, 1);\n        break;\n\n      case KEY_CODES.END:\n        before = false;\n        nextDate = endOfWeek(day, { locale });\n        break;\n\n      case KEY_CODES.HOME:\n        nextDate = startOfWeek(day, { locale });\n        break;\n\n      case KEY_CODES.PAGEDOWN:\n        if (e.shiftKey) {\n          nextDate = addYears(day, 1);\n        } else {\n          nextDate = addMonths(day, 1);\n        }\n        break;\n\n      case KEY_CODES.PAGEUP:\n        before = false;\n        if (e.shiftKey) {\n          nextDate = subYears(day, 1);\n        } else {\n          nextDate = subMonths(day, 1);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    nextDate = getNextDateNotDisabled(nextDate, { before, disabledDates, maxDate, minDate });\n\n    if (Boolean(selectsStart) || Boolean(selectsEnd)) {\n      setMouseEnterDate(nextDate);\n    }\n    setIsDayFocusActive(true);\n    setFocusedDate(nextDate);\n  };\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, className)}\n      id={`${CSS_PREFIX}-${uid}`}\n      ref={ref}\n      {...containerProps}\n    >\n      {\n        <Manager>\n          <Reference>\n            {({ ref }) => (\n              <Input\n                containerProps={{ ref }}\n                id={`input-${uid}`}\n                onChange={handleInputChange}\n                value={inputValue}\n                {...remainingProps}\n              >\n                <InputOption>\n                  <ButtonIcon\n                    aria-label={ariaLabelCalendarButtonIcon(isValid(new Date(selectedDate))\n                      ? formatInputValue ? format(selectedDate, formatInputValue, { locale }) : new Intl.DateTimeFormat((locale && locale.code) || 'en-US').format(selectedDate)\n                      : undefined)}\n                    iconType=\"light-tiny\"\n                    id={`input-button-${uid}`}\n                    onClick={handleShowCalendar}\n                    ref={inputButtonRef}\n                  >\n                    {iconCalendarButton}\n                  </ButtonIcon>\n                </InputOption>\n              </Input>\n            )}\n          </Reference>\n          {\n            showCalendar\n              ? <Popper {...popperProps}>\n              {({ ref, style, placement }) => (\n                // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n                <div\n                  aria-labelledby={`${CSS_PREFIX}-header-title-${uid}`}\n                  className={classnames(`${CSS_PREFIX}-calendar`)}\n                  data-placement={placement}\n                  onBlur={handleDialogBlur}\n                  onClick={handleDialogClick}\n                  onFocus={handleDialogFocus}\n                  onKeyDown={handleDialogKeyDown}\n                  ref={ref}\n                  role=\"dialog\"\n                >\n                  <div>\n                    <div className={classnames(`${CSS_PREFIX}-header`)}>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelPreviousYear}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-previous-year-${uid}`}\n                        onClick={gotoPreviousYear}\n                      >\n                        {iconPrevYear}\n                      </ButtonIcon>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelPreviousMonth}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-previous-month-${uid}`}\n                        onClick={gotoPreviousMonth}\n                      >\n                        {iconPrevMonth}\n                      </ButtonIcon>\n                      <div\n                        aria-live=\"polite\"\n                        className={classnames(`${CSS_PREFIX}-header-title`)}\n                        id={`${CSS_PREFIX}-header-title-${uid}`}\n                      >\n                        {format(focusedDate, formatCalendarTitle, { locale })}\n                      </div>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelNextMonth}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-next-month-${uid}`}\n                        onClick={gotoNextMonth}\n                      >\n                        {iconNextMonth}\n                      </ButtonIcon>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelNextYear}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-next-year-${uid}`}\n                        onClick={gotoNextYear}\n                      >\n                        {iconNextYear}\n                      </ButtonIcon>\n                      <ScreenReader aria-live=\"polite\">{showNavigationHelpMessage ? ariaNavigationInstructions : ''}</ScreenReader>\n                    </div>\n                    <table\n                      aria-labelledby={`${CSS_PREFIX}-header-title-${uid}`}\n                      className={classnames(`${CSS_PREFIX}-calendar-grid`)}\n                      role=\"grid\"\n                    >\n                      <thead>\n                        <tr>\n                          {\n                            dayNames.map((day, k) => (\n                              <th\n                                abbr={day.ariaAbbr}\n                                className={classnames(`${CSS_PREFIX}-day-name`)}\n                                key={`${CSS_PREFIX}-th-${uid}-${k}`}\n                                scope=\"col\"\n                              >\n                                {day.name}\n                              </th>\n                            ))\n                          }\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {\n                          weeksWithDaysInMonth.map((week, k) => (\n                            <tr key={`${CSS_PREFIX}-tbody-tr-${uid}-${k}`}>\n                              {\n                                week.map((day, i) => (\n                                  <td key={`${CSS_PREFIX}-tbody-tr-td-${uid}-${k}-${i}`}>\n                                    <ButtonIcon\n                                      aria-label={format(day, formatAriaLabelDate, { locale })}\n                                      className={classnames(`${CSS_PREFIX}-day`, {\n                                        [`${CSS_PREFIX}-today`]: isToday(day),\n                                        [`${CSS_PREFIX}-next-prev-month`]: !isSameMonth(day, focusedDate),\n                                        [`${CSS_PREFIX}-in-range`]: isInRange(day, { startDate, endDate }),\n                                        [`${CSS_PREFIX}-start-of-range`]: Boolean(selectsStart || selectsEnd) && isSameDay(day, startDate),\n                                        [`${CSS_PREFIX}-end-of-range`]: Boolean(selectsStart || selectsEnd) && isSameDay(day, endDate),\n                                        [`${CSS_PREFIX}-mouse-enter-range`]: isInHoverRange(day, {\n                                          startDate,\n                                          endDate,\n                                          mouseEnterDate,\n                                          selectsEnd,\n                                          selectsStart\n                                        }),\n                                        [`${CSS_STATE}-focused`]: isSameDay(day, focusedDate),\n                                        [`${CSS_STATE}-selected`]: isSameDay(day, selectedDate),\n                                        [`${CSS_STATE}-disabled`]: isDisabled(day, disabledDates, maxDate, minDate),\n                                        [`${CSS_STATE}-highlighted`]: isHighlighted(day, highlightedDates)\n                                      })}\n                                      disabled={isDisabled(day, disabledDates, maxDate, minDate)}\n                                      iconType=\"light-tiny\"\n                                      id={`${CSS_PREFIX}-day-${format(day, formatDateForIdString, { locale })}-${uid}`}\n                                      onClick={() => handleSelectedDate(day)}\n                                      onMouseEnter={() => handleDayMouseEnter(day)}\n                                      onMouseLeave={handleDayMouseLeave}\n                                      onKeyDown={e => handleNavigation(e, day, locale)}\n                                      tabIndex={isSameDay(day, focusedDate) ? 0 : -1}\n                                    >\n                                      {format(day, 'd', { locale })}\n                                    </ButtonIcon>\n                                  </td>\n                                ))\n                              }\n                            </tr>\n                          ))\n                        }\n                      </tbody>\n                    </table>\n                    <div className={`${CSS_PREFIX}-footer`}>\n                      {closeCalendarButton(handleClickCloseButton)}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Popper>\n              : undefined\n          }\n        </Manager>\n      }\n    </div>\n  );\n});\n\nDateSelector.propTypes = {\n  /**\n   * Calendar Button Icon Aria Label\n   */\n  ariaLabelCalendarButtonIcon: func,\n\n  /**\n   * Next Month Aria Label\n   */\n  ariaLabelNextMonth: string,\n\n  /**\n   * Next Year Aria Label\n   */\n  ariaLabelNextYear: string,\n\n  /**\n   * Previous Month Aria Label\n   */\n  ariaLabelPreviousMonth: string,\n\n  /**\n   * Previous Year Aria Label\n   */\n  ariaLabelPreviousYear: string,\n\n  /**\n   * Instructions for keyboard navigation\n   */\n  ariaNavigationInstructions: string,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Close calendar Button\n   */\n  closeCalendarButton: func,\n\n  /**\n   * Container props\n   */\n  containerProps: object,\n\n  /**\n   * Disabled dates\n   */\n  disabledDates: oneOfType([\n    arrayOf(instanceOf(Date)),\n    shape({\n      end: instanceOf(Date).isRequired,\n      start: instanceOf(Date).isRequired\n    })\n  ]),\n\n  /**\n   * End date for date range\n   */\n  endDate: instanceOf(Date),\n\n  /**\n   * Format for date aria label\n   */\n  formatAriaLabelDate: string,\n\n  /**\n   * Format for calendar title\n   */\n  formatCalendarTitle: string,\n\n  /**\n   * Format for date id string\n   */\n  formatDateForIdString: string,\n\n  /**\n   * Format for input value\n   */\n  formatInputValue: string,\n\n  /**\n   * Format for weekday\n   */\n  formatWeekDay: string,\n\n  /**\n   * Highlighted dates\n   */\n  highlightedDates: oneOfType([\n    arrayOf(instanceOf(Date)),\n    shape({\n      end: instanceOf(Date).isRequired,\n      start: instanceOf(Date).isRequired\n    })\n  ]),\n\n  /**\n   * Calendar Button icon\n   */\n  iconCalendarButton: node,\n\n  /**\n   * Next Month icon\n   */\n  iconNextMonth: node,\n\n  /**\n   * Next Year icon\n   */\n  iconNextYear: node,\n\n  /**\n   * Prev Month icon\n   */\n  iconPrevMonth: node,\n\n  /**\n   * Prev Year icon\n   */\n  iconPrevYear: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Locale\n   */\n  locale: oneOfType([\n    string,\n    shape({ locale: object })\n  ]),\n\n  /**\n   * Maximum date\n   */\n  maxDate: instanceOf(Date),\n\n  /**\n   * Minimum date\n   */\n  minDate: instanceOf(Date),\n\n  /**\n   * On Change of input\n   */\n  onChange: func,\n\n  /**\n   * On Select of date\n   */\n  onSelect: func,\n\n  /**\n   * React popper props\n   */\n  popperProps: object,\n\n  /**\n   * Selected date\n   */\n  selected: instanceOf(Date),\n\n  /**\n   * Range end input\n   */\n  selectsEnd: bool,\n\n  /**\n   * Range start input\n   */\n  selectsStart: bool,\n\n  /**\n   * Start date for date range\n   */\n  startDate: instanceOf(Date)\n};\n\nDateSelector.displayName = 'DateSelector';\n\nDateSelector.defaultProps = {\n  ariaLabelCalendarButtonIcon: date => (\n    isValid(new Date(date))\n      ? `Choose Date, selected date is ${date}`\n      : 'Choose Date'\n  ),\n  ariaLabelNextMonth: 'Next Month',\n  ariaLabelNextYear: 'Next Year',\n  ariaLabelPreviousMonth: 'Previous Month',\n  ariaLabelPreviousYear: 'Previous Year',\n  ariaNavigationInstructions: 'Cursor keys can navigate dates',\n  // eslint-disable-next-line react/display-name\n  closeCalendarButton: handleClickCloseButton => (\n    <ButtonText\n      className={classnames(`${CSS_PREFIX}-button-cancel`)}\n      colorScheme=\"tertiary\"\n      onClick={handleClickCloseButton}\n    >\n      Close\n    </ButtonText>\n  ),\n  iconCalendarButton: <Icon name=\"calendar\" resolution=\"tiny\" />,\n  iconNextMonth: <Icon name=\"arrow-next\" resolution=\"tiny\" />,\n  iconNextYear: <Icon name=\"fast-forward\" resolution=\"tiny\" />,\n  iconPrevMonth: <Icon name=\"arrow-previous\" resolution=\"tiny\" />,\n  iconPrevYear: <Icon name=\"rewind\" resolution=\"tiny\" />,\n  formatAriaLabelDate: 'EEEE LLLL d, yyyy',\n  formatCalendarTitle: 'LLLL yyyy',\n  formatDateForIdString: 'MM-dd-yyyy',\n  popperProps: {\n    placement: 'bottom-start'\n  }\n};\n\nexport default DateSelector;\n","import React, { useState } from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport DateSelector from '../../date-selector';\nimport Input from '../../input';\nimport Typography from '../../typography';\nimport isValid from 'date-fns/isValid';\nimport es from 'date-fns/locale/es';\nimport ja from 'date-fns/locale/ja';\nimport ko from 'date-fns/locale/ko';\nimport { registerLocale } from '../../date-selector-locale';\n\nregisterLocale('ja', ja);\nregisterLocale('ko', ko);\n\n// const isMobileOperatingSystem = () => {\n//   const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n//     if (/windows phone/i.test(userAgent) || /android/i.test(userAgent) || (/iPad|iPhone|iPod/.test(userAgent) && !window.MSStream)) {\n//         return true;\n//     }\n//     return false;\n// };\n\nconst DateSelectorExample = () => {\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <Typography tag=\"h2\">Default Date Selector</Typography>\n              <Typography>\n                VDS Date-picker uses all props available to the <strong>{`<Input />`}</strong> component in\n                addition to the props table below. Use this for ref and other validation needs for the input.\n              </Typography>\n              <Typography>\n                VDS Date-picker also uses <a href=\"https://date-fns.org/\">Date-fns</a> (think lodash utilities for Dates)\n                to support locales usage and to run other date manipulation functions.\n              </Typography>\n              <Typography>\n                <a href=\"https://popper.js.org/\">Popper.js</a> is used for helping properly position the calendar dialog. Use popperProps to modify functionality.\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <DateSelector\n                label=\"Date (mm/dd/yyyy)\"\n                name=\"date-picker\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Native Mobile Date Selector(View in iOS, Android, or Windows Phone)</Typography>\n              <Typography>\n                Use native date pickers for mobile operating systems when appropriate\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Input\n                label=\"View in iOS, Android, etc\"\n                name=\"mobile-date-selector\"\n                type=\"date\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Date picker with disabled dates</Typography>\n              <Typography>\n                Disabled March 15 and March 20 in the example below\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <DateSelector\n                disabledDates={[new Date('03/15/2020'), new Date('03/20/2020')]}\n                label=\"Date (mm/dd/yyyy)\"\n                name=\"date-picker-disabled-dates\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Locale (Spanish) Example</Typography>\n              <Typography>\n                Below is an example that imports the Spanish locale from date-fns\n              </Typography>\n              <Typography>\n                <code>\n                  {`import es from 'date-fns/locale/es';`}\n                </code><br />\n                <code>\n                  {`<DateSelector ... locale={es} />`}\n                </code><br />\n              </Typography>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(new Date(date))\n                    ? `Elige fecha, la fecha seleccionada es ${date}`\n                    : 'Elige fecha'\n                )}\n                ariaLabelNextMonth=\"próximo mes\"\n                ariaLabelNextYear=\"el próximo año\"\n                ariaLabelPreviousMonth=\"mes anterior\"\n                ariaLabelPreviousYear=\"año anterior\"\n                containerProps={{ lang: 'es' }}\n                label={`La Fecha (${es.formatLong.date({ width: 'short'}).toLowerCase()})`}\n                locale={es}\n                name=\"date-picker-locale-es\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Locale (Japanese &amp; Korean) Examples</Typography>\n              <Typography>\n                Below is an example that uses the locale string &apos;ja&apos; after importing(from date-fns) and\n                registering the locale using registerLocale\n              </Typography>\n              <Typography>\n                <code>\n                  {`import { registerLocale, setDefaultLocale } from '../../date-picker-locale';`}\n                </code><br />\n                <code>\n                  {`import ja from 'date-fns/locale/ja';`}\n                </code><br />\n                <code>\n                  {`import ko from 'date-fns/locale/ko';`}\n                </code><br />\n                <code>\n                  {`registerLocale('ja', ja);`}\n                </code><br />\n                <code>\n                  {`registerLocale('ko', ko);`}\n                </code><br /><br />\n                <code>\n                  {`GLOBAL - To set a default locale for all instances of Datepicker use the setDefaultLocale e.g.`}\n                </code><br />\n                <code>\n                  {`setDefaultLocale('es');`}\n                </code><br />\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                <code>\n                  {`<DateSelector ... locale=\"ja\" />`}\n                </code><br />\n              </Typography>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(new Date(date))\n                    ? `日付を選択、選択した日付は ${date}`\n                    : '日付を選択'\n                )}\n                ariaLabelNextMonth=\"来月\"\n                ariaLabelNextYear=\"来年\"\n                ariaLabelPreviousMonth=\"前月\"\n                ariaLabelPreviousYear=\"前年\"\n                containerProps={{ lang: 'ja' }}\n                label={`日付 (${ja.formatLong.date({ width: 'short'}).toLowerCase()})`}\n                locale=\"ja\"\n                name=\"date-picker-locale-ja\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                <code>\n                  {`<DateSelector ... locale=\"ko\" />`}\n                </code><br />\n              </Typography>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(new Date(date))\n                    ? `날짜를 선택하십시오. 선택한 날짜는 ${date}`\n                    : '날짜를 선택하십시오'\n                )}\n                ariaLabelNextMonth=\"다음 달\"\n                ariaLabelNextYear=\"내년\"\n                ariaLabelPreviousMonth=\"지난달\"\n                ariaLabelPreviousYear=\"전년도\"\n                containerProps={{ lang: 'ko' }}\n                label={`데이트  (${ko.formatLong.date({ width: 'short'}).toLowerCase()})`}\n                locale=\"ko\"\n                name=\"date-picker-locale-ko\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h2\">Range Selector</Typography>\n              <Typography>\n                Below is an example that uses 2 date-pickers as a date range picker.\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(new Date(date))\n                    ? `Choose Start Date, selected start date is ${date}`\n                    : 'Choose Start Date'\n                )}\n                endDate={endDate}\n                label=\"Start Date (mm/dd/yyyy)\"\n                name=\"date-picker-before\"\n                onSelect={date => {\n                  setStartDate(date);\n                }}\n                selectsStart\n                startDate={startDate}\n              />\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(new Date(date))\n                    ? `Choose End Date, selected end date is ${date}`\n                    : 'Choose End Date'\n                )}\n                endDate={endDate}\n                label=\"End Date (mm/dd/yyyy)\"\n                name=\"date-picker-after\"\n                minDate={startDate}\n                onSelect={date => {\n                  setEndDate(date);\n                }}\n                selectsEnd\n                startDate={startDate}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\nexport default DateSelectorExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/date-selector/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/date-selector/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/date-selector/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DateSelectorExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for DateSelector\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Date Selector</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/date-selector`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Date Selector Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/date-selector/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/date-selector/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/date-selector`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/date-selector`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/date-selector/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/date-selector/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/date-selector/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/date-selector/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDateSelectorExample.displayName = 'DateSelectorExample';\n\nexport default DateSelectorExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput {...inputContainerProps}>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","export const registerLocale = (localeName, localeData) => {\n  const scope = typeof window !== \"undefined\" ? window : global;\n\n  if (!scope.__localeData__) {\n    scope.__localeData__ = {};\n  }\n  scope.__localeData__[localeName] = localeData;\n};\n\nexport const setDefaultLocale = (localeName) => {\n  const scope = typeof window !== \"undefined\" ? window : global;\n\n  scope.__localeId__ = localeName;\n};\n\nexport const getDefaultLocale = () => {\n  const scope = typeof window !== \"undefined\" ? window : global;\n\n  return scope.__localeId__;\n};\n\nexport const getLocaleObject = (localeSpec) => {\n  if (typeof localeSpec === \"string\") {\n    // Treat it as a locale name registered by registerLocale\n    const scope = typeof window !== \"undefined\" ? window : global;\n    const localeData = scope.__localeData__ ? scope.__localeData__[localeSpec] : null\n    if (localeSpec && !localeData) {\n      console.warn(\n        `A locale object was not found for the provided string [\"${localeSpec}\"].`\n      );\n    }\n    return localeData;\n  } else {\n    // Treat it as a raw date-fns locale object\n    return localeSpec;\n  }\n};\n"],"sourceRoot":""}