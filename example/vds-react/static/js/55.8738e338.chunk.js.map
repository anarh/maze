{"version":3,"sources":["components/divider/index.js","components/divider/example/index.js","pages/components/divider.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["Divider","ariaHidden","className","title","type","remainingProps","aria-hidden","classnames","Boolean","defaultProps","displayName","DividerExample","tag","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","value","length","color","Array","isArray","v","join","undefined","defaultValue","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/55.8738e338.chunk.js","sourcesContent":["import React from 'react';\nimport { oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-divider';\n\nconst Divider = ({ ariaHidden, className, title, type, ...remainingProps }) => (\n  <hr\n    aria-hidden={ariaHidden}\n    className={classnames({\n      [`${CSS_PREFIX}--${type}`]: Boolean(type)\n    }, className)}\n    title={title}\n    {...remainingProps}\n  />\n);\n\nDivider.propTypes = {\n  /**\n   * Aria Hidden\n   */\n  ariaHidden: oneOf(['true', 'false']),\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Title\n   */\n  title: string,\n\n  /**\n   * Type\n   */\n  type: oneOf(['section', 'standard'])\n};\n\nDivider.defaultProps = {\n  ariaHidden: 'true',\n  title: 'Separator',\n  type: 'standard'\n};\n\nDivider.displayName = 'Divider';\n\nexport default Divider;\n","import React from 'react';\nimport Col from '../../col';\nimport Divider from '../../divider';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst DividerExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Divider (standard)</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Divider type=\"standard\" />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Divider (section)</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Divider type=\"section\" />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default DividerExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/divider/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/divider/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/divider/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DividerExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Divider\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Divider</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/divider`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Divider Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/divider/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/divider/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/divider`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/divider`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/divider/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/divider/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/divider/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/divider/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDividerExample.displayName = 'DividerExample';\n\nexport default DividerExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}