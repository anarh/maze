{"version":3,"sources":["components/pagination/index.js","components/pagination-control/index.js","components/pagination-overflow/index.js","components/pagination-page/index.js","components/pagination/usePagination.js","components/pagination-wrapper/index.js","components/pagination/example/index.js","pages/components/pagination.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/link/index.js"],"names":["Pagination","forwardRef","ref","ariaLabel","children","className","role","remainingProps","aria-label","classnames","CSS_PREFIX","propTypes","string","isRequired","node","defaultProps","displayName","PaginationControl","PaginationOverflow","PaginationPage","selected","aria-current","undefined","Boolean","bool","ACTIONS","paginationReducer","state","action","type","payload","selectedPage","totalPages","Array","from","length","_","i","label","pagesToShow","concat","usePagination","reducer","initialState","React","useReducer","usePaginationReducer","paginationState","dispatch","useEffect","PaginationWrapper","firstPageLabel","lastPageLabel","morePagesLabel","nextPageLabel","onButtonClick","pageAriaLabel","previousPageLabel","handleClick","e","page","iconType","disabled","onClick","name","resolution","map","k","key","PaginationExample","useState","stateOne","setStateOne","stateTwo","setStateTwo","paginationOneState","tag","href","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","value","color","isArray","v","join","defaultValue","ScreenReader","Tag","elementType","KEY_CODES","TabList","orientation","selectedTab","useRef","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","current","querySelectorAll","Children","child","cloneElement","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","focus","handleKeyDown","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","active","Link","inline","element"],"mappings":"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","file":"static/js/35.3a3a949d.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination';\n\nconst Pagination = forwardRef(({ ariaLabel, children, className, role, ...remainingProps }, ref) => (\n  <div\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX+'-container', className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    <ul className={classnames(CSS_PREFIX)}>\n      {children}\n    </ul>\n  </div>\n));\n\nPagination.propTypes = {\n  /**\n   * Aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  role: string\n};\n\nPagination.defaultProps = {\n  role: 'navigation'\n};\n\nPagination.displayName = 'Pagination';\n\nexport default Pagination;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination-control';\n\nconst PaginationControl = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nPaginationControl.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPaginationControl.displayName = 'PaginationControl';\n\nexport default PaginationControl;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination-overflow';\n\nconst PaginationOverflow = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nPaginationOverflow.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPaginationOverflow.displayName = 'PaginationOverflow';\n\nexport default PaginationOverflow;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination-page';\nconst CSS_STATE = 'vds-state';\n\nconst PaginationPage = forwardRef(({ children, className, selected, ...remainingProps }, ref) => (\n  <li\n    aria-current={selected ? 'true' : undefined}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nPaginationPage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *  Selected\n   */\n  selected: bool\n};\n\nPaginationPage.displayName = 'PaginationPage';\n\nexport default PaginationPage;\n","import React from 'react';\n\nconst ACTIONS = {\n  DEFAULT: 'default',\n  ELLIPSE: 'ellipse',\n  EMPTY: 'empty',\n  LEFT_ELLIPSE: 'left_ellipse',\n  RIGHT_ELLIPSE: 'right_ellipse'\n};\n\nconst paginationReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.EMPTY: {\n      return [];\n    }\n\n    case ACTIONS.DEFAULT: {\n      const { selectedPage, totalPages } = action.payload;\n      return Array.from({ length: totalPages }, (_, i) => ({\n        label: i + 1,\n        selected: i + 1 === selectedPage\n      }));\n    }\n\n    case ACTIONS.RIGHT_ELLIPSE: {\n      const { pagesToShow, selectedPage, totalPages } = action.payload;\n      return Array.from({ length: pagesToShow }, (_, i) => ({\n        label: i + 1,\n        selected: i + 1 === selectedPage\n      })).concat([\n        {\n          label: '...',\n          selected: false\n        },\n        {\n          label: totalPages,\n          selected: false\n        }\n      ]);\n    }\n\n    case ACTIONS.LEFT_ELLIPSE: {\n      const { pagesToShow, selectedPage, totalPages } = action.payload;\n      return [\n        {\n          label: 1,\n          selected: false\n        },\n        {\n          label: '...',\n          selected: false\n        }\n      ].concat(\n        Array.from({ length: pagesToShow }, (_, i) => ({\n          label: totalPages - (pagesToShow - 1 - i),\n          selected: totalPages - (pagesToShow - 1 - i) === selectedPage\n        }))\n      );\n    }\n\n    default: {\n      const { pagesToShow, selectedPage, totalPages } = action.payload;\n      return [\n        {\n          label: 1, // page 1\n          selected: false\n        },\n        {\n          label: '...',\n          selected: false\n        }\n      ]\n        .concat([\n          ...Array.from({ length: pagesToShow }, (_, i) => ({\n            label: selectedPage - (selectedPage % pagesToShow || pagesToShow) + 1 + i,\n            selected: selectedPage - (selectedPage % pagesToShow || pagesToShow) + 1 + i === selectedPage\n          }))\n        ])\n        .concat([\n          {\n            label: '...',\n            selected: false\n          },\n          {\n            label: totalPages,\n            selected: selectedPage === totalPages\n          }\n        ]);\n    }\n  }\n};\n\nconst usePaginationReducer = (reducer = paginationReducer, initialState = []) =>\n  React.useReducer(reducer, initialState);\n\nconst usePagination = ({ pagesToShow, selectedPage, totalPages }) => {\n  const [paginationState, dispatch] = usePaginationReducer();\n\n  React.useEffect(() => {\n    const payload = {\n      pagesToShow,\n      selectedPage,\n      totalPages\n    };\n    if (!selectedPage) {\n      dispatch({ payload, type: ACTIONS.EMPTY });\n    } else if (totalPages <= pagesToShow + 2) {\n      // e.g. [1, 2, 3, 4, 5, 6]\n      dispatch({ payload, type: ACTIONS.DEFAULT });\n    } else if (selectedPage <= pagesToShow) {\n      // e.g. [1, 2, 3, 4, 5, 6, ..., 20]\n      dispatch({ payload, type: ACTIONS.RIGHT_ELLIPSE });\n    } else if (totalPages - selectedPage < pagesToShow) {\n      // e.g. [1, ..., x, x, x, x, 20]\n      dispatch({ payload, type: ACTIONS.LEFT_ELLIPSE });\n      //console.log(\"WER\");\n    } else {\n      dispatch({ payload });\n    }\n  }, [dispatch, pagesToShow, selectedPage, totalPages]);\n\n  return paginationState;\n};\n\nexport { ACTIONS, paginationReducer, usePagination, usePaginationReducer };\n","import React from 'react';\nimport { func, node, number, string } from 'prop-types';\nimport Pagination from '../pagination';\nimport PaginationControl from '../pagination-control';\nimport PaginationOverflow from '../pagination-overflow';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport PaginationPage from '../pagination-page';\nimport { usePagination } from '../pagination/usePagination';\n\nconst PaginationWrapper = ({\n  ariaLabel,\n  className,\n  firstPageLabel,\n  lastPageLabel,\n  morePagesLabel,\n  nextPageLabel,\n  onButtonClick,\n  pageAriaLabel,\n  pagesToShow,\n  previousPageLabel,\n  selectedPage,\n  totalPages,\n  ...remainingProps\n}) => {\n  const paginationState = usePagination({ pagesToShow, selectedPage, totalPages });\n\n  const handleClick = (e, page) => {\n    if (typeof onButtonClick === 'function') {\n      onButtonClick(e, page);\n    }\n  };\n\n  return (\n    <Pagination ariaLabel={ariaLabel} className={className} {...remainingProps}>\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={firstPageLabel}\n          disabled={selectedPage === 1}\n          onClick={e => handleClick(e, 1)}\n        >\n          <Icon name=\"arrow-start\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={previousPageLabel}\n          disabled={selectedPage === 1}\n          onClick={e => handleClick(e, selectedPage - 1)}\n        >\n          <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n      {paginationState.map((page, k) => {\n        if (page.label === '...') {\n          return (\n            <PaginationOverflow key={k}>\n              <ButtonIcon iconType=\"light-tiny\" ariaLabel={morePagesLabel} disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationOverflow>\n          );\n        }\n\n        return (\n          <PaginationPage key={k} selected={page.selected}>\n            <ButtonIcon\n              iconType=\"light-tiny\"\n              ariaLabel={`${pageAriaLabel} ${page.label}`}\n              onClick={e => handleClick(e, page.label)}\n            >\n              {page.label}\n            </ButtonIcon>\n          </PaginationPage>\n        );\n      })}\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={nextPageLabel}\n          disabled={selectedPage === totalPages}\n          onClick={e => handleClick(e, selectedPage + 1)}\n        >\n          <Icon name=\"arrow-next\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={lastPageLabel}\n          disabled={selectedPage === totalPages}\n          onClick={e => handleClick(e, totalPages)}\n        >\n          <Icon name=\"arrow-end\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n    </Pagination>\n  );\n};\n\nPaginationWrapper.propTypes = {\n  /**\n   * Aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * First page label\n   */\n  firstPageLabel: string,\n\n  /**\n   * Last page label\n   */\n  lastPageLabel: string,\n\n  /**\n   * More pages label\n   */\n  morePagesLabel: string,\n\n  /**\n   * Next page label\n   */\n  nextPageLabel: string,\n\n  /**\n   * Callback fired when a button is clicked.\n   */\n  onButtonClick: func,\n\n  /**\n   * Page aria label\n   */\n  pageAriaLabel: string,\n\n  /**\n   * Pages aria label\n   */\n  pagesToShow: number,\n\n  /**\n   * Previous page label\n   */\n  previousPageLabel: string,\n\n  /**\n   * Selected Page\n   */\n  selectedPage: number,\n\n  /**\n   * Total pages\n   */\n  totalPages: number.isRequired\n};\n\nPaginationWrapper.defaultProps = {\n  firstPageLabel: 'first page',\n  lastPageLabel: 'last page',\n  morePagesLabel: 'more pages',\n  nextPageLabel: 'next page',\n  pageAriaLabel: 'page',\n  pagesToShow: 6,\n  previousPageLabel: 'previous page',\n  selectedPage: 1\n};\n\nPaginationWrapper.displayName = 'PaginationWrapper';\n\nexport default PaginationWrapper;\n","import React, { useState } from 'react';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Link from '../../link';\nimport Pagination from '../../pagination';\nimport PaginationControl from '../../pagination-control';\nimport PaginationOverflow from '../../pagination-overflow';\nimport PaginationPage from '../../pagination-page';\nimport PaginationWrapper from '../../pagination-wrapper';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport { usePagination } from '../usePagination';\n\nconst PaginationExample = () => {\n  const [stateOne, setStateOne] = useState({\n    pagesToShow: 6,\n    selectedPage: 2,\n    totalPages: 20\n  });\n\n  const [stateTwo, setStateTwo] = useState({\n    selectedPage: 2,\n    totalPages: 20\n  });\n\n  const paginationOneState = usePagination(stateOne);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination</Typography>\n          <Typography>\n            Use Buttons for Actions and Links to Navigate\n          </Typography>\n          <Typography>\n            Generally speaking, buttons should only be used for actions\n            that are taken within a page and that do not take the user to\n            a new page or location. Buttons work better than links for\n            single page applications (SPAs).\n          </Typography>\n          <Typography>\n            Links should only be used when the user is being taken to a\n            new page. Links work better than buttons for server-side rendered\n            apps in which the page reloads.\n          </Typography>\n          <Typography>\n            Pagination Buttons example (view only, no functionality)\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination ariaLabel=\"Pagination Button example\">\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"first page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-start\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"previous page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationOverflow>\n              <ButtonIcon ariaLabel=\"more pages\" iconType=\"light-tiny\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationOverflow>\n            <PaginationPage selected>\n              <ButtonIcon ariaLabel=\"page 1\" iconType=\"light-tiny\">1</ButtonIcon>\n            </PaginationPage>\n            <PaginationOverflow>\n              <ButtonIcon ariaLabel=\"more pages\" iconType=\"light-tiny\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationOverflow>\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"next page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-next\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"last page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-end\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n          </Pagination>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination Links example (view only, no functionality)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination ariaLabel=\"Pagination Link example\">\n            <PaginationControl>\n              <Link aria-label=\"first page\" href=\"#\">\n                <Icon name=\"arrow-start\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n            <PaginationControl>\n              <Link aria-label=\"previous page\" href=\"#\">\n                <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n            <PaginationOverflow>\n              <Link aria-label=\"more pages\" href=\"#\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </Link>\n            </PaginationOverflow>\n            <PaginationPage selected>\n              <Link aria-label=\"page 1\" href=\"#\">1</Link>\n            </PaginationPage>\n            <PaginationOverflow>\n              <Link aria-label=\"more pages\" href=\"#\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </Link>\n            </PaginationOverflow>\n            <PaginationControl>\n              <Link aria-label=\"next page\" href=\"#\">\n                <Icon name=\"arrow-next\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n            <PaginationControl>\n              <Link aria-label=\"last page\" href=\"#\">\n                <Icon name=\"arrow-end\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n          </Pagination>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination through BYO-State and composition</Typography>\n          <Typography>\n            Use this approach to create your own Custom Pagination\n            control or wrapper based on the shape of your data.\n          </Typography>\n          <Typography>\n            You can reuse the CODE below as the basis for a\n            PaginationWrapper in your application.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination ariaLabel=\"Pagination through bring-your-own state and composition Button example\">\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"first page\"\n                disabled={stateOne.selectedPage === 1}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: 1 })}\n              >\n                <Icon name=\"arrow-start\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"previous page\"\n                disabled={stateOne.selectedPage === 1}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: stateOne.selectedPage - 1 })}\n              >\n                <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            {\n              paginationOneState.map((page, key) => (\n                page.label === '...'\n                  ? <PaginationOverflow key={key}>\n                    <ButtonIcon ariaLabel=\"more pages\" iconType=\"light-tiny\" disabled>\n                      <Icon name=\"options\" resolution=\"tiny\" />\n                    </ButtonIcon>\n                  </PaginationOverflow>\n                  : <PaginationPage selected={page.selected} key={key}>\n                    <ButtonIcon\n                      ariaLabel={`page ${page.label}`}\n                      iconType=\"light-tiny\"\n                      onClick={() => setStateOne({ ...stateOne, selectedPage: page.label })}\n                    >\n                      {page.label}\n                    </ButtonIcon>\n                  </PaginationPage>\n              ))\n            }\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"next page\"\n                disabled={stateOne.selectedPage === stateOne.totalPages}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: stateOne.selectedPage + 1 })}\n              >\n                <Icon name=\"arrow-next\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"last page\"\n                disabled={stateOne.selectedPage === stateOne.totalPages}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: stateOne.totalPages })}\n              >\n                <Icon name=\"arrow-end\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n          </Pagination>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination Wrapper (Legacy)</Typography>\n          <Typography>\n            If this wrapper is not sufficient for\n            your case, use the above example to create your\n            own wrapper based on the shape of your data.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <PaginationWrapper\n            ariaLabel=\"Pagination Wrapper (Legacy) Button example\"\n            onButtonClick={(e, page) => setStateTwo({ ...stateTwo, selectedPage: page })}\n            selectedPage={stateTwo.selectedPage}\n            totalPages={stateTwo.totalPages}\n          />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default PaginationExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/pagination/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/pagination/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/pagination/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst PaginationExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Pagination\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Pagination</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/pagination`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Pagination Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/pagination/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/pagination/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/pagination`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/pagination`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/pagination/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/pagination/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/pagination/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/pagination/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nPaginationExample.displayName = 'PaginationExample';\n\nexport default PaginationExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n"],"sourceRoot":""}