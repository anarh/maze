{"version":3,"sources":["components/slider-label/index.js","components/slider-handle/index.js","components/slider/index.js","components/slider/example/index.js","pages/components/slider.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["SliderLabel","children","className","remainingProps","classnames","displayName","Handle","RCSlider","SliderHandle","dragging","index","value","key","overlay","placement","prefixCls","visible","aria-label","Slider","defaultValue","disabled","label","max","min","onAfterChange","onBeforeChange","onChange","step","tabIndex","width","handle","handleStyle","height","position","top","railStyle","background","borderRadius","boxShadow","cursor","trackStyle","borderRadiusLeft","defaultProps","SliderExample","tag","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","display","opacity","userSelect","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","color","type","length","Array","isArray","v","join","undefined","ScreenReader","forwardRef","ref","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/61.9a7abbe5.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-label';\n\nconst SliderLabel = ({ children, className, ...remainingProps }) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n);\n\nSliderLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderLabel.displayName = 'SliderLabel';\n\nexport default SliderLabel;\n","import React from 'react';\nimport { bool, number, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport RCSlider from 'rc-slider';\n\nconst CSS_PREFIX = 'vds-slider';\nconst CSS_STATE = 'vds-state';\n\nconst Handle = RCSlider.Handle;\n// eslint-disable-next-line\nconst SliderHandle = ({\n  dragging,\n  index,\n  value,\n  ...remainingProps\n}) => (\n  <Tooltip\n    key={index}\n    overlay={<span>{value}</span>}\n    placement=\"top\"\n    prefixCls={`${CSS_PREFIX}-value`}\n    visible\n  >\n    <Handle\n      {...remainingProps}\n      aria-label=\"slider handle\"\n      className={classnames(`${CSS_PREFIX}-thumb`, {\n        [`${CSS_STATE}--active`]: dragging\n      })}\n      value={value}\n    />\n  </Tooltip>\n);\n\nSliderHandle.propTypes = {\n  /**\n   * Dragging\n   */\n  dragging: bool,\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Value\n   */\n  value: string\n};\n\nSliderHandle.displayName = 'SliderHandle';\n\nexport default SliderHandle;\n","import React, { Fragment } from 'react';\nimport { bool, func, node, number, string } from 'prop-types';\nimport classnames from 'classnames';\nimport RCSlider from 'rc-slider';\nimport SliderLabel from '../slider-label';\nimport SliderHandle from '../slider-handle';\n\nconst CSS_PREFIX = 'vds-slider';\n\nconst Slider = ({\n  className,\n  defaultValue,\n  disabled,\n  label,\n  max,\n  min,\n  onAfterChange,\n  onBeforeChange,\n  onChange,\n  step,\n  tabIndex,\n  width,\n  ...remainingProps\n}) => (\n  <Fragment>\n    <SliderLabel>\n      <span className=\"vds-slider-label-text\">\n        {label}\n      </span>\n    </SliderLabel>\n    <RCSlider\n      className={classnames(CSS_PREFIX, className)}\n      defaultValue={defaultValue}\n      disabled={disabled}\n      max={max}\n      min={min}\n      onAfterChange={onAfterChange}\n      onBeforeChange={onBeforeChange}\n      onChange={onChange}\n      step={step}\n      tabIndex={tabIndex}\n      handle={SliderHandle}\n      handleStyle={{\n        height: '20px',\n        position: 'absolute',\n        top: '-8px',\n        width: '20px'\n      }}\n      railStyle={{\n        // width,\n        background: '#d7d7de',\n        borderRadius: '2px',\n        boxShadow: '0 0 0 1px #616188 inset',\n        cursor: 'pointer',\n        height: '4px',\n        position: 'relative',\n        width\n      }}\n      trackStyle={{\n        background: '#003ea9',\n        borderRadiusLeft: '2px',\n        height: '4px',\n        position: 'relative',\n        top: '-4px'\n      }}\n      {...remainingProps}\n    />\n  </Fragment>\n);\n\nSlider.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Default Value\n   */\n  defaultValue: number,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Max\n   */\n  max: number,\n\n  /**\n   * Min\n   */\n  min: number,\n\n  /**\n   * On after change\n   */\n  onAfterChange: func,\n\n  /**\n   * On before change\n   */\n  onBeforeChange: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Step\n   */\n\n  step: number,\n\n  /**\n   * Tab Index\n   */\n  tabIndex: number,\n\n  /**\n   * Width\n   */\n  width: string\n};\n\nSlider.defaultProps = {\n  defaultValue: 0,\n  max: 100,\n  min: 0,\n  tabIndex: 0,\n  width: '100%'\n};\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Slider from '../../slider';\nimport Typography from '../../typography';\n\nconst SliderExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider label=\"Slider control\" />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider (custom style)</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          railStyle={{\n            // width,\n            background: '#000',\n            borderRadius: '2px',\n            boxShadow: '0 0 0 1px #616188 inset',\n            cursor: 'pointer',\n            height: '4px',\n            position: 'relative',\n            width: '100%'\n          }}\n          trackStyle={{\n            background: 'white',\n            borderRadius: '2px',\n            boxShadow: 'rgb(97, 97, 136) 0px 0px 0px 1px inset',\n            height: '4px',\n            position: 'relative',\n            top: '-4px'\n          }}\n          label=\"Slider control\"\n        />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default SliderExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/slider/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/slider/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/slider/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SliderExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Slider\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Slider</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Slider Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSliderExample.displayName = 'SliderExample';\n\nexport default SliderExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}