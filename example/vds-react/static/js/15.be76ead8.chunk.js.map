{"version":3,"sources":["components/address/sub-components/GoogleAddressSuggestCombobox.js","components/address/sub-components/addressFields.js","components/address/constants/index.js","components/address/index.js","components/address/example/constants/index.js","components/address/example/utilities/checkIfShouldMakeAddressLookup.js","components/address/example/utilities/getLanguageFromLocale.js","components/address/example/utilities/getOverrides.js","components/address/example/utilities/validateField.js","components/address/example/index.js","pages/components/address.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input-message/index.js","components/input/index.js","components/input-input/index.js","components/fieldset/index.js","components/list/index.js","components/combobox/listbox.js","components/combobox/useScrollToItem.js","components/combobox/useComboboxAction.js","components/legend/index.js","components/combobox/index.js","components/form-control/index.js","components/combobox-freeform-manual-selection/index.js","components/form/index.js","../node_modules/@visa/ui-utils/lib/js/text-mask/react/useTextMask.js","../node_modules/@visa/ui-utils/lib/js/text-mask/react/index.js"],"names":["placesService","service","sessionToken","googleAddressSuggestConstants","addressCommonConstants","googleAddressUtils","addressCommonUtils","googleObject","setInterval","google","maps","places","AutocompleteService","PlacesService","document","createElement","AutocompleteSessionToken","clearInterval","GoogleAddressSuggestCombobox","comboboxClass","countryCode","googleAddressSuggestSetupOptions","inputProps","onGoogleAddressSuggestSelection","onInputBlur","onInputChange","templateName","restProps","fieldMappingForCountry","googleAddressSuggestAPIKey","positionOfCommaThatFollowsTriggeringFieldAddressInfo","suggestionShortNameArray","useState","optionsTemplate","setOptionsTemplate","loadGoogleAddressScript","renderSuggestion","suggestion","className","value","googlePredictions","convertedSuggestionAddressModel","mapToField","components","length","suggestionFieldInfo","mapping","getGoogleAddressSuggestionMapping","shortNameFields","GOOGLE_ADDRESS_SUGGESTION_SHORT_NAME_FIELDS","getConvertedAddress","itemToStringFunc","item","valueToInsert","splitValueBasedOnCommaPosition","split","SHORTENED_SELECTED_ITEM_VALUE_CHAR","splitValueSplitBySpaces","splitValueSplitBySpacesEndingData","splitValueSplitBySpacesEndingDataBeginsWithNumber","Number","charAt","splitValueSplitBySpacesEndingDataEndsWithNumber","splice","join","e","val","target","len","getPlacePredictions","componentRestrictions","country","toLowerCase","input","predictions","status","PlacesServiceStatus","OK","forEach","prediction","push","place_id","description","itemKey","optionValues","renderOption","searchIncludeFields","onSelectionChange","getDetails","fields","placeId","place","address_components","getTemplateDefaults","addressPropTypes","mergeDefaultsOverrides","AddressFields","memo","address","onAddressChange","onFieldBlur","templateOptions","mergedAddress","setMergedAddress","name","addressTemplate","inputMaskingByField","enableGoogleAddressSuggest","googleAddressSuggestCountryCodeExcludedCountries","triggeringField","useEffect","handleAddressChange","field","fieldObj","newAddressInfo","handleFieldBlur","handleGoogleAddressSuggestSelection","addressObj","addressMergedWithSuggestion","template","defaults","templateAttributes","overrides","map","fieldAttributes","fieldName","isForGoogleAddress","indexOf","shouldRenderField","fieldContent","content","hasErrorText","additionalHtmlProps","errorText","readOnly","renderAsCombobox","required","textMaskSetup","guide","shouldShowInputMasking","mask","onChange","upperCaseValue","shouldUpperCaseValue","textMaskProps","hasMask","useTextMask","getInputProps","fieldInputMaskInfoObj","Object","keys","comboboxOptions","splitFieldWidth","shouldSplitField","formControlClassNames","classnames","Boolean","hasAddressData","hasDefaultValue","defaultValue","valueToRender","toUpperCase","undefined","containerClass","label","placeholder","key","comboboxOptionsTemplate","defaultItem","onComboboxSelect","type","renderGenericCombobox","comboboxItems","renderComboboxOption","searchIncludesFields","selectedItem","valueObj","inputPropsWithValue","renderGoogleAddressSuggestCombobox","autoComplete","id","maxLength","onBlur","showErrorText","renderFields","prevProps","nextProps","JSON","stringify","Address","fieldsetClassName","legend","onCountryChange","defaultProps","displayName","COUNTRIES_FULL_EXAMPLE_AR","shortValue","COUNTRIES_FULL_EXAMPLE_EN","COUNTRIES_FULL_EXAMPLE_FR","COUNTRIES_FULL_EXAMPLE_UK","COUNTRIES_FULL_EXAMPLE_ZH","IRELAND_COUNTIES_FULL_EXAMPLE","CUSTOM_TEMPLATE_FIELDS_FULL_EXAMPLE","IN","JP","TEMPLATE_MAP_FULL_EXAMPLE","AE","BR","CA","FR","HK","IE","MX","PL","SG","UA","US","POSTALCODE_LOOKUP_WHITELIST","CONTENT_FULL_EXAMPLE_AR","city","line1","line2","postalCode","stateProvinceCode","additionalLocation","line3","streetName","streetNumber","neighborhood","county","pointOfReference","CONTENT_FULL_EXAMPLE_EN","CONTENT_FULL_EXAMPLE_FR","CONTENT_FULL_EXAMPLE_UK","CONTENT_FULL_EXAMPLE_ZH","validationRegex","addressConstants","checkIfShouldMakeAddressLookup","isPostalCodeField","isPostalCodeLookupCountry","includes","validator","test","getLanguageFromLocale","locale","substr","getOverrides","countryObj","errors","STATEPROVINCECODE_MASK","allAddressLookupFieldsDisplayed","countries","handleCountryChange","countryCodeSelectedItem","invalid","irelandCounties","handleIECountyChange","irelandCountySelectedItem","validateField","isRequired","maskLength","validateEmptyRequiredField","upperCasedCountryCode","upperCasedFieldName","toString","enums","AddressExample","GOOGLE_ADDRESS_SUGGEST_SETUP_OPTIONS","GOOGLE_ADDRESS_SUGGEST_DISABLED_COUNTRY_CODES","data","console","log","addressInfo","setAddressInfo","setAllAddressLookupFieldsDisplayed","brazilTemplate","setBrazilTemplate","setCountryCode","prevCountryCode","setPrevCountryCode","setErrors","setGoogleAddressSuggestSetupOptions","setLocale","language","setLanguage","languageDirection","setLanguageDirection","mexicoTemplate","setMexicoTemplate","selectedIrelandCounty","setSelectedIrelandCounty","getActiveFields","querySelectorAll","errorsObj","fieldErrorText","fieldErrorObj","fieldInfo","items","getGoogleAddressSuggestTriggeringField","COUNTRIES_WITHOUT_LINE1","setFieldErrors","validationObj","errorObj","handleLocaleChange","newLocale","newLanguageDirection","exampleConstants","find","googleTriggeringFieldObj","googleAddressSuggestTriggeringField","googleSetupInfo","findSelectedStateProvinceCodeOption","option","templateFields","getTemplateFields","getTemplateName","style","display","flexWrap","dir","lang","width","border","marginBottom","padding","htmlFor","color","cursor","marginLeft","marginTop","transition","marginRight","onClick","getElementById","googleAddressAPIKeyObj","backgroundColor","fontWeight","onSubmit","preventDefault","stopPropagation","invalidField","getAttribute","match","focus","noValidate","shouldMakeAddressLookup","shouldValidateOnChange","Promise","resolve","result","getAddressDataFromPostalCode","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","parse","siblingOfStickyFooter","tag","exact","to","process","activeClassName","resolution","path","theme","code","tokens","getLineProps","getTokenProps","line","i","opacity","userSelect","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","entries","filter","doc","tabIndex","Array","isArray","v","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","ariaLabel","disabled","iconType","aria-label","InputContainer","expanded","filled","isTextarea","InputLabel","InputBar","InputOption","InputHint","InputText","InputMessage","show","Input","checkmarkIcon","containerProps","errorIcon","helpIcon","helpText","shortid","generate","labelId","onFocus","showCheckmark","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","useRef","current","setValidity","checkValidity","trim","aria-describedby","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput","Fieldset","List","Children","child","cloneElement","ListBox","getMenuProps","isOpen","listboxClass","isListboxOpen","listboxProps","listboxRef","restOfProps","filteredOptions","filterFunction","getItemProps","inputValue","listboxItemRef","noMatchCallback","noSelectionCheckMark","highlightedIndex","filterCount","ComboboxUtil","filterOptionValues","count","itemValues","filteredValues","highlightedItem","index","isSelected","isHighlight","itemProps","renderListboxItem","useScrollToItem","currentSelectItem","comboboxType","findIndex","scrollTop","offsetTop","useComboboxAction","comboboxAction","downshiftInternalActions","dispatchComboboxAction","useCallback","action","err","Error","Legend","COMBOBOX_TYPE","Combobox","noMatchMessage","onInputFocus","setCurrentSelectItem","inputRef","inputError","setInputError","setInputValue","setListboxOpen","searchHasNoMatch","setSearchHasNoMatch","actionList","defaultIndex","handleInputBlur","handleInputChange","handleInputFocus","setSelectionRange","handleSelection","selection","updateInputValue","handleNoMatch","noMatch","defaultHighlightedIndex","initialInputValue","itemToString","stateReducer","state","changes","Downshift","stateChangeTypes","changeInput","changeInputChanges","clickButton","blurInput","blurInputChanges","keyDownEscape","onOuterClick","selectItem","getA11yStatusMessage","getToggleButtonProps","listboxDownshift","inputWrapperClass","li","ul","position","FormControl","divide","resize","space","element","ComboboxFreeformManualSelection","initialSelectedItem","Form","arguments","_props$guide","_props$placeholderCha","placeholderChar","_props$upperCaseValue","textMask","_useState","adjustedCaretPosition","conformedValue","_useState2","setState","createTextMask","inputElement","_textMask$current$upd","update","previousPlaceholder","_textMask$current$upd2","_textMask$current$upd3","_textMask$current$upd4","newState","meta"],"mappings":"q9BAeIA,EACAC,EACAC,E,+RAVFC,EACEC,IADFD,8BAKAE,EACEC,IADFD,mBASIE,EAAeC,aAAY,WACT,qBAAXC,SACTR,EAAU,IAAIQ,OAAOC,KAAKC,OAAOC,oBACjCZ,EAAgB,IAAIS,OAAOC,KAAKC,OAAOE,cAAcC,SAASC,cAAc,QAC5Eb,EAAe,IAAIO,OAAOC,KAAKC,OAAOK,yBACtCC,cAAcV,MAEf,IA0LYW,EAtLsB,SAAC,GAU/B,IATLC,EASI,EATJA,cACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,iCACAC,EAMI,EANJA,WACAC,EAKI,EALJA,gCACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,aACGC,EACC,8KAGFC,EAIEP,EAJFO,uBACAC,EAGER,EAHFQ,2BACAC,EAEET,EAFFS,qDACAC,EACEV,EADFU,yBANE,EAS0CC,mBAAS,MATnD,mBASGC,EATH,KASoBC,EATpB,KAWJ7B,EAAmB8B,wBAAwBN,GAE3C,IAoCMO,EAAmB,SAAAC,GAAU,OAAI,0BAAMC,UAAU,sBAAsBD,EAAWE,QAEpFC,EAAoB,GACpBC,EAAkC,GAEhCC,EAAa,SAAAC,GACjB,GAAKA,EAAWC,OAAhB,CAIA,IAKMC,EAAsB,CAC1BF,aACAG,QAxBwBlB,GAExBvB,EAAmB0C,kCAAkCrB,GAuBrDsB,gBAPgCjB,GAEhC5B,EAA8B8C,6CAQhCR,EAAkCpC,EAAmB6C,oBAAoBL,GAE9B,oBAApCtB,GAAkDA,EAAgCkB,KA0D3F,OACE,kBAAC,IAAD,eACEtB,cAAeA,EACfG,WAAYA,EACZ6B,iBAzHqB,SAAAC,GACvB,IAAIC,EAAgB,GACpB,GAAID,EAAM,CACR,IAAME,EACJF,EAAKb,MAAMgB,MACTpD,EAA8BqD,oCAC9B1B,GAEE2B,EAA0BH,EAA+BC,MAAM,KAC/DG,EAAoCD,EAAwBA,EAAwBb,OAAS,GAC7Fe,EAAqDC,OAAOF,EAAkCG,OAAO,KAAO,EAC5GC,EACJF,OAAOF,EAAkCG,OAAOH,EAAkCd,OAAS,KAAO,EAEpGS,EAAgBC,GAGdK,GACAG,KAEAL,EAAwBM,QAAQ,GAChCV,EAAgBI,EAAwBO,KAAK,MAIjD,OAAOX,GAiGL7B,YAAaA,EACbC,cA7DuB,SAAAwC,GACzB,IAAMC,EAAMD,EAAEE,OAAO5B,MACf6B,EAAMF,EAAItB,OAEO,qBAAZ3C,GAA2BmE,GACpCnE,EAAQoE,oBAAoB,CAC1BC,sBAAuB,CAAEC,QAASnD,EAAYoD,eAC9CC,MAAOP,EACPhE,iBACC,SAACwE,EAAaC,GAEXA,IAAWlE,OAAOC,KAAKC,OAAOiE,oBAAoBC,KAKtDrC,EAAoB,GAEpBkC,EAAYI,SAAQ,SAAAC,GAClBvC,EAAkBwC,KAAK,CACrBC,SAAUF,EAAWE,SACrB1C,MAAOwC,EAAWG,iBAItBhD,EAAmB,CACjBiD,QAAS,QACTC,aAAc5C,EACd6C,aAAcjD,EACdkD,oBAAqB,CAAC,eAKH,oBAAlB7D,GAAgCA,EAAcwC,IA4BnDsB,kBAzBsB,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SAEvBA,IACFjF,EAAcwF,WAAW,CACvBC,OAAQ,CAAC,sBACTC,QAAST,EACT/E,iBACC,SAACyF,EAAOhB,GACLA,IAAWlE,OAAOC,KAAKC,OAAOiE,oBAAoBC,IACpDnC,EAAWiD,EAAMC,uBAIrB1F,EAAe,IAAIO,OAAOC,KAAKC,OAAOK,2BAatCiB,gBAAiBA,GACbN,KCtKFkE,GADqBzF,IAArB0F,iBACgDxF,IAAhDuF,qBAAqBE,EAA2BzF,IAA3ByF,uBAqSdC,EAjSOC,gBAAK,YAQpB,IAPLC,EAOI,EAPJA,QACA9E,EAMI,EANJA,YACAC,EAKI,EALJA,iCACA8E,EAII,EAJJA,gBAEAC,EAEI,EAFJA,YACAC,EACI,EADJA,gBACI,EACsCrE,mBAASkE,GAD/C,mBACGI,EADH,KACkBC,EADlB,OAEsBvE,mBAAS6D,EAAoBQ,EAAgBG,KAAMH,EAAgBZ,SAAtFgB,EAFH,oBAGAC,EAAsB,GAGxBC,EAIEtF,EAJFsF,2BACAC,EAGEvF,EAHFuF,iDACArF,EAEEF,EAFFE,gCACAsF,EACExF,EADFwF,gBAGFC,qBAAU,WACRP,EAAiBL,KAChB,CAACA,IAEJ,IAAMa,EAAsB,SAAA9C,GAC1B,IAAM+C,EAAQ/C,EAAEE,OAAOqC,KACjBjE,EAAQ0B,EAAEE,OAAO5B,MACjB0E,EAAQ,eAAMD,EAAQzE,GACtB2E,EAAc,eAAQZ,EAAR,GAA0BW,GAC9CV,EAAiBW,GACc,oBAApBf,GACTA,EAAgBlC,IAIdkD,EAAkB,SAAAlD,GACK,oBAAhBmC,GACTA,EAAYnC,IAIVmD,EAAsC,SAAAC,GAC1C,IAAMC,EAA2B,eAAQpB,EAAR,GAAoBmB,GAErDd,EAAiBe,GAE0B,oBAApC/F,GAAkDA,EAAgC8F,IAyM3F,OAAO,kBAAC,WAAD,KAtJc,SAAAE,GACnB,IAAMC,EAAWD,EAASC,SACpBC,EAAqBpB,EAAgBqB,UACvC3B,EAAuByB,EAAUnB,EAAgBqB,WACjDF,EAIJ,OAHuBnB,EAAgBZ,OAASY,EAAgBZ,OAAS8B,EAAS9B,QAG5DkC,KAAI,SAAAX,GACxB,IAAMY,EAAkBH,EAAmBT,GACrCa,EAAYD,EAAgBpB,KAC5BsB,EACJnB,IAC2E,IAA3EC,EAAiDmB,QAAQ3G,IACzDyG,IAAchB,EAEhB,GAAiD,qBAAtCe,EAAgBI,oBAAsCJ,EAAgBI,kBAC/E,OAAO,KAGT,IAAMC,EAAe5B,EAAgB6B,QAAQlB,GAEvCmB,EAAeP,EAAgBQ,qBAAuBR,EAAgBQ,oBAAoBC,UAE5FA,EAAYF,EAAeP,EAAgBQ,oBAAoBC,UAAY,GAU/EA,EAPEF,IAEEP,EAAgBU,UAChBV,EAAgBW,mBACdX,EAAgBY,WAAatC,EAAQc,IAGN,GAAKqB,EAEtCF,UACKP,EAAgBQ,oBAAoBC,UAG7C,IAAMI,EAAgB,CACpBC,MAAOd,EAAgBe,yBAA0B,EACjDC,KAAMhB,EAAgBgB,KACtBC,SAAU9B,EACV+B,eAAgBlB,EAAgBmB,uBAAwB,EACxDxG,MAAO+D,GAAiBA,EAAcU,IAElCgC,EAAgBpB,EAAgBqB,SAAWrB,EAAgBgB,KAAOM,YAAYT,GAAeU,cAAgB,GAC7GC,EAAwBC,OAAOC,KAAKN,GAAepG,OAAS,EAApCyG,OAAA,IAAAA,CAAA,GACzBrC,EAAQ,CAAEiC,SAAS,EAAMJ,SAAUG,EAAcH,WADxBQ,OAAA,IAAAA,CAAA,GAEzBrC,EAAQ,CAAEiC,SAAS,IACxBvC,EAAmB,eAAQA,EAAR,GAAgC0C,GAEnD,IAAMG,EAAkB3B,EAAgBW,iBAAmBX,EAAgB2B,gBAAkB,KAEvFC,GADmB5B,EAAgB6B,iBACjB7B,EAAgB4B,iBAAmB,IACrDE,EAAwBC,IC5KE,mBD4KQ,2CAChBH,GAAoBI,QAAQJ,KAG9CK,EAAiBvD,GAAiBA,EAAcU,GAChD8C,EAAkBlC,GAAmBA,EAAgBmC,aACvDA,EAAe,GAEfF,EACFE,EAAezD,EAAcU,GACpB8C,IACTC,EAAenC,EAAgBmC,cAEjC,IAAIC,EACFpC,GAAmBA,EAAgBmB,qBAAuBgB,EAAaE,cAAgBF,EAMzF,GAJKC,IACHA,OAAgBE,GAGdpC,GAAsByB,EAAiB,CACzC,IACMpI,EAAgB,CACpBgJ,eAAgBT,GAEZpI,EAAU,aACd8I,MAAOnC,EAAamC,MACpB5D,KAAMqB,EACNwC,YAAapC,EAAaoC,YAC1B7B,SAAUZ,EAAgBY,UACvBZ,EAAgBQ,qBAEfkC,EAAMrC,EAAamC,MAEzB,GAAIb,EAiBF,OAxJsB,SAAC,GAAD,IAC5BnB,EAD4B,EAC5BA,oBACAjH,EAF4B,EAE5BA,cACAoJ,EAH4B,EAG5BA,wBACAC,EAJ4B,EAI5BA,YACAlJ,EAL4B,EAK5BA,WACAgJ,EAN4B,EAM5BA,IACAG,EAP4B,EAO5BA,iBAP4B,OAS5B,kBAAC,IAAD,eACEtJ,cAAeA,EACfqJ,YAAaA,EACblJ,WAAYA,EACZgJ,IAAKA,EACL9I,YAAa2F,EACb1F,cAAesF,EACfxB,kBAAmBkF,EACnBxI,gBAAiBsI,EACjBG,KAAM,QACFtC,IAqIOuC,CATM,CACXxJ,gBACAoJ,wBAT8B,CAC9BpF,QAAS,QACTC,aAAcmE,EAAgBqB,cAC9BvF,aAAckE,EAAgBsB,qBAC9BC,qBAAsB,CAAC,aAAc,UAMrCN,YAAajB,EAAgBwB,aAC7BzJ,aACAgJ,MACAG,iBAAkBlB,EAAgBkB,mBAI/B,GAAI3C,EAAoB,CAC7B,IAAMkD,EAAW,CAAEzI,MAAOyH,GACpBiB,EAAmB,eAAQ3J,EAAR,GAAuB0J,GAQhD,OA5ImC,SAAC,GAAD,IACzC5C,EADyC,EACzCA,oBACAjH,EAFyC,EAEzCA,cACAC,EAHyC,EAGzCA,YACAE,EAJyC,EAIzCA,WACAgJ,EALyC,EAKzCA,IALyC,OAOzC,kBAAC,EAAD,eACEnJ,cAAeA,EACfC,YAAaA,EACbC,iCAAkCA,EAClCC,WAAYA,EACZgJ,IAAKA,EACL/I,gCAAiC6F,EACjC5F,YAAa2F,EACb1F,cAAesF,EACfrF,aAAc2E,EAAgBG,MAC1B4B,IA2HO8C,CAPM,CACX/J,gBACAC,cACAE,WAAY2J,EACZX,SAON,OACE,kBAAC,IAAD,CACEA,IAAG,oCAA+B1C,EAAgBpB,KAA/C,aAAwDpF,IAE3D,kBAAC,IAAD,eACE+J,aAAcvD,EAAgBuD,aAC9B9C,UAAWA,EACX+C,GAAIxD,EAAgBwD,GACpBd,IAAG,UAAK1C,EAAgBpB,KAArB,aAA8BpF,GACjCgJ,MAAOnC,EAAamC,MACpBxB,KAAMhB,EAAgBqB,QAAUrB,EAAgBgB,KAAO,KACvDyC,UAAWzD,EAAgBqB,QAAU,KAAOrB,EAAgByD,UAC5D7E,KAAMoB,EAAgBpB,KACtB8E,OAAQlF,EACRyC,SAAUjB,EAAgBqB,QAAU,KAAOlC,EAC3CsD,YAAapC,EAAaoC,YAC1B/B,SAAUV,EAAgBU,SAC1BE,SAAUZ,EAAgBY,SAC1B+C,eAAa,EACbhJ,MAAOyH,GACHpC,EAAgBQ,oBAChBY,QAOIwC,CAAa/E,OAzPT,SAACgF,EAAWC,GAAZ,OAA0BC,KAAKC,UAAUH,KAAeE,KAAKC,UAAUF,M,2BEFzFG,GANuBzL,IAArB0F,iBAMQG,gBAAK,YAWd,IAVLC,EAUI,EAVJA,QACA5D,EASI,EATJA,UACAlB,EAQI,EARJA,YACA0K,EAOI,EAPJA,kBACAzK,EAMI,EANJA,iCACA0K,EAKI,EALJA,OACA5F,EAII,EAJJA,gBACA6F,EAGI,EAHJA,gBACA5F,EAEI,EAFJA,YACAC,EACI,EADJA,gBAqBA,OACE,kBAAC,IAAD,CAAM/D,UAAWqH,IApCF,cAoCyBrH,IACtC,kBAAC,IAAD,CAAUA,UAAWqH,IAAW,GAAD,OArClB,cAqCkB,sBAA4BtD,EAAgBG,MAAQsF,IAC/EC,EAAS,kBAAC,IAAD,KAASA,QAAmB7B,EACvC,kBAAC,EAAD,CACEhE,QAASA,EACT9E,YAAaA,EACbC,iCAAkCA,EAClCiJ,IAAG,UA3CM,cA2CN,oCAA2ClJ,EAA3C,YAA0DiF,EAAgBG,MAC7EL,gBA5BoB,SAAAlC,GAEK,oBAApBkC,GACTA,EAAgBlC,IA0BZ+H,gBAtBoB,SAAA5K,GACK,oBAApB4K,GACTA,EAAgB5K,IAqBZgF,YAjBgB,SAAAnC,GACK,oBAAhBmC,GACTA,EAAYnC,IAgBRoC,gBAAiBA,SA7CH,SAACoF,EAAWC,GAAZ,OAA0BC,KAAKC,UAAUH,KAAeE,KAAKC,UAAUF,OAoD/FG,EAAQI,aAAe,CAOrB/F,QAAS,GAOT9E,YAAa,KAEb0K,kBAAmB,GAOnBzF,gBAAiB,CACfG,KAAM,YA8CVqF,EAAQK,YAAc,UAEPL,QCrIFM,G,OAA4B,CACvC,CAAE5J,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,2BAAQ6J,WAAY,MAC7B,CAAE7J,MAAO,iCAAS6J,WAAY,MAC9B,CAAE7J,MAAO,oDAAa6J,WAAY,MAClC,CAAE7J,MAAO,iCAAS6J,WAAY,MAC9B,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,uCAAU6J,WAAY,MAC/B,CAAE7J,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,yIAA4B6J,WAAY,MACjD,CAAE7J,MAAO,iKAAgC6J,WAAY,QAG1CC,GAA4B,CACvC,CAAE9J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,YAAa6J,WAAY,MAClC,CAAE7J,MAAO,QAAS6J,WAAY,MAC9B,CAAE7J,MAAO,UAAW6J,WAAY,MAChC,CAAE7J,MAAO,QAAS6J,WAAY,MAC9B,CAAE7J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,YAAa6J,WAAY,MAClC,CAAE7J,MAAO,UAAW6J,WAAY,MAChC,CAAE7J,MAAO,uBAAwB6J,WAAY,MAC7C,CAAE7J,MAAO,gBAAiB6J,WAAY,OAG3BE,GAA4B,CACvC,CAAE/J,MAAO,YAAU6J,WAAY,MAC/B,CAAE7J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,SAAU6J,WAAY,MAC/B,CAAE7J,MAAO,YAAa6J,WAAY,MAClC,CAAE7J,MAAO,OAAQ6J,WAAY,MAC7B,CAAE7J,MAAO,UAAW6J,WAAY,MAChC,CAAE7J,MAAO,QAAS6J,WAAY,MAC9B,CAAE7J,MAAO,UAAW6J,WAAY,MAChC,CAAE7J,MAAO,UAAW6J,WAAY,MAChC,CAAE7J,MAAO,YAAa6J,WAAY,MAClC,CAAE7J,MAAO,UAAW6J,WAAY,MAChC,CAAE7J,MAAO,sBAAuB6J,WAAY,MAC5C,CAAE7J,MAAO,gBAAc6J,WAAY,OAGxBG,GAA4B,CACvC,CAAEhK,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,uCAAU6J,WAAY,MAC/B,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,iCAAS6J,WAAY,MAC9B,CAAE7J,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,uCAAU6J,WAAY,MAC/B,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,uCAAU6J,WAAY,MAC/B,CAAE7J,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,6CAAW6J,WAAY,MAChC,CAAE7J,MAAO,gJAA8B6J,WAAY,MACnD,CAAE7J,MAAO,wFAAmB6J,WAAY,OAG7BI,GAA4B,CACvC,CAAEjK,MAAO,eAAM6J,WAAY,MAC3B,CAAE7J,MAAO,qBAAO6J,WAAY,MAC5B,CAAE7J,MAAO,eAAM6J,WAAY,MAC3B,CAAE7J,MAAO,eAAM6J,WAAY,MAC3B,CAAE7J,MAAO,eAAM6J,WAAY,MAC3B,CAAE7J,MAAO,qBAAO6J,WAAY,MAC5B,CAAE7J,MAAO,eAAM6J,WAAY,MAC3B,CAAE7J,MAAO,qBAAO6J,WAAY,MAC5B,CAAE7J,MAAO,eAAM6J,WAAY,MAC3B,CAAE7J,MAAO,qBAAO6J,WAAY,MAC5B,CAAE7J,MAAO,qBAAO6J,WAAY,MAC5B,CAAE7J,MAAO,mDAAY6J,WAAY,MACjC,CAAE7J,MAAO,eAAM6J,WAAY,OAGhBK,GAAgC,CAC3C,CAAElK,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,SACT,CAAEA,MAAO,QACT,CAAEA,MAAO,WACT,CAAEA,MAAO,UACT,CAAEA,MAAO,UACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,WACT,CAAEA,MAAO,YACT,CAAEA,MAAO,YACT,CAAEA,MAAO,SACT,CAAEA,MAAO,QACT,CAAEA,MAAO,SACT,CAAEA,MAAO,YACT,CAAEA,MAAO,UACT,CAAEA,MAAO,aACT,CAAEA,MAAO,SACT,CAAEA,MAAO,aACT,CAAEA,MAAO,aACT,CAAEA,MAAO,aACT,CAAEA,MAAO,WACT,CAAEA,MAAO,YAGEmK,GAAsC,CACjDC,GAAI,CAAC,cAAe,cACpBC,GAAI,CAAC,cAAe,qBAAsB,QAAS,eAAgB,sBAGxDC,GAA4B,CACvCC,GAAI,UACJC,GAAI,SACJC,GAAI,UACJC,GAAI,UACJC,GAAI,WACJC,GAAI,iBACJR,GAAI,QACJC,GAAI,SACJQ,GAAI,SACJC,GAAI,mBACJC,GAAI,UACJC,GAAI,QACJC,GAAI,WAGOC,GAA8B,CAAC,KAAM,MAErCC,GAA0B,CACrCZ,GAAI,CACFa,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,KAGjB0C,GAAI,CACFiB,mBAAoB,CAClB5D,MAAO,0DACPC,YAAa,6EAEfsD,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfwD,MAAO,CACLzD,MAAO,eACPC,YAAa,IAEf4D,MAAO,CACL7D,MAAO,gEACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,MAEf6D,WAAY,CACV9D,MAAO,0DACPC,YAAa,2DAEf8D,aAAc,CACZ/D,MAAO,0DACPC,YAAa,8EAGjB2C,GAAI,CACFW,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,WAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,OAGjB4C,GAAI,CACFU,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,KAGjB6C,GAAI,CACFS,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,wHAGjB8C,GAAI,CACFQ,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEf4D,MAAO,CACL7D,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,KAGjBsC,GAAI,CACFgB,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEf4D,MAAO,CACL7D,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,KAGjBuC,GAAI,CACFoB,mBAAoB,CAClB5D,MAAO,0DACPC,YAAa,6EAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEf+D,aAAc,CACZhE,MAAO,eACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,KAGjB+C,GAAI,CACFY,mBAAoB,CAClB5D,MAAO,0DACPC,YAAa,6EAEfsD,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfgE,OAAQ,CACNjE,MAAO,uCACPC,YAAa,IAEf+D,aAAc,CACZhE,MAAO,eACPC,YAAa,IAEfiE,iBAAkB,CAChBlE,MAAO,gEACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,IAEf6D,WAAY,CACV9D,MAAO,0DACPC,YAAa,2DAEf8D,aAAc,CACZ/D,MAAO,0DACPC,YAAa,8EAGjBgD,GAAI,CACFM,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,UAEf6D,WAAY,CACV9D,MAAO,0DACPC,YAAa,2DAEf8D,aAAc,CACZ/D,MAAO,0DACPC,YAAa,8EAGjBiD,GAAI,CACFK,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,UAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,KAGjBkD,GAAI,CACFI,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEf4D,MAAO,CACL7D,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,KAGjBmD,GAAI,CACFG,KAAM,CACJvD,MAAO,6CACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,qBACPC,YAAa,qFAEfuD,MAAO,CACLxD,MAAO,8EACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,+GACPC,YAAa,uHAEfyD,WAAY,CACV1D,MAAO,4EACPC,YAAa,SAEf0D,kBAAmB,CACjB3D,MAAO,2BACPC,YAAa,QAKNkE,GAA0B,CACrCzB,GAAI,CACFa,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEfyD,WAAY,CACV1D,MAAO,WACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,QACPC,YAAa,KAGjB0C,GAAI,CACFiB,mBAAoB,CAClB5D,MAAO,wBACPC,YAAa,IAEfsD,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfwD,MAAO,CACLzD,MAAO,gBACPC,YAAa,IAEf4D,MAAO,CACL7D,MAAO,gCACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,MACPC,YAAa,eAEf0D,kBAAmB,CACjB3D,MAAO,QACPC,YAAa,MAEf6D,WAAY,CACV9D,MAAO,UACPC,YAAa,IAEf8D,aAAc,CACZ/D,MAAO,oBACPC,YAAa,KAGjB2C,GAAI,CACFW,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,WAEf0D,kBAAmB,CACjB3D,MAAO,WACPC,YAAa,OAGjB4C,GAAI,CACFU,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,KAGjB6C,GAAI,CACFS,KAAM,CACJvD,MAAO,WACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,KAGjB8C,GAAI,CACFQ,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEf4D,MAAO,CACL7D,MAAO,4BACPC,YAAa,YAEfyD,WAAY,CACV1D,MAAO,yBACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjBsC,GAAI,CACFgB,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEf4D,MAAO,CACL7D,MAAO,4BACPC,YAAa,YAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjBuC,GAAI,CACFoB,mBAAoB,CAClB5D,MAAO,sBACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEf+D,aAAc,CACZhE,MAAO,eACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,QACPC,YAAa,KAGjB+C,GAAI,CACFY,mBAAoB,CAClB5D,MAAO,iCACPC,YAAa,mBAEfsD,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfgE,OAAQ,CACNjE,MAAO,SACPC,YAAa,IAEf+D,aAAc,CACZhE,MAAO,eACPC,YAAa,IAEfiE,iBAAkB,CAChBlE,MAAO,gCACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,WACPC,YAAa,SAEf0D,kBAAmB,CACjB3D,MAAO,QACPC,YAAa,MAEf6D,WAAY,CACV9D,MAAO,cACPC,YAAa,eAEf8D,aAAc,CACZ/D,MAAO,gBACPC,YAAa,oBAGjBgD,GAAI,CACFM,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEf6D,WAAY,CACV9D,MAAO,SACPC,YAAa,IAEf8D,aAAc,CACZ/D,MAAO,yBACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,YACPC,YAAa,WAGjBiD,GAAI,CACFK,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEfyD,WAAY,CACV1D,MAAO,WACPC,YAAa,SAEf0D,kBAAmB,CACjB3D,MAAO,QACPC,YAAa,OAGjBkD,GAAI,CACFI,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEf4D,MAAO,CACL7D,MAAO,4BACPC,YAAa,YAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjBmD,GAAI,CACFG,KAAM,CACJvD,MAAO,OACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,UACPC,YAAa,6BAEfuD,MAAO,CACLxD,MAAO,iBACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,4BACPC,YAAa,iCAEfyD,WAAY,CACV1D,MAAO,YAGT2D,kBAAmB,CACjB3D,MAAO,WAMAoE,GAA0B,CACrC1B,GAAI,CACFa,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,KAGjB0C,GAAI,CACFiB,mBAAoB,CAClB5D,MAAO,yBACPC,YAAa,0BAEfsD,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfwD,MAAO,CACLzD,MAAO,WACPC,YAAa,IAEf4D,MAAO,CACL7D,MAAO,2BACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,MACPC,YAAa,cAEf0D,kBAAmB,CACjB3D,MAAO,QACPC,YAAa,MAEf6D,WAAY,CACV9D,MAAO,aACPC,YAAa,oBAEf8D,aAAc,CACZ/D,MAAO,mBACPC,YAAa,2BAGjB2C,GAAI,CACFW,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,WAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,OAGjB4C,GAAI,CACFU,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,KAGjB6C,GAAI,CACFS,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,uCAGjB8C,GAAI,CACFQ,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEf4D,MAAO,CACL7D,MAAO,yBACPC,YAAa,YAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,KAGjBsC,GAAI,CACFgB,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEf4D,MAAO,CACL7D,MAAO,yBACPC,YAAa,YAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,KAGjBuC,GAAI,CACFoB,mBAAoB,CAClB5D,MAAO,yBACPC,YAAa,0BAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEf+D,aAAc,CACZhE,MAAO,WACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,KAGjB+C,GAAI,CACFY,mBAAoB,CAClB5D,MAAO,yBACPC,YAAa,0BAEfsD,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfgE,OAAQ,CACNjE,MAAO,WACPC,YAAa,IAEf+D,aAAc,CACZhE,MAAO,WACPC,YAAa,IAEfiE,iBAAkB,CAChBlE,MAAO,2BACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,IAEf6D,WAAY,CACV9D,MAAO,aACPC,YAAa,eAEf8D,aAAc,CACZ/D,MAAO,mBACPC,YAAa,2BAGjBgD,GAAI,CACFM,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf6D,WAAY,CACV9D,MAAO,aACPC,YAAa,oBAEf8D,aAAc,CACZ/D,MAAO,mBACPC,YAAa,2BAGjBiD,GAAI,CACFK,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,KAGjBkD,GAAI,CACFI,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEf4D,MAAO,CACL7D,MAAO,4BACPC,YAAa,YAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjBmD,GAAI,CACFG,KAAM,CACJvD,MAAO,QACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,OACPC,YAAa,qCAEfuD,MAAO,CACLxD,MAAO,aACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,yBACPC,YAAa,sCAEfyD,WAAY,CACV1D,MAAO,cACPC,YAAa,SAEf0D,kBAAmB,CACjB3D,MAAO,OACPC,YAAa,QAKNoE,GAA0B,CACrC3B,GAAI,CACFa,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,KAGjB0C,GAAI,CACFiB,mBAAoB,CAClB5D,MAAO,2IACPC,YAAa,IAEfsD,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfwD,MAAO,CACLzD,MAAO,yDACPC,YAAa,IAEf4D,MAAO,CACL7D,MAAO,4EACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,MACPC,YAAa,eAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,MAEf6D,WAAY,CACV9D,MAAO,uCACPC,YAAa,IAEf8D,aAAc,CACZ/D,MAAO,iGACPC,YAAa,KAGjB2C,GAAI,CACFW,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,WAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,OAGjB4C,GAAI,CACFU,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,KAGjB6C,GAAI,CACFS,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,KAGjB8C,GAAI,CACFQ,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEf4D,MAAO,CACL7D,MAAO,oJACPC,YAAa,kCAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,uCACPC,YAAa,KAGjBsC,GAAI,CACFgB,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEf4D,MAAO,CACL7D,MAAO,oJACPC,YAAa,kCAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,uCACPC,YAAa,KAGjBuC,GAAI,CACFoB,mBAAoB,CAClB5D,MAAO,kIACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEf+D,aAAc,CACZhE,MAAO,yDACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,KAGjB+C,GAAI,CACFY,mBAAoB,CAClB5D,MAAO,kIACPC,YAAa,oFAEfsD,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfgE,OAAQ,CACNjE,MAAO,uCACPC,YAAa,IAEf+D,aAAc,CACZhE,MAAO,yDACPC,YAAa,IAEfiE,iBAAkB,CAChBlE,MAAO,4EACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,IAEf6D,WAAY,CACV9D,MAAO,sEACPC,YAAa,uEAEf8D,aAAc,CACZ/D,MAAO,sEACPC,YAAa,0FAGjBgD,GAAI,CACFM,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEf6D,WAAY,CACV9D,MAAO,uCACPC,YAAa,IAEf8D,aAAc,CACZ/D,MAAO,+HACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,KAGjBiD,GAAI,CACFK,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,KAGjBkD,GAAI,CACFI,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEf4D,MAAO,CACL7D,MAAO,oJACPC,YAAa,kCAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,uCACPC,YAAa,KAGjBmD,GAAI,CACFG,KAAM,CACJvD,MAAO,iCACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,uCACPC,YAAa,uJAEfuD,MAAO,CACLxD,MAAO,wEACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,oJACPC,YAAa,4JAEfyD,WAAY,CACV1D,MAAO,wFACPC,YAAa,SAEf0D,kBAAmB,CACjB3D,MAAO,6CACPC,YAAa,QAKNqE,GAA0B,CACrC5B,GAAI,CACFa,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjB0C,GAAI,CACFiB,mBAAoB,CAClB5D,MAAO,oCACPC,YAAa,IAEfsD,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfwD,MAAO,CACLzD,MAAO,eACPC,YAAa,IAEf4D,MAAO,CACL7D,MAAO,qBACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,MACPC,YAAa,eAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,MAEf6D,WAAY,CACV9D,MAAO,eACPC,YAAa,IAEf8D,aAAc,CACZ/D,MAAO,wBACPC,YAAa,KAGjB2C,GAAI,CACFW,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,WAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,OAGjB4C,GAAI,CACFU,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,KAGjB6C,GAAI,CACFS,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,KAGjB8C,GAAI,CACFQ,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEf4D,MAAO,CACL7D,MAAO,iDACPC,YAAa,UAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjBsC,GAAI,CACFgB,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEf4D,MAAO,CACL7D,MAAO,iDACPC,YAAa,UAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,eACPC,YAAa,KAGjBuC,GAAI,CACFoB,mBAAoB,CAClB5D,MAAO,2BACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEf+D,aAAc,CACZhE,MAAO,eACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjB+C,GAAI,CACFY,mBAAoB,CAClB5D,MAAO,2BACPC,YAAa,4BAEfsD,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfgE,OAAQ,CACNjE,MAAO,SACPC,YAAa,IAEf+D,aAAc,CACZhE,MAAO,eACPC,YAAa,IAEfiE,iBAAkB,CAChBlE,MAAO,qBACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,IAEf6D,WAAY,CACV9D,MAAO,2BACPC,YAAa,4BAEf8D,aAAc,CACZ/D,MAAO,2BACPC,YAAa,6BAGjBgD,GAAI,CACFM,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEf6D,WAAY,CACV9D,MAAO,SACPC,YAAa,IAEf8D,aAAc,CACZ/D,MAAO,wCACPC,YAAa,IAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,KAGjBiD,GAAI,CACFK,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,KAGjBkD,GAAI,CACFI,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEf4D,MAAO,CACL7D,MAAO,iDACPC,YAAa,UAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,IAEf0D,kBAAmB,CACjB3D,MAAO,eACPC,YAAa,KAGjBmD,GAAI,CACFG,KAAM,CACJvD,MAAO,SACPC,YAAa,IAEfjJ,YAAa,CACXgJ,MAAO,eACPC,YAAa,2DAEfuD,MAAO,CACLxD,MAAO,iCACPC,YAAa,IAEfwD,MAAO,CACLzD,MAAO,iDACPC,YAAa,0DAEfyD,WAAY,CACV1D,MAAO,2BACPC,YAAa,SAEf0D,kBAAmB,CACjB3D,MAAO,SACPC,YAAa,QC54DXsE,GAAoBC,IAApBD,gBAUOE,GARwB,SAAC,GAA+B,IAA7BtK,EAA4B,EAA5BA,QAASyC,EAAmB,EAAnBA,MAAOzE,EAAY,EAAZA,MAClDuM,EAA8B,eAAV9H,EACpB+H,EAA4BtB,GAA4BuB,SAASzK,GACjE0K,EAAYN,GAAgB,GAAD,OAAIpK,EAAQ0F,cAAZ,wBAEjC,OAAO6E,GAAqBC,GAA6BE,EAAUC,KAAK3M,ICT3D4M,GAFe,SAAAC,GAAM,OAAIA,EAAOC,OAAO,EAAG,ICumB1CC,GAvmBM,SAACC,EAAYC,GAChC,IAKI9H,EAFE+H,EAAyB,CAAC,WAAY,YACtCC,EAAkCH,EAAWG,gCAEnD,OAAQH,EAAWnO,aACjB,IAAK,KACHsG,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,OAGtBvM,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BC,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNJ,UAAU,EACViB,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM,KACNL,kBAAkB,IAGtB,MACF,IAAK,KACHb,EAAY,CACVsG,mBAAoB,CAClB5F,oBAAqB,CACnBC,UAAWmH,EAAOxB,mBAClB8B,QAASlG,QAAQ4F,EAAOxB,qBAE1BhG,kBAAmB0H,GAErB/B,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1BrF,UAAU,EACVN,kBAAmB0H,GAErBtO,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BhC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,QAE1B7F,kBAAmB0H,GAErBzB,MAAO,CACL7F,oBAAqB,CACnBC,UAAWmH,EAAOvB,MAClB6B,QAASlG,QAAQ4F,EAAOvB,QAE1BjG,kBAAmB0H,GAErBpB,iBAAkB,CAChBlG,oBAAqB,CACnBC,UAAWmH,EAAOlB,iBAClBwB,QAASlG,QAAQ4F,EAAOlB,mBAE1BtG,kBAAmB0H,GAErB5B,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAzGmB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,IAAK,IAAK,KAAM,KAAM,MA0G7Ea,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM6G,EACNlH,kBAAkB,EAClBP,kBAAmB0H,GAErBxB,WAAY,CACV9F,oBAAqB,CACnBC,UAAWmH,EAAOtB,WAClB4B,QAASlG,QAAQ4F,EAAOtB,aAE1BlG,kBAAmB0H,GAErBvB,aAAc,CACZ/F,oBAAqB,CACnBC,UAAWmH,EAAOrB,aAClB2B,QAASlG,QAAQ4F,EAAOrB,eAE1BnG,kBAAmB0H,IAGvB,MAEF,IAAK,KACHhI,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,GACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BC,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNJ,UAAU,EACViB,kBAAkB,IAGtB,MAEF,IAAK,KACH/B,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,GACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,UAI9B,MAEF,IAAK,KACHnG,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,GACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BI,MAAO,CACL7F,oBAAqB,CACnBC,UAAWmH,EAAOvB,MAClB6B,QAASlG,QAAQ4F,EAAOvB,SAG5BH,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNa,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1BxE,gBAAiB,CACfqB,cAAe2E,EAAWQ,gBAC1BtF,iBAAkB8E,EAAWS,qBAC7BnF,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWU,2BAE3BhH,SAAS,EACTL,KAAM,KACNL,kBAAkB,IAGtB,MACF,IAAK,KACHb,EAAY,CACVtG,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7B/B,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNa,kBAAkB,IAGtB,MACF,IAAK,KACH/B,EAAY,CACVsG,mBAAoB,CAClB5F,oBAAqB,CACnBC,UAAWmH,EAAOxB,mBAClB8B,QAASlG,QAAQ4F,EAAOxB,sBAG5B5M,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BhC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM,KACNL,kBAAkB,IAGtB,MACF,IAAK,KACHb,EAAY,CACVsG,mBAAoB,CAClB5F,oBAAqB,CACnBC,UAAWmH,EAAOxB,mBAClB8B,QAASlG,QAAQ4F,EAAOxB,qBAE1BvE,kBAAkB,GAEpBkE,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1BrF,UAAU,EACVN,kBAAmB0H,GAErBtO,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BxB,OAAQ,CACNjG,oBAAqB,CACnBC,UAAWmH,EAAOnB,OAClByB,QAASlG,QAAQ4F,EAAOnB,SAE1BrG,kBAAmB0H,GAErBtB,aAAc,CACZhG,oBAAqB,CACnBC,UAAWmH,EAAOpB,aAClB0B,QAASlG,QAAQ4F,EAAOpB,eAE1BpG,kBAAmB0H,GAErBpB,iBAAkB,CAChBlG,oBAAqB,CACnBC,UAAWmH,EAAOlB,iBAClBwB,QAASlG,QAAQ4F,EAAOlB,mBAE1BtG,kBAAmB0H,GAErB5B,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNa,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM,KACNL,kBAAkB,EAClBP,kBAAmB0H,GAErBxB,WAAY,CACV9F,oBAAqB,CACnBC,UAAWmH,EAAOtB,WAClB4B,QAASlG,QAAQ4F,EAAOtB,cAG5BC,aAAc,CACZ/F,oBAAqB,CACnBC,UAAWmH,EAAOrB,aAClB2B,QAASlG,QAAQ4F,EAAOrB,iBAI9B,MAEF,IAAK,KACHzG,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,GACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7B/B,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,MACpCa,kBAAkB,GAEpByE,WAAY,CACV9F,oBAAqB,CACnBC,UAAWmH,EAAOtB,WAClB4B,QAASlG,QAAQ4F,EAAOtB,cAG5BC,aAAc,CACZ/F,oBAAqB,CACnBC,UAAWmH,EAAOrB,aAClB2B,QAASlG,QAAQ4F,EAAOrB,iBAI9B,MACF,IAAK,KACHzG,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,YACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BC,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNa,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM,KACNL,kBAAkB,IAGtB,MAEF,IAAK,KACHb,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,GACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BI,MAAO,CACL7F,oBAAqB,CACnBC,UAAWmH,EAAOvB,MAClB6B,QAASlG,QAAQ4F,EAAOvB,SAG5BH,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAM,KACNa,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM,KACNL,kBAAkB,IAGtB,MAEF,IAAK,KACL,IAAK,KACL,QACEb,EAAY,CACViG,KAAM,CACJvF,oBAAqB,CACnBC,UAAWmH,EAAO7B,KAClBmC,QAASlG,QAAQ4F,EAAO7B,OAE1B5D,aAAc,GACdzB,UAAU,GAEZlH,YAAa,CACXmI,gBAAiB,CACfqB,cAAe2E,EAAWI,UAC1BlF,iBAAkB8E,EAAWK,oBAC7B/E,qBAAsB0E,EAAW1E,qBACjCE,aAAcwE,EAAWM,0BAG7BjC,MAAO,CACLxF,oBAAqB,CACnBC,UAAWmH,EAAO5B,MAClBkC,QAASlG,QAAQ4F,EAAO5B,SAG5BC,MAAO,CACLzF,oBAAqB,CACnBC,UAAWmH,EAAO3B,MAClBiC,QAASlG,QAAQ4F,EAAO3B,SAG5BC,WAAY,CACV1F,oBAAqB,CACnBC,UAAWmH,EAAO1B,WAClBgC,QAASlG,QAAQ4F,EAAO1B,aAE1B7E,SAAS,EACTL,KAAiC,OAA3B2G,EAAWnO,YAplBE,CAAC,KAAM,KAAM,KAAM,KAAM,MACzB,CAAC,WAAY,KAAM,WAAY,IAAK,KAAM,WAAY,MAolBzEqI,kBAAkB,GAEpBsE,kBAAmB,CACjB3F,oBAAqB,CACnBC,UAAWmH,EAAOzB,kBAClB+B,QAASlG,QAAQ4F,EAAOzB,oBAE1B9E,SAAS,EACTL,KAAM6G,EACNlH,kBAAkB,IAK1B,OAAOb,GCnmBDiH,GAAoBC,IAApBD,gBA6BOuB,GA3BO,SAAC,GAQhB,IAPL3L,EAOI,EAPJA,QACAyC,EAMI,EANJA,MACAiC,EAKI,EALJA,QACAkH,EAII,EAJJA,WACAC,EAGI,EAHJA,WAGI,IAFJC,kCAEI,SADJ9N,EACI,EADJA,MAEM+N,EAAwB/L,EAAQ0F,cAChCsG,EACJvJ,EAAMiD,cAAclC,QAAQ,SAAW,EAAI,OAASf,EAAMiD,cACtDgF,EAAYN,GAAgB,GAAD,OAAI2B,EAAJ,YAA6BC,EAA7B,aAC7B5B,GAAgB,GAAD,OAAI2B,EAAJ,YAA6BC,EAA7B,aACf5B,GAAgB,GAAD,OAAI4B,EAAJ,aACflI,EAAY,GAShB,OAPIgI,GAA8BF,IAAe5N,EAC/C8F,EAAS,UAAMkI,EAAN,iBACAtH,GAAWmH,IAAe7N,EAAMiO,WAAW5N,OACpDyF,EAAS,kBAAckI,EAAd,UACAhO,IAAU0M,EAAUC,KAAK3M,KAClC8F,EAAS,kBAAckI,EAAd,WAEJlI,GCMDoI,GAAyC7B,IAAzC6B,MAAOtQ,GAAkCyO,IAAlCzO,8BAigBAuQ,GA/fQ,WACrB,IAIMC,EAAuC,CAC3ChK,4BAA4B,EAC5B9E,2BAA4B,GAC5B+E,iDACEzG,GAA8ByQ,8CAChCrP,gCAT0C,SAAAsP,GAC1CC,QAAQC,IAAI,mDAAoDF,IAShE/O,qDAAsD,EACtD+E,gBAAiB,SAZQ,EAeW7E,mBAAS,CAAEZ,YAAa,OAfnC,mBAepB4P,EAfoB,KAePC,EAfO,OAgBmDjP,oBAAS,GAhB5D,mBAgBpB0N,EAhBoB,KAgBawB,EAhBb,OAiBiBlP,mBAAS,UAjB1B,mBAiBpBmP,EAjBoB,KAiBJC,EAjBI,OAkBWpP,mBAAS,MAlBpB,mBAkBpBZ,EAlBoB,KAkBPiQ,EAlBO,OAmBmBrP,mBAAS,MAnB5B,mBAmBpBsP,EAnBoB,KAmBHC,EAnBG,OAoBCvP,mBAAS,IApBV,mBAoBpBwN,EApBoB,KAoBZgC,EApBY,OAqBqDxP,mBAC9E2O,GAtByB,mBAqBpBtP,EArBoB,KAqBcoQ,EArBd,OAwBCzP,mBAAS,SAxBV,mBAwBpBoN,EAxBoB,KAwBZsC,EAxBY,OAyBK1P,mBAAS,MAzBd,mBAyBpB2P,EAzBoB,KAyBVC,EAzBU,OA0BuB5P,mBAAS,OA1BhC,mBA0BpB6P,EA1BoB,KA0BDC,EA1BC,OA2BiB9P,mBAAS,UA3B1B,mBA2BpB+P,EA3BoB,KA2BJC,GA3BI,QA4B+BhQ,mBAASyO,GAAK,iBAAqB,IA5BlE,qBA4BpBwB,GA5BoB,MA4BGC,GA5BH,MA8BrBC,GAAkB,kBAAMrR,SAASsR,iBAAiB,yCAExDtL,qBAAU,WACR,GAAI1F,IAAgBkQ,EAAiB,CAMnCC,EAAmBnQ,GAEnB,IAAMmO,EAAa,CAAEnO,eACf8E,EAAO,eAAQ8K,EAAR,GAAwBzB,GACjC8C,EAAY7C,EACZ8C,EAAiB,GACjBC,EAAgB,GACDJ,KAERrN,SAAQ,SAAAkC,GACjB,IAAMa,EAAYb,EAAMR,KAClB2J,EAAanJ,EAAMwB,SAEnBgK,GADW5I,QAAQ5C,EAAMzE,OACb,CAChBgC,QAASnD,EACT4F,MAAOa,EACPsI,aACAE,2BAA4BF,GAAckC,EAAUxK,GACpDtF,MAAOyE,EAAMzE,QAEiB,gBAA5BsF,EAAUoC,gBACZqI,EAAiBpC,GAAcsC,IAEjCD,EAAa,eAAM1K,EAAYyK,GAE/BD,EAAS,eAAQA,EAAR,GAAsBE,MAGjCf,EAAUa,GACVpB,EAAe/K,MAEhB,CAAC8K,EAAa5P,EAAakQ,EAAiB9B,IAE/C,IA6CuCiD,GAAO1H,GAVxC2H,GAAyC,SAAAtR,GAC7C,IAAIyF,EAAkB,QAMtB,OAJI1G,GAA8BwS,wBAAwB3D,SAAS5N,KACjEyF,EAAkB,cAGbA,GAWH+L,GAAiB,SAAAJ,GACrB,IAAM3K,EAAY2K,EAAUxL,MACtB6L,EAAgB,CACpBtO,QAASiO,EAAUjO,QACnByC,MAAOa,EACPoB,QAASuJ,EAAUvJ,QACnBkH,WAAYqC,EAAUrC,WACtBC,WAAYoC,EAAUpC,WACtBC,2BAA4BmC,EAAUnC,2BACtC9N,MAAOiQ,EAAUjQ,OAGb8F,EAAY6H,GAAc2C,GAC1BN,EAAa,eAAM1K,EAAYQ,GAC/ByK,EAAQ,eAAQtD,EAAR,GAAmB+C,GAEjCf,EAAUsB,IAGNC,GAAqB,SAAA9O,GACzB,IAAM+O,EAAY/O,EAAEE,OAAOqC,KACrByM,EAAqC,UAAdD,EAAwB,MAAQ,MAE7DtB,EAAUsB,GACVpB,EAAYzC,GAAsB6D,GAAW/I,eAC7C6H,EAAqBmB,IA4OjBtD,GAAYuD,EAAiB,0BAAD,OAA2BvB,IACvD5B,GAAkBmD,GAClB3D,GAAa,CACjBG,kCACAC,aACAvO,cACAyO,yBAnRqC4C,GAmRkB9C,GAnRX5E,GAmRsB3J,EAlRlEqR,GAAMU,MAAK,SAAA/P,GAAI,OAAIA,EAAKgJ,aAAerB,OAmRvC6E,oBA3J0B,SAAAxM,GAC1B,GAAIA,EAAM,CACR,IAAMmB,EAAUnB,EAAKgJ,WACfgH,EAA2B,CAC/BC,oCAAqCX,GAAuCnO,IAExE+O,EAAe,eAAQjS,EAAR,GAA6C+R,GAElE/B,EAAe9M,GACfkN,EAAoC6B,KAmJtCtD,qBA/I2B,SAAA5M,GAC3B,GAAIA,EAAM,CACR,IAAM6D,EAAW,CAAE8G,kBAAmB3K,EAAKb,OACrC2D,EAAO,eAAQ8K,EAAR,GAAwB/J,GAErCiL,GAAyB9O,EAAKb,OAC9B0O,EAAe/K,KA0IjB6J,mBACAE,0BApR0C,SAACwC,EAAO1H,GAAR,OAC1C0H,EAAMU,MAAK,SAAA/P,GAAI,OAAIA,EAAKb,QAAUwI,KAmRPwI,CACzBxD,GACAkC,IAEFpH,qBArR2B,SAAA2I,GAAM,OAAI,8BAAOA,EAAOjR,SA0R/CmF,GAAY4H,GAAaC,GAFbC,GAIZnJ,GAAkB,CACtB6B,QAASgL,EAAiB,wBAAD,OAAyBvB,IAAYvQ,GAC9DqE,OA9DwB,WACxB,IAAIgO,EAAiBP,GAAwD9R,GAmC7E,MAJoB,OAAhBA,GAAwC,OAAhBA,IAC1BqS,EA/BmB,CACnB1G,GAAI2C,EACA,CACE,cACA,aACA,aACA,eACA,qBACA,QACA,QACA,OACA,qBAEF,CAAC,cAAe,cACpBtC,GAAIsC,EACA,CACE,cACA,aACA,eACA,qBACA,aACA,eACA,SACA,OACA,oBACA,oBAEF,CAAC,cAAe,aAAc,eAAgB,qBAAsB,eAI1CtO,IAGzBqS,EA0BCC,GACRlN,KA3EsB,WACtB,IAAI9E,EAAewR,GAA8C9R,GAQjE,MANoB,OAAhBA,EACFM,EAAeyP,EACU,OAAhB/P,IACTM,EAAeqQ,GAGVrQ,EAkEDiS,GACNjM,cAGF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKkM,MAAO,CAAEC,QAAS,OAAQC,SAAU,QAAUC,IAAKlC,EAAmBmC,KAAM5E,GAC/E,yBAAKwE,MAAO,CAAEK,MAAO,SACnB,yBAAKL,MAAO,CAAEM,OAAQ,iBAAkBC,aAAc,OAAQC,QAAS,QACrE,wBACE9R,UAAU,sBADZ,iGAMA,2BACE+R,QAAQ,yBACRT,MAAO,CACLU,MAAO,UACPC,OAAQ,UACRV,QAAS,QACTW,WAAY,MACZC,UAAW,MACXC,WAAY,cARhB,WAaA,2BACEhK,KAAK,OACLU,GAAG,yBACHwI,MAAO,CACLM,OAAQ,iBACRL,QAAS,eACTc,YAAa,MACbP,QAAS,MACTH,MAAO,SAGX,4BACEvJ,KAAK,SACLkK,QA7XQ,WACtB,IAAMnQ,EAAQ3D,SAAS+T,eAAe,0BAChCC,EAAyB,CAC7BnO,2BAA4BiD,QAAQnF,EAAMlC,OAC1CV,2BAA4B4C,EAAMlC,OAE9B+Q,EAAe,eAAQjS,EAAR,GAA6CyT,GAElErD,EAAoC6B,IAsXtBM,MAAO,CACLmB,gBAAiB,UACjBb,OAAQ,iBACRK,OAAQ,UACRH,QAAS,QAPb,eA/WR/S,EAAiCQ,2BAEjC,0BACE+R,MAAO,CACLU,MAAO,QACPT,QAAS,eACTmB,WAAY,OACZR,WAAY,SALhB,yBAaF,0BACEZ,MAAO,CAAEU,MAAO,UAAWT,QAAS,eAAgBmB,WAAY,OAAQR,WAAY,SADtF,gBA8WQ,0BAAMS,SAxKG,SAAAhR,GACnBA,EAAEiR,iBACFjR,EAAEkR,kBACF,IAAI9C,EAAY7C,EACZ8C,EAAiB,GACjBC,EAAgB,GAChB6C,EAAe,KACAjD,KAERrN,SAAQ,SAAAkC,GACjB,IAAMa,EAAYb,EAAMR,KAClByC,EAAUjC,EAAMqO,aAAa,QAC7BlF,EAAanJ,EAAMwB,SACnBgK,EAAY,CAChBjO,QAASnD,EACT4F,MAAOa,EACPsI,aACAC,WAAYnH,EAAUjC,EAAMqO,aAAa,QAAQC,MAAM,MAAM1S,OAAS,EAAI,KAC1EyN,4BAA4B,EAC5B9N,MAAOyE,EAAMzE,OAGiB,gBAA5BsF,EAAUoC,gBACZqI,EAAiBpC,GAAcsC,IAGZ,OAAjB4C,GAA4C,KAAnB9C,IAC3B8C,EAAepO,GAGjBuL,EAAa,eAAM1K,EAAYyK,GAC/BD,EAAS,eAAQA,EAAR,GAAsBE,MAGjC6C,EAAaG,QACb/D,EAAUa,IAqI8BmD,YAAU,GACtC,kBAAC,EAAD,CACEtP,QAAS8K,EACT5P,YAAaA,EACbC,iCAAkCA,EAClC0K,OAAO,sBACP5F,gBAhSY,SAAAlC,GAC1B,IAAM+C,EAAQ/C,EAAEE,OAAOqC,KACjB2J,EAAalM,EAAEE,OAAOqE,SAEtBjG,EAAQ0B,EAAEE,OAAO5B,MACjB0E,EAAQ,eAAMD,EAAQzE,GACtBiQ,EAAY,CAChBjO,QAASnD,EACT4F,QACAmJ,aACAE,4BAPiC,EAQjC9N,SAEE2E,EAAc,eAAQ8J,EAAR,GAAwB/J,GACpCwO,EAA0B5G,GAA+B2D,GACzDkD,EAAyC,OAAhBtU,GAAwC,OAAhBA,EAEnDqU,KA/C+B,SAAAjD,GACnC1B,QAAQC,IAAI,sCACL,IAAI4E,SAAQ,SAAAC,GACjB,IAAIC,EAAS,GAEb,IAC4B,OAAtBrD,EAAUjO,QACZsR,EAAS,CACPlI,KAAM,QACNE,MAAO,aACPC,WAAY0E,EAAUjQ,MACtBwL,kBAAmB,KACnBG,WAAY,4BAEiB,OAAtBsE,EAAUjO,UACnBsR,EAAS,CACP/H,WAAY0E,EAAUjQ,MACtBwL,kBAAmB,YAIvBkD,EAAe,eAAKD,EAAN,GAAsB6E,IACpCD,EAAQC,GACR,MAAO5R,GAEP,YADA2R,EAAQ,UAwBVE,CAA6BtD,GAC7BtB,GAAmC,GACnCE,EAAkB,UAClBY,GAAkB,WAGhB0D,GAAkD,gBAAxB1O,EAAMiD,eAClC2I,GAAeJ,GAGZiD,GAAmD,gBAAxBzO,EAAMiD,eACpCgH,EAAe/J,IAoQHd,YAhQQ,SAAAnC,GACtB,IAAM+C,EAAQ/C,EAAEE,OAAOqC,KACjByC,EAAUhF,EAAEE,OAAOkR,aAAa,QAChClF,EAAalM,EAAEE,OAAOqE,SAEtBjG,EAAQ0B,EAAEE,OAAO5B,MACjBiQ,EAAY,CAChBjO,QAASnD,EACT4F,QACAiC,UACAkH,aACAC,WAAYnH,EAAUhF,EAAEE,OAAOkR,aAAa,QAAQC,MAAM,MAAM1S,OAAS,EAAI,KAC7EyN,4BARiC,EASjC9N,UAE2C,OAAhBnB,GAAwC,OAAhBA,IAED,gBAAxB4F,EAAMiD,eAChC2I,GAAeJ,IA+OHnM,gBAAiBA,KAEnB,4BAAQqE,KAAK,UAAb,oBAEF,yBAAKpI,UAAU,kBACb,6DACA,4BAAQoI,KAAK,SAASlE,KAAK,QAAQoO,QAAS7B,IAA5C,SAGA,4BAAQrI,KAAK,SAASlE,KAAK,QAAQoO,QAAS7B,IAA5C,SAGA,4BAAQrI,KAAK,SAASlE,KAAK,QAAQoO,QAAS7B,IAA5C,SAGA,4BAAQrI,KAAK,SAASlE,KAAK,QAAQoO,QAAS7B,IAA5C,SAGA,4BAAQrI,KAAK,SAASlE,KAAK,QAAQoO,QAAS7B,IAA5C,WAKJ,yBAAKa,MAAO,CAAEK,MAAO,SACnB,yDACA,6BAAMtI,KAAKC,UAAUoF,EAAa,KAAM,KAE1C,yBAAK4C,MAAO,CAAEK,MAAO,SACnB,mDACA,6BAAMtI,KAAKC,UAAU4D,EAAQ,KAAM,UC9f3CuG,GAAWC,EAAQ,KACnBC,GAAU,CAACD,EAAQ,MACnBE,GAAYF,EAAQ,KAEpBG,GADE,87IACYC,QAAQ,YAAa,yBAAyBA,QAAQ,gBAAiB,uBAErFC,GADc,6hjBACeD,QAAQ,aAAvB,qBAEd1F,GAAiB,SAAC,GAA2B,IAAtB4F,EAAqB,oBACJtU,mBAAS,IADL,mBACzCuU,EADyC,KACzBC,EADyB,KAchD,OAXA1P,qBAAU,WACR,IACE0P,EAAkBN,GAAUO,MAAMN,KAClC,SAEArF,QAAQC,IAAR,8IAID,IAGD,kBAAC,IAAD,CAAM2F,uBAAqB,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,IAAI,MAAhB,aAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,IAAK,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAE,UAAKC,aAAL,uBAAkDC,gBAAgB,yBAC3F,kBAAC,IAAD,CAAMvQ,KAAK,MAAMwQ,WAAW,QAD9B,mBAGA,kBAAC,IAAD,CAAKL,IAAK,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAE,UAAKC,aAAL,4BAAuDC,gBAAgB,yBAChG,kBAAC,IAAD,CAAMvQ,KAAK,qBAAqBwQ,WAAW,QAD7C,kBAGA,kBAAC,IAAD,CAAKL,IAAK,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAE,UAAKC,aAAL,4BAAuDC,gBAAgB,yBAChG,kBAAC,IAAD,CAAMvQ,KAAK,qBAAqBwQ,WAAW,QAD7C,sBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACE1U,UAAWqH,IAAW,CACpB,oBAAqB2M,EAAehB,MAAM2B,OAArB,UAAiCH,aAAjC,uBACrB,kBAAmBR,EAAehB,MAAM2B,OAArB,UAAiCH,aAAjC,0BAGrB,kBAAC,GAAYR,IAEf,yBACEhU,UAAWqH,IAAW,CACpB,oBAAqB2M,EAAehB,MAAM2B,OAArB,UAAiCH,aAAjC,4BACrB,kBAAmBR,EAAehB,MAAM2B,OAArB,UAAiCH,aAAjC,+BAGrB,kBAAC,IAAD,iBAAe7K,IAAf,CAA6BiL,MAAOA,IAAOC,KAAMd,GAAa1E,SAAS,SACpE,gBAAGrP,EAAH,EAAGA,UAAWsR,EAAd,EAAcA,MAAOwD,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKhV,UAAWA,EAAWsR,MAAOA,GAC/BwD,EAAOzP,KAAI,SAAC4P,EAAMC,GAAP,OACV,wBAASH,EAAa,CAAE/M,IAAKkN,EAAGD,SAC9B,0BACE3D,MAAO,CACLC,QAAS,eACT4D,QAAS,MACTC,WAAY,OACZzD,MAAO,QAGRuD,EAAI,GAEND,EAAK5P,KAAI,SAACgQ,EAAOrN,GAAR,OAAgB,yBAAUgN,EAAc,CAAEhN,MAAKqN,uBAOrE,yBACErV,UAAWqH,IAAW,CACpB,oBAAqB2M,EAAehB,MAAM2B,OAArB,UAAiCH,aAAjC,4BACrB,kBAAmBR,EAAehB,MAAM2B,OAArB,UAAiCH,aAAjC,+BAGrB,kBAAC,IAAD,iBACM7K,IADN,CAEEiL,MAAOA,IACPC,KAAMpB,GAAS6B,OAAOC,IAAeC,qBAAqB,kBAAC,GAAYxB,IAAqB,CAAEyB,IAAK,SAAUC,OAAQ,OAAQ/B,WAASgC,WAAY,MAClJtG,SAAS,UAER,gBAAGrP,EAAH,EAAGA,UAAWsR,EAAd,EAAcA,MAAOwD,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKhV,UAAWA,EAAWsR,MAAOA,GAC/BwD,EAAOzP,KAAI,SAAC4P,EAAMC,GAAP,OACV,wBAASH,EAAa,CAAE/M,IAAKkN,EAAGD,SAC9B,0BACE3D,MAAO,CACLC,QAAS,eACT4D,QAAS,MACTC,WAAY,OACZzD,MAAO,QAGRuD,EAAI,GAEND,EAAK5P,KAAI,SAACgQ,EAAOrN,GAAR,OAAgB,yBAAUgN,EAAc,CAAEhN,MAAKqN,yBASzE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErV,UAAWqH,IAAW,CACpB,eAEFuO,cAAY,EACZC,KAAK,WAEL,kBAAC,IAAD,CAAcxB,IAAI,WAAlB,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAIrU,UAAU,UACZ,kBAAC,IAAD,CAAI8V,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,WAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,iBAKJ,kBAAC,IAAD,KAEI/B,EAAegC,OAASlP,OAAOmP,QAAQjC,EAAegC,OACnDE,QAAO,SAAAC,GAAG,MAA2B,YAAvBA,EAAI,GAAGxT,eACrByC,KAAI,SAAC+Q,EAAKlB,GAAN,OACH,kBAAC,IAAD,CAAIlV,UAAU,SAASgI,IAAKkN,EAAGmB,SAAS,KACtC,kBAAC,IAAD,CAAIrW,UAAU,UACXoW,EAAI,GADP,IACYA,EAAI,GAAGlQ,SAAW,yBAAKoL,MAAO,CAAEU,MAAO,QAArB,aAAgD,IAE9E,kBAAC,IAAD,CAAIhS,UAAU,UACZ,gCAASoW,EAAI,GAAGhO,KAAKlE,MAEnBkS,EAAI,GAAGhO,KAAKnI,OAASmW,EAAI,GAAGhO,KAAKnI,MAAMK,OACnC,2BAAOgR,MAAO,CAAEU,MAAO,YAAa,6BAElCsE,MAAMC,QAAQH,EAAI,GAAGhO,KAAKnI,OACtBmW,EAAI,GAAGhO,KAAKnI,MAAMoF,KAAI,SAAAmR,GAAC,OAAIA,EAAEvW,OAASuW,EAAEtS,QAAMxC,KAAK,MACtB,kBAAtB0U,EAAI,GAAGhO,KAAKnI,MACjBmW,EAAI,GAAGhO,KAAKnI,WACZ2H,GAGR,IAGR,kBAAC,IAAD,CAAI5H,UAAU,UACXoW,EAAI,GAAG3O,aAAe2O,EAAI,GAAG3O,aAAaxH,MAAQ,IAErD,kBAAC,IAAD,CAAID,UAAU,UACXoW,EAAI,GAAGxT,uBAahCwL,GAAexE,YAAc,iBAEdwE,c,mFChNTqI,EAAeC,sBAAW,WAAuDC,GAAvD,IAAGC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAgB6W,EAA7B,EAAwBxC,IAAaL,EAArC,qDAC9B,kBAAC6C,EAAD,eACE7W,UAAWqH,IAJI,oBAImBrH,GAClC2W,IAAKA,GACD3C,GAEH4C,MAILH,EAAaK,UAAY,CAIvBF,SAAUG,OAKV/W,UAAWgX,SAKX3C,IAAK4C,eAGPR,EAAa9M,aAAe,CAC1B0K,IAAK,QAGPoC,EAAa7M,YAAc,eAEZ6M,O,0FChCTS,EAAYR,sBAAW,WAa1BC,GAb0B,MAC3BC,EAD2B,EAC3BA,SACA5W,EAF2B,EAE3BA,UACAmX,EAH2B,EAG3BA,oBACAvB,EAJ2B,EAI3BA,aACAwB,EAL2B,EAK3BA,cACAC,EAN2B,EAM3BA,OACAC,EAP2B,EAO3BA,kBACAC,EAR2B,EAQ3BA,iBACAC,EAT2B,EAS3BA,aACA3B,EAV2B,EAU3BA,KACA4B,EAX2B,EAW3BA,aACGzD,EAZwB,yLAc3B,2CACMA,EADN,CAEEhU,UAAWqH,IAnBI,kBAmBM,6BAlBP,YAkBO,0BACqBC,QAAQ6P,IAD7B,wBAlBP,YAkBO,mBAEc7P,QAAQsO,IAFtB,wBAlBP,YAkBO,qBAGgBtO,QAAQ8P,IAHxB,wBAlBP,YAkBO,aAIDvB,GAASvO,QAAQuO,IAJhB,wBAlBP,YAkBO,YAKOvO,QAAQ+P,IALf,wBAlBP,YAkBO,yBAMoB/P,QAAQgQ,IAN5B,wBAlBP,YAkBO,wBAOmBhQ,QAAQiQ,IAP3B,wBAlBP,YAkBO,aAQDC,GAAiBlQ,QAAQkQ,IARxB,wBAlBP,YAkBO,mBASclQ,QAAQmQ,IATtB,GAUlBzX,GACH2W,IAAKA,IAEJC,MAILM,EAAUJ,UAAY,CAIpBF,SAAUG,OAKV/W,UAAWgX,SAKXU,QAASC,kBAAQC,gBAAM,KAKvBT,oBAAqBU,OAKrBtJ,KAAMoJ,kBAAQC,gBAAM,KAKpBhC,aAAciC,OAKdT,cAAeS,OAKfR,OAAQQ,OAKRP,kBAAmBO,OAKnBN,iBAAkBM,OAKlBL,aAAcM,gBAAM,CAAC,eAAgB,kBAKrCjC,KAAMiC,gBAAM,CAAC,YAKbL,aAAcI,QAGhBX,EAAUtN,YAAc,YAETsN,O,mFCvGTa,EAAQrB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACvB,yCACEhU,UAAWqH,IAJI,YAImBrH,GAClC2W,IAAKA,GACD3C,GAEH4C,MAILmB,EAAMjB,UAAY,CAIhBF,SAAUG,OAKV/W,UAAWgX,UAGbe,EAAMnO,YAAc,QAELmO,O,0FCxBTC,EAAKtB,sBAAW,WAKnBC,GALmB,IACpBC,EADoB,EACpBA,SACA5W,EAFoB,EAEpBA,UACAiY,EAHoB,EAGpBA,UACGjE,EAJiB,2DAMpB,sCACEhU,UAAWqH,IATI,SASM,mCACL4Q,GAAc3Q,QAAQ2Q,IACnCjY,GACH2W,IAAKA,GACD3C,GAEH4C,MAILoB,EAAGlB,UAAY,CAIbF,SAAUG,OAKV/W,UAAWgX,SAKXiB,UAAWH,gBAAM,CAAC,SAAU,OAAQ,WAGtCE,EAAGpO,YAAc,KAEFoO,O,mFCpCTE,EAAKxB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACpB,sCACEhU,UAAWqH,IAJI,SAImBrH,GAClC2W,IAAKA,GACD3C,GAEH4C,MAILsB,EAAGpB,UAAY,CAIbF,SAAUG,OAKV/W,UAAWgX,UAGbkB,EAAGtO,YAAc,KAEFsO,O,mFCxBTC,EAAQzB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACvB,yCACEhU,UAAWqH,IAJI,YAImBrH,GAClC2W,IAAKA,GACD3C,GAEH4C,MAILuB,EAAMrB,UAAY,CAIhBF,SAAUG,OAKV/W,UAAWgX,UAGbmB,EAAMvO,YAAc,QAELuO,O,mFCxBTC,EAAK1B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACpB,sCACEhU,UAAWqH,IAJI,SAImBrH,GAClC2W,IAAKA,GACD3C,GAEH4C,MAILwB,EAAGtB,UAAY,CAIbF,SAAUG,OAKV/W,UAAWgX,UAGboB,EAAGxO,YAAc,KAEFwO,O,4ECxBTC,EAAc,SAAC,GAAD,IAAGzB,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CAClB,wCACEhU,UAAWqH,IAJI,gBAImBrH,IAC9BgU,GAEH4C,IAgBLyB,EAAYzO,YAAc,cAEXyO,O,2ICtBTC,EAAa5B,sBAAW,WAQ3BC,GAR2B,IAC5B4B,EAD4B,EAC5BA,UACA3B,EAF4B,EAE5BA,SACA5W,EAH4B,EAG5BA,UACAwY,EAJ4B,EAI5BA,SACAC,EAL4B,EAK5BA,SACArQ,EAN4B,EAM5BA,KACG4L,EAPyB,wFAS5B,0CACE0E,aAAYH,EACZvY,UAAWqH,IAbI,eAaM,yBAbN,eAaM,aACAoR,GAAanR,QAAQmR,IACvCzY,GACHwY,SAAUA,EACV7B,IAAKA,EACLvO,KAAMA,GACF4L,GAEJ,kBAAC,IAAD,KAAc4C,OAIlB0B,EAAWxB,UAAY,CAIrByB,UAAWvB,SAAOnJ,WAKlB+I,SAAUG,OAKV/W,UAAWgX,SAKXwB,SAAUX,OAKVY,SAAUX,gBAAM,CACd,OACA,eACA,YACA,QACA,aACA,gBACA,eAMF1P,KAAM4O,UAGRsB,EAAW3O,aAAe,CACxBvB,KAAM,UAGRkQ,EAAW1O,YAAc,aAEV0O,O,mFCrETK,EAAiB,SAAC,GAAD,MACrB/B,EADqB,EACrBA,SACA5W,EAFqB,EAErBA,UACAyV,EAHqB,EAGrBA,IACA+C,EAJqB,EAIrBA,SACAI,EALqB,EAKrBA,SACAC,EANqB,EAMrBA,OACA5F,EAPqB,EAOrBA,MACAzF,EARqB,EAQrBA,QACAsL,EATqB,EASrBA,WACA9S,EAVqB,EAUrBA,SACGgO,EAXkB,8HAarB,uCACEhU,UAAWqH,KAAU,6BAjBN,cAkBOyR,GADD,wBAjBN,YAiBM,uBAEmBxR,QAAQwR,IAF3B,wBAhBP,YAgBO,cAGSxR,QAAQkR,IAHjB,wBAhBP,YAgBO,WAIMlR,QAAQkG,IAJd,wBAhBP,YAgBO,cAKSlG,QAAQsR,IALjB,wBAhBP,YAgBO,YAMOtR,QAAQuR,IANf,wBAhBP,YAgBO,WAOMvR,QAAQ2L,IAPd,wBAhBP,YAgBO,cAQS3L,QAAQtB,IARjB,wBAhBP,YAgBO,aAS2B,mBAAZwH,IAA0BA,GATzC,GAUlBxN,GACHyV,IAAKA,GACDzB,GAEH4C,IAwDL+B,EAAe/O,YAAc,iBAEd+O,O,mFCvFTI,EAAarC,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CAC5B,yCACEhU,UAAWqH,IAJI,kBAImBrH,GAClC2W,IAAKA,GACD3C,GAEH4C,MAILmC,EAAWjC,UAAY,CAIrBF,SAAUG,OAKV/W,UAAWgX,UAGb+B,EAAWnP,YAAc,aAEVmP,O,4ECxBTC,EAAW,SAAC,GAAD,IAAGpC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACf,uCACEhU,UAAWqH,IAJI,gBAImBrH,IAC9BgU,GAEH4C,IAgBLoC,EAASpP,YAAc,WAERoP,O,4ECvBTC,EAAc,SAAC,GAAD,IAAGrC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CAClB,wCACEhU,UAAWqH,IAJI,mBAImBrH,IAC9BgU,GAEH4C,IAgBLqC,EAAYrP,YAAc,cAEXqP,O,4ECvBTC,EAAY,SAAC,GAAD,IAAGtC,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CAChB,wCACEhU,UAAWqH,IAJI,iBAImBrH,IAC9BgU,GAEH4C,IAgBLsC,EAAUtP,YAAc,YAETsP,O,mFCvBTC,EAAYzC,sBAAW,WAAyCC,GAAzC,IAAG3W,EAAH,EAAGA,UAAWoI,EAAd,EAAcA,KAAS4L,EAAvB,2CAC3B,yCACEhU,UAAWqH,IAJI,wBAImBrH,GAClC2W,IAAKA,EACLvO,KAAMA,GACF4L,OAIRmF,EAAUrC,UAAY,CAIpB9W,UAAWgX,SAKX5O,KAAM4O,UAGRmC,EAAUxP,aAAe,CACvBvB,KAAM,QAGR+Q,EAAUvP,YAAc,YAETuP,O,mFC1BTC,EAAe,SAAC,GAAD,MAEnBxC,EAFmB,EAEnBA,SACA5W,EAHmB,EAGnBA,UACAwN,EAJmB,EAInBA,QAEA6L,EANmB,EAMnBA,KACGrF,EAPgB,gEASnB,wCAGEhU,UAAWqH,IAfI,qBAeM,6BAdP,YAcO,aACQgS,GADR,wBAdP,YAcO,WAEM/R,QAAQkG,IAFd,GAGlBxN,IAECgU,GAEH4C,IAyCLwC,EAAaxP,YAAc,eAEZwP,O,sMCpDTE,EAAQ5C,sBAAW,WA4BtBC,GAAS,IA3BV4B,EA2BS,EA3BTA,UACAgB,EA0BS,EA1BTA,cACA3C,EAyBS,EAzBTA,SACA5W,EAwBS,EAxBTA,UACAwZ,EAuBS,EAvBTA,eACA/D,EAsBS,EAtBTA,IACA+C,EAqBS,EArBTA,SACAiB,EAoBS,EApBTA,UACA1T,EAmBS,EAnBTA,UACA6S,EAkBS,EAlBTA,SACAc,EAiBS,EAjBTA,SACAC,EAgBS,EAhBTA,SAgBS,IAfT7Q,UAeS,MAfJ8Q,IAAQC,WAeJ,EAdTrM,EAcS,EAdTA,QACA1F,EAaS,EAbTA,MACAgS,EAYS,EAZTA,QACA5G,EAWS,EAXTA,WACAlK,EAUS,EAVTA,OACAzC,EASS,EATTA,SACAwT,EAQS,EARTA,QACAhS,EAOS,EAPTA,YACA/B,EAMS,EANTA,SACAgU,EAKS,EALTA,cACA/Q,EAIS,EAJTA,cACAgR,EAGS,EAHTA,aACAC,EAES,EAFTA,qBACGlG,EACM,4UACiBtU,oBAAS,GAD1B,mBACFya,EADE,KACKC,EADL,OAEmB1a,mBAAS4H,QAAQ0M,EAAe/T,QAAUqH,QAAQ0M,EAAevM,eAFpF,mBAEFoR,EAFE,KAEMwB,EAFN,QAGqB3a,oBAAS,GAH9B,qBAGF4a,GAHE,MAGOC,GAHP,SAIyB7a,mBAAS8N,GAJlC,qBAIFgN,GAJE,MAISC,GAJT,MAMHC,GADWC,iBAAO7R,GACH8R,QAEfC,GAAc,SAAAlZ,GACbuR,IACCiH,GACFM,IAAe9Y,EAAEE,OAAOiZ,iBAAoBnZ,EAAEE,OAAOqE,WAAavE,EAAEE,OAAO5B,MAAM8a,OAAOza,QAGrF6Z,IAAUxY,EAAEE,OAAOqE,UAAavE,EAAEE,OAAO5B,MAAM8a,OAAOza,QACzDma,IAAa,IAGXN,GAAUxY,EAAEE,OAAOqE,UAAavE,EAAEE,OAAO5B,MAAM8a,OAAOza,QACxDma,QAAa7S,KAKnBpD,qBAAU,WACR6V,EAAU/S,QAAQ0M,EAAevM,eAAiBH,QAAQ0M,EAAe/T,UACxE,CAAC+T,EAAevM,aAAcuM,EAAe/T,QAEhDuE,qBAAU,WACRiW,GAAajN,KACZ,CAACA,IA0DJ,OACE,kBAAC,IAAD,eACExN,UAAWqH,IAAWrH,GACtByV,IAAKA,EACL+C,SAAUA,EACVI,SAAUA,EACVC,OAAQA,EACR5F,MAAOqH,GACPtU,SAAUA,EACVwH,QAASgN,IACLhB,GAEH1R,EAAQ,kBAAC,IAAD,CAAYgB,GAAIgR,EAAS/H,QAAS2I,IAAM5S,QAAsBF,EACvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACIG,IAAgBmS,EAAuB,kBAAC,IAAD,KAAYnS,QAA2BH,EAChF,kBAAC,IAAD,eACEoT,mBACE/R,GAAiBgR,EAAjB,wBACqBS,SACjB9S,EAEN8Q,aAAY5Q,OAAQF,EAAY2Q,EAChC0C,eAAcT,GACd1R,GAAI4R,GACJlC,SAAUA,EACVxP,OAlFS,SAAArH,GACjB4Y,IAAW,GACXM,GAAYlZ,GAEU,oBAAXqH,GACTA,EAAOrH,IA8ED4E,SA1EW,SAAA5E,GACnB0Y,EAA6B,KAAnB1Y,EAAEE,OAAO5B,OAEM,mBAAdua,IACTK,GAAYlZ,GAGdyY,GAAS,GACe,oBAAb7T,GACTA,EAAS5E,IAkEHoY,QA9DU,SAAApY,GAClB4Y,IAAW,GAEY,oBAAZR,GACTA,EAAQpY,IA2DFoG,YAAamS,EAAuBnS,OAAcH,EAClD5B,SAAUA,EACV2Q,IAAKA,GACD3C,KAINgG,GAAsC,mBAAdQ,KAA4BA,IAAalT,QAAQiS,GACrE,kBAAC,IAAD,CACAvZ,UAAWqH,IAAW,yBA5JlB,YA4JiB,YAC4B,mBAAdmT,IAA2BA,MAG7DjB,QAED3R,EAELgP,GAvEoB,WACzB,IAAIsE,EAAkB,KAqBtB,OApBIjB,GAAgBhR,KAClBiS,EACE,kBAAC,IAAD,CACEpS,GAAE,wBAAmB4R,IACrBrB,KAAOY,GAAgB3S,QAAQqS,IAAe1Q,GAAiB3B,QAAQvB,GACvEyH,QAASgN,KAGNA,IAAaF,IAAWL,GAAgB3S,QAAQqS,GAC7C,kBAAC,WAAD,KAAWD,EAAX,IAAsBC,QACtB/R,GAGU,IAAd4S,IAAsBvR,GAAiB3B,QAAQvB,GAC3C,kBAAC,WAAD,KAAW0T,EAAX,IAAsB,kBAAC,IAAD,cAAtB,IAA0D1T,QAC1D6B,IAKLsT,EAmDJC,OA0IP7B,EAAM3P,aAAe,CACnB4P,cAAe,kBAAC,IAAD,CAAMrV,KAAK,YAAYwQ,WAAW,QACjD+E,UAAW,kBAAC,IAAD,CAAMvV,KAAK,QAAQwQ,WAAW,SAG3C4E,EAAM1P,YAAc,QAEL0P,O,4EChUT8B,EAAa,SAAC,GAAD,IAAGxE,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACjB,uCACEhU,UAAWqH,IAJI,kBAImBrH,IAC9BgU,GAEH4C,IAgBLwE,EAAWxR,YAAc,aAEVwR,O,4ECvBTC,EAAW,SAAC,GAAD,IAAGzE,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACf,4CACEhU,UAAWqH,IAJI,eAImBrH,IAC9BgU,GAEH4C,IAgBLyE,EAASzR,YAAc,WAERyR,O,mFCvBTC,EAAO5E,sBAAW,SAACT,EAAOU,GAAS,IAErCC,EAIEX,EAJFW,SACA5W,EAGEiW,EAHFjW,UACAoI,EAEE6N,EAFF7N,KACG4L,EALiC,YAMlCiC,EANkC,iCAQhCY,EAAe,YAATzO,EAAqB,KAAO,KAExC,OACE,kBAACyO,EAAD,eACE7W,UAAWqH,IAdE,WAcQ,yBAdR,WAcQ,aACAe,GAASd,QAAQc,IACnCpI,GACH2W,IAAKA,GACD3C,GAGFuH,WAASlW,IAAIuR,GAAU,SAAA4E,GACrB,OAAIA,EACKC,uBAAaD,EAAO,CACzBxb,UAAWqH,IAAWmU,EAAMvF,MAAMjW,UAAb,UAxBhB,WAwBgB,YAIlBwb,SAwBjBF,EAAK1R,YAAc,OAEJ0R,O,oGCmBTI,EAAU,SAAAzF,GAAU,IAChB0F,EAAiH1F,EAAjH0F,aAAcC,EAAmG3F,EAAnG2F,OAAQC,EAA2F5F,EAA3F4F,aAAcC,EAA6E7F,EAA7E6F,cAAeC,EAA8D9F,EAA9D8F,aAAcC,EAAgD/F,EAAhD+F,WAAYrc,EAAoCsW,EAApCtW,gBAAoBsc,EADlF,YACkGhG,EADlG,wGAEvB,OACE,yBAAKjW,UAAWqH,IAAW,sBAAD,gCAA8CuU,GAAUE,KAChF,wCACMC,EACAJ,EAAa,CACf3b,UAAWqH,IA/EF,cA+EyBwU,GAClClF,IAAKqF,KAGNJ,GAAUjc,GAAmBA,EAAgBmD,cAAgBnD,EAAgBmD,aAAaxC,OAjFzE,SAAC2V,EAAOtW,GAAqB,IAcjDuc,EAZFC,EAQElG,EARFkG,eACAC,EAOEnG,EAPFmG,aACAC,EAMEpG,EANFoG,WACAC,EAKErG,EALFqG,eACAC,EAIEtG,EAJFsG,gBACAC,EAGEvG,EAHFuG,qBACApU,EAEE6N,EAFF7N,KACAK,EACEwN,EADFxN,aAGIgU,EAAmBxG,EAAMwG,iBAAmB,GAAK,EAAIxG,EAAMwG,iBACzD5Z,EAAwClD,EAAxCkD,QAASC,EAA+BnD,EAA/BmD,aAAcC,EAAiBpD,EAAjBoD,aAgBzB2Z,GAZJR,EADW,SAAT9T,GAAmBiU,GAAcA,EAAWtB,OAC5B4B,IAAaC,mBAC7BP,EACGtB,OACAjH,QAAQ,SAAU,KAClB5R,cACHvC,EACAwc,GAGgB,CAAEU,MAAO/Z,EAAeA,EAAaxC,OAAS,EAAGwc,WAAYha,IAG7C+Z,MAC9BE,EAAiBb,EAAgBY,WACjCE,EAAkBd,EAAgBY,WAAaZ,EAAgBY,WAAWL,GAAoB,KACpG,OAAoB,IAAhBC,GACFH,GAAgB,GACT,OAETA,GAAgB,GAETQ,EAAe1X,KAAI,SAACvE,EAAMmc,GAC/B,IAAMC,EAAazU,GAAgBA,EAAa5F,KAAa/B,EAAK+B,GAC5Dsa,EAAcH,GAAmBA,EAAgBna,KAAa/B,EAAK+B,GACnEua,EAAY,CAChBpd,UAAWqH,IAAW,GAAD,OA5CR,cA4CQ,kCA5CR,cA4CQ,mBAEiB6V,IAAeV,GAFhC,yBA5CR,cA4CQ,oBAGkBW,GACrC,iCAMJ,OAHID,IACFE,EAAUzG,IAAM2F,GAGhB,wCACMF,EAAa,CACfa,QACAnc,OACAkH,IAAKlH,EAAK+B,KAERua,GAEJ,0BAAMpd,UAAS,UA/DJ,cA+DI,qBACZ+C,EAAajC,GACboc,IAAeV,EAAuB,kBAAC,IAAD,CAAMtY,KAAK,YAAYwQ,WAAW,SAAY,WAkBa2I,CAAkBpB,EAAatc,GAAmB,QAwB9J+b,EAAQ9R,YAAc,UAEP8R,O,iCClHf,WA4Be4B,IAlBS,SAACC,EAAmB5d,EAAiB6d,GAC3D,IAAMlB,EAAiB3B,iBAAO,MACxBqB,EAAarB,iBAAO,MAa1B,OAZAnW,qBAAU,WACJwX,EAAWpB,SAAW0B,EAAe1B,SAA4B,SAAjB4C,IAC9CD,GAAqB5d,GAAmBA,EAAgBmD,cAC5CnD,EAAgBmD,aAAa2a,WACzC,SAAA3c,GAAI,OAAIA,EAAKnB,EAAgBkD,WAAa0a,EAAkB5d,EAAgBkD,aAEjE,IACXmZ,EAAWpB,QAAQ8C,WAAapB,EAAe1B,QAAQ+C,eAKxD,CAAErB,iBAAgBN,gB,iCCzB3B,WA8Be4B,IApBW,SAACC,EAAgBC,GACzC,IAAMC,EAAyBC,uBAAY,SAACC,EAAQ1P,GAClD,SACe3G,IAAT2G,EACFuP,EAAyBG,EAAO7V,QAEhC0V,EAAyBG,EAAO7V,MAAMmG,GAExC,MAAO2P,GACP,MAAM,IAAIC,MAAJ,iBAAoBF,EAAO7V,KAA3B,0BAEP,CAAC0V,IAEJtZ,qBAAU,WACsB,oBAAnBqZ,GACTA,EAAeE,KAEhB,CAACF,EAAgBE,EAAwBD,M,4ECrBxCM,EAAS,SAAC,GAAD,IAAGxH,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACb,0CACEhU,UAAWqH,IAJI,aAImBrH,IAC9BgU,GAEH4C,IAgBLwH,EAAOxU,YAAc,SAENwU,O,mKCfFC,EACL,OADKA,EAEH,SAFGA,EAGL,OAKFC,EAAW3a,gBAAK,YAmBf,IAlBL3D,EAkBI,EAlBJA,UACAnB,EAiBI,EAjBJA,cACA2a,EAgBI,EAhBJA,eACAtR,EAeI,EAfJA,YACA2V,EAcI,EAdJA,eACA9X,EAaI,EAbJA,UACAoW,EAYI,EAZJA,eACAnd,EAWI,EAXJA,WACAuf,EAUI,EAVJA,eACArf,EASI,EATJA,YACAC,EAQI,EARJA,cACAqf,EAOI,EAPJA,aACAvb,EAMI,EANJA,kBACAtD,EAKI,EALJA,gBACAsJ,EAII,EAJJA,cACAgR,EAGI,EAHJA,aACA7R,EAEI,EAFJA,KACG/I,EACC,iRACJ,GAAgC,mBAArB8c,IACT,MAAM,IAAIgC,MAAM,0CAFd,MAK8Cze,mBAASwI,GAA4B,MALnF,mBAKGqV,EALH,KAKsBkB,EALtB,KAMEC,EAAW/D,iBAAO,MANpB,EAOgCjb,mBAASqG,GAPzC,mBAOG4Y,EAPH,KAOeC,EAPf,OAQgClf,mBAASwI,EAAcA,EAAYjI,MAAQ,IAR3E,mBAQGoc,EARH,KAQewC,EARf,OASoCnf,oBAAS,GAT7C,mBASGoc,EATH,KASkBgD,EATlB,OAU4Cpf,oBAAS,GAVrD,mBAUGqf,GAVH,KAUqBC,GAVrB,QAWmC1B,YAAgBC,EAAmB5d,EAAiByI,GAAnFkU,GAXJ,GAWIA,eAAgBN,GAXpB,GAWoBA,WAGlB8B,GAA2B,GAC3BmB,GAAa,CAAC,iBAAkB,YAAa,WAAY,aAAc,uBAC7ErB,YAAkBC,EAAgBC,IAElCtZ,qBAAU,WAGJoa,EAFAG,IAAoBhZ,EAClBgZ,IAAoBR,EACRA,EACLxY,GAAaA,IAAc4Y,EACtB5Y,OAEA6B,OAGFA,GAGdkX,GADEC,MAMH,CAAChZ,EAAWwY,EAAgBQ,KAG/B,IAAIG,IAAgB,EAEhBhX,GAAevI,GAAmBA,EAAgBmD,eACpDoc,GAAevf,EAAgBmD,aAAa2a,WAC1C,SAAA3c,GAAI,OAAIA,EAAKnB,EAAgBkD,WAAaqF,EAAYvI,EAAgBkD,aAI1E,IAAMsc,GAAkB,SAAAxd,GACK,oBAAhBzC,IACLqe,EACFre,EAAYyC,EAAG4b,EAAkBtd,OAEjCf,EAAYyC,KAKZyd,GAAoB,SAAAzd,GACxBkd,EAAcld,EAAEE,OAAO5B,OACM,oBAAlBd,GACTA,EAAcwC,EAAGA,EAAEE,OAAO5B,QAIxBof,GAAmB,SAAA1d,GACnB+c,EAAS9D,SACX8D,EAAS9D,QAAQ0E,kBAAkB,EAAG3d,EAAEE,OAAO5B,MAAMK,QAE3B,oBAAjBke,GACTA,EAAa7c,EAAGA,EAAEE,OAAO5B,QAUvBsf,GAAkB,SAAAC,IANC,SAAAA,GACnBA,GACFX,EAAcW,EAAUvf,OAK1Bwf,CAAiBD,GACgB,oBAAtBvc,GACTA,EAAkBuc,IAIhBE,GAAgB,SAAAC,GAChBZ,KAAqBY,GACvBX,GAAoBW,IA0DxB,OACE,kBAAC,IAAD,CACEC,wBAAyBV,GACzBW,kBAAmB3X,EAAcA,EAAYjI,MAAQ,GACrDoc,WAAYA,EACZyD,aAAc,SAAAhf,GAAI,OAAKA,EAAOA,EAAKb,MAAQ,IAC3CsG,SAAUgZ,GACVQ,aA/CiB,SAACC,EAAOC,GAC3B,OAAQA,EAAQ7X,MACd,KAAK8X,IAAUC,iBAAiBC,YAC9B,IAAIC,EAAkB,eAAQJ,GAa9B,OAZI7X,IAASiW,GAAsBjW,IAASiW,EACtC2B,EAAMvX,eACR4X,EAAkB,eAAQA,EAAR,CAA4B5X,aAAc,OAC5DgW,EAAqB,OAEdrW,IAASiW,IACdM,IAAeJ,IACjB8B,EAAkB,eAAQA,EAAR,CAA4B5X,aAAc,OAC5DgW,EAAqB,OAEvB4B,EAAkB,eAAQA,EAAR,CAA4B5D,iBAAkB,KAE3D4D,EACT,KAAKH,IAAUC,iBAAiBG,YAChC,KAAKJ,IAAUC,iBAAiBI,UAC9B,IAAIC,EAAgB,eAAQP,GAS5B,OARK7X,IAASiW,IAAyC,IAAnB4B,EAAQrE,SACtC+C,IAAeJ,EACjBiC,EAAgB,eAAQA,EAAR,CAA0BnE,WAAY2D,EAAM3D,aACnDkB,IAAsBiD,EAAiB/X,eAChD+X,EAAgB,eAAQA,EAAR,CAA0B/X,aAAc8U,IACxDgC,GAAgBhC,KAGbiD,EACT,KAAKN,IAAUC,iBAAiBM,cAC9B,OAAO,eACFR,EADL,CAEExX,aAAc8U,IAGlB,QACE,OAAO0C,IAYTS,aAvDqB,WACnBnD,GAAqBA,EAAkBtd,QAAUoc,GACnDyB,GAAyB6C,WAAWpD,IAsDpCqD,qBA/D4B,SAAAve,GAI9B,OAHI+F,IAASiW,GAAsBhc,EAAOuZ,QACxC6C,EAAqBpc,EAAO2a,iBAEvB3a,EAAOuZ,QAAUvZ,EAAO2a,gBAAkB3a,EAAO2a,gBAAgB/c,MAAQ,MA6D7E,YAA2E,IAAxE4G,EAAuE,EAAvEA,cAAega,EAAwD,EAAxDA,qBAAsBjF,EAAkC,EAAlCA,OAAWkF,EAAuB,iEACzE,GAAqD,IAAjD/Z,OAAOC,KAAK8W,IAA0Bxd,OAAc,CACtDwd,GAAyBc,cAAgBA,EADa,2BAE1D,YAAqBK,GAArB,+CAAiC,CAAC,IAAvBhB,EAAsB,QAC3BH,GAAyBG,GAAU6C,EAAiB7C,IAHA,mFAMxD,OACE,yCACMzE,EADN,CAEExZ,UAAWqH,IAAW,GAAD,OApMd,eAoMc,cAA4BrH,EAAWnB,EAAcgJ,kBAE1E,kBAAC,IAAD,iBACMhB,EAAc,CAChBmC,OAAQmW,GACR5Y,SAAU6Y,GACVrF,QAASsF,KAEPrgB,EANN,CAOEgB,UAAWqH,IAAW,GAAD,OA7MhB,eA6MgB,kBAAgCxI,EAAckiB,mBACnEhb,UAAW4Y,EACXnR,QAASlG,QAAQqX,GACjB7E,QAASjT,IAAgB,mBACzBqM,YAAU,EACVyD,IAAK+H,EACLzV,cAAe3B,QAAQqX,IAAe1V,EACtCgR,aAAc3S,QAAQtI,EAAW2a,WAAaM,EAC9C7R,KAAK,SAEL,kBAAC,IAAD,eACEmQ,UAAWqD,EAAS,WAAa,UAC7BiF,EAAqB,IAF3B,CAGEpI,SAAS,aACTpC,SAAS,OAET,kBAAC,IAAD,CAAMnS,KAAM0X,EAAS,iBAAmB,eAAgBlH,WAAW,UAGvE,kBAAC,IAAD,iBACMoM,EACAzhB,EAFN,CAGE8c,eAAgBA,EAChBN,aAAchd,EAAcgd,aAC5BC,cAAeA,EACfQ,eAAgB,SAAA0E,GACd1E,GAAe1B,QAAUoG,GAE3BhF,WAAY,SAAAiF,GACVjF,GAAWpB,QAAUqG,GAEvBrF,OAAQA,EACRW,gBAAiBmD,GACjB/f,gBAAiBA,EACjByI,KAAMA,YAvOI,SAACe,EAAWC,GAAZ,OAA0BC,KAAKC,UAAUH,KAAeE,KAAKC,UAAUF,MAgP/FkV,EAAS3U,aAAe,CACtB9K,cAAe,CACbgJ,eAAgB,KAChBkZ,kBAAmB,KACnBlF,aAAc,MAEhBrC,eAAgB,CACdlI,MAAO,CACLC,QAAS,QACT2P,SAAU,aAGdnb,UAAW,GACXoW,eAAgBQ,IAAaR,eAC7Bnd,WAAY,CACV8I,MAAO,QACP5D,KAAM,YAERqa,eAAgB,yCAChBnW,KAAM,UAyCRkW,EAAS1U,YAAc,WAER0U,O,0FC5TT6C,EAAczK,sBAAW,WAO5BC,GAP4B,MAC7BC,EAD6B,EAC7BA,SACA5W,EAF6B,EAE7BA,UACAohB,EAH6B,EAG7BA,OACAC,EAJ6B,EAI7BA,OACAC,EAL6B,EAK7BA,MACGtN,EAN0B,yEAQ7B,uCACEhU,UAAWqH,IAAW,GAAD,OAXN,WAWM,0CAXN,WAWM,qBACQ+Z,GADR,OACiBC,EAAS,WAAa,IAAO/Z,QAAQ8Z,IADtD,wBAXN,WAWM,qBAEQE,GAAUha,QAAQga,IAF1B,uCAGSha,QAAQga,IAHjB,GAIlBthB,GACH2W,IAAKA,GACD3C,GAEH4C,MAILuK,EAAYrK,UAAY,CAItBF,SAAU2K,UAKVvhB,UAAWgX,SAKXoK,OAAQtJ,gBAAM,CAAC,cAAe,UAK9BoJ,SAAUpJ,gBAAM,CAAC,OAAQ,UAKzBuJ,OAAQxJ,OAIRyJ,MAAOxJ,gBAAM,CAAC,SAAU,QAAS,QAAS,QAAS,aAGrDqJ,EAAYvX,YAAc,cAEXuX,O,iICnDTK,EAAkC,SAAC,GAclC,IAbL3iB,EAaI,EAbJA,cACAgf,EAYI,EAZJA,eACArE,EAWI,EAXJA,eACAzT,EAUI,EAVJA,UAEA/G,EAQI,EARJA,WACA6B,EAOI,EAPJA,iBACA3B,EAMI,EANJA,YACAC,EAKI,EALJA,cACAqf,EAII,EAJJA,aACAvb,EAGI,EAHJA,kBACAtD,EAEI,EAFJA,gBACGN,EACC,oMAC8CK,mBAAS,IADvD,mBACG6d,EADH,KACsBkB,EADtB,KAEEC,EAAW/D,iBAAO,MAFpB,EAGgCjb,mBAASqG,GAHzC,mBAGG4Y,EAHH,KAGeC,EAHf,OAIoClf,oBAAS,GAJ7C,mBAIGoc,EAJH,KAIkBgD,EAJlB,OAK4Cpf,oBAAS,GALrD,mBAKGqf,EALH,KAKqBC,EALrB,OAMmC1B,YAAgBC,EAAmB5d,GAAmB,IAArF2c,EANJ,EAMIA,eAAgBN,EANpB,EAMoBA,WAElB8B,EAA2B,GAC3BmB,EAAa,CAAC,iBAAkB,YAAa,WAAY,aAAc,uBAC7ErB,YAAkBC,EAAgBC,GAGlCtZ,qBAAU,WAENoa,EADE7Y,GAGY,MAEf,CAACA,IAEJvB,qBAAU,WACJma,GAGAC,EADE7Y,GAGY,IAIhB+Y,GADEC,KAKH,CAAChZ,EAAW4Y,EAAYI,IAE3B,IAAMI,EAAkB,SAAAxd,GACC,oBAAhBzC,GAA8BA,EAAYyC,EAAGA,EAAEE,OAAO5B,QAGzDmf,EAAoB,SAAAzd,GACC,oBAAlBxC,GAAgCA,EAAcwC,EAAGA,EAAEE,OAAO5B,QAG7Dof,EAAmB,SAAA1d,GACC,oBAAjB6c,GAA+BA,EAAa7c,EAAGA,EAAEE,OAAO5B,QAS3Dyf,EAAgB,SAAAC,GAChBZ,IAAqBY,GACvBX,EAAoBW,IAIxB,OACE,kBAAC,IAAD,CACEE,kBAAkB,GAClB4B,oBAAqBlE,EACrBuC,aAAcjf,EACd0F,SAjBoB,SAAAiZ,GACtBf,EAAqBe,GAAwB,MAC7CZ,EAAc,IACe,oBAAtB3b,GAAoCA,EAAkBuc,MAgB1D,YAAqD,IAAlD3Y,EAAiD,EAAjDA,cAAe+U,EAAkC,EAAlCA,OAAWkF,EAAuB,0CACnD,GAAqD,IAAjD/Z,OAAOC,KAAK8W,GAA0Bxd,OAAc,CACtDwd,EAAyBc,cAAgBA,EADa,2BAEtD,YAAqBK,EAArB,+CAAiC,CAAC,IAAvBhB,EAAsB,QAC/BH,EAAyBG,GAAU6C,EAAiB7C,IAHA,mFAMxD,OACE,yCAASzE,EAAT,CAAyBxZ,UAAWqH,IAAW,yBAA0BxI,EAAcgJ,kBACrF,kBAAC,IAAD,iBACMhB,EAAc,CAChBmC,OAAQmW,EACR5Y,SAAU6Y,EACVrF,QAASsF,IAEPrgB,EANN,CAOEgB,UAAWqH,IAAW,6BAA8BxI,EAAckiB,mBAClEhb,UAAW4Y,EACXhI,IAAK+H,EACLlR,QAASlG,QAAQqX,GACjB7E,QAASjT,IAAgB,mBACzBoC,cAAe3B,QAAQqX,GACvB1E,aAAc3S,QAAQtI,EAAW2a,UACjCvR,KAAK,UAEP,kBAAC,IAAD,iBACM0Y,EACAzhB,EAFN,CAGEwc,aAAchd,EAAcgd,aAC5BC,cAAeA,EACfQ,eAAgB,SAAA0E,GACd1E,EAAe1B,QAAUoG,GAE3BhF,WAAY,SAAAiF,GACVjF,EAAWpB,QAAUqG,GAEvBrF,OAAQA,EACRW,gBAAiBmD,EACjBlD,sBAAoB,EACpB7c,gBAAiBA,UAyC/B6hB,EAAgC7X,aAAe,CAC7C9K,cAAe,CACbgJ,eAAgB,KAChBkZ,kBAAmB,KACnBlF,aAAc,MAEhB9V,UAAW,GACX/G,WAAY,CACV8I,MAAO,iBACP5D,KAAM,aAIVsd,EAAgC5X,YAAc,kCAE/B4X,O,4ECpLTE,EAAO,SAAC,GAAD,IAAG9K,EAAH,EAAGA,SAAU5W,EAAb,EAAaA,UAAcgU,EAA3B,+CACX,uCACEhU,UAAWqH,IAJI,WAImBrH,IAC9BgU,GAEH4C,IAgBL8K,EAAK9X,YAAc,OAEJ8X,O,8ECPA,SAAS9a,IACtB,IAAIqP,EAAQ0L,UAAUrhB,OAAS,QAAsBsH,IAAjB+Z,UAAU,GAAmBA,UAAU,GAAK,GAC5EC,EAAe3L,EAAM7P,MACrBA,OAAyB,IAAjBwb,GAAkCA,EAC1Ctb,EAAO2P,EAAM3P,KACbC,EAAW0P,EAAM1P,SACjBsb,EAAwB5L,EAAM6L,gBAC9BA,OAA4C,IAA1BD,EAAmC,IAAMA,EAC3DE,EAAwB9L,EAAMzP,eAC9BA,OAA2C,IAA1Bub,GAA2CA,EAC5D9hB,EAAQgW,EAAMhW,MACdye,EAAW,iBAAO,MAClBsD,EAAW,iBAAO,MAElBC,EAAY,mBAAS,CACvBC,2BAAuBta,EACvBua,eAAgB,YAAMliB,GAAS,GAAKA,EAAMiO,WAC1CnG,iBAAaH,IAEXwa,EAAa,IAAeH,EAAW,GACvCjC,EAAQoC,EAAW,GACnBC,EAAWD,EAAW,GAEtBE,EAAiB,WACnB,OAAO,YAA2B,CAChClc,MAAOA,EACPmc,aAAc7D,EAAS9D,QACvBtU,KAAMA,EACNwb,gBAAiBA,EACjBtb,eAAgBA,KA0EpB,OAtEA,qBAAU,WACRwb,EAASpH,QAAU0H,IAEnB,IAAIE,EAAwBR,EAASpH,QAAQ6H,SACzCP,EAAwBM,EAAsBN,sBAC9CC,EAAiBK,EAAsBL,eACvCpa,EAAcya,EAAsBE,oBAExCL,EAAS,CACPH,sBAAuBA,EACvBC,eAAgBA,EAChBpa,YAAaA,MAEd,CAAC3B,EAAOE,EAAMwb,IACjB,qBAAU,WACR,GAAIE,EAASpH,QAAS,CACpB,IAAI+H,EAAyBX,EAASpH,QAAQ6H,OAAOxiB,GACjDiiB,EAAwBS,EAAuBT,sBAC/CC,EAAiBQ,EAAuBR,eACxCpa,EAAc4a,EAAuBD,oBAEzCL,EAAS,CACPH,sBAAuBA,EACvBC,eAAgBA,EAChBpa,YAAaA,OAGhB,CAAC9H,IACJ,qBAAU,WACR,IAAIye,EAAS9D,QAkBX,MAAM,IAAIuD,MAAM,KAjBhB,KAAI,YAAQ7X,IAASA,EAAKhG,OAAS,GAcjC,MAAM,IAAI6d,MAAM,KAbhB6D,EAASpH,QAAU0H,IAEnB,IAAIM,EAAyBZ,EAASpH,QAAQ6H,OAAOxiB,GACjDiiB,EAAwBU,EAAuBV,sBAC/CC,EAAiBS,EAAuBT,eACxCpa,EAAc6a,EAAuBF,oBAEzCL,EAAS,CACPH,sBAAuBA,EACvBC,eAAgBA,EAChBpa,YAAaA,MAQlB,IAqBI,CACLlB,cAAe,CACbN,SAjBJ,SAAsB5E,GACpB,IAAIkhB,EAAyBb,EAASpH,QAAQ6H,SAK1CK,EAAW,CACbZ,sBAL0BW,EAAuBX,sBAMjDC,eALmBU,EAAuBV,eAM1Cpa,YALgB8a,EAAuBH,qBAOzCL,EAASS,GACW,oBAAbvc,GAA2BA,EAAS5E,EAAGmhB,IAM5CnM,IAAK+H,EACLze,MAAO+f,EAAMmC,gBAEfY,KAAM,CACJb,sBAAuBlC,EAAMkC,sBAC7Bna,YAAaiY,EAAMjY,cCrIzB","file":"static/js/15.be76ead8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { arrayOf, bool, func, number, shape, string } from 'prop-types';\nimport { constants as addressCommonConstants, utilities as addressCommonUtils } from '@visa/ui-utils/lib/js/address';\n// import { GOOGLE_ADDRESS_SUGGESTION_SHORT_NAME_FIELDS } from '../constants';\nimport FreeformCombobox from '../../combobox-freeform-manual-selection';\n\nconst {\n  googleAddressSuggestConstants\n} = addressCommonConstants;\n\n\nconst {\n  googleAddressUtils\n} = addressCommonUtils;\n\nlet placesService;\nlet service;\nlet sessionToken;\n\n/* eslint-disable no-undef */\n// the google object will be undefined until instantiated\nconst googleObject = setInterval(() => {\n  if (typeof google !== 'undefined') {\n    service = new google.maps.places.AutocompleteService();\n    placesService = new google.maps.places.PlacesService(document.createElement('div'));\n    sessionToken = new google.maps.places.AutocompleteSessionToken();\n    clearInterval(googleObject);\n  }\n}, 10);\n// Ends Google Maps API loading\n/* eslint-enable no-undef */\n\nconst GoogleAddressSuggestCombobox = ({\n  comboboxClass,\n  countryCode,\n  googleAddressSuggestSetupOptions,\n  inputProps,\n  onGoogleAddressSuggestSelection,\n  onInputBlur,\n  onInputChange,\n  templateName,\n  ...restProps\n}) => {\n  const {\n    // customItemToStringFunc,\n    fieldMappingForCountry,\n    googleAddressSuggestAPIKey,\n    positionOfCommaThatFollowsTriggeringFieldAddressInfo,\n    suggestionShortNameArray\n  } = googleAddressSuggestSetupOptions;\n\n  const [optionsTemplate, setOptionsTemplate] = useState(null);\n\n  googleAddressUtils.loadGoogleAddressScript(googleAddressSuggestAPIKey);\n\n  const itemToStringFunc = item => {\n    let valueToInsert = '';\n    if (item) {\n      const splitValueBasedOnCommaPosition =\n        item.value.split(\n          googleAddressSuggestConstants.SHORTENED_SELECTED_ITEM_VALUE_CHAR\n        )[positionOfCommaThatFollowsTriggeringFieldAddressInfo];\n\n      const splitValueSplitBySpaces = splitValueBasedOnCommaPosition.split(' ');\n      const splitValueSplitBySpacesEndingData = splitValueSplitBySpaces[splitValueSplitBySpaces.length - 1];\n      const splitValueSplitBySpacesEndingDataBeginsWithNumber =  Number(splitValueSplitBySpacesEndingData.charAt(0)) > -1;\n      const splitValueSplitBySpacesEndingDataEndsWithNumber =\n        Number(splitValueSplitBySpacesEndingData.charAt(splitValueSplitBySpacesEndingData.length - 1)) > -1;\n\n      valueToInsert = splitValueBasedOnCommaPosition;\n\n      if (\n        splitValueSplitBySpacesEndingDataBeginsWithNumber ||\n        splitValueSplitBySpacesEndingDataEndsWithNumber\n      ) {\n        splitValueSplitBySpaces.splice(-1);\n        valueToInsert = splitValueSplitBySpaces.join(' ');\n      }\n    }\n\n    return valueToInsert;\n  };\n\n  const getFieldMappingToUse = () => {\n    const fieldMappingToUse = fieldMappingForCountry ?\n      fieldMappingForCountry :\n      googleAddressUtils.getGoogleAddressSuggestionMapping(templateName);\n\n    return fieldMappingToUse;\n  };\n\n  const renderSuggestion = suggestion => <span className=\"address-suggestion\">{suggestion.value}</span>;\n\n  let googlePredictions = [];\n  let convertedSuggestionAddressModel = {};\n\n  const mapToField = components => {\n    if (!components.length) {\n      return;\n    }\n\n    const suggestionFieldMapping = getFieldMappingToUse();\n    const suggestionShortNameFields = suggestionShortNameArray ?\n      suggestionShortNameArray :\n      googleAddressSuggestConstants.GOOGLE_ADDRESS_SUGGESTION_SHORT_NAME_FIELDS;\n\n    const suggestionFieldInfo = {\n      components,\n      mapping: suggestionFieldMapping,\n      shortNameFields: suggestionShortNameFields\n    };\n\n    convertedSuggestionAddressModel = googleAddressUtils.getConvertedAddress(suggestionFieldInfo);\n\n    typeof onGoogleAddressSuggestSelection === 'function' && onGoogleAddressSuggestSelection(convertedSuggestionAddressModel);\n  };\n\n  const onInputFieldChange = e => {\n    const val = e.target.value;\n    const len = val.length;\n\n    if (typeof service !== 'undefined' && len) {\n      service.getPlacePredictions({\n        componentRestrictions: { country: countryCode.toLowerCase() },\n        input: val,\n        sessionToken\n      }, (predictions, status) => {\n        /* eslint-disable no-undef */\n        if (status !== google.maps.places.PlacesServiceStatus.OK) {\n          return;\n        }\n        /* eslint-enable no-undef */\n\n        googlePredictions = [];\n\n        predictions.forEach(prediction => {\n          googlePredictions.push({\n            place_id: prediction.place_id,\n            value: prediction.description\n          });\n        });\n\n        setOptionsTemplate({\n          itemKey: 'value',\n          optionValues: googlePredictions,\n          renderOption: renderSuggestion,\n          searchIncludeFields: ['value']\n        });\n      });\n    }\n\n    typeof onInputChange === 'function' && onInputChange(e);\n  };\n\n  const onSelectionChange = ({ place_id }) => {\n    /* eslint-disable no-undef */\n    if (place_id) {\n      placesService.getDetails({\n        fields: ['address_components'],\n        placeId: place_id,\n        sessionToken\n      }, (place, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          mapToField(place.address_components);\n        }\n      });\n\n      sessionToken = new google.maps.places.AutocompleteSessionToken();\n      /* eslint-enable no-undef */\n    }\n  };\n\n  return (\n    <FreeformCombobox\n      comboboxClass={comboboxClass}\n      inputProps={inputProps}\n      itemToStringFunc={itemToStringFunc}\n      onInputBlur={onInputBlur}\n      onInputChange={onInputFieldChange}\n      onSelectionChange={onSelectionChange}\n      optionsTemplate={optionsTemplate}\n      {...restProps}\n    />\n  );\n};\n\nGoogleAddressSuggestCombobox.propTypes = {\n  comboboxClass: shape({\n    containerClass: string.isRequired\n  }).isRequired,\n  countryCode: string.isRequired,\n  googleAddressSuggestSetupOptions: shape({\n    customItemToStringFunc: func,\n    enableGoogleAddressSuggest: bool.isRequired,\n    fieldMappingForCountry: shape({}),\n    googleAddressSuggestAPIKey: string.isRequired,\n    googleAddressSuggestCountryCodeExcludedCountries: arrayOf(string),\n    onGoogleAddressSuggestSelection: func,\n    positionOfCommaThatFollowsTriggeringFieldAddressInfo: number.isRequired,\n    suggestionShortNameArray: arrayOf(string),\n    triggeringField: string.isRequired\n  }),\n  inputProps: shape({\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool\n  }).isRequired,\n  onGoogleAddressSuggestSelection: func.isRequired,\n  onInputBlur: func.isRequired,\n  onInputChange: func.isRequired,\n  templateName: string.isRequired\n};\n\nexport default GoogleAddressSuggestCombobox;\n","import React, { Fragment, memo, useEffect, useState } from 'react';\nimport { arrayOf, bool, func, number, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { constants as addressCommonConstants, utilities as addressCommonUtils } from '@visa/ui-utils/lib/js/address/';\nimport { useTextMask } from '@visa/ui-utils/lib/js/text-mask/react';\nimport Input from '../../input';\nimport Combobox from '../../combobox';\nimport FormControl from '../../form-control';\nimport GoogleAddressSuggestCombobox from './GoogleAddressSuggestCombobox';\nimport {\n  FORM_CONTROL_CLASSNAME\n  // SPLIT_FIELD_BASE_CLASSNAME\n} from '../constants';\n\nconst { addressPropTypes } = addressCommonConstants;\nconst { getTemplateDefaults, mergeDefaultsOverrides } = addressCommonUtils;\n\nconst preventRerender = (prevProps, nextProps) => JSON.stringify(prevProps) === JSON.stringify(nextProps);\n\nconst AddressFields = memo(({\n  address,\n  countryCode,\n  googleAddressSuggestSetupOptions,\n  onAddressChange,\n  // onCountryChange,\n  onFieldBlur,\n  templateOptions\n}) => {\n  const [mergedAddress, setMergedAddress] = useState(address);\n  const [addressTemplate] = useState(getTemplateDefaults(templateOptions.name, templateOptions.fields));\n  let inputMaskingByField = {};\n\n  const {\n    enableGoogleAddressSuggest,\n    googleAddressSuggestCountryCodeExcludedCountries,\n    onGoogleAddressSuggestSelection,\n    triggeringField\n  } = googleAddressSuggestSetupOptions;\n\n  useEffect(() => {\n    setMergedAddress(address);\n  }, [address]);\n\n  const handleAddressChange = e => {\n    const field = e.target.name;\n    const value = e.target.value;\n    const fieldObj = { [field]: value };\n    const newAddressInfo = { ...mergedAddress, ...fieldObj };\n    setMergedAddress(newAddressInfo);\n    if (typeof onAddressChange === 'function') {\n      onAddressChange(e);\n    }\n  };\n\n  const handleFieldBlur = e => {\n    if (typeof onFieldBlur === 'function') {\n      onFieldBlur(e);\n    }\n  };\n\n  const handleGoogleAddressSuggestSelection = addressObj => {\n    const addressMergedWithSuggestion = { ...address, ...addressObj };\n\n    setMergedAddress(addressMergedWithSuggestion);\n\n    typeof onGoogleAddressSuggestSelection === 'function' && onGoogleAddressSuggestSelection(addressObj);\n  };\n\n  // const findSelectedItem = (options, selectedItem) => options.find(item => item.value === selectedItem);\n\n  /* eslint-disable react/prop-types */\n  const renderGenericCombobox = ({\n    additionalHtmlProps,\n    comboboxClass,\n    comboboxOptionsTemplate,\n    defaultItem,\n    inputProps,\n    key,\n    onComboboxSelect\n  }) => (\n    <Combobox\n      comboboxClass={comboboxClass}\n      defaultItem={defaultItem}\n      inputProps={inputProps}\n      key={key}\n      onInputBlur={handleFieldBlur}\n      onInputChange={handleAddressChange}\n      onSelectionChange={onComboboxSelect}\n      optionsTemplate={comboboxOptionsTemplate}\n      type={'auto'}\n      {...additionalHtmlProps}\n    />\n  );\n\n  const renderGoogleAddressSuggestCombobox = ({\n    additionalHtmlProps,\n    comboboxClass,\n    countryCode,\n    inputProps,\n    key\n  }) => (\n    <GoogleAddressSuggestCombobox\n      comboboxClass={comboboxClass}\n      countryCode={countryCode}\n      googleAddressSuggestSetupOptions={googleAddressSuggestSetupOptions}\n      inputProps={inputProps}\n      key={key}\n      onGoogleAddressSuggestSelection={handleGoogleAddressSuggestSelection}\n      onInputBlur={handleFieldBlur}\n      onInputChange={handleAddressChange}\n      templateName={templateOptions.name}\n      {...additionalHtmlProps}\n    />\n  );\n  /* eslint-enable react/prop-types */\n\n  const renderFields = template => {\n    const defaults = template.defaults;\n    const templateAttributes = templateOptions.overrides\n      ? mergeDefaultsOverrides(defaults, templateOptions.overrides)\n      : defaults;\n    const templateFields = templateOptions.fields ? templateOptions.fields : template.fields;\n    // const templateFieldsLength = templateFields.length;\n\n    return templateFields.map(field => {\n      const fieldAttributes = templateAttributes[field];\n      const fieldName = fieldAttributes.name;\n      const isForGoogleAddress =\n        enableGoogleAddressSuggest &&\n        googleAddressSuggestCountryCodeExcludedCountries.indexOf(countryCode) === -1 &&\n        fieldName === triggeringField;\n\n      if (typeof fieldAttributes.shouldRenderField !== 'undefined' && !fieldAttributes.shouldRenderField) {\n        return null;\n      }\n\n      const fieldContent = templateOptions.content[field];\n\n      const hasErrorText = fieldAttributes.additionalHtmlProps && fieldAttributes.additionalHtmlProps.errorText;\n\n      let errorText = hasErrorText ? fieldAttributes.additionalHtmlProps.errorText : '';\n\n      const shouldRemoveErrorState =\n        hasErrorText &&\n        (\n          fieldAttributes.readOnly ||\n          fieldAttributes.renderAsCombobox ||\n          (!fieldAttributes.required && !address[field])\n        );\n\n      errorText = shouldRemoveErrorState ? '' : errorText;\n\n      if (hasErrorText) {\n        delete fieldAttributes.additionalHtmlProps.errorText;\n      }\n\n      const textMaskSetup = {\n        guide: fieldAttributes.shouldShowInputMasking || false,\n        mask: fieldAttributes.mask,\n        onChange: handleAddressChange,\n        upperCaseValue: fieldAttributes.shouldUpperCaseValue || false,\n        value: mergedAddress && mergedAddress[field]\n      };\n      const textMaskProps = fieldAttributes.hasMask && fieldAttributes.mask ? useTextMask(textMaskSetup).getInputProps : {};\n      const fieldInputMaskInfoObj = Object.keys(textMaskProps).length > 0 ?\n        { [field]: { hasMask: true, onChange: textMaskProps.onChange } } :\n        { [field]: { hasMask: false } };\n      inputMaskingByField = { ...inputMaskingByField, ...fieldInputMaskInfoObj };\n\n      const comboboxOptions = fieldAttributes.renderAsCombobox ? fieldAttributes.comboboxOptions : null;\n      const shouldSplitField = fieldAttributes.shouldSplitField; // eslint-disable-line\n      const splitFieldWidth = fieldAttributes.splitFieldWidth || '';\n      const formControlClassNames = classnames( FORM_CONTROL_CLASSNAME, {\n        [`vds-form-control--${splitFieldWidth}`]: Boolean(splitFieldWidth)\n      });\n\n      const hasAddressData = mergedAddress && mergedAddress[field];\n      const hasDefaultValue = fieldAttributes && fieldAttributes.defaultValue;\n      let defaultValue = '';\n\n      if (hasAddressData) {\n        defaultValue = mergedAddress[field];\n      } else if (hasDefaultValue) {\n        defaultValue = fieldAttributes.defaultValue;\n      }\n      let valueToRender =\n        fieldAttributes && fieldAttributes.shouldUpperCaseValue ? defaultValue.toUpperCase() : defaultValue;\n\n      if (!valueToRender) {\n        valueToRender = undefined;\n      }\n\n      if (isForGoogleAddress || comboboxOptions) {\n        let renderData;\n        const comboboxClass = {\n          containerClass: formControlClassNames\n        };\n        const inputProps = {\n          label: fieldContent.label,\n          name: fieldName,\n          placeholder: fieldContent.placeholder,\n          required: fieldAttributes.required,\n          ...fieldAttributes.additionalHtmlProps\n        };\n        const key = fieldContent.label;\n\n        if (comboboxOptions) {\n          const comboboxOptionsTemplate = {\n            itemKey: 'value',\n            optionValues: comboboxOptions.comboboxItems,\n            renderOption: comboboxOptions.renderComboboxOption,\n            searchIncludesFields: ['shortValue', 'value']\n          };\n\n          renderData = {\n            comboboxClass,\n            comboboxOptionsTemplate,\n            defaultItem: comboboxOptions.selectedItem,\n            inputProps,\n            key,\n            onComboboxSelect: comboboxOptions.onComboboxSelect\n          };\n\n          return renderGenericCombobox(renderData);\n        } else if (isForGoogleAddress) {\n          const valueObj = { value: valueToRender };\n          const inputPropsWithValue = { ...inputProps, ...valueObj };\n          renderData = {\n            comboboxClass,\n            countryCode,\n            inputProps: inputPropsWithValue,\n            key\n          };\n\n          return renderGoogleAddressSuggestCombobox(renderData);\n        }\n      }\n\n      return (\n        <FormControl\n          key={`vds-address-form-control--${fieldAttributes.name}--${countryCode}`}\n        >\n          <Input\n            autoComplete={fieldAttributes.autoComplete}\n            errorText={errorText}\n            id={fieldAttributes.id}\n            key={`${fieldAttributes.name}--${countryCode}`}\n            label={fieldContent.label}\n            mask={fieldAttributes.hasMask ? fieldAttributes.mask : null}\n            maxLength={fieldAttributes.hasMask ? null : fieldAttributes.maxLength}\n            name={fieldAttributes.name}\n            onBlur={onFieldBlur}\n            onChange={fieldAttributes.hasMask ? null : handleAddressChange}\n            placeholder={fieldContent.placeholder}\n            readOnly={fieldAttributes.readOnly}\n            required={fieldAttributes.required}\n            showErrorText\n            value={valueToRender}\n            {...fieldAttributes.additionalHtmlProps}\n            {...textMaskProps}\n          />\n        </FormControl>\n      );\n    });\n  };\n\n  return <Fragment>{renderFields(addressTemplate)}</Fragment>;\n}, preventRerender);\n\nAddressFields.propTypes = {\n  address: addressPropTypes.ADDRESS_MODEL_PROP_TYPE,\n  countryCode: string,\n  googleAddressSuggestSetupOptions: shape({\n    customItemToStringFunc: func,\n    enableGoogleAddressSuggest: bool.isRequired,\n    fieldMappingForCountry: shape({}),\n    googleAddressSuggestAPIKey: string,\n    googleAddressSuggestCountryCodeExcludedCountries: arrayOf(string),\n    onGoogleAddressSuggestSelection: func,\n    positionOfCommaThatFollowsTriggeringFieldAddressInfo: number,\n    triggeringField: string\n  }).isRequired,\n  onAddressChange: func,\n  // onCountryChange: func,\n  onFieldBlur: func,\n  templateOptions: shape({\n    content: addressPropTypes.CONTENT_PROP_TYPE.isRequired,\n    fields: arrayOf(string),\n    name: string.isRequired,\n    // Please refer to SCHEMA.md in the address utilities for usage of overrides!\n    overrides: shape({\n      additionalLocation: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      city: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      countryCode: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      county: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      line1: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      line2: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      line3: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      neighborhood: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      pointOfReference: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      postalCode: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      stateProvinceCode: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      streetName: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      streetNumber: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE\n    })\n  }).isRequired\n};\n\nexport default AddressFields;\n","export const FORM_CONTROL_CLASSNAME = 'vds-form-control';\nexport const SPLIT_FIELD_BASE_CLASSNAME = 'vds-input--splitField';\n\n// Google Address Suggest\n\nexport const GOOGLE_ADDRESS_SUGGESTION_SHORT_NAME_FIELDS = ['administrative_area_level_1'];\n","import React, { memo } from 'react';\nimport { arrayOf, bool, func, number, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { constants as addressCommonConstants } from '@visa/ui-utils/lib/js/address/';\nimport AddressFields from './sub-components/addressFields';\nimport Form from '../form';\nimport Fieldset from '../fieldset';\nimport Legend from '../legend';\n\nconst { addressPropTypes } = addressCommonConstants;\n\nconst CSS_PREFIX = 'vds-address';\n\nconst preventRerender = (prevProps, nextProps) => JSON.stringify(prevProps) === JSON.stringify(nextProps);\n\nconst Address = memo(({\n  address,\n  className,\n  countryCode,\n  fieldsetClassName,\n  googleAddressSuggestSetupOptions,\n  legend,\n  onAddressChange,\n  onCountryChange,\n  onFieldBlur,\n  templateOptions\n}) => {\n  const handleAddressChange = e => {\n    // inform caller one of the address fields has changed input\n    if (typeof onAddressChange === 'function') {\n      onAddressChange(e);\n    }\n  };\n\n  const handleCountryChange = countryCode => {\n    if (typeof onCountryChange === 'function') {\n      onCountryChange(countryCode);\n    }\n  };\n\n  const handleFieldBlur = e => {\n    if (typeof onFieldBlur === 'function') {\n      onFieldBlur(e);\n    }\n  };\n\n  return (\n    <Form className={classnames(CSS_PREFIX, className)}>\n      <Fieldset className={classnames(`${CSS_PREFIX}-fieldset--${templateOptions.name}`, fieldsetClassName)}>\n        { legend ? <Legend>{legend}</Legend> : undefined}\n        <AddressFields\n          address={address}\n          countryCode={countryCode}\n          googleAddressSuggestSetupOptions={googleAddressSuggestSetupOptions}\n          key={`${CSS_PREFIX}-fieldset-address-fields-${countryCode}-${templateOptions.name}`}\n          onAddressChange={handleAddressChange}\n          onCountryChange={handleCountryChange}\n          onFieldBlur={handleFieldBlur}\n          templateOptions={templateOptions}\n        />\n      </Fieldset>\n    </Form>\n  );\n}, preventRerender);\n\nAddress.defaultProps = {\n  /**\n   * @type {?object}\n   *\n   * For populating the rendered address form fields with address information.\n   * All keys in this object map exactly to the fields rendered.\n   */\n  address: {},\n\n  /**\n   * @type {?string}\n   *\n   * two-letter country code representing the country of the address form\n   */\n  countryCode: 'US',\n\n  fieldsetClassName: '',\n\n  /**\n   * @type {!object}\n   *\n   * Template name and overrides\n   */\n  templateOptions: {\n    name: 'default'\n  }\n};\n\nAddress.propTypes = {\n  address: addressPropTypes.ADDRESS_MODEL_PROP_TYPE,\n  className: string,\n  countryCode: string,\n  fieldsetClassName: string,\n  googleAddressSuggestSetupOptions: shape({\n    customItemToStringFunc: func,\n    enableGoogleAddressSuggest: bool.isRequired,\n    fieldMappingForCountry: shape({}),\n    googleAddressSuggestAPIKey: string,\n    googleAddressSuggestCountryCodeExcludedCountries: arrayOf(string),\n    onGoogleAddressSuggestSelection: func,\n    positionOfCommaThatFollowsTriggeringFieldAddressInfo: number,\n    triggeringField: string\n  }).isRequired,\n  legend: string,\n  onAddressChange: func,\n  onCountryChange: func,\n  onFieldBlur: func,\n  templateOptions: shape({\n    content: addressPropTypes.CONTENT_PROP_TYPE.isRequired,\n    fields: arrayOf(string),\n    name: string.isRequired,\n    // Please refer to SCHEMA.md in the address utilities for usage of overrides!\n    overrides: shape({\n      additionalLocation: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      city: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      countryCode: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      county: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      line1: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      line2: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      line3: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      neighborhood: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      pointOfReference: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      postalCode: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      stateProvinceCode: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      streetName: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE,\n      streetNumber: addressPropTypes.ADDRESS_FIELD_OVERRIDES_PROP_TYPE\n    })\n  }).isRequired\n};\n\nAddress.displayName = 'Address';\n\nexport default Address;\n","/* eslint-disable sort-keys */\n/* eslint-disable spellcheck/spell-checker */\n\n\nexport const COUNTRIES_FULL_EXAMPLE_AR = [\n  { value: 'البرازيل', shortValue: 'BR' },\n  { value: 'كندا', shortValue: 'CA' },\n  { value: 'فرنسا', shortValue: 'FR' },\n  { value: 'هونج كونج', shortValue: 'HK' },\n  { value: 'الهند', shortValue: 'IN' },\n  { value: 'أيرلندا', shortValue: 'IE' },\n  { value: 'اليابان', shortValue: 'JP' },\n  { value: 'المكسيك', shortValue: 'MX' },\n  { value: 'بولندا', shortValue: 'PL' },\n  { value: 'سنغافورة', shortValue: 'SG' },\n  { value: 'أوكرانيا', shortValue: 'UA' },\n  { value: 'الإمارات العربية المتحدة', shortValue: 'AE' },\n  { value: 'الولايات المتحدة الامريكانية', shortValue: 'US' }\n];\n\nexport const COUNTRIES_FULL_EXAMPLE_EN = [\n  { value: 'Brazil', shortValue: 'BR' },\n  { value: 'Canada', shortValue: 'CA' },\n  { value: 'France', shortValue: 'FR' },\n  { value: 'Hong Kong', shortValue: 'HK' },\n  { value: 'India', shortValue: 'IN' },\n  { value: 'Ireland', shortValue: 'IE' },\n  { value: 'Japan', shortValue: 'JP' },\n  { value: 'Mexico', shortValue: 'MX' },\n  { value: 'Poland', shortValue: 'PL' },\n  { value: 'Singapore', shortValue: 'SG' },\n  { value: 'Ukraine', shortValue: 'UA' },\n  { value: 'United Arab Emirates', shortValue: 'AE' },\n  { value: 'United States', shortValue: 'US' }\n];\n\nexport const COUNTRIES_FULL_EXAMPLE_FR = [\n  { value: 'Brésil', shortValue: 'BR' },\n  { value: 'Canada', shortValue: 'CA' },\n  { value: 'France', shortValue: 'FR' },\n  { value: 'Hong Kong', shortValue: 'HK' },\n  { value: 'Inde', shortValue: 'IN' },\n  { value: 'Irlande', shortValue: 'IE' },\n  { value: 'Japon', shortValue: 'JP' },\n  { value: 'Mexique', shortValue: 'MX' },\n  { value: 'Pologne', shortValue: 'PL' },\n  { value: 'Singapour', shortValue: 'SG' },\n  { value: 'Ukraine', shortValue: 'UA' },\n  { value: 'Emirats Arabes Unis', shortValue: 'AE' },\n  { value: 'États Unis', shortValue: 'US' }\n];\n\nexport const COUNTRIES_FULL_EXAMPLE_UK = [\n  { value: 'Бразилія', shortValue: 'BR' },\n  { value: 'Канада', shortValue: 'CA' },\n  { value: 'Франція', shortValue: 'FR' },\n  { value: 'Гонконг', shortValue: 'HK' },\n  { value: 'Індія', shortValue: 'IN' },\n  { value: 'Ірландія', shortValue: 'IE' },\n  { value: 'Японія', shortValue: 'JP' },\n  { value: 'Мексика', shortValue: 'MX' },\n  { value: 'Польща', shortValue: 'PL' },\n  { value: 'Сінгапур', shortValue: 'SG' },\n  { value: 'Україна', shortValue: 'UA' },\n  { value: \"Об'єднані Арабські Емірати\", shortValue: 'AE' },\n  { value: 'Сполучені Штати', shortValue: 'US' }\n];\n\nexport const COUNTRIES_FULL_EXAMPLE_ZH = [\n  { value: '巴西', shortValue: 'BR' },\n  { value: '加拿大', shortValue: 'CA' },\n  { value: '法國', shortValue: 'FR' },\n  { value: '香港', shortValue: 'HK' },\n  { value: '印度', shortValue: 'IN' },\n  { value: '愛爾蘭', shortValue: 'IE' },\n  { value: '日本', shortValue: 'JP' },\n  { value: '墨西哥', shortValue: 'MX' },\n  { value: '波蘭', shortValue: 'PL' },\n  { value: '新加坡', shortValue: 'SG' },\n  { value: '烏克蘭', shortValue: 'UA' },\n  { value: '阿拉伯聯合酋長國', shortValue: 'AE' },\n  { value: '美國', shortValue: 'US' }\n];\n\nexport const IRELAND_COUNTIES_FULL_EXAMPLE = [\n  { value: 'Carlow' },\n  { value: 'Cavan' },\n  { value: 'Clare' },\n  { value: 'Cork' },\n  { value: 'Donegal' },\n  { value: 'Dublin' },\n  { value: 'Galway' },\n  { value: 'Kerry' },\n  { value: 'Kildare' },\n  { value: 'Kilkenny' },\n  { value: 'Laois' },\n  { value: 'Leitrim' },\n  { value: 'Limerick' },\n  { value: 'Longford' },\n  { value: 'Louth' },\n  { value: 'Mayo' },\n  { value: 'Meath' },\n  { value: 'Monaghan' },\n  { value: 'Offaly' },\n  { value: 'Roscommon' },\n  { value: 'Sligo' },\n  { value: 'Tipperary' },\n  { value: 'Waterford' },\n  { value: 'Westmeath' },\n  { value: 'Wexford' },\n  { value: 'Wicklow' }\n];\n\nexport const CUSTOM_TEMPLATE_FIELDS_FULL_EXAMPLE = {\n  IN: ['countryCode', 'postalCode'],\n  JP: ['countryCode', 'additionalLocation', 'line2', 'neighborhood', 'stateProvinceCode']\n};\n\nexport const TEMPLATE_MAP_FULL_EXAMPLE = {\n  AE: 'default',\n  BR: 'brazil',\n  CA: 'default',\n  FR: 'noState',\n  HK: 'hongKong',\n  IE: 'postalOptional',\n  IN: 'line3',\n  JP: 'custom',\n  MX: 'mexico',\n  PL: 'streetNameNumber',\n  SG: 'default',\n  UA: 'line3',\n  US: 'default'\n};\n\nexport const POSTALCODE_LOOKUP_WHITELIST = ['BR', 'MX'];\n\nexport const CONTENT_FULL_EXAMPLE_AR = {\n  AE: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    }\n  },\n  BR: {\n    additionalLocation: {\n      label: 'موقع إضافي',\n      placeholder: 'الرقم الداخلي'\n    },\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line2: {\n      label: 'حي',\n      placeholder: ''\n    },\n    line3: {\n      label: 'نقطة مرجعية',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: 'XX'\n    },\n    streetName: {\n      label: 'اسم الشارع',\n      placeholder: 'اسم الشارع'\n    },\n    streetNumber: {\n      label: 'رقم الشارع',\n      placeholder: 'الرقم الخارجي'\n    }\n  },\n  CA: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: 'XXX XXX'\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: 'XX'\n    }\n  },\n  FR: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    }\n  },\n  HK: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    }\n  },\n  IE: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    line3: {\n      label: 'سطر العنوان 3 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    }\n  },\n  IN: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    line3: {\n      label: 'سطر العنوان 3 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    }\n  },\n  JP: {\n    additionalLocation: {\n      label: 'موقع إضافي',\n      placeholder: 'الرقم الداخلي'\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    neighborhood: {\n      label: 'حي',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    }\n  },\n  MX: {\n    additionalLocation: {\n      label: 'موقع إضافي',\n      placeholder: 'الرقم الداخلي'\n    },\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    county: {\n      label: 'مقاطعة',\n      placeholder: ''\n    },\n    neighborhood: {\n      label: 'حي',\n      placeholder: ''\n    },\n    pointOfReference: {\n      label: 'نقطة مرجعية',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    },\n    streetName: {\n      label: 'اسم الشارع',\n      placeholder: 'اسم الشارع'\n    },\n    streetNumber: {\n      label: 'رقم الشارع',\n      placeholder: 'الرقم الخارجي'\n    }\n  },\n  PL: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: 'XX-XXX'\n    },\n    streetName: {\n      label: 'اسم الشارع',\n      placeholder: 'اسم الشارع'\n    },\n    streetNumber: {\n      label: 'رقم الشارع',\n      placeholder: 'الرقم الخارجي'\n    }\n  },\n  SG: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: 'XX-XXX'\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    }\n  },\n  UA: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    line3: {\n      label: 'سطر العنوان 3 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: ''\n    }\n  },\n  US: {\n    city: {\n      label: 'المدينة',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'بلد',\n      placeholder: 'اختر او ادخل بلد'\n    },\n    line1: {\n      label: 'العنوان السطر 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'سطر العنوان 2 (اختياري)',\n      placeholder: 'شقة ، جناح ، أرضية ، إلخ.'\n    },\n    postalCode: {\n      label: 'الكود البريدى',\n      placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: 'حالة',\n      placeholder: 'XX'\n    }\n  }\n};\n\nexport const CONTENT_FULL_EXAMPLE_EN = {\n  AE: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    postalCode: {\n      label: 'Zip Code',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'State',\n      placeholder: ''\n    }\n  },\n  BR: {\n    additionalLocation: {\n      label: 'Complement (optional)',\n      placeholder: ''\n    },\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line2: {\n      label: 'Neighbourhood',\n      placeholder: ''\n    },\n    line3: {\n      label: 'Point of Reference (optional)',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'CEP',\n      placeholder: 'XXXXX - XXX'\n    },\n    stateProvinceCode: {\n      label: 'State',\n      placeholder: 'XX'\n    },\n    streetName: {\n      label: 'Address',\n      placeholder: ''\n    },\n    streetNumber: {\n      label: 'Number (required)',\n      placeholder: ''\n    }\n  },\n  CA: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    postalCode: {\n      label: 'Postal Code',\n      placeholder: 'XXX XXX'\n    },\n    stateProvinceCode: {\n      label: 'Province',\n      placeholder: 'XX'\n    }\n  },\n  FR: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    postalCode: {\n      label: 'Postal Code',\n      placeholder: ''\n    }\n  },\n  HK: {\n    city: {\n      label: 'District',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: ''\n    }\n  },\n  IE: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    line3: {\n      label: 'Address Line 3 (optional)',\n      placeholder: 'District'\n    },\n    postalCode: {\n      label: 'Postal Code (optional)',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'County',\n      placeholder: ''\n    }\n  },\n  IN: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    line3: {\n      label: 'Address Line 3 (optional)',\n      placeholder: 'District'\n    },\n    postalCode: {\n      label: 'Postal Code',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Region',\n      placeholder: ''\n    }\n  },\n  JP: {\n    additionalLocation: {\n      label: 'Additional Location',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    neighborhood: {\n      label: 'Neighborhood',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'State',\n      placeholder: ''\n    }\n  },\n  MX: {\n    additionalLocation: {\n      label: 'Additional Location (optional)',\n      placeholder: 'Interior Number'\n    },\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    county: {\n      label: 'County',\n      placeholder: ''\n    },\n    neighborhood: {\n      label: 'Neighborhood',\n      placeholder: ''\n    },\n    pointOfReference: {\n      label: 'Point of Reference (optional)',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'Zip Code',\n      placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: 'State',\n      placeholder: 'XX'\n    },\n    streetName: {\n      label: 'Street Name',\n      placeholder: 'Street Name'\n    },\n    streetNumber: {\n      label: 'Street Number',\n      placeholder: 'Exterior Number'\n    }\n  },\n  PL: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    streetName: {\n      label: 'Street',\n      placeholder: ''\n    },\n    streetNumber: {\n      label: 'House/apartment number',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'Post Code',\n      placeholder: 'XX-XXX'\n    }\n  },\n  SG: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    postalCode: {\n      label: 'Zip Code',\n      placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: 'State',\n      placeholder: 'XX'\n    }\n  },\n  UA: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    line3: {\n      label: 'Address Line 3 (optional)',\n      placeholder: 'District'\n    },\n    postalCode: {\n      label: 'Postal Code',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Region',\n      placeholder: ''\n    }\n  },\n  US: {\n    city: {\n      label: 'City',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Country',\n      placeholder: 'Select or enter a country'\n    },\n    line1: {\n      label: 'Address Line 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Address Line 2 (optional)',\n      placeholder: 'Apartment, suite, floor, etc.'\n    },\n    postalCode: {\n      label: 'Zip Code'\n      // placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: 'State'\n      // placeholder: 'XX'\n    }\n  }\n};\n\nexport const CONTENT_FULL_EXAMPLE_FR = {\n  AE: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: ''\n    }\n  },\n  BR: {\n    additionalLocation: {\n      label: 'Lieu supplémentaire',\n      placeholder: 'Numéro intérieur'\n    },\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line2: {\n      label: 'Quartier',\n      placeholder: ''\n    },\n    line3: {\n      label: 'Point de référence',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'CEP',\n      placeholder: 'XXXXX - XX'\n    },\n    stateProvinceCode: {\n      label: 'State',\n      placeholder: 'XX'\n    },\n    streetName: {\n      label: 'Nom de rue',\n      placeholder: 'Numéro de rue'\n    },\n    streetNumber: {\n      label: 'Numéro de rue',\n      placeholder: 'Numéro Extérieur'\n    }\n  },\n  CA: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: 'XXX XXX'\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: 'XX'\n    }\n  },\n  FR: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    }\n  },\n  HK: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    }\n  },\n  IE: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    line3: {\n      label: 'Addresse 3 (optionnel)',\n      placeholder: 'District'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: ''\n    }\n  },\n  IN: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    line3: {\n      label: 'Addresse 3 (optionnel)',\n      placeholder: 'District'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: ''\n    }\n  },\n  JP: {\n    additionalLocation: {\n      label: 'Lieu supplémentaire',\n      placeholder: 'Numéro intérieur'\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    neighborhood: {\n      label: 'Quartier',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: ''\n    }\n  },\n  MX: {\n    additionalLocation: {\n      label: 'Lieu supplémentaire',\n      placeholder: 'Numéro intérieur'\n    },\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    county: {\n      label: 'Comté',\n      placeholder: ''\n    },\n    neighborhood: {\n      label: 'Quartier',\n      placeholder: ''\n    },\n    pointOfReference: {\n      label: 'Point de référence',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: ''\n    },\n    streetName: {\n      label: 'Nom de rue',\n      placeholder: 'Street Name'\n    },\n    streetNumber: {\n      label: 'Numéro de rue',\n      placeholder: 'Numéro Extérieur'\n    }\n  },\n  PL: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    },\n    streetName: {\n      label: 'Nom de rue',\n      placeholder: 'Numéro de rue'\n    },\n    streetNumber: {\n      label: 'Numéro de rue',\n      placeholder: 'Numéro Extérieur'\n    }\n  },\n  SG: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: ''\n    }\n  },\n  UA: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    line3: {\n      label: 'Address Line 3 (optional)',\n      placeholder: 'District'\n    },\n    postalCode: {\n      label: 'Postal Code',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Region',\n      placeholder: ''\n    }\n  },\n  US: {\n    city: {\n      label: 'Ville',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Pays',\n      placeholder: 'Sélectionnez ou entrez un pays'\n    },\n    line1: {\n      label: 'Addresse 1',\n      placeholder: ''\n    },\n    line2: {\n      label: 'Addresse 2 (optionnel)',\n      placeholder: 'Appartement, suite, étage, etc.'\n    },\n    postalCode: {\n      label: 'Code Postal',\n      placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: 'Etat',\n      placeholder: 'XX'\n    }\n  }\n};\n\nexport const CONTENT_FULL_EXAMPLE_UK = {\n  AE: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: ''\n    }\n  },\n  BR: {\n    additionalLocation: {\n      label: \"Доповнення (необов'язково)\",\n      placeholder: ''\n    },\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line2: {\n      label: 'Сусідство',\n      placeholder: ''\n    },\n    line3: {\n      label: 'Точка відліку',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'CEP',\n      placeholder: 'XXXXX - XXX'\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: 'XX'\n    },\n    streetName: {\n      label: 'Адреса',\n      placeholder: ''\n    },\n    streetNumber: {\n      label: \"Номер (обов'язково)\",\n      placeholder: ''\n    }\n  },\n  CA: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: 'XXX XXX'\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: 'XX'\n    }\n  },\n  FR: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    }\n  },\n  HK: {\n    city: {\n      label: 'Район',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: ''\n    }\n  },\n  IE: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    line3: {\n      label: \"Рядок адреси 3 (необов'язково)\",\n      placeholder: 'Район'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Регіон',\n      placeholder: ''\n    }\n  },\n  IN: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    line3: {\n      label: \"Рядок адреси 3 (необов'язково)\",\n      placeholder: 'Район'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Регіон',\n      placeholder: ''\n    }\n  },\n  JP: {\n    additionalLocation: {\n      label: 'Додаткове розташування',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    neighborhood: {\n      label: 'Сусідство',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: ''\n    }\n  },\n  MX: {\n    additionalLocation: {\n      label: 'Додаткове розташування',\n      placeholder: \"Номер інтер'єру\"\n    },\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    county: {\n      label: 'Округу',\n      placeholder: ''\n    },\n    neighborhood: {\n      label: 'Сусідство',\n      placeholder: ''\n    },\n    pointOfReference: {\n      label: 'Точка відліку',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: ''\n    },\n    streetName: {\n      label: 'назва вулиці',\n      placeholder: 'назва вулиці'\n    },\n    streetNumber: {\n      label: 'номер вулиці',\n      placeholder: 'Зовнішній номер'\n    }\n  },\n  PL: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    streetName: {\n      label: 'Вулиця',\n      placeholder: ''\n    },\n    streetNumber: {\n      label: 'Номер будинку / квартири',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    }\n  },\n  SG: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: ''\n    }\n  },\n  UA: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    line3: {\n      label: \"Рядок адреси 3 (необов'язково)\",\n      placeholder: 'Район'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: 'Регіон',\n      placeholder: ''\n    }\n  },\n  US: {\n    city: {\n      label: 'Місто',\n      placeholder: ''\n    },\n    countryCode: {\n      label: 'Країна',\n      placeholder: 'Виберіть або введіть країну'\n    },\n    line1: {\n      label: 'Рядок адреси 1',\n      placeholder: ''\n    },\n    line2: {\n      label: \"Рядок адреси 2 (необов'язково)\",\n      placeholder: 'Апартаменти, люкс, поверх і т.д.'\n    },\n    postalCode: {\n      label: 'Поштовий індекс',\n      placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: 'Держава',\n      placeholder: 'XX'\n    }\n  }\n};\n\nexport const CONTENT_FULL_EXAMPLE_ZH = {\n  AE: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: ''\n    }\n  },\n  BR: {\n    additionalLocation: {\n      label: '補充 (可選的)',\n      placeholder: ''\n    },\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line2: {\n      label: '鄰里',\n      placeholder: ''\n    },\n    line3: {\n      label: '參考點',\n      placeholder: ''\n    },\n    postalCode: {\n      label: 'CEP',\n      placeholder: 'XXXXX - XXX'\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: 'XX'\n    },\n    streetName: {\n      label: '地址',\n      placeholder: ''\n    },\n    streetNumber: {\n      label: '數 (需要)',\n      placeholder: ''\n    }\n  },\n  CA: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: 'XXX XXX'\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: 'XX'\n    }\n  },\n  FR: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    }\n  },\n  HK: {\n    city: {\n      label: '區',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: ''\n    }\n  },\n  IE: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    line3: {\n      label: '地址第3行 (可選的)',\n      placeholder: '區'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '縣',\n      placeholder: ''\n    }\n  },\n  IN: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    line3: {\n      label: '地址第3行 (可選的)',\n      placeholder: '區'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '區域',\n      placeholder: ''\n    }\n  },\n  JP: {\n    additionalLocation: {\n      label: '附加位置',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    neighborhood: {\n      label: '鄰里',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: ''\n    }\n  },\n  MX: {\n    additionalLocation: {\n      label: '附加位置',\n      placeholder: '內部編號'\n    },\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    county: {\n      label: '縣',\n      placeholder: ''\n    },\n    neighborhood: {\n      label: '鄰里',\n      placeholder: ''\n    },\n    pointOfReference: {\n      label: '參考點',\n      placeholder: ''\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: ''\n    },\n    streetName: {\n      label: '街道名稱',\n      placeholder: '街道名稱'\n    },\n    streetNumber: {\n      label: '街牌號碼',\n      placeholder: '外部號碼'\n    }\n  },\n  PL: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    streetName: {\n      label: '街',\n      placeholder: ''\n    },\n    streetNumber: {\n      label: '房子/公寓號碼',\n      placeholder: ''\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    }\n  },\n  SG: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: ''\n    }\n  },\n  UA: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    line3: {\n      label: '地址第3行 (可選的)',\n      placeholder: '區'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: ''\n    },\n    stateProvinceCode: {\n      label: '區域',\n      placeholder: ''\n    }\n  },\n  US: {\n    city: {\n      label: '市',\n      placeholder: ''\n    },\n    countryCode: {\n      label: '國家',\n      placeholder: '選擇或輸入國家/地區'\n    },\n    line1: {\n      label: '地址第一行',\n      placeholder: ''\n    },\n    line2: {\n      label: '地址第2行 (可選的)',\n      placeholder: '公寓，套房，樓層等'\n    },\n    postalCode: {\n      label: '郵政編碼',\n      placeholder: 'XXXXX'\n    },\n    stateProvinceCode: {\n      label: '州',\n      placeholder: 'XX'\n    }\n  }\n};\n","import { constants as addressConstants } from '@visa/ui-utils/lib/js/address';\n\nimport { POSTALCODE_LOOKUP_WHITELIST } from '../constants';\n\nconst { validationRegex } = addressConstants;\n\nconst checkIfShouldMakeAddressLookup = ({ country, field, value }) => {\n  const isPostalCodeField = field === 'postalCode';\n  const isPostalCodeLookupCountry = POSTALCODE_LOOKUP_WHITELIST.includes(country);\n  const validator = validationRegex[`${country.toUpperCase()}_POSTALCODE_REG_EXP`];\n\n  return isPostalCodeField && isPostalCodeLookupCountry && validator.test(value);\n};\n\nexport default checkIfShouldMakeAddressLookup;\n","const getLanguageFromLocale = locale => locale.substr(0, 2);\n\nexport default getLanguageFromLocale;\n","const getOverrides = (countryObj, errors) => {\n  const POSTALCODE_MASK_US = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\n  const POSTALCODE_MASK_CA = [/[a-zA-Z]/, /\\d/, /[a-zA-Z]/, ' ', /\\d/, /[a-zA-Z]/, /\\d/];\n  const POSTALCODE_MASK_BR = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, ' ', '-', ' ', /\\d/, /\\d/, /\\d/];\n  const STATEPROVINCECODE_MASK = [/[a-zA-Z]/, /[a-zA-Z]/];\n  const allAddressLookupFieldsDisplayed = countryObj.allAddressLookupFieldsDisplayed;\n  let overrides;\n  switch (countryObj.countryCode) {\n    case 'AE':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city\n          }\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          required: true,\n          shouldSplitField: true\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: false,\n          mask: null,\n          renderAsCombobox: false\n        }\n      };\n      break;\n    case 'BR':\n      overrides = {\n        additionalLocation: {\n          additionalHtmlProps: {\n            errorText: errors.additionalLocation,\n            invalid: Boolean(errors.additionalLocation)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          readOnly: false,\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        line3: {\n          additionalHtmlProps: {\n            errorText: errors.line3,\n            invalid: Boolean(errors.line3)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        pointOfReference: {\n          additionalHtmlProps: {\n            errorText: errors.pointOfReference,\n            invalid: Boolean(errors.pointOfReference)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: true,\n          mask: POSTALCODE_MASK_BR,\n          shouldSplitField: false\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: true,\n          mask: STATEPROVINCECODE_MASK,\n          renderAsCombobox: false,\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        streetName: {\n          additionalHtmlProps: {\n            errorText: errors.streetName,\n            invalid: Boolean(errors.streetName)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        streetNumber: {\n          additionalHtmlProps: {\n            errorText: errors.streetNumber,\n            invalid: Boolean(errors.streetNumber)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        }\n      };\n      break;\n\n    case 'FR':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: '',\n          readOnly: false\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          required: true,\n          shouldSplitField: false\n        }\n      };\n      break;\n\n    case 'HK':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: '',\n          readOnly: false\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        }\n      };\n      break;\n\n    case 'IE':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: '',\n          readOnly: false\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        line3: {\n          additionalHtmlProps: {\n            errorText: errors.line3,\n            invalid: Boolean(errors.line3)\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          shouldSplitField: false\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          comboboxOptions: {\n            comboboxItems: countryObj.irelandCounties,\n            onComboboxSelect: countryObj.handleIECountyChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.irelandCountySelectedItem\n          },\n          hasMask: false,\n          mask: null,\n          renderAsCombobox: true\n        }\n      };\n      break;\n    case 'IN':\n      overrides = {\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          shouldSplitField: false\n        }\n      };\n      break;\n    case 'JP':\n      overrides = {\n        additionalLocation: {\n          additionalHtmlProps: {\n            errorText: errors.additionalLocation,\n            invalid: Boolean(errors.additionalLocation)\n          }\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: false,\n          mask: null,\n          renderAsCombobox: false\n        }\n      };\n      break;\n    case 'MX':\n      overrides = {\n        additionalLocation: {\n          additionalHtmlProps: {\n            errorText: errors.additionalLocation,\n            invalid: Boolean(errors.additionalLocation)\n          },\n          shouldSplitField: false\n        },\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          readOnly: false,\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        county: {\n          additionalHtmlProps: {\n            errorText: errors.county,\n            invalid: Boolean(errors.county)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        neighborhood: {\n          additionalHtmlProps: {\n            errorText: errors.neighborhood,\n            invalid: Boolean(errors.neighborhood)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        pointOfReference: {\n          additionalHtmlProps: {\n            errorText: errors.pointOfReference,\n            invalid: Boolean(errors.pointOfReference)\n          },\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          shouldSplitField: false\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: false,\n          mask: null,\n          renderAsCombobox: false,\n          shouldRenderField: allAddressLookupFieldsDisplayed\n        },\n        streetName: {\n          additionalHtmlProps: {\n            errorText: errors.streetName,\n            invalid: Boolean(errors.streetName)\n          }\n        },\n        streetNumber: {\n          additionalHtmlProps: {\n            errorText: errors.streetNumber,\n            invalid: Boolean(errors.streetNumber)\n          }\n        }\n      };\n      break;\n\n    case 'PL':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: '',\n          readOnly: false\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: true,\n          mask: [/\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/],\n          shouldSplitField: true\n        },\n        streetName: {\n          additionalHtmlProps: {\n            errorText: errors.streetName,\n            invalid: Boolean(errors.streetName)\n          }\n        },\n        streetNumber: {\n          additionalHtmlProps: {\n            errorText: errors.streetNumber,\n            invalid: Boolean(errors.streetNumber)\n          }\n        }\n      };\n      break;\n    case 'SG':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: 'Singapore',\n          readOnly: true\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          shouldSplitField: true\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: false,\n          mask: null,\n          renderAsCombobox: false\n        }\n      };\n      break;\n\n    case 'UA':\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: '',\n          readOnly: false\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        line3: {\n          additionalHtmlProps: {\n            errorText: errors.line3,\n            invalid: Boolean(errors.line3)\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: false,\n          mask: null,\n          shouldSplitField: false\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: false,\n          mask: null,\n          renderAsCombobox: false\n        }\n      };\n      break;\n\n    case 'CA':\n    case 'US':\n    default:\n      overrides = {\n        city: {\n          additionalHtmlProps: {\n            errorText: errors.city,\n            invalid: Boolean(errors.city)\n          },\n          defaultValue: '',\n          readOnly: false\n        },\n        countryCode: {\n          comboboxOptions: {\n            comboboxItems: countryObj.countries,\n            onComboboxSelect: countryObj.handleCountryChange,\n            renderComboboxOption: countryObj.renderComboboxOption,\n            selectedItem: countryObj.countryCodeSelectedItem\n          }\n        },\n        line1: {\n          additionalHtmlProps: {\n            errorText: errors.line1,\n            invalid: Boolean(errors.line1)\n          }\n        },\n        line2: {\n          additionalHtmlProps: {\n            errorText: errors.line2,\n            invalid: Boolean(errors.line2)\n          }\n        },\n        postalCode: {\n          additionalHtmlProps: {\n            errorText: errors.postalCode,\n            invalid: Boolean(errors.postalCode)\n          },\n          hasMask: true,\n          mask: countryObj.countryCode === 'US' ? POSTALCODE_MASK_US : POSTALCODE_MASK_CA,\n          shouldSplitField: true\n        },\n        stateProvinceCode: {\n          additionalHtmlProps: {\n            errorText: errors.stateProvinceCode,\n            invalid: Boolean(errors.stateProvinceCode)\n          },\n          hasMask: true,\n          mask: STATEPROVINCECODE_MASK,\n          renderAsCombobox: false\n        }\n      };\n  }\n\n  return overrides;\n};\n\nexport default getOverrides;\n","import { constants as addressConstants } from '@visa/ui-utils/lib/js/address';\nconst { validationRegex } = addressConstants;\n\nconst validateField = ({\n  country,\n  field,\n  hasMask,\n  isRequired,\n  maskLength,\n  validateEmptyRequiredField = false,\n  value\n}) => {\n  const upperCasedCountryCode = country.toUpperCase();\n  const upperCasedFieldName =\n    field.toUpperCase().indexOf('LINE') > -1 ? 'LINE' : field.toUpperCase();\n  const validator = validationRegex[`${upperCasedCountryCode}_${upperCasedFieldName}_REG_EXP`]\n    ? validationRegex[`${upperCasedCountryCode}_${upperCasedFieldName}_REG_EXP`]\n    : validationRegex[`${upperCasedFieldName}_REG_EXP`];\n  let errorText = '';\n\n  if (validateEmptyRequiredField && isRequired && !value) {\n    errorText = `${upperCasedFieldName} is required!`;\n  } else if (hasMask && maskLength !== value.toString().length) {\n    errorText = `Partial ${upperCasedFieldName} value`;\n  } else if (value && !validator.test(value)) {\n    errorText = `Invalid ${upperCasedFieldName} field`;\n  }\n  return errorText;\n};\n\nexport default validateField;\n","/* eslint-disable indent */\n/* eslint-disable require-jsdoc */\n/* eslint-disable dot-notation */\n/* eslint-disable no-alert */\n/* eslint-disable no-console */\n/* eslint-disable no-eval */\n/* eslint-disable no-negated-condition */\n/* eslint-disable prefer-const */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-use-before-define */\n/* eslint-disable react/jsx-indent */\n/* eslint-disable react/sort-comp */\n/* eslint-disable react/prop-types */\n/* eslint-disable sort-keys */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable spellcheck/spell-checker */\n\nimport React, { useEffect, useState } from 'react';\nimport { constants as addressConstants } from '@visa/ui-utils/lib/js/address';\nimport Address from '../../address';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport List from '../../list';\nimport Row from '../../row';\nimport * as exampleConstants from './constants';\nimport {\n  checkIfShouldMakeAddressLookup,\n  getAddressDataFromPostalCode,\n  getLanguageFromLocale,\n  getOverrides,\n  validateField\n} from './utilities';\n\nconst { enums, googleAddressSuggestConstants } = addressConstants;\n\nconst AddressExample = () => {\n  const handleGoogleAddressSuggestSelection = data => {\n    console.log('parent handleGoogleAddressSuggestSelection :::: ', data);\n  };\n\n  const GOOGLE_ADDRESS_SUGGEST_SETUP_OPTIONS = {\n    enableGoogleAddressSuggest: false,\n    googleAddressSuggestAPIKey: '',\n    googleAddressSuggestCountryCodeExcludedCountries:\n      googleAddressSuggestConstants.GOOGLE_ADDRESS_SUGGEST_DISABLED_COUNTRY_CODES,\n    onGoogleAddressSuggestSelection: handleGoogleAddressSuggestSelection,\n    positionOfCommaThatFollowsTriggeringFieldAddressInfo: 0,\n    triggeringField: 'line1'\n  };\n\n  const [addressInfo, setAddressInfo] = useState({ countryCode: 'US' });\n  const [allAddressLookupFieldsDisplayed, setAllAddressLookupFieldsDisplayed] = useState(false);\n  const [brazilTemplate, setBrazilTemplate] = useState('custom');\n  const [countryCode, setCountryCode] = useState('US');\n  const [prevCountryCode, setPrevCountryCode] = useState('US');\n  const [errors, setErrors] = useState({});\n  const [googleAddressSuggestSetupOptions, setGoogleAddressSuggestSetupOptions] = useState(\n    GOOGLE_ADDRESS_SUGGEST_SETUP_OPTIONS\n  );\n  const [locale, setLocale] = useState('en-US');\n  const [language, setLanguage] = useState('EN');\n  const [languageDirection, setLanguageDirection] = useState('ltr');\n  const [mexicoTemplate, setMexicoTemplate] = useState('custom');\n  const [selectedIrelandCounty, setSelectedIrelandCounty] = useState(enums['IRELAND_COUNTIES'][0]);\n\n  const getActiveFields = () => document.querySelectorAll('.vds-form-control input[type=\"text\"]');\n\n  useEffect(() => {\n    if (countryCode !== prevCountryCode) {\n      /**\n        * Set prevCountryCode to countryCode.\n        * This ensures this effect is executed only onCountryChange\n        and not on all re-renders.\n        */\n      setPrevCountryCode(countryCode);\n\n      const countryObj = { countryCode };\n      const address = { ...addressInfo, ...countryObj };\n      let errorsObj = errors;\n      let fieldErrorText = '';\n      let fieldErrorObj = {};\n      const formFields = getActiveFields();\n\n      formFields.forEach(field => {\n        const fieldName = field.name;\n        const isRequired = field.required;\n        const hasValue = Boolean(field.value);\n        const fieldInfo = {\n          country: countryCode,\n          field: fieldName,\n          isRequired,\n          validateEmptyRequiredField: isRequired && errorsObj[fieldName],\n          value: field.value\n        };\n        if (fieldName.toUpperCase() !== 'COUNTRYCODE') {\n          fieldErrorText = validateField(fieldInfo);\n        }\n        fieldErrorObj = { [fieldName]: fieldErrorText };\n\n        errorsObj = { ...errorsObj, ...fieldErrorObj };\n      });\n\n      setErrors(errorsObj);\n      setAddressInfo(address);\n    }\n  }, [addressInfo, countryCode, prevCountryCode, errors]);\n\n  const setGoogleAPIKey = () => {\n    const input = document.getElementById('google-address-api-key');\n    const googleAddressAPIKeyObj = {\n      enableGoogleAddressSuggest: Boolean(input.value),\n      googleAddressSuggestAPIKey: input.value\n    };\n    const googleSetupInfo = { ...googleAddressSuggestSetupOptions, ...googleAddressAPIKeyObj };\n\n    setGoogleAddressSuggestSetupOptions(googleSetupInfo);\n  };\n\n  const renderGoogleAPIKeyMessage = () => {\n    if (googleAddressSuggestSetupOptions.googleAddressSuggestAPIKey) {\n      return (\n        <span\n          style={{\n            color: 'green',\n            display: 'inline-block',\n            fontWeight: 'bold',\n            marginLeft: '10px'\n          }}\n        >\n          API Key set in state!\n        </span>\n      );\n    }\n    return (\n      <span\n        style={{ color: '#d50000', display: 'inline-block', fontWeight: 'bold', marginLeft: '10px' }}\n      >\n        No API Key!\n      </span>\n    );\n  };\n\n  const getGoogleAddressSuggestTriggeringField = countryCode => {\n    let triggeringField = 'line1';\n\n    if (googleAddressSuggestConstants.COUNTRIES_WITHOUT_LINE1.includes(countryCode)) {\n      triggeringField = 'streetName';\n    }\n\n    return triggeringField;\n  };\n\n  const findSelectedCountryCodeOption = (items, selectedItem) =>\n    items.find(item => item.shortValue === selectedItem);\n\n  const findSelectedStateProvinceCodeOption = (items, selectedItem) =>\n    items.find(item => item.value === selectedItem);\n\n  const renderComboboxOption = option => <span>{option.value}</span>;\n\n  const setFieldErrors = fieldInfo => {\n    const fieldName = fieldInfo.field;\n    const validationObj = {\n      country: fieldInfo.country,\n      field: fieldName,\n      hasMask: fieldInfo.hasMask,\n      isRequired: fieldInfo.isRequired,\n      maskLength: fieldInfo.maskLength,\n      validateEmptyRequiredField: fieldInfo.validateEmptyRequiredField,\n      value: fieldInfo.value\n    };\n\n    const errorText = validateField(validationObj);\n    const fieldErrorObj = { [fieldName]: errorText };\n    const errorObj = { ...errors, ...fieldErrorObj };\n\n    setErrors(errorObj);\n  };\n\n  const handleLocaleChange = e => {\n    const newLocale = e.target.name;\n    const newLanguageDirection = newLocale === 'ar-AE' ? 'rtl' : 'ltr';\n\n    setLocale(newLocale);\n    setLanguage(getLanguageFromLocale(newLocale).toUpperCase());\n    setLanguageDirection(newLanguageDirection);\n  };\n\n  const getAddressDataFromPostalCode = fieldInfo => {\n    console.log('getAddressDataFromPostalCode index');\n    return new Promise(resolve => {\n      let result = {};\n\n      try {\n        if (fieldInfo.country === 'BR') {\n          result = {\n            city: 'Natal',\n            line2: 'Lagoa Nova',\n            postalCode: fieldInfo.value,\n            stateProvinceCode: 'RN',\n            streetName: 'Rua Coronel Auris Coelho'\n          };\n        } else if (fieldInfo.country === 'MX') {\n          result = {\n            postalCode: fieldInfo.value,\n            stateProvinceCode: 'Jalisco'\n          };\n        }\n\n        setAddressInfo({ ...addressInfo, ...result });\n        resolve(result);\n      } catch (e) {\n        resolve(null);\n        return;\n      }\n    });\n  };\n\n  const handleAddressChange = e => {\n    const field = e.target.name;\n    const isRequired = e.target.required;\n    const validateEmptyRequiredField = false;\n    const value = e.target.value;\n    const fieldObj = { [field]: value };\n    const fieldInfo = {\n      country: countryCode,\n      field,\n      isRequired,\n      validateEmptyRequiredField,\n      value\n    };\n    let newAddressInfo = { ...addressInfo, ...fieldObj };\n    const shouldMakeAddressLookup = checkIfShouldMakeAddressLookup(fieldInfo);\n    const shouldValidateOnChange = countryCode !== 'CA' && countryCode !== 'US';\n\n    if (shouldMakeAddressLookup) {\n      getAddressDataFromPostalCode(fieldInfo);\n      setAllAddressLookupFieldsDisplayed(true);\n      setBrazilTemplate('brazil');\n      setMexicoTemplate('mexico');\n    }\n\n    if (shouldValidateOnChange && field.toUpperCase() !== 'COUNTRYCODE') {\n      setFieldErrors(fieldInfo);\n    }\n\n    if (!shouldMakeAddressLookup && field.toUpperCase() !== 'COUNTRYCODE') {\n      setAddressInfo(newAddressInfo);\n    }\n  };\n\n  const handleFieldBlur = e => {\n    const field = e.target.name;\n    const hasMask = e.target.getAttribute('mask');\n    const isRequired = e.target.required;\n    const validateEmptyRequiredField = true;\n    const value = e.target.value;\n    const fieldInfo = {\n      country: countryCode,\n      field,\n      hasMask,\n      isRequired,\n      maskLength: hasMask ? e.target.getAttribute('mask').match(/,/g).length + 1 : null,\n      validateEmptyRequiredField,\n      value\n    };\n    const shouldValidateOnBlur = countryCode === 'CA' || countryCode === 'US';\n\n    if (shouldValidateOnBlur && field.toUpperCase() !== 'COUNTRYCODE') {\n      setFieldErrors(fieldInfo);\n    }\n  };\n\n  const handleCountryChange = item => {\n    if (item) {\n      const country = item.shortValue;\n      const googleTriggeringFieldObj = {\n        googleAddressSuggestTriggeringField: getGoogleAddressSuggestTriggeringField(country)\n      };\n      const googleSetupInfo = { ...googleAddressSuggestSetupOptions, ...googleTriggeringFieldObj };\n\n      setCountryCode(country);\n      setGoogleAddressSuggestSetupOptions(googleSetupInfo);\n    }\n  };\n\n  const handleIECountyChange = item => {\n    if (item) {\n      const fieldObj = { stateProvinceCode: item.value };\n      const address = { ...addressInfo, ...fieldObj };\n\n      setSelectedIrelandCounty(item.value);\n      setAddressInfo(address);\n    }\n  };\n\n  const checkForEmptyRequiredFields = formFields => {\n    let errorsObj = {};\n    let fieldErrorObj = {};\n\n    formFields.forEach(field => {\n      const fieldName = field.name;\n      const isRequired = field.required;\n      const value = field.value;\n      const upperCasedFieldName =\n        fieldName.toUpperCase().indexOf('LINE') > -1 ? 'LINE' : fieldName.toUpperCase();\n      fieldErrorObj = { [fieldName]: errors.fieldName };\n\n      if (isRequired && !value) {\n        fieldErrorObj = { [fieldName]: `${upperCasedFieldName} is required` };\n      }\n\n      errorsObj = { ...errorsObj, ...fieldErrorObj };\n    });\n\n    setErrors(errorsObj);\n  };\n\n  const formHasErrors = formFields => {\n    let hasErrors = false;\n\n    for (let field = 0; field < formFields.length; field++) {\n      if (formFields[field].value) {\n        continue;\n      }\n      hasErrors = true;\n      break;\n    }\n\n    return hasErrors;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    let errorsObj = errors;\n    let fieldErrorText = '';\n    let fieldErrorObj = {};\n    let invalidField = null;\n    const formFields = getActiveFields();\n\n    formFields.forEach(field => {\n      const fieldName = field.name;\n      const hasMask = field.getAttribute('mask');\n      const isRequired = field.required;\n      const fieldInfo = {\n        country: countryCode,\n        field: fieldName,\n        isRequired,\n        maskLength: hasMask ? field.getAttribute('mask').match(/,/g).length + 1 : null,\n        validateEmptyRequiredField: true,\n        value: field.value\n      };\n\n      if (fieldName.toUpperCase() !== 'COUNTRYCODE') {\n        fieldErrorText = validateField(fieldInfo);\n      }\n\n      if (invalidField === null && fieldErrorText !== '') {\n        invalidField = field;\n      }\n\n      fieldErrorObj = { [fieldName]: fieldErrorText };\n      errorsObj = { ...errorsObj, ...fieldErrorObj };\n    });\n\n    invalidField.focus();\n    setErrors(errorsObj);\n  };\n\n  const getTemplateName = () => {\n    let templateName = exampleConstants['TEMPLATE_MAP_FULL_EXAMPLE'][countryCode];\n\n    if (countryCode === 'BR') {\n      templateName = brazilTemplate;\n    } else if (countryCode === 'MX') {\n      templateName = mexicoTemplate;\n    }\n\n    return templateName;\n  };\n\n  const getTemplateFields = () => {\n    let templateFields = exampleConstants['CUSTOM_TEMPLATE_FIELDS_FULL_EXAMPLE'][countryCode];\n    const lookupFields = {\n      BR: allAddressLookupFieldsDisplayed\n        ? [\n            'countryCode',\n            'postalCode',\n            'streetName',\n            'streetNumber',\n            'additionalLocation',\n            'line2',\n            'line3',\n            'city',\n            'stateProvinceCode'\n          ]\n        : ['countryCode', 'postalCode'],\n      MX: allAddressLookupFieldsDisplayed\n        ? [\n            'countryCode',\n            'streetName',\n            'streetNumber',\n            'additionalLocation',\n            'postalCode',\n            'neighborhood',\n            'county',\n            'city',\n            'stateProvinceCode',\n            'pointOfReference'\n          ]\n        : ['countryCode', 'streetName', 'streetNumber', 'additionalLocation', 'postalCode']\n    };\n\n    if (countryCode === 'BR' || countryCode === 'MX') {\n      templateFields = lookupFields[countryCode];\n    }\n\n    return templateFields;\n  };\n\n  const countries = exampleConstants[`COUNTRIES_FULL_EXAMPLE_${language}`];\n  const irelandCounties = exampleConstants['IRELAND_COUNTIES_FULL_EXAMPLE'];\n  const countryObj = {\n    allAddressLookupFieldsDisplayed,\n    countries,\n    countryCode,\n    countryCodeSelectedItem: findSelectedCountryCodeOption(countries, countryCode),\n    handleCountryChange,\n    handleIECountyChange,\n    irelandCounties,\n    irelandCountySelectedItem: findSelectedStateProvinceCodeOption(\n      irelandCounties,\n      selectedIrelandCounty\n    ),\n    renderComboboxOption\n  };\n\n  const errorsObj = errors;\n\n  const overrides = getOverrides(countryObj, errorsObj);\n\n  const templateOptions = {\n    content: exampleConstants[`CONTENT_FULL_EXAMPLE_${language}`][countryCode],\n    fields: getTemplateFields(),\n    name: getTemplateName(),\n    overrides\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <div style={{ display: 'flex', flexWrap: 'wrap' }} dir={languageDirection} lang={locale}>\n            <div style={{ width: '100%' }}>\n              <div style={{ border: '2px solid blue', marginBottom: '20px', padding: '5px' }}>\n                <h2\n                  className=\"vds-text--subtitle\"\n                >\n                  Want to use Google Address Suggest? Enter your api key in the box below and click the\n                  button!\n                </h2>\n                <label\n                  htmlFor=\"google-address-api-key\"\n                  style={{\n                    color: '#616188',\n                    cursor: 'pointer',\n                    display: 'block',\n                    marginLeft: '3px',\n                    marginTop: '6px',\n                    transition: '.25s ease'\n                  }}\n                >\n                  API Key\n                </label>\n                <input\n                  type=\"text\"\n                  id=\"google-address-api-key\"\n                  style={{\n                    border: '2px solid #000',\n                    display: 'inline-block',\n                    marginRight: '5px',\n                    padding: '4px',\n                    width: '50%'\n                  }}\n                />\n                <button\n                  type=\"button\"\n                  onClick={setGoogleAPIKey}\n                  style={{\n                    backgroundColor: '#a6bfff',\n                    border: '2px solid #000',\n                    cursor: 'pointer',\n                    padding: '5px'\n                  }}\n                >\n                  Set API Key\n                </button>\n                {renderGoogleAPIKeyMessage()}\n              </div>\n              <form onSubmit={handleSubmit} noValidate>\n                <Address\n                  address={addressInfo}\n                  countryCode={countryCode}\n                  googleAddressSuggestSetupOptions={googleAddressSuggestSetupOptions}\n                  legend=\"Address Information\"\n                  onAddressChange={handleAddressChange}\n                  onFieldBlur={handleFieldBlur}\n                  templateOptions={templateOptions}\n                />\n                <button type=\"submit\">Submit the form</button>\n              </form>\n              <div className=\"locale-buttons\">\n                <h2>Buttons for switching locales</h2>\n                <button type=\"button\" name=\"en-US\" onClick={handleLocaleChange}>\n                  en-US\n                </button>\n                <button type=\"button\" name=\"ar-AE\" onClick={handleLocaleChange}>\n                  ar-AE\n                </button>\n                <button type=\"button\" name=\"fr-FR\" onClick={handleLocaleChange}>\n                  fr-FR\n                </button>\n                <button type=\"button\" name=\"uk-UA\" onClick={handleLocaleChange}>\n                  uk-UA\n                </button>\n                <button type=\"button\" name=\"zh-CN\" onClick={handleLocaleChange}>\n                  zh-CN\n                </button>\n              </div>\n            </div>\n            <div style={{ width: '100%' }}>\n              <h2>Form State: Address Info:</h2>\n              <pre>{JSON.stringify(addressInfo, null, 2)}</pre>\n            </div>\n            <div style={{ width: '100%' }}>\n              <h2>Form State: Errors:</h2>\n              <pre>{JSON.stringify(errors, null, 2)}</pre>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default AddressExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/address/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/address/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/address/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst AddressExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Address\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Address</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/address`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Address Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/address/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/address/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/address`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/address`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/address/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/address/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/address/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/address/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nAddressExample.displayName = 'AddressExample';\n\nexport default AddressExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  // ariaAtomic,\n  children,\n  className,\n  invalid,\n  // role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    // aria-atomic={ariaAtomic}\n    // aria-live=\"polite\" //''invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    // role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\n// InputMessage.defaultProps = {\n//   ariaAtomic: 'true',\n//   role: 'alert'\n// };\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\nimport ScreenReader from '../screen-reader';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${uid}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} <ScreenReader>Error</ScreenReader> {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${uid}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","import React, { Children, cloneElement, forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-list';\n\nconst List = forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    type,\n    ...remainingProps\n  } = props;\n\n  const Tag = type === 'ordered' ? 'ol' : 'ul';\n\n  return (\n    <Tag\n      className={classnames(CSS_PREFIX, {\n        [`${CSS_PREFIX}--${type}`]: Boolean(type)\n      }, className )}\n      ref={ref}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, child => {\n          if (child) {\n            return cloneElement(child, {\n              className: classnames(child.props.className, `${CSS_PREFIX}-item`)\n            });\n          }\n\n          return child;\n        })\n      }\n    </Tag>\n  );\n});\n\nList.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type\n   */\n  type: oneOf(['ordered'])\n};\n\nList.displayName = 'List';\n\nexport default List;\n","import React from 'react';\nimport { arrayOf, bool, func, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\nimport { ComboboxUtil } from '@visa/ui-utils';\nconst CSS_PREFIX = 'vds-listbox';\n\nconst renderListboxItem = (props, optionsTemplate) => {\n  const {\n    filterFunction,\n    getItemProps,\n    inputValue,\n    listboxItemRef,\n    noMatchCallback,\n    noSelectionCheckMark,\n    type,\n    selectedItem\n  } = props;\n\n  const highlightedIndex = props.highlightedIndex < 0 ? -1 : props.highlightedIndex;\n  const { itemKey, optionValues, renderOption } = optionsTemplate;\n  let filteredOptions;\n\n  if (type !== 'none' && inputValue && inputValue.trim()) {\n    filteredOptions = ComboboxUtil.filterOptionValues(\n      inputValue\n        .trim()\n        .replace(/\\s\\s+/g, ' ')\n        .toLowerCase(),\n      optionsTemplate,\n      filterFunction\n    );\n  } else {\n    filteredOptions = { count: optionValues ? optionValues.length : 0, itemValues: optionValues };\n  }\n\n  const filterCount = filteredOptions.count;\n  const filteredValues = filteredOptions.itemValues;\n  const highlightedItem = filteredOptions.itemValues ? filteredOptions.itemValues[highlightedIndex] : null;\n  if (filterCount === 0) {\n    noMatchCallback(true);\n    return null;\n  }\n  noMatchCallback(false);\n\n  return filteredValues.map((item, index) => {\n    const isSelected = selectedItem && selectedItem[itemKey] === item[itemKey];\n    const isHighlight = highlightedItem && highlightedItem[itemKey] === item[itemKey];\n    const itemProps = {\n      className: classnames(\n        `${CSS_PREFIX}-item`,\n        { [`${CSS_PREFIX}--item-selected`]: isSelected && !noSelectionCheckMark },\n        { [`${CSS_PREFIX}--item-highlight`]: isHighlight },\n        'visa-ui-btn-icon--light-fill'\n      )\n    };\n    if (isSelected) {\n      itemProps.ref = listboxItemRef;\n    }\n    return (\n      <li\n        {...getItemProps({\n          index,\n          item,\n          key: item[itemKey]\n        })}\n        {...itemProps}\n      >\n        <span className={`${CSS_PREFIX}--item-container`}>\n          {renderOption(item)}\n          {isSelected && !noSelectionCheckMark ? <Icon name=\"checkmark\" resolution=\"tiny\" /> : null}\n        </span>\n      </li>\n    );\n  });\n};\n\nconst ListBox = props => {\n  const { getMenuProps, isOpen, listboxClass, isListboxOpen, listboxProps, listboxRef, optionsTemplate, ...restOfProps } = props;\n  return (\n    <div className={classnames('vds-menu--absolute ', { [`vds-menu--show`]: isOpen && isListboxOpen })}>\n      <ul\n        {...listboxProps}\n        {...getMenuProps({\n          className: classnames(CSS_PREFIX, listboxClass),\n          ref: listboxRef\n        })}\n      >\n        {isOpen && optionsTemplate && optionsTemplate.optionValues && optionsTemplate.optionValues.length ? renderListboxItem(restOfProps, optionsTemplate) : null}\n      </ul>\n    </div>\n  );\n};\n\nListBox.propTypes = {\n  filterFunction: func,\n  getMenuProps: func,\n  isListboxOpen: bool,\n  isOpen: bool,\n  listboxClass: string,\n  listboxItemRef: func.isRequired,\n  listboxProps: shape({}),\n  listboxRef: func.isRequired,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  }),\n  type: oneOf(['none', 'manual', 'auto'])\n};\n\nListBox.displayName = 'ListBox';\n\nexport default ListBox;\n","import { useEffect, useRef } from 'react';\n/**\n * @description custom react hook, if there is a long list of items,\n * this hook will scroll the selected item to the view\n *\n * @param {object} currentSelectItem\n * @param {object} optionsTemplate\n * @param {string} comboboxType\n * @returns {object} listboxItemRef, listboxRef\n */\nconst useScrollToItem = (currentSelectItem, optionsTemplate, comboboxType) => {\n  const listboxItemRef = useRef(null);\n  const listboxRef = useRef(null);\n  useEffect(() => {\n    if (listboxRef.current && listboxItemRef.current && comboboxType !== 'auto') {\n      if (currentSelectItem && optionsTemplate && optionsTemplate.optionValues) {\n        const index = optionsTemplate.optionValues.findIndex(\n          item => item[optionsTemplate.itemKey] === currentSelectItem[optionsTemplate.itemKey]\n        );\n        if (index >= 0) {\n          listboxRef.current.scrollTop += listboxItemRef.current.offsetTop;\n        }\n      }\n    }\n  });\n  return { listboxItemRef, listboxRef };\n};\n\nexport default useScrollToItem;\n","import { useEffect, useCallback } from 'react';\n/**\n * @description Reverse of Control,\n * expose downshift internal action to parent component so\n * we can customize combobox behavior to meet different requirements\n *\n * @param {function} comboboxAction\n * @param {object} downshiftInternalActions\n */\n\nconst useComboboxAction = (comboboxAction, downshiftInternalActions) => {\n  const dispatchComboboxAction = useCallback((action, data) => {\n    try {\n      if (data === undefined) {\n        downshiftInternalActions[action.type]();\n      } else {\n        downshiftInternalActions[action.type](data);\n      }\n    } catch (err) {\n      throw new Error(`Action ${action.type} is not available.`);\n    }\n  }, [downshiftInternalActions]);\n\n  useEffect(() => {\n    if (typeof comboboxAction === 'function') {\n      comboboxAction(dispatchComboboxAction);\n    }\n  }, [comboboxAction, dispatchComboboxAction, downshiftInternalActions]);\n};\n\nexport default useComboboxAction;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-legend';\n\nconst Legend = ({ children, className, ...remainingProps }) => (\n  <legend\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </legend>\n);\n\nLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nLegend.displayName = 'Legend';\n\nexport default Legend;\n","import React, { memo, useEffect, useRef, useState } from 'react';\nimport Downshift from 'downshift';\nimport { arrayOf, bool, func, shape, string, oneOf } from 'prop-types';\nimport Listbox from './listbox';\nimport classnames from 'classnames';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport Input from '../input';\nimport useScrollToItem from './useScrollToItem';\nimport useComboboxAction from './useComboboxAction';\nimport { ComboboxUtil } from '@visa/ui-utils';\n\nconst CSS_PREFIX = 'vds-combobox';\n\nexport const COMBOBOX_TYPE = {\n  auto: 'auto',\n  manual: 'manual',\n  none: 'none'\n};\n\nconst preventRerender = (prevProps, nextProps) => JSON.stringify(prevProps) === JSON.stringify(nextProps);\n\nconst Combobox = memo(({\n  className,\n  comboboxClass,\n  containerProps,\n  defaultItem,\n  comboboxAction,\n  errorText,\n  filterFunction,\n  inputProps,\n  noMatchMessage,\n  onInputBlur,\n  onInputChange,\n  onInputFocus,\n  onSelectionChange,\n  optionsTemplate,\n  showErrorText,\n  showHelpText,\n  type,\n  ...restProps\n}) => {\n  if (typeof filterFunction() !== 'boolean') {\n    throw new Error('Filter function must return a boolean.');\n  }\n\n  const [currentSelectItem, setCurrentSelectItem] = useState(defaultItem ? defaultItem : null);\n  const inputRef = useRef(null);\n  const [inputError, setInputError] = useState(errorText);\n  const [inputValue, setInputValue] = useState(defaultItem ? defaultItem.value : '');\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const [searchHasNoMatch, setSearchHasNoMatch] = useState(false);\n  const { listboxItemRef, listboxRef } = useScrollToItem(currentSelectItem, optionsTemplate, type);\n\n  //Reverse of Control, expose downshift internal action to parent component\n  const downshiftInternalActions = {};\n  const actionList = ['clearSelection', 'closeMenu', 'openMenu', 'selectItem', 'setHighlightedIndex'];\n  useComboboxAction(comboboxAction, downshiftInternalActions);\n\n  useEffect(() => {\n    if (searchHasNoMatch || errorText) {\n      if (searchHasNoMatch && noMatchMessage) {\n        setInputError(noMatchMessage);\n      } else if (errorText && errorText !== inputError) {\n        setInputError(errorText);\n      } else {\n        setInputError(undefined);\n      }\n    } else {\n      setInputError(undefined);\n    }\n    if (searchHasNoMatch) {\n      setListboxOpen(false);\n    } else {\n      setListboxOpen(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errorText, noMatchMessage, searchHasNoMatch]);\n\n  //set default index\n  let defaultIndex = -1;\n\n  if (defaultItem && optionsTemplate && optionsTemplate.optionValues) {\n    defaultIndex = optionsTemplate.optionValues.findIndex(\n      item => item[optionsTemplate.itemKey] === defaultItem[optionsTemplate.itemKey]\n    );\n  }\n\n  const handleInputBlur = e => {\n    if (typeof onInputBlur === 'function') {\n      if (currentSelectItem) {\n        onInputBlur(e, currentSelectItem.value);\n      } else {\n        onInputBlur(e);\n      }\n    }\n  };\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n    if (typeof onInputChange === 'function') {\n      onInputChange(e, e.target.value);\n    }\n  };\n\n  const handleInputFocus = e => {\n    if (inputRef.current) {\n      inputRef.current.setSelectionRange(0, e.target.value.length);\n    }\n    if (typeof onInputFocus === 'function') {\n      onInputFocus(e, e.target.value);\n    }\n  };\n\n  const updateInputValue = selection => {\n    if (selection) {\n      setInputValue(selection.value);\n    }\n  };\n\n  const handleSelection = selection => {\n    updateInputValue(selection);\n    if (typeof onSelectionChange === 'function') {\n      onSelectionChange(selection);\n    }\n  };\n\n  const handleNoMatch = noMatch => {\n    if (searchHasNoMatch !== noMatch) {\n      setSearchHasNoMatch(noMatch);\n    }\n  };\n\n  const handleA11yStatusMessage = status => {\n    if (type === COMBOBOX_TYPE.auto && status.isOpen) {\n      setCurrentSelectItem(status.highlightedItem);\n    }\n    return status.isOpen && status.highlightedItem ? status.highlightedItem.value : '';\n  };\n\n  const handleOuterClick = () => {\n    if (currentSelectItem && currentSelectItem.value !== inputValue) {\n      downshiftInternalActions.selectItem(currentSelectItem);\n    }\n  };\n\n\n  const stateReducer = (state, changes) => {\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.changeInput:\n        let changeInputChanges = { ...changes };\n        if (type === COMBOBOX_TYPE.none || type === COMBOBOX_TYPE.manual) {\n          if (state.selectedItem) {\n            changeInputChanges = { ...changeInputChanges, selectedItem: null };\n            setCurrentSelectItem(null);\n          }\n        } else if (type === COMBOBOX_TYPE.auto) {\n          if (inputError === noMatchMessage) {\n            changeInputChanges = { ...changeInputChanges, selectedItem: null };\n            setCurrentSelectItem(null);\n          }\n          changeInputChanges = { ...changeInputChanges, highlightedIndex: 0 };\n        }\n        return changeInputChanges;\n      case Downshift.stateChangeTypes.clickButton:\n      case Downshift.stateChangeTypes.blurInput:\n        let blurInputChanges = { ...changes };\n        if ( type === COMBOBOX_TYPE.auto && changes.isOpen === false) {\n          if (inputError === noMatchMessage) {\n            blurInputChanges = { ...blurInputChanges, inputValue: state.inputValue };\n          } else if (currentSelectItem !== blurInputChanges.selectedItem) {\n            blurInputChanges = { ...blurInputChanges, selectedItem: currentSelectItem };\n            handleSelection(currentSelectItem);\n          }\n        }\n        return blurInputChanges;\n      case Downshift.stateChangeTypes.keyDownEscape: {\n        return {\n          ...changes,\n          selectedItem: currentSelectItem\n        };\n      }\n      default:\n        return changes;\n    }\n  };\n\n  return (\n    <Downshift\n      defaultHighlightedIndex={defaultIndex}\n      initialInputValue={defaultItem ? defaultItem.value : ''}\n      inputValue={inputValue}\n      itemToString={item => (item ? item.value : '')}\n      onChange={handleSelection}\n      stateReducer={stateReducer}\n      onOuterClick={handleOuterClick}\n      getA11yStatusMessage={handleA11yStatusMessage}\n    >\n      {({ getInputProps, getToggleButtonProps, isOpen, ...listboxDownshift }) => {\n        if (Object.keys(downshiftInternalActions).length === 0) {\n          downshiftInternalActions.setInputError = setInputError;\n      for (const action of actionList) { // eslint-disable-line\n            downshiftInternalActions[action] = listboxDownshift[action];\n          }\n        }\n        return (\n          <div\n            {...containerProps}\n            className={classnames(`${CSS_PREFIX}-container`, className, comboboxClass.containerClass)}\n          >\n            <Input\n              {...getInputProps({\n                onBlur: handleInputBlur,\n                onChange: handleInputChange,\n                onFocus: handleInputFocus\n              })}\n              {...inputProps}\n              className={classnames(`${CSS_PREFIX}-input-wrapper`, comboboxClass.inputWrapperClass)}\n              errorText={inputError}\n              invalid={Boolean(inputError)}\n              labelId={getInputProps()['aria-labelledby']}\n              noValidate\n              ref={inputRef}\n              showErrorText={Boolean(inputError) && showErrorText}\n              showHelpText={Boolean(inputProps.helpText) && showHelpText}\n              type=\"text\"\n            >\n              <ButtonIcon\n                ariaLabel={isOpen ? 'collapse' : 'expand'}\n                {...getToggleButtonProps({})}\n                iconType=\"light-tiny\"\n                tabIndex=\"-1\"\n              >\n                <Icon name={isOpen ? 'arrow-collapse' : 'arrow-expand'} resolution=\"low\" />\n              </ButtonIcon>\n            </Input>\n            <Listbox\n              {...listboxDownshift}\n              {...restProps}\n              filterFunction={filterFunction}\n              listboxClass={comboboxClass.listboxClass}\n              isListboxOpen={isListboxOpen}\n              listboxItemRef={li => {\n                listboxItemRef.current = li;\n              }}\n              listboxRef={ul => {\n                listboxRef.current = ul;\n              }}\n              isOpen={isOpen}\n              noMatchCallback={handleNoMatch}\n              optionsTemplate={optionsTemplate}\n              type={type}\n            />\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}, preventRerender);\n\nCombobox.defaultProps = {\n  comboboxClass: {\n    containerClass: null,\n    inputWrapperClass: null,\n    listboxClass: null\n  },\n  containerProps: {\n    style: {\n      display: 'block',\n      position: 'relative'\n    }\n  },\n  errorText: '',\n  filterFunction: ComboboxUtil.filterFunction,\n  inputProps: {\n    label: 'Label',\n    name: 'combobox'\n  },\n  noMatchMessage: 'No entries matching, Please try again.',\n  type: 'manual'\n};\n\nCombobox.propTypes = {\n  className: string,\n  comboboxAction: func,\n  comboboxClass: shape({\n    containerClass: string,\n    inputWrapperClass: string,\n    listboxClass: string\n  }),\n  containerProps: shape({}),\n  defaultItem: shape({\n    value: string.isRequired\n  }),\n  errorText: string,\n  filterFunction: func,\n  inputProps: shape({\n    disabled: bool,\n    helpText: string,\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool\n  }),\n  noMatchMessage: string,\n  onInputBlur: func,\n  onInputChange: func,\n  onInputFocus: func,\n  onSelectionChange: func,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  }).isRequired,\n  showErrorText: bool,\n  showHelpText: bool,\n  type: oneOf(['none', 'manual', 'auto'])\n};\n\nCombobox.displayName = 'Combobox';\n\nexport default Combobox;\n","import React, { forwardRef } from 'react';\nimport { bool, element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst FormControl = forwardRef(({\n  children,\n  className,\n  divide,\n  resize,\n  space,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(`${CSS_PREFIX}-control`, {\n      [`${CSS_PREFIX}-control--${divide}${resize ? '--resize' : ''}`]: Boolean(divide),\n      [`${CSS_PREFIX}-control--${space}`]: Boolean(space),\n      [`vds-input--split-field`]: Boolean(space)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nFormControl.propTypes = {\n  /**\n  * @ignore\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Divide by\n   */\n  divide: oneOf(['twenty-five', 'fifty']),\n\n  /**\n   * Position\n   */\n  position: oneOf(['left', 'right']),\n\n  /**\n   * Resize\n   */\n  resize: bool,\n  /**\n   * Space\n   */\n  space: oneOf(['thirty', 'forty', 'fifty', 'sixty', 'seventy'])\n};\n\nFormControl.displayName = 'FormControl';\n\nexport default FormControl;\n","import React, { useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport Downshift from 'downshift';\nimport { arrayOf, bool, func, number, oneOfType, shape, string } from 'prop-types';\nimport Listbox from '../combobox/listbox';\nimport Input from '../input';\nimport useScrollToItem from '../combobox/useScrollToItem';\nimport useComboboxAction from '../combobox/useComboboxAction';\n\nconst ComboboxFreeformManualSelection = ({\n  comboboxClass,\n  comboboxAction,\n  containerProps,\n  errorText,\n  // eslint-disable-line no-unused-vars\n  inputProps,\n  itemToStringFunc,\n  onInputBlur,\n  onInputChange,\n  onInputFocus,\n  onSelectionChange,\n  optionsTemplate,\n  ...restProps\n}) => {\n  const [currentSelectItem, setCurrentSelectItem] = useState('');\n  const inputRef = useRef(null);\n  const [inputError, setInputError] = useState(errorText);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const [searchHasNoMatch, setSearchHasNoMatch] = useState(false);\n  const { listboxItemRef, listboxRef } = useScrollToItem(currentSelectItem, optionsTemplate || {});\n\n  const downshiftInternalActions = {};\n  const actionList = ['clearSelection', 'closeMenu', 'openMenu', 'selectItem', 'setHighlightedIndex'];\n  useComboboxAction(comboboxAction, downshiftInternalActions);\n\n  //Error text from parent component\n  useEffect(() => {\n    if (errorText) {\n      setInputError(errorText);\n    } else {\n      setInputError('');\n    }\n  }, [errorText]);\n\n  useEffect(() => {\n    if (inputError) {\n      //if errorText exist, when noMatch error disappear, reset back to errorText\n      if (errorText) {\n        setInputError(errorText);\n      } else {\n        setInputError('');\n      }\n    }\n    if (searchHasNoMatch) {\n      setListboxOpen(false);\n    } else {\n      setListboxOpen(true);\n    }\n  }, [errorText, inputError, searchHasNoMatch]);\n\n  const handleInputBlur = e => {\n    typeof onInputBlur === 'function' && onInputBlur(e, e.target.value);\n  };\n\n  const handleInputChange = e => {\n    typeof onInputChange === 'function' && onInputChange(e, e.target.value);\n  };\n\n  const handleInputFocus = e => {\n    typeof onInputFocus === 'function' && onInputFocus(e, e.target.value);\n  };\n\n  const handleSelection = selection => {\n    setCurrentSelectItem(selection ? selection : null);\n    setInputError('');\n    typeof onSelectionChange === 'function' && onSelectionChange(selection);\n  };\n\n  const handleNoMatch = noMatch => {\n    if (searchHasNoMatch !== noMatch) {\n      setSearchHasNoMatch(noMatch);\n    }\n  };\n\n  return (\n    <Downshift\n      initialInputValue=\"\"\n      initialSelectedItem={currentSelectItem}\n      itemToString={itemToStringFunc}\n      onChange={handleSelection}\n    >\n      {({ getInputProps, isOpen, ...listboxDownshift }) => { // eslint-disable-line no-unused-vars\n        if (Object.keys(downshiftInternalActions).length === 0) {\n          downshiftInternalActions.setInputError = setInputError;\n          for (const action of actionList) { // eslint-disable-line\n            downshiftInternalActions[action] = listboxDownshift[action];\n          }\n        }\n        return (\n          <div {...containerProps} className={classnames('vds-combobox-container', comboboxClass.containerClass)}>\n            <Input\n              {...getInputProps({\n                onBlur: handleInputBlur,\n                onChange: handleInputChange,\n                onFocus: handleInputFocus\n              })}\n              {...inputProps}\n              className={classnames('vds-combobox-input-wrapper', comboboxClass.inputWrapperClass)}\n              errorText={inputError}\n              ref={inputRef}\n              invalid={Boolean(inputError)}\n              labelId={getInputProps()['aria-labelledby']}\n              showErrorText={Boolean(inputError)}\n              showHelpText={Boolean(inputProps.helpText)}\n              type=\"text\"\n            />\n            <Listbox\n              {...listboxDownshift}\n              {...restProps}\n              listboxClass={comboboxClass.listboxClass}\n              isListboxOpen={isListboxOpen}\n              listboxItemRef={li => {\n                listboxItemRef.current = li;\n              }}\n              listboxRef={ul => {\n                listboxRef.current = ul;\n              }}\n              isOpen={isOpen}\n              noMatchCallback={handleNoMatch}\n              noSelectionCheckMark\n              optionsTemplate={optionsTemplate}\n            />\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n};\n\nComboboxFreeformManualSelection.propTypes = {\n  comboboxAction: func,\n  comboboxClass: shape({\n    containerClass: string,\n    inputWrapperClass: string,\n    listboxClass: string\n  }),\n  containerProps: shape({}),\n  errorText: string,\n  id: oneOfType([number, string]),\n  inputProps: shape({\n    disabled: bool,\n    helpText: string,\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool,\n    showHelpText: bool\n  }),\n  itemToStringFunc: func.isRequired,\n  onInputBlur: func,\n  onInputChange: func,\n  onInputFocus: func,\n  onSelectionChange: func,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  })\n};\n\nComboboxFreeformManualSelection.defaultProps = {\n  comboboxClass: {\n    containerClass: null,\n    inputWrapperClass: null,\n    listboxClass: null\n  },\n  errorText: '',\n  inputProps: {\n    label: 'Text for label',\n    name: 'combobox'\n  }\n};\n\nComboboxFreeformManualSelection.displayName = 'ComboboxFreeformManualSelection';\n\nexport default ComboboxFreeformManualSelection;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst Form = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nForm.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nForm.displayName = 'Form';\n\nexport default Form;\n","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState, useEffect } from 'react';\nimport { NO_INPUT_ERROR, NO_MASK_ERROR, createTextMaskInputElement, isArray, isNil } from '../index';\n/**\n * Custom hook to give an input element Text-Masking capabilities\n * This component will default w/ the empty string as the `value setting\n * @param {Object} props\n * @return {Object} shape is as follows...\n * {\n *    getInputProps: {\n *      onChange: Function,\n *      ref: Object,\n *      value: String -- Defaults to empty string. This may set any `controlled` boolean flags to TRUE (e.g. props.value !== undefined)\n *    },\n *    meta: {\n *      adjustedCaretPosition: (undefined|Number),\n *      placeholder: String\n *    }\n * }\n */\n\nexport default function useTextMask() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$guide = props.guide,\n      guide = _props$guide === void 0 ? false : _props$guide,\n      mask = props.mask,\n      onChange = props.onChange,\n      _props$placeholderCha = props.placeholderChar,\n      placeholderChar = _props$placeholderCha === void 0 ? 'X' : _props$placeholderCha,\n      _props$upperCaseValue = props.upperCaseValue,\n      upperCaseValue = _props$upperCaseValue === void 0 ? false : _props$upperCaseValue,\n      value = props.value;\n  var inputRef = useRef(null);\n  var textMask = useRef(null);\n\n  var _useState = useState({\n    adjustedCaretPosition: undefined,\n    conformedValue: isNil(value) ? '' : value.toString(),\n    placeholder: undefined\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var createTextMask = function createTextMask() {\n    return createTextMaskInputElement({\n      guide: guide,\n      inputElement: inputRef.current,\n      mask: mask,\n      placeholderChar: placeholderChar,\n      upperCaseValue: upperCaseValue\n    });\n  };\n\n  useEffect(function () {\n    textMask.current = createTextMask();\n\n    var _textMask$current$upd = textMask.current.update(),\n        adjustedCaretPosition = _textMask$current$upd.adjustedCaretPosition,\n        conformedValue = _textMask$current$upd.conformedValue,\n        placeholder = _textMask$current$upd.previousPlaceholder;\n\n    setState({\n      adjustedCaretPosition: adjustedCaretPosition,\n      conformedValue: conformedValue,\n      placeholder: placeholder\n    });\n  }, [guide, mask, placeholderChar]);\n  useEffect(function () {\n    if (textMask.current) {\n      var _textMask$current$upd2 = textMask.current.update(value),\n          adjustedCaretPosition = _textMask$current$upd2.adjustedCaretPosition,\n          conformedValue = _textMask$current$upd2.conformedValue,\n          placeholder = _textMask$current$upd2.previousPlaceholder;\n\n      setState({\n        adjustedCaretPosition: adjustedCaretPosition,\n        conformedValue: conformedValue,\n        placeholder: placeholder\n      });\n    }\n  }, [value]);\n  useEffect(function () {\n    if (inputRef.current) {\n      if (isArray(mask) && mask.length > 0) {\n        textMask.current = createTextMask();\n\n        var _textMask$current$upd3 = textMask.current.update(value),\n            adjustedCaretPosition = _textMask$current$upd3.adjustedCaretPosition,\n            conformedValue = _textMask$current$upd3.conformedValue,\n            placeholder = _textMask$current$upd3.previousPlaceholder;\n\n        setState({\n          adjustedCaretPosition: adjustedCaretPosition,\n          conformedValue: conformedValue,\n          placeholder: placeholder\n        });\n      } else {\n        throw new Error(NO_MASK_ERROR);\n      }\n    } else {\n      throw new Error(NO_INPUT_ERROR);\n    }\n  }, []);\n  /**\n   * @param {Event} e\n   * @protected\n   */\n\n  function handleChange(e) {\n    var _textMask$current$upd4 = textMask.current.update(),\n        adjustedCaretPosition = _textMask$current$upd4.adjustedCaretPosition,\n        conformedValue = _textMask$current$upd4.conformedValue,\n        placeholder = _textMask$current$upd4.previousPlaceholder;\n\n    var newState = {\n      adjustedCaretPosition: adjustedCaretPosition,\n      conformedValue: conformedValue,\n      placeholder: placeholder\n    };\n    setState(newState);\n    typeof onChange === 'function' && onChange(e, newState);\n  }\n\n  return {\n    getInputProps: {\n      onChange: handleChange,\n      ref: inputRef,\n      value: state.conformedValue\n    },\n    meta: {\n      adjustedCaretPosition: state.adjustedCaretPosition,\n      placeholder: state.placeholder\n    }\n  };\n}\n/**\n * Render Prop implemention using our custom hook\n * @constructor\n */\n\nexport function TextMaskInput(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return children(useTextMask(props));\n}","export { default as useTextMask, TextMaskInput } from './useTextMask';"],"sourceRoot":""}