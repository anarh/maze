{"version":3,"sources":["components/switch/index.js","components/switch/example/index.js","pages/components/switch.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["Switch","forwardRef","ref","className","checked","defaultChecked","defaultFocused","disabled","id","shortid","generate","label","name","onBlur","onChange","onFocus","switchOffText","switchOnText","remainingProps","useState","isChecked","setChecked","isFocused","setFocused","uid","useRef","current","useEffect","classnames","htmlFor","aria-checked","type","event","target","role","aria-hidden","defaultProps","displayName","SwitchExample","tag","lg","md","sm","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","aria-label","undefined","exact","to","process","activeClassName","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","value","length","color","Array","isArray","v","join","defaultValue","ScreenReader","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/62.6fac676b.chunk.js","sourcesContent":["import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-switch';\nconst CSS_STATE = 'vds-state';\n\nconst Switch = forwardRef(({\n  className,\n  checked,\n  defaultChecked,\n  defaultFocused,\n  disabled,\n  id = shortid.generate(),\n  label,\n  name,\n  onBlur,\n  onChange,\n  onFocus,\n  switchOffText,\n  switchOnText,\n  ...remainingProps\n}, ref) => {\n  const [isChecked, setChecked] = useState(checked || defaultChecked);\n  const [isFocused, setFocused] = useState(defaultFocused);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setChecked(checked);\n  }, [checked]);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, {\n        [`${CSS_STATE}--active`]: isChecked,\n        [`${CSS_STATE}--disabled`]: disabled,\n        [`${CSS_STATE}--focus`]: isFocused\n      }, className)}\n      id={uid}\n    >\n      <label\n        className={classnames(`${CSS_PREFIX}-label`)}\n        htmlFor={`switch-control-${uid}`}\n        id={`switch-control-label-${uid}`}\n      >\n        {label}\n        <input\n          aria-checked={isChecked ? 'true' : 'false'}\n          type=\"checkbox\"\n          id={`switch-control-${uid}`}\n          className={classnames(`${CSS_PREFIX}-input`)}\n          defaultChecked={isChecked}\n          name={name}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          ref={ref}\n          role=\"switch\"\n          {...remainingProps}\n        />\n        <div className={classnames(`${CSS_PREFIX}-value`)} aria-hidden=\"true\">\n          {isChecked ? switchOnText : switchOffText}\n        </div>\n        <span className={classnames(`${CSS_PREFIX}-toggle`)} />\n      </label>\n    </div>\n  );\n});\n\nSwitch.propTypes = {\n  /**\n   *   Checked\n   */\n  checked: bool,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Default checked\n   */\n  defaultChecked: bool,\n\n  /**\n   * Default focused\n   */\n  defaultFocused: bool,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n  * Label\n  */\n  label: node,\n\n  /**\n   * Name\n   */\n  name: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the value is changed.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /*\n   * Switch off text\n   */\n  switchOffText: node,\n\n  /*\n   * Switch on text\n   */\n  switchOnText: node\n};\n\nSwitch.defaultProps = {\n  switchOffText: 'Off',\n  switchOnText: 'On'\n};\n\nSwitch.displayName = 'Switch';\n\nexport default Switch;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Switch from '../../switch';\n\nconst SwitchExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Switch</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={3} md={6} sm={4}>\n        <Switch id=\"switch-id-1\" label=\"Location\" name=\"location-input\" />\n      </Col>\n      <Col />\n    </Row>\n  </Grid>\n);\n\nexport default SwitchExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/switch/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/switch/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/switch/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SwitchExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Switch\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Switch</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Switch Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSwitchExample.displayName = 'SwitchExample';\n\nexport default SwitchExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}