{"version":3,"sources":["components/checkbox-error-message/index.js","components/checkbox-list/index.js","components/checkbox-list-item/index.js","components/checkbox-set/index.js","components/checkbox-set-legend/index.js","components/checkbox/example/index.js","pages/components/checkbox.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","components/button-label/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-text/index.js","components/checkbox/index.js"],"names":["CheckboxErrorMessage","ariaAtomic","ariaLive","children","className","role","remainingProps","aria-atomic","aria-live","classnames","defaultProps","displayName","CheckboxList","type","Boolean","CheckboxListItem","CheckboxSet","CheckboxSetLegend","forwardRef","ref","invalid","Tag","tag","propTypes","node","string","bool","elementType","CheckboxExample","useRef","refOneValidation","refTwoValidation","refThreeValidation","refValidationArray","useState","validationTrigger","setValidation","showIndividualError","setIndividualError","showGroupError","setGroupError","items","checked","id","label","value","stateOne","setStateOne","values","stateTwo","setStateTwo","required","stateThree","setStateThree","list","disabled","indeterminate","stateFour","setStateFour","stateFive","setStateFive","useEffect","current","focus","handleChangeOne","e","map","item","target","handleChangeTwo","index","findIndex","v","slice","handleChangeFour","itemId","childId","parentIndex","parent","childIndex","child","filter","c","length","handleChangeFive","defaultChecked","name","k","key","onChange","join","includes","resolution","undefined","style","display","onClick","invalidChecker","aria-describedby","i","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","line","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","doc","description","tabIndex","color","Array","isArray","defaultValue","ScreenReader","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","ButtonLabel","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","RegExp","test","ButtonText","active","colorScheme","flippable","isFullWidth","oneOfType","Checkbox","shortid","onBlur","onFocus","setFocus","check","setCheck","indetermined","setIndetermined","uid","aria-checked","event","htmlFor","stopPropagation"],"mappings":"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","file":"static/js/26.cd940e89.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-error-message';\n\nconst CheckboxErrorMessage = ({ ariaAtomic, ariaLive, children, className, role, ...remainingProps }) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nCheckboxErrorMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: string,\n\n  /**\n   * Aria Live\n   */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nCheckboxErrorMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive',\n  role: 'alert'\n};\n\nCheckboxErrorMessage.displayName = 'CheckboxErrorMessage';\n\nexport default CheckboxErrorMessage;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-list';\n\nconst CheckboxList = ({ children, className, type, ...remainingProps }) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}-${type}`]: Boolean(type)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n);\n\nCheckboxList.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type\n   */\n  type: oneOf([\n    'inner'\n  ])\n};\n\nCheckboxList.displayName = 'CheckboxList';\n\nexport default CheckboxList;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-list-item';\n\nconst CheckboxListItem = ({ children, className, ...remainingProps }) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n);\n\nCheckboxListItem.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxListItem.displayName = 'CheckboxListItem';\n\nexport default CheckboxListItem;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-set';\n\nconst CheckboxSet = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nCheckboxSet.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nCheckboxSet.displayName = 'CheckboxSet';\n\nexport default CheckboxSet;\n","import React, { forwardRef } from 'react';\nimport { bool, elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-checkbox-set-legend';\nconst CSS_STATE = 'vds-state';\n\nconst CheckboxSetLegend = forwardRef(({ children, className, invalid, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--invalid`]: Boolean(invalid)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nCheckboxSetLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Invalid\n  */\n  invalid: bool,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nCheckboxSetLegend.defaultProps = {\n  tag: 'legend'\n};\n\nCheckboxSetLegend.displayName = 'CheckboxSetLegend';\n\nexport default CheckboxSetLegend;\n","import React, { useRef, useState, useEffect } from 'react';\nimport ButtonText from '../../button-text';\nimport Checkbox from '../../checkbox';\nimport CheckboxErrorMessage from '../../checkbox-error-message';\nimport CheckboxList from '../../checkbox-list';\nimport CheckboxListItem from '../../checkbox-list-item';\nimport CheckboxSet from '../../checkbox-set';\nimport CheckboxSetLegend from '../../checkbox-set-legend';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst CheckboxExample = () => {\n  const ref = useRef();\n  const refOneValidation = useRef();\n  const refTwoValidation = useRef();\n  const refThreeValidation = useRef();\n  const refValidationArray = [refOneValidation, refTwoValidation, refThreeValidation];\n  const [validationTrigger, setValidation] = useState(false);\n  const [showIndividualError, setIndividualError] = useState(false);\n  const [showGroupError, setGroupError] = useState(false);\n  const [stateOne, setStateOne] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'item-1',\n        label: 'One',\n        value: 'one'\n      },\n      {\n        checked: true,\n        id: 'item-2',\n        label: 'Two',\n        value: 'two'\n      },\n      {\n        checked: false,\n        id: 'item-3',\n        label: 'Three',\n        value: 'three'\n      },\n      {\n        checked: false,\n        id: 'item-4',\n        label: 'Four',\n        value: 'four'\n      }\n    ]\n  });\n\n  const [stateTwo, setStateTwo] = useState({ values : ['6', '8'] });\n  const [stateThree, setStateThree] = useState({\n    checked: false,\n    id: 'validation-individual',\n    invalid: false,\n    label: 'I have read and agree to the Terms and Conditions',\n    required: true,\n    value: '1'\n  });\n  const [stateFour, setStateFour] = useState({\n    list: [\n      {\n        checked: false,\n        children: [\n          {\n            checked: true,\n            id: 'checkbox-indeterminate-100',\n            label: 'Pepperoni',\n            value: '1-10'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-101',\n            label: 'Sausage',\n            value: '1-11'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-102',\n            label: 'BBQ Chicken',\n            value: '1-12'\n          }\n        ],\n        disabled: false,\n        id: 'checkbox-indeterminate-1',\n        indeterminate: true,\n        label: 'All Meats',\n        value: '1'\n      },\n      {\n        checked: false,\n        children: [\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-200',\n            label: 'Mushrooms',\n            value: '2-13'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-201',\n            label: 'Black Olives',\n            value: '2-14'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-202',\n            label: 'Pineapple',\n            value: '2-15'\n          },\n          {\n            checked: false,\n            id: 'checkbox-indeterminate-203',\n            label: 'Red Onion',\n            value: '2-16'\n          }\n        ],\n        disabled: false,\n        id: 'checkbox-indeterminate-2',\n        indeterminate: false,\n        label: 'All Vegetables',\n        value: '2'\n      },\n      {\n        checked: true,\n        disabled: false,\n        id: 'checkbox-indeterminate-3',\n        indeterminate: false,\n        label: 'Extra Cheese',\n        value: '3'\n      }\n    ]\n  });\n\n  const [stateFive, setStateFive] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'validation-1',\n        invalid: false,\n        label: 'Regular',\n        required: true,\n        value: '1'\n      }, {\n        checked: false,\n        id: 'validation-2',\n        invalid: false,\n        label: 'Deep Dish',\n        required: true,\n        value: '2'\n      }, {\n        checked: false,\n        id: 'validation-3',\n        invalid: false,\n        label: 'Thin Crust',\n        required: true,\n        value: '3'\n      }\n    ]\n  });\n\n  useEffect(() => {\n    if (stateFive.items[0].invalid === true && validationTrigger === true) {\n      refOneValidation.current.focus();\n    } else if (stateFive.items[1].invalid === true && validationTrigger === true) {\n      refTwoValidation.current.focus();\n    } else if (stateFive.items[2].invalid === true && validationTrigger === true) {\n      refThreeValidation.current.focus();\n    }\n    setValidation(false);\n  }, [validationTrigger, stateFive.items]);\n\n  const handleChangeOne = e => setStateOne({\n    items: [\n      ...stateOne.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked\n      }))\n    ]\n  });\n\n  const handleChangeTwo = e => {\n    const index = stateTwo.values.findIndex(v => v === e.target.value);\n    if (index !== -1) {\n      return setStateTwo({\n        values: [...stateTwo.values.slice(0, index), ...stateTwo.values.slice(index + 1)]\n      });\n    }\n\n    return setStateTwo({\n      values: [...stateTwo.values, e.target.value]\n    });\n  };\n\n  const handleChangeThree = e => setStateThree({\n    ...stateThree,\n    checked: e.target.id === stateThree.id ? !stateThree.checked : stateThree.checked,\n    invalid: e.target.id === stateThree.id && stateThree.invalid ? stateThree.checked : stateThree.invalid\n  });\n\n  const handleSubmitThree = () => {\n    let invalidChecker = false;\n    if (stateThree.checked === false) {\n      invalidChecker = true;\n      ref.current.focus();\n      setIndividualError(true);\n    } else {\n      invalidChecker = false;\n      setIndividualError(false);\n    }\n\n    setStateThree({\n      ...stateThree,\n      invalid: invalidChecker\n    });\n  };\n\n  const handleChangeFour = (itemId, childId) => {\n    const parentIndex = stateFour.list.findIndex(item => item.id === itemId);\n    const parent = stateFour.list[parentIndex];\n\n    if (childId) {\n      const childIndex = parent.children.findIndex(child => child.id === childId);\n      const child = parent.children[childIndex];\n      parent.children = [...parent.children.slice(0, childIndex), { ...child, checked: !child.checked }, ...parent.children.slice(childIndex + 1)];\n      parent.checked = parent.children.filter(c => c.checked === true).length === parent.children.length;\n      parent.indeterminate = parent.children.filter(c => c.checked === true).length > 0;\n    }\n\n    if (typeof childId === 'undefined') {\n      parent.checked = !parent.checked;\n      parent.indeterminate = false;\n      if (parent.children) {\n        parent.children = parent.children.map(child => ({ ...child, checked: parent.checked }));\n      }\n    }\n\n    setStateFour({\n      list: [\n        ...stateFour.list.slice(0, parentIndex),\n        parent,\n        ...stateFour.list.slice(parentIndex + 1)\n      ]\n    });\n  };\n\n  const handleChangeFive = e => setStateFive({\n    items: [\n      ...stateFive.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked,\n        invalid: e.target.id === item.id && item.invalid ? item.checked : item.invalid\n      }))\n    ]\n  });\n\n  const handleSubmitFive = () => {\n    let invalidChecker = false;\n    if (stateFive.items.filter(item => item.checked).length === 0) {\n      invalidChecker = true;\n      setGroupError(true);\n    } else {\n      invalidChecker = false;\n      setGroupError(false);\n    }\n\n    setStateFive({\n      items: [\n        ...stateFive.items.map(item => ({\n          ...item,\n          invalid: invalidChecker\n        }))\n      ]\n    });\n\n    setValidation(true);\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateful)</Typography>\n          <Typography>\n            All checkbox props are mapped to the checkbox\n            component, e.g. defaultChecked, onClick, etc\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Checkbox Options</CheckboxSetLegend>\n            <Checkbox\n              defaultChecked\n              name=\"example\"\n              label=\"First option\"\n              value=\"1\"\n            />\n            <Checkbox\n              name=\"example\"\n              label=\"Second option\"\n              value=\"2\"\n            />\n            <Checkbox\n              name=\"example\"\n              label=\"Third option\"\n              value=\"3\"\n            />\n            <Checkbox\n              name=\"example\"\n              label=\"Fourth option\"\n              value=\"4\"\n              disabled\n            />\n            <Checkbox\n              name=\"example\"\n              label=\"Fifth option\"\n              value=\"5\"\n              defaultChecked\n              disabled\n            />\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateless) data approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Stateless Data Approach Checkbox Options</CheckboxSetLegend>\n            {\n              stateOne.items.map((item, k) => (\n                <Checkbox\n                  key={k}\n                  checked={item.checked}\n                  id={item.id}\n                  label={item.label}\n                  name=\"checkbox-stateless\"\n                  onChange={handleChangeOne}\n                  value={item.value}\n                />\n              ))\n            }\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox (stateless) composition approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography>Selected values [{stateTwo.values.join(', ')}] </Typography>\n          <CheckboxSet>\n            <CheckboxSetLegend>Stateless Composition Approach Checkbox Options</CheckboxSetLegend>\n            <Checkbox\n              checked={stateTwo.values.includes(\"6\")}\n              name=\"example\"\n              label=\"First option\"\n              value=\"6\"\n              onChange={handleChangeTwo}\n            />\n            <Checkbox\n              checked={stateTwo.values.includes(\"7\")}\n              name=\"example\"\n              label=\"Second option\"\n              value=\"7\"\n              onChange={handleChangeTwo}\n            />\n            <Checkbox\n              checked={stateTwo.values.includes(\"8\")}\n              name=\"example\"\n              label=\"Third option\"\n              value=\"8\"\n              onChange={handleChangeTwo}\n            />\n            <Checkbox\n              checked={stateTwo.values.includes(\"9\")}\n              name=\"example\"\n              label=\"Fourth option\"\n              value=\"9\"\n              onChange={handleChangeTwo}\n              disabled\n            />\n            <Checkbox\n              checked={stateTwo.values.includes(\"10\")}\n              name=\"example\"\n              label=\"Fifth option\"\n              value=\"10\"\n              onChange={handleChangeTwo}\n              disabled\n            />\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Indeterminate</Typography>\n          <Typography>This standalone indeterminate checkbox is for developer example only. <br />\n             To see an accessible indeterminate checkbox in action, view the Checkbox Set with Validation below.</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Checkbox\n            name=\"example\"\n            label=\"Indeterminate Checkbox Example\"\n            id=\"checkbox-test-21\"\n            value=\"2\"\n            indeterminate\n          />\n          <Checkbox\n            name=\"example\"\n            label=\"Disabled Indeterminate Checkbox Example\"\n            id=\"checkbox-test-22\"\n            value=\"2\"\n            disabled\n            indeterminate\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox with Validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Checkbox\n            checked={stateThree.checked}\n            id={stateThree.id}\n            invalid={stateThree.invalid}\n            label={stateThree.label}\n            onChange={handleChangeThree}\n            ref={ref}\n            required={stateThree.required}\n            value={stateThree.value}\n          />\n          {\n            showIndividualError === true\n              ? <CheckboxErrorMessage>\n                <Icon name=\"error\" resolution=\"low\" id=\"single-validation-error-message\" />\n                Error: Please check the box.</CheckboxErrorMessage>\n              : undefined\n          }\n          <ButtonText\n            style={{ display: \"block\" }}\n            onClick={handleSubmitThree}\n            aria-describedby=\"single-validation-error-message\"\n          >\n            Submit (test validation)\n          </ButtonText>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Group with Indeterminate</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Select Pizza Toppings</CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateFour.list.map((item, i) => (\n                  <CheckboxListItem key={i}>\n                    <Checkbox\n                      checked={item.checked}\n                      disabled={item.disabled}\n                      indeterminate={item.indeterminate}\n                      id={item.id}\n                      label={item.label}\n                      name=\"pizza-topping-group\"\n                      onChange={() => handleChangeFour(item.id)}\n                      value={item.value}\n                    />\n                    {\n                      item.children\n                        ? <CheckboxList type=\"inner\">\n                          {item.children.map((child, k) => (\n                            <CheckboxListItem key={k}>\n                              <Checkbox\n                                checked={child.checked}\n                                id={child.id}\n                                label={child.label}\n                                name=\"pizza-topping-item\"\n                                onChange={() => handleChangeFour(item.id, child.id)}\n                                value={child.value}\n                              />\n                            </CheckboxListItem>\n                          ))}\n                        </CheckboxList>\n                        : null\n                    }\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend>Select Drink Toppings</CheckboxSetLegend>\n            <CheckboxList>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Boba\"\n                  value=\"1\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Lychee jelly\"\n                  value=\"2\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Mango star jelly\"\n                  value=\"3\"\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Aloe vera pieces (not available)\"\n                  value=\"4\"\n                  disabled\n                />\n              </CheckboxListItem>\n              <CheckboxListItem>\n                <Checkbox\n                  name=\"drink-toppings\"\n                  label=\"Coconut jelly (included)\"\n                  value=\"5\"\n                  defaultChecked\n                  disabled\n                />\n              </CheckboxListItem>\n            </CheckboxList>\n          </CheckboxSet>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Checkbox Set with Validation (BYO-State)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <CheckboxSet>\n            <CheckboxSetLegend\n              invalid={showGroupError}\n            >\n              Pizza topping\n            </CheckboxSetLegend>\n            <CheckboxList>\n              {\n                stateFive.items.map((item, k) => (\n                  <CheckboxListItem key={k}>\n                    <Checkbox\n                      checked={item.checked}\n                      id={item.id}\n                      invalid={item.invalid}\n                      label={item.label}\n                      name=\"checkbox-validation-data-example\"\n                      onChange={handleChangeFive}\n                      ref={refValidationArray[k]}\n                      value={item.value}\n                    />\n                  </CheckboxListItem>\n                ))\n              }\n            </CheckboxList>\n            {\n              showGroupError === true\n                ? <CheckboxErrorMessage id=\"validation-error-message\">\n                  <Icon name=\"error\" resolution=\"low\" />\n                  Error: Please select at least one pizza topping.</CheckboxErrorMessage>\n                : undefined\n            }\n          </CheckboxSet>\n          <ButtonText\n            onClick={handleSubmitFive}\n            aria-describedby=\"validation-error-message\"\n          >\n            Submit (test validation)\n          </ButtonText>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default CheckboxExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/checkbox/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/checkbox/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/checkbox/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst CheckboxExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Checkbox\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Checkbox</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Checkbox Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/checkbox/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/checkbox/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/checkbox/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nCheckboxExample.displayName = 'CheckboxExample';\n\nexport default CheckboxExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var i = step;\n    var bytes = random(i);\n\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || '';\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-checkbox';\nconst CSS_STATE = 'vds-state';\n\nconst Checkbox = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  indeterminate,\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const [indetermined, setIndetermined] = useState(indeterminate);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setIndetermined(indeterminate);\n  }, [indeterminate]);\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setIndetermined(false);\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        aria-checked={indetermined ? 'mixed' : check ? 'true' : 'false'}\n        className={classnames(CSS_PREFIX, className)}\n        disabled={disabled}\n        id={uid}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        ref={ref}\n        type=\"checkbox\"\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focus),\n            [`${CSS_STATE}--indeterminate`]: indetermined && !check,\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          }\n        )}\n        htmlFor={uid}\n        onClick={e => e.stopPropagation()} // if not click event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nCheckbox.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the checkbox will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   *   Indeterminate\n   */\n  indeterminate: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the checkbox element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n"],"sourceRoot":""}