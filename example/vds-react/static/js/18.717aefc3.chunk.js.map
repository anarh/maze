{"version":3,"sources":["components/input-count/index.js","components/input-count-number/index.js","components/input-textarea/index.js","components/textarea/utils.js","components/textarea/index.js","components/textarea/example/index.js","pages/components/textarea.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-input/index.js"],"names":["InputCount","ariaAtomic","ariaLive","children","className","remainingProps","aria-atomic","aria-live","classnames","defaultProps","displayName","InputCountNumber","InputTextarea","forwardRef","ref","propTypes","string","getCharCount","defaultValue","value","undefined","toString","length","Textarea","ariaLabel","autoResize","containerProps","counter","css","disabled","errorIcon","errorText","helpIcon","helpText","id","shortid","generate","invalid","label","maxCharacters","noValidate","onBlur","onChange","onFocus","readOnly","rows","showCounter","showErrorText","showHelpText","useRef","useState","charCount","setCharCount","dirty","setDirty","Boolean","filled","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","current","ariaDescribedBy","useEffect","textarea","checkValidity","required","trim","style","height","el","window","getComputedStyle","borderBottomWidth","borderTopWidth","lineHeight","paddingBottom","paddingTop","rowHeight","parseFloat","parseInt","scrollHeight","Math","max","getTextareaHeight","Message","focus","isTextarea","htmlFor","aria-describedby","aria-label","aria-invalid","e","target","show","name","resolution","TextareaExample","state","setState","tag","reactDocs","require","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","color","type","v","join","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","node","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","byte","RegExp","test","InputContainer","expanded","InputLabel","InputBar","InputMessage","InputInput"],"mappings":"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","file":"static/js/18.717aefc3.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-count';\n\nconst InputCount = ({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  ...remainingProps\n}) => (\n  <div\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputCount.propTypes = {\n  /**\n  * Aria atomic\n  */\n  ariaAtomic: string,\n\n  /**\n  * Aria Live\n  */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputCount.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'polite'\n};\n\nInputCount.displayName = 'InputCount';\n\nexport default InputCount;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-count-number';\n\nconst InputCountNumber = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputCountNumber.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputCountNumber.displayName = 'InputCountNumber';\n\nexport default InputCountNumber;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--textarea';\n\nconst InputTextarea = forwardRef(({ className, ...remainingProps }, ref) => (\n  <textarea\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  />\n));\n\nInputTextarea.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputTextarea.displayName = 'InputTextarea';\n\nexport default InputTextarea;\n","const getTextareaHeight = (rows = null, el) => {\n  const {\n    borderBottomWidth,\n    borderTopWidth,\n    lineHeight,\n    paddingBottom,\n    paddingTop\n  } = window.getComputedStyle(el);\n\n  const rowHeight =\n    rows === null\n      ? 0\n      : parseFloat(lineHeight) * parseInt(rows, 10) +\n      parseFloat(borderBottomWidth) +\n      parseFloat(borderTopWidth) +\n      parseFloat(paddingBottom) +\n      parseFloat(paddingTop);\n\n  const scrollHeight = el.scrollHeight + parseFloat(borderBottomWidth) + parseFloat(borderTopWidth);\n\n  return Math.max(rowHeight, scrollHeight);\n};\n\nconst getCharCount = (defaultValue, value) => {\n  if (value !== undefined && value !== null) {\n    return value.toString().length;\n  } else if (defaultValue !== undefined && defaultValue !== null) {\n    return defaultValue.toString().length;\n  }\n\n  return 0;\n};\n\nexport { getTextareaHeight, getCharCount };\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport Icon from '../icon';\nimport InputBar from '../input-bar';\nimport InputContainer from '../input-container';\nimport InputCount from '../input-count';\nimport InputCountNumber from '../input-count-number';\nimport InputInput from '../input-input';\nimport InputLabel from '../input-label';\nimport InputMessage from '../input-message';\nimport InputTextarea from '../input-textarea';\nimport { getTextareaHeight, getCharCount } from './utils';\n\nconst Textarea = forwardRef(({\n  ariaLabel,\n  autoResize,\n  className,\n  containerProps,\n  counter,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  maxCharacters,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  readOnly,\n  rows,\n  showCounter,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [charCount, setCharCount] = useState(getCharCount(remainingProps.defaultValue, remainingProps.value));\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const ariaDescribedBy = showCounter\n    ? `count-${uid}`\n    : showErrorText || showHelpText\n      ? `input-message-${uid}`\n      : undefined;\n\n  useEffect(() => {\n    const textarea = ref.current;\n\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!textarea.checkValidity() || (textarea.required && !textarea.value.trim().length)));\n      }\n\n      if (!dirty && (textarea.required && !textarea.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !textarea.required && !textarea.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  }, [charCount, dirty, focused, noValidate, ref]);\n\n  useEffect(() => {\n    const textarea = ref.current;\n\n    if (textarea && autoResize) {\n      textarea.style.height = '0';\n      textarea.style.height = `${getTextareaHeight(rows, textarea)}px`;\n    }\n  }, [autoResize, charCount, ref, rows]);\n\n  useEffect(() => {\n    setCharCount(getCharCount(remainingProps.defaultValue, remainingProps.value));\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setCharCount(value.length);\n    setDirty(true);\n    setFilled(value !== '');\n\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  let Message;\n  if (!isInvalid && focused && showHelpText && Boolean(helpText)) {\n    Message = <Fragment>{helpIcon} {helpText}</Fragment>;\n  } else if (isInvalid && showErrorText && Boolean(errorText)) {\n    Message = <Fragment>{errorIcon} {errorText}</Fragment>;\n  }\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      isTextarea={!autoResize}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          <InputTextarea\n            aria-describedby={ariaDescribedBy}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n      </InputBar>\n      <InputMessage\n        id={`input-message-${uid}`}\n        show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n        invalid={isInvalid}\n      >\n        {Message}\n      </InputMessage>\n      {\n        showCounter && maxCharacters\n          ? <InputCount id={`count-${uid}`}>\n            {counter(parseInt(maxCharacters, 10), charCount)}\n          </InputCount>\n          : undefined\n      }\n    </InputContainer>\n  );\n});\n\nTextarea.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   * Auto resize\n   */\n  autoResize: bool,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   *  Counter\n   */\n  counter: func,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * If true, component will go into invalid state.\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * The maximum number of characters that the user can enter.\n   * If this value isn't specified, the user can enter an unlimited number of characters.\n   */\n  maxCharacters: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element value changes.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * This Boolean attribute indicates that the user cannot modify the value of the control.\n   * Unlike the disabled attribute, the readonly attribute does not prevent the user from\n   * clicking or selecting in the control\n   */\n  readOnly: bool,\n\n  /**\n   * The number of visible text lines for the textarea.\n   */\n  rows: oneOfType([number, string]),\n\n  /**\n   * Show Counter\n   */\n  showCounter: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool\n};\n\nTextarea.defaultProps = {\n  counter: (max, charCount) => <span>Characters remaining <InputCountNumber>{max - charCount}</InputCountNumber></span>,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nTextarea.displayName = 'Textarea';\n\nexport default Textarea;\n","/* eslint-disable spellcheck/spell-checker */\n\nimport React, { useState } from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Textarea from '../../textarea';\nimport Typography from '../../typography';\n\nconst TextareaExample = () => {\n  const [state, setState] = useState({\n    value: ''\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea</Typography>\n          <Typography tag=\"h2\">Similar to input text with controlled and uncontrolled features</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea prefilled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Some default value\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea prefilled with Auto resize</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea disabled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\" disabled\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea readonly</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            readOnly\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea error</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            errorText=\"Fill out this input\"\n            invalid={state.value === ''}\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            onChange={e => setState({ value: e.target.value })}\n            showErrorText\n            value={state.value}\n          />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea with Auto resize</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            rows=\"3\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea with Auto resize and text counter</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            maxCharacters=\"350\"\n            rows=\"3\"\n            showCounter\n          />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TextareaExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/textarea/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/textarea/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/textarea/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst TextareaExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Textarea\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Textarea</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Textarea Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Textarea Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nTextareaExample.displayName = 'TextareaExample';\n\nexport default TextareaExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  size = +size;\n  var id = '';\n\n  while (true) {\n    var bytes = random(step);\n\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask;\n\n      if (alphabet[byte]) {\n        id += alphabet[byte];\n        if (id.length === size) return id;\n      }\n    }\n  }\n};\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n"],"sourceRoot":""}