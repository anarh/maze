{"version":3,"sources":["components/input-cvv-information/index.js","components/input-cvv/index.js","components/input-cvv/example/index.js","pages/components/input-cvv.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","components/button-label/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-text/index.js","components/button-icon/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js"],"names":["CSS_PREFIX","InputCvvInformation","children","className","maxLength","remainingProps","classnames","parseInt","defaultProps","displayName","INPUT_TYPE","InputCvv","forwardRef","ref","autoComplete","buttonAriaLabel","css","disabled","id","shortid","generate","inputMode","label","name","pattern","showInfoButton","useState","showCvvInfo","setShowCvvInfo","inputType","setInputType","uid","useRef","current","useEffect","value","length","substr","onBlur","onFocus","onKeyDown","e","key","test","altKey","ctrlKey","metaKey","shiftKey","preventDefault","onPaste","stopPropagation","pastedText","clipboardData","window","getData","type","aria-controls","aria-expanded","toString","ariaLabel","iconType","onClick","resolution","undefined","variant","InputCvvExample","stateOne","setStateOne","stateTwo","setStateTwo","stateThree","setStateThree","onChange","target","readOnly","invalid","errorText","required","showErrorText","Fragment","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","tag","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","color","Array","isArray","v","join","defaultValue","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","ButtonLabel","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","RegExp","ButtonText","active","colorScheme","flippable","isFullWidth","includes","oneOfType","ButtonIcon","aria-label","isRequired","InputContainer","expanded","filled","focus","isTextarea","InputLabel","InputBar","InputMessage","ariaAtomic","show","aria-atomic","aria-live","InputOption","InputHint","InputText","Input","checkmarkIcon","containerProps","errorIcon","helpIcon","helpText","labelId","noValidate","placeholder","showCheckmark","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput"],"mappings":"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","file":"static/js/13.a0c37a06.chunk.js","sourcesContent":["import React from 'react';\nimport { node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-cvv-information';\n\nconst InputCvvInformation = ({\n  children,\n  className,\n  maxLength,\n  ...remainingProps\n}) => (\n  <figure\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    <div\n      className={classnames(`${CSS_PREFIX}__svg`, {\n        [`${CSS_PREFIX}__svg--three-digit-img`]: parseInt(maxLength, 10) === 3,\n        [`${CSS_PREFIX}__svg--four-digit-img`]: parseInt(maxLength, 10) === 4\n      })}\n    />\n    <figcaption>\n      {children}\n    </figcaption>\n  </figure>\n);\n\nInputCvvInformation.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Max Length\n   */\n  maxLength: oneOfType([number, string])\n};\n\nInputCvvInformation.defaultProps = {\n  maxLength: 3\n};\n\nInputCvvInformation.displayName = 'InputCvvInformation';\n\nexport default InputCvvInformation;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport Input from '../input';\nimport InputCvvInformation from '../input-cvv-information';\nimport Typography from '../typography';\n\nconst CSS_PREFIX = 'vds-input-cvv';\nconst INPUT_TYPE = {\n  PASSWORD: 'password',\n  TEXT: 'text'\n};\n\nconst InputCvv = forwardRef(({\n  autoComplete,\n  buttonAriaLabel,\n  children,\n  className,\n  css,\n  disabled,\n  id = shortid.generate(),\n  inputMode,\n  label,\n  name,\n  maxLength,\n  pattern,\n  showInfoButton,\n  ...remainingProps\n}, ref) => {\n  const [showCvvInfo, setShowCvvInfo] = useState(false);\n  const [inputType, setInputType] = useState(INPUT_TYPE.PASSWORD);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  ref = ref || useRef();\n\n  const handleBlur = () => setInputType(INPUT_TYPE.PASSWORD);\n  const handleClick = () => setShowCvvInfo(!showCvvInfo);\n  const handleFocus = () => setInputType(INPUT_TYPE.TEXT);\n\n  // Prevent pasting of non-digits\n  const handlePaste = e => {\n    e.stopPropagation();\n\n    const clipboardData = e.clipboardData || window.clipboardData;\n    const pastedText = clipboardData.getData('Text');\n\n    if (!/^\\d*$/.test(pastedText)) {\n      e.preventDefault();\n    }\n  };\n\n  // Prevent alpha letters\n  // but allow numeric and combination keys\n  const handleKeyDown = e => {\n    if (\n      e.key.length === 1 &&\n      !/^\\d*$/.test(e.key) &&\n      !e.altKey &&\n      !e.ctrlKey &&\n      !e.metaKey &&\n      !e.shiftKey\n    ) {\n      e.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    if (ref.current.value && (ref.current.value.length > maxLength)) {\n      ref.current.value = ref.current.value.substr(0, maxLength);\n    }\n  }, [maxLength, ref]);\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, className)}\n      css={css}\n    >\n      <Input\n        autoComplete={autoComplete}\n        disabled={disabled}\n        label={typeof label === 'function' ? label(maxLength) : label}\n        id={uid}\n        inputMode={inputMode}\n        maxLength={maxLength}\n        name={name}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        onPaste={handlePaste}\n        pattern={pattern ? pattern : `[0-9]{${maxLength}}`}\n        ref={ref}\n        type={inputType}\n        {...remainingProps}\n      >\n        {\n          showInfoButton && !disabled\n            ? <ButtonIcon\n              aria-controls={`${uid}__cvv-information`}\n              aria-expanded={showCvvInfo.toString()}\n              ariaLabel={buttonAriaLabel}\n              iconType=\"light-tiny\"\n              onClick={handleClick}\n            >\n              <Icon name=\"info\" resolution=\"low\" />\n            </ButtonIcon>\n            : undefined\n        }\n      </Input>\n      {\n        showCvvInfo\n          ? <InputCvvInformation id={`${uid}__cvv-information`} maxLength={maxLength}>\n            {\n              typeof children === 'function'\n                ? children(maxLength)\n                : children\n            }\n          </InputCvvInformation>\n          : undefined\n      }\n    </div>\n  );\n});\n\nInputCvv.propTypes = {\n  /**\n   * Auto Complete\n   */\n  autoComplete: string,\n\n  /**\n   * Button Aria Label\n   */\n  buttonAriaLabel: string,\n\n  /**\n  *  a Function that provides maxLength as param\n  */\n  children: oneOfType([func, node]),\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * If true, the input will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Mode to force mobile screens to use large number pad\n   */\n  inputMode: string,\n\n  /**\n   * Label\n   */\n  label: oneOfType([func, string]),\n\n  /**\n   * Max Length\n   */\n  maxLength: number,\n\n  /**\n   * Name\n   */\n  name: string,\n\n  /**\n   * Pattern\n   */\n  pattern: string,\n\n  /**\n   * Show info button\n   */\n  showInfoButton: bool,\n\n  /**\n   * Style\n   */\n  style: string\n};\n\nInputCvv.defaultProps = {\n  autoComplete: 'cc-csc',\n  buttonAriaLabel: 'CVV Information',\n  children: maxLength => (\n    <Fragment>\n      <Typography variant=\"subtitle\">Security Code</Typography>\n      <Typography variant=\"caption\">The {maxLength}-digit code on the back of your card</Typography>\n    </Fragment>\n  ),\n  inputMode: 'decimal',\n  label: maxLength => `Enter ${maxLength} digit CVV`,\n  maxLength: 3,\n  name: 'cvc',\n  showInfoButton: true\n};\n\nInputCvv.displayName = 'InputCvv';\n\nexport default InputCvv;\n","import React, { useState } from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport InputCvv from '../../input-cvv';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst InputCvvExample = () => {\n  const [stateOne, setStateOne] = useState({ value: '044' });\n  const [stateTwo, setStateTwo] = useState({ maxLength: 3 });\n  const [stateThree, setStateThree] = useState({ maxLength: 3 });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          InputCvv Default Uncontrolled (3 digits)\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv name=\"cvv\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Default Controlled (3 digits)\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            name=\"cvv\"\n            onChange={e => setStateOne({ value: e.target.value })}\n            value={stateOne.value}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Default (4 digits)\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv maxLength={4} name=\"cvv\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv disabled\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv disabled name=\"cvv\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv readOnly\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv name=\"cvv\" readOnly />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv error\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv invalid name=\"cvv\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Required with custom error text\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Input Required\"\n            name=\"cvv\"\n            required\n            showErrorText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Default (3 digits)\n\n          Custom labels\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            label={maxLength => `${maxLength}桁のコードを入力します。`}\n            name=\"cvv\"\n          >\n            {\n              maxLength => (\n                <React.Fragment>\n                  <Typography variant=\"subtitle\">セキュリティコード</Typography>\n                  <Typography variant=\"caption\">カードの裏側にある{maxLength}桁のコード</Typography>\n                </React.Fragment>\n              )\n            }\n          </InputCvv>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Switch from 3 to 4 digits\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv maxLength={stateTwo.maxLength} name=\"cvv\" />\n          <ButtonText\n            onClick={() => setStateTwo({ maxLength: stateTwo.maxLength === 3 ? 4 : 3 })}\n          >\n            Switch to {stateTwo.maxLength === 3 ? 4 : 3} digits\n          </ButtonText>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv switch between 3  and 4 digits with custom labels\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            label={maxLength => `${maxLength}桁のコードを入力します。`}\n            name=\"cvv\"\n            maxLength={stateThree.maxLength}\n          >\n            {\n              maxLength => (\n                <React.Fragment>\n                  <Typography variant=\"subtitle\">セキュリティコード</Typography>\n                  <Typography variant=\"caption\">カードの裏側にある{maxLength}桁のコード</Typography>\n                </React.Fragment>\n              )\n            }\n          </InputCvv>\n          <ButtonText\n            onClick={() => setStateThree({ maxLength: stateThree.maxLength === 3 ? 4 : 3 })}\n          >\n            Switch to {stateThree.maxLength === 3 ? 4 : 3} digits\n          </ButtonText>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default InputCvvExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/input-cvv/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/input-cvv/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/input-cvv/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst InputCvvExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for InputCvv\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Input Cvv</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-cvv`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Input Cvv Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-cvv/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-cvv/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-cvv`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-cvv`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-cvv/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-cvv/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-cvv/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-cvv/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nInputCvvExample.displayName = 'InputCvvExample';\n\nexport default InputCvvExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var i = step;\n    var bytes = random(i);\n\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || '';\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${uid}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${uid}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n"],"sourceRoot":""}