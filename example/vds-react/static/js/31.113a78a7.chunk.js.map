{"version":3,"sources":["components/button/index.js","components/nav-user/index.js","components/nav/example/index.js","pages/components/nav.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/listbox/index.js","components/listbox-item/index.js","components/menu/index.js","components/listbox-item-container/index.js","components/nav-site/index.js","components/menu-curtain/index.js","components/navmenu/index.js"],"names":["Button","forwardRef","ref","active","children","className","disabled","flippable","remainingProps","classnames","Boolean","propTypes","bool","node","string","displayName","NavUser","NavExample","useState","open","setOpen","tag","position","href","ariaLabel","iconType","name","resolution","alt","src","Logo","menu","placement","orientation","size","undefined","style","onClick","reactDocs","require","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","v","join","defaultValue","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","aria-label","isRequired","Listbox","multiselect","ListboxItem","focus","listItemValue","selected","data-list-item-value","Menu","show","ListboxItemContainer","cloneElement","element","NavSite","MenuCurtain","keyCode","DOWN","END","ESC","HOME","PAGEDOWN","PAGEUP","RETURN","SPACE","TAB","UP","getCharFilterIndex","char","count","focusableItems","start","textContent","trim","toLowerCase","substring","Navmenu","id","shortid","generate","modifiers","focusedIndex","setFocusedIndex","setFocusableItems","disabledFocusReturn","setDisabledFocusReturn","uid","useRef","current","listboxRef","buttonRef","querySelectorAll","handleClick","e","isButton","target","tagName","isLink","preventDefault","handleKeyDown","str","charCode","currentTarget","isListBox","focusId","ENTER","ctrlKey","altKey","metaKey","onKeyDown","overflowY","Children","child","k","c","offset","enabled"],"mappings":"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","file":"static/js/31.113a78a7.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn';\nconst CSS_STATE = 'vds-state';\n\nconst Button = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  flippable,\n  ...remainingProps\n}, ref) => (\n  <button\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </button>\n));\n\nButton.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-user';\n\nconst NavUser = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavUser.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavUser.displayName = 'NavUser';\n\nexport default NavUser;\n","import React, { useState } from 'react';\nimport Avatar from '../../avatar';\nimport AvatarText from '../../avatar-text';\nimport Button from '../../button';\nimport ButtonAction from '../../button-action';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Listbox from '../../listbox';\nimport ListboxItem from '../../listbox-item';\nimport ListboxItemContainer from '../../listbox-item-container';\nimport Nav from '../../nav';\nimport NavBrand from '../../nav-brand';\nimport NavBrandInfo from '../../nav-brand-info';\nimport NavBrandLogo from '../../nav-brand-logo';\nimport NavBrandLogoImage from '../../nav-brand-logo-image';\nimport NavLinks from '../../nav-links';\nimport Navmenu from '../../navmenu';\nimport NavPanel from '../../nav-panel';\nimport NavSite from '../../nav-site';\nimport NavSkip from '../../nav-skip';\nimport NavUser from '../../nav-user';\nimport NavVersionMenu from '../../nav-version-menu';\nimport NavVerticalFooter from '../../nav-vertical-footer';\nimport NavVerticalHeader from '../../nav-vertical-header';\nimport NavVerticalToggleButton from '../../nav-vertical-toggle-button';\nimport Row from '../../row';\nimport Tab from '../../tab';\nimport TabItemLabel from '../../tab-item-label';\nimport TabList from '../../tab-list';\nimport Typography from '../../typography';\nimport Logo from '@visa/vds-web/dist/_logos/visa/visa_vbm_wht.svg';\n\nconst NavExample = () => {\n  const [open, setOpen] = useState(true);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav position=\"relative\">\n            <Grid>\n              <Row>\n                <Col>\n                  <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                  <NavBrand>\n                    <NavBrandInfo>\n                      <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                        <Icon name=\"menu\" resolution=\"low\" />\n                      </ButtonIcon>\n                      <NavBrandLogo href=\"http://www.visa.com\">\n                        <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                      </NavBrandLogo>\n                    </NavBrandInfo>\n                  </NavBrand>\n                  <NavSite>\n                    <NavLinks ariaLabel=\"Site Navigation\">\n                      <TabList>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Contact</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Service</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Statistics</Tab>\n                      </TabList>\n                    </NavLinks>\n                  </NavSite>\n                  <NavUser>\n                    <Navmenu\n                      menu={\n                        <Listbox>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Profile</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">Sign Out</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                        </Listbox>\n                      }\n                      placement=\"bottom-end\"\n                    >\n                      <Button flippable>\n                        <Avatar>\n                          <AvatarText>Adam Smith</AvatarText>\n                        </Avatar>\n                        <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n                      </Button>\n                    </Navmenu>\n                  </NavUser>\n                </Col>\n              </Row>\n            </Grid>\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Vertical Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav orientation=\"vertical\" size={open ? undefined : 'mini'}>\n            <NavPanel style={{ position: 'inherit' }}>\n              <NavVerticalHeader>\n                <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                <NavBrand>\n                  <NavBrandInfo>\n                    <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                      <Icon name=\"menu\" resolution=\"low\" />\n                    </ButtonIcon>\n                    <NavBrandLogo href=\"/\">\n                      <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                    </NavBrandLogo>\n                  </NavBrandInfo>\n                </NavBrand>\n              </NavVerticalHeader>\n              <NavLinks ariaLabel=\"Site Navigation\">\n                <TabList orientation=\"vertical\">\n                  <Tab tag={<a />}>\n                    <Icon name=\"savings-account\" resolution=\"low\" /> <TabItemLabel>Info</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />}>\n                    <Icon name=\"note\" resolution=\"low\" /> <TabItemLabel>Docs</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />}>\n                    <Icon name=\"view-grid\" resolution=\"low\" /> <TabItemLabel>Components</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />}>\n                    <Icon name=\"folder-multiple\" resolution=\"low\" /> <TabItemLabel>Resources</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />}>\n                    <Icon name=\"analytics\" resolution=\"low\" /> <TabItemLabel>Charts Library</TabItemLabel>\n                  </Tab>\n                </TabList>\n              </NavLinks>\n              <NavVerticalFooter>\n                <NavVersionMenu>\n                  <Avatar><AvatarText>0.0.0</AvatarText></Avatar>\n                </NavVersionMenu>\n                <NavVerticalToggleButton onClick={() => setOpen(!open)}>\n                  <ButtonAction>\n                    {\n                      open\n                        ? <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n                        : <Icon name=\"arrow-next\" resolution=\"tiny\" />\n                    }\n                  </ButtonAction>\n                </NavVerticalToggleButton>\n              </NavVerticalFooter>\n            </NavPanel>\n          </Nav>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default NavExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/nav/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/nav/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/nav/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst NavExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Nav\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Nav Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Nav Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nNavExample.displayName = 'NavExample';\n\nexport default NavExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox';\n\nconst Listbox = forwardRef(({\n  children,\n  className,\n  multiselect,\n  role,\n  ...remainingProps\n}, ref) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      'vds-select--multi': Boolean(multiselect)\n    }, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n));\n\nListbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Multi select\n   */\n  multiselect: bool,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nListbox.defaultProps = {\n  role: 'listbox'\n};\n\nListbox.displayName = 'Listbox';\n\nexport default Listbox;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItem = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  focus,\n  listItemValue,\n  role,\n  selected,\n  ...remainingProps\n}, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    data-list-item-value={listItemValue}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nListboxItem.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * List item value\n   */\n  listItemValue: string,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Selected\n   */\n  selected: bool\n};\n\nListboxItem.defaultProps = {\n  role: 'option'\n};\n\nListboxItem.displayName = 'ListboxItem';\n\nexport default ListboxItem;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst Menu = forwardRef(({\n  children,\n  className,\n  position,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !position,\n      [`${CSS_PREFIX}--${position}`]: Boolean(position),\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenu.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Position\n   */\n  position: oneOf(['absolute', 'fixed']),\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenu.displayName = 'Menu';\n\nexport default Menu;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item-container';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItemContainer = forwardRef(({\n  children,\n  className,\n  disabled,\n  ...remainingProps\n}, ref) => (\n  cloneElement(children, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nListboxItemContainer.propTypes = {\n  /**\n   * @ignore\n   */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool\n};\n\nListboxItemContainer.displayName = 'ListboxItemContainer';\n\nexport default ListboxItemContainer;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-site';\nconst CSS_STATE = 'vds-state';\n\nconst NavSite = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavSite.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show in mobile\n   */\n  show: bool\n};\n\nNavSite.displayName = 'NavSite';\n\nexport default NavSite;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst MenuCurtain = forwardRef(({\n  children,\n  className,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(`${CSS_PREFIX}-curtain`, {\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenuCurtain.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenuCurtain.displayName = 'MenuCurtain';\n\nexport default MenuCurtain;\n","import React, { Children, cloneElement, useEffect, useRef, useState } from 'react';\nimport { element, number, oneOf, oneOfType, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport MenuCurtain from '../menu-curtain';\nimport Menu from '../menu';\n\nconst CSS_PREFIX = 'vds-navmenu';\n\nconst keyCode = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  PAGEDOWN: 34,\n  PAGEUP: 33,\n  RETURN: 13,\n  SPACE: 32,\n  TAB: 9,\n  UP: 38\n};\n\nconst isPrintableCharacter = str => str.length === 1 && str.match(/\\S/);\nconst getCharFilterIndex = ({\n  char,\n  count,\n  focusableItems,\n  start\n}) => {\n  for (let i = start; i < count; i++) {\n    if (char === focusableItems[i].textContent.trim().toLowerCase().substring(0, 1)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nconst Navmenu = ({\n  children,\n  className,\n  id = shortid.generate(),\n  menu,\n  modifiers,\n  placement,\n  ...remainingProps\n}) => {\n  const [open, setOpen] = useState(false);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const [focusableItems, setFocusableItems] = useState([]);\n  const [disabledFocusReturn, setDisabledFocusReturn] = useState(true);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const listboxRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (listboxRef.current) {\n      setFocusableItems(listboxRef.current.querySelectorAll(\n        'button:not([disabled]):not(.vds-state--disabled), [href]:not(.vds-state--disabled)'\n      ));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (open) {\n      focusableItems[focusedIndex].focus();\n    }\n\n    if (!open && buttonRef.current && !disabledFocusReturn) {\n      buttonRef.current.focus();\n      setDisabledFocusReturn(false);\n    }\n  }, [disabledFocusReturn, focusedIndex, focusableItems, open]);\n\n  const handleClick = e => {\n    const isButton = e.target.tagName.toLowerCase() === 'button';\n    const isLink = e.target.tagName.toLowerCase() === 'a';\n\n    setOpen(!open);\n    if (!isButton && !isLink) {\n      e.preventDefault();\n    }\n  };\n\n  const handleKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableItems.length;\n    const isButton = e.currentTarget.tagName.toLowerCase() === 'button';\n    const isListBox = e.currentTarget.tagName.toLowerCase() === 'ul';\n    let focusId = 0;\n    if (isListBox) {\n      setDisabledFocusReturn(false);\n    }\n\n    if (code === keyCode.END) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (count) {\n        focusId = count - 1;\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.HOME) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (count) {\n        focusId = 0;\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.UP) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n        focusId = focusedIndex || count - 1;\n      }\n\n      if (isListBox && count) {\n        focusId = focusedIndex - 1 < 0 ? count - 1 : focusedIndex - 1;\n      }\n\n      if (count) {\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.DOWN) {\n      e.preventDefault();\n      if (isButton) {\n        setOpen(true);\n        focusId = focusedIndex || 0;\n      }\n\n      if (isListBox && count) {\n        focusId = (focusedIndex + 1) % count;\n      }\n\n      if (count) {\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.ENTER) {\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (isListBox) {\n        setOpen(false);\n      }\n    }\n\n    if (code === keyCode.ESC) {\n      e.preventDefault();\n      setOpen(false);\n    }\n\n    // Tab\n    if (code === keyCode.TAB && isListBox) {\n      setDisabledFocusReturn(true);\n      setOpen(false);\n    }\n\n    if ( e.ctrlKey || e.altKey || e.metaKey || (e.keyCode === keyCode.SPACE) || (e.keyCode === keyCode.RETURN)) {\n      return;\n    }\n\n    if (isPrintableCharacter(e.key)) {\n      const char = e.key.toLowerCase();\n      const start = focusedIndex + 1 === count ? 0 : focusedIndex + 1;\n\n      let match = getCharFilterIndex({\n        char,\n        count,\n        focusableItems,\n        start\n      });\n\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (match === -1) {\n        match = getCharFilterIndex({\n          char,\n          count,\n          focusableItems,\n          start: 0\n        });\n      }\n\n      if (match > -1) {\n        setFocusedIndex(match);\n        focusableItems[match].focus();\n      }\n    }\n  };\n\n  return (\n    <Manager>\n      <div\n        className={classnames(CSS_PREFIX, className)}\n        {...remainingProps}\n      >\n        <Reference>\n          {({ ref }) => (\n            <span ref={ref}>\n              {\n                cloneElement(children, {\n                  active: open,\n                  'aria-controls': `${CSS_PREFIX}-listbox-${uid}`,\n                  'aria-expanded': open ? 'true' : undefined,\n                  'aria-haspopup': menu ? 'true' : 'false',\n                  id: uid,\n                  onClick: handleClick,\n                  onKeyDown: handleKeyDown,\n                  ref: buttonRef\n                })\n              }\n            </span>\n          )}\n        </Reference>\n        <Popper\n          modifiers={modifiers}\n          placement={placement}\n        >\n          {({ ref, style }) => (\n            <Menu\n              id={`${CSS_PREFIX}-menu-${uid}`}\n              position=\"absolute\"\n              ref={ref}\n              show={open}\n              style={{ ...style, overflowY: 'inherit' }}\n            >\n              {\n                cloneElement(menu, {\n                  'aria-labelledby': uid,\n                  children: Children.map(menu.props.children, (child, k) => cloneElement(child, {\n                    children: Children.map(child.props.children, (c, i) => cloneElement(c, {\n                      key: `${uid}-${k}-${i}`,\n                      role: 'menuitem',\n                      tabIndex: '-1'\n                    })),\n                    key: `${uid}-${k}`,\n                    role: 'none'\n                  })),\n                  id: `${CSS_PREFIX}-listbox-${uid}`,\n                  onClick: handleClick,\n                  onKeyDown: handleKeyDown,\n                  ref: listboxRef,\n                  role: 'menu'\n                })\n              }\n            </Menu>\n          )}\n        </Popper>\n      </div>\n      <MenuCurtain\n        onClick={handleClick}\n        show={open}\n      />\n    </Manager>\n  );\n};\n\nNavmenu.propTypes = {\n  /**\n  * @ignore\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Menu\n   */\n  menu: element.isRequired,\n\n  /**\n   * Modifiers\n   */\n  modifiers: shape({}),\n\n  /**\n   * Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ])\n};\n\nNavmenu.defaultProps = {\n  modifiers: {\n    offset: {\n      enabled: true,\n      offset: '0, 15px'\n    }\n  },\n  placement: 'bottom-start'\n};\n\nNavmenu.displayName = 'Navmenu';\n\nexport default Navmenu;\n"],"sourceRoot":""}