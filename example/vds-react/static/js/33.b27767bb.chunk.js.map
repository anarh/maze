{"version":3,"sources":["components/disclosure/index.js","components/disclosure-item/index.js","components/disclosure-details-item/index.js","components/disclosure-text-item/index.js","components/disclosure-content/index.js","components/disclosure-header/index.js","components/disclosure-header-wrapper/index.js","components/disclosure-text-button/index.js","components/disclosure/example/index.js","pages/components/disclosure.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/badge/index.js","components/use-panel-expand/index.js","../node_modules/@visa/vds-web/dist/_imgs/stockphoto.png"],"names":["Disclosure","forwardRef","ref","allowMultipleExpanded","children","className","defaultExpandedId","id","shortid","generate","onChange","Tag","tag","remainingProps","uid","useRef","current","usePanelExpand","focusedId","expandedId","updateFocusedId","updateExpandedId","classnames","Children","map","child","k","cloneElement","expanded","includes","focus","index","onClick","e","onKeyDown","count","defaultProps","displayName","DisclosureItem","DisclosureDetailsItem","DisclosureTextItem","DisclosureContent","aria-hidden","Boolean","propTypes","node","string","bool","oneOfType","number","elementType","DisclosureHeader","iconCollapse","iconExpand","onBlur","onFocus","useState","focused","setFocused","useEffect","handleClick","event","handleKeyDown","aria-controls","aria-expanded","name","resolution","DisclosureHeaderWrapper","DisclosureTextButton","expandedText","text","DisclosureExample","style","backgroundColor","type","valignCenter","textAlign","noTopGutter","noBottomGutter","alt","src","stockPhoto","fontSize","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","value","length","color","Array","isArray","v","join","defaultValue","ScreenReader","KEY_CODES","TabList","orientation","selectedTab","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","querySelectorAll","charCode","keyCode","fIndex","preventDefault","selected","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","Th","Thead","Tr","Badge","setFocusedId","slice","setExpandedId","ids","disclosureIndex","findIndex","module","exports"],"mappings":"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","file":"static/js/33.b27767bb.chunk.js","sourcesContent":["import React, { Children, cloneElement, forwardRef, useRef } from 'react';\nimport { array, bool, elementType, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport usePanelExpand from '../use-panel-expand';\n\nconst CSS_PREFIX = 'vds-disclosure';\n\nconst Disclosure = forwardRef(\n  (\n    {\n      allowMultipleExpanded,\n      children,\n      className,\n      defaultExpandedId,\n      id = shortid.generate(),\n      onChange,\n      tag: Tag,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const uniqueId = useRef(id);\n    const uid = uniqueId.current;\n    const { focusedId, expandedId, updateFocusedId, updateExpandedId } = usePanelExpand(\n      defaultExpandedId,\n      onChange,\n      allowMultipleExpanded\n    );\n\n    return (\n      <Tag className={classnames(CSS_PREFIX, className)} id={uid} ref={ref} {...remainingProps}>\n        {Children.map(children, (child, k) =>\n          cloneElement(child, {\n            expanded: expandedId.includes(k),\n            focus: k === focusedId,\n            id: `${k}--${uid}`,\n            index: k,\n            onClick: (e, index) => updateExpandedId(e, index),\n            onKeyDown: (e, index) => updateFocusedId(e, index, Children.count(children))\n          })\n        )}\n      </Tag>\n    );\n  }\n);\n\nDisclosure.propTypes = {\n  /**\n   * Allow multiple expanded\n   */\n  allowMultipleExpanded: bool,\n\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Array of panel indexes to initially show as expanded\n   */\n  defaultExpandedId: array,\n\n  /**\n   * disabled\n   */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Tag\n   */\n  tag: elementType\n};\n\nDisclosure.defaultProps = {\n  allowMultipleExpanded: true,\n  defaultExpandedId: [],\n  tag: 'div'\n};\n\nDisclosure.displayName = 'Disclosure';\n\nexport default Disclosure;\n","import React, { Children, cloneElement, Fragment } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst CSS_PREFIX = 'vds-disclosure-inline';\n\nconst DisclosureItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <Fragment>\n    {Children.map(children, child => cloneElement(child, { className: CSS_PREFIX, expanded, focus, id, index, onClick, onKeyDown }))}\n  </Fragment>\n);\n\nDisclosureItem.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nDisclosureItem.displayName = 'DisclosureItem';\n\nexport default DisclosureItem;\n","import React, { Children, cloneElement, Fragment } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst CSS_PREFIX = 'vds-disclosure-details';\n\nconst DisclosureDetailsItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <Fragment>\n    {Children.map(children, child => cloneElement(child, { className: CSS_PREFIX, expanded, focus, id, index, onClick, onKeyDown }))}\n  </Fragment>\n);\n\nDisclosureDetailsItem.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nDisclosureDetailsItem.displayName = 'DisclosureDetailsItem';\n\nexport default DisclosureDetailsItem;\n","import React, { Children, cloneElement } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst CSS_PREFIX = 'vds-disclosure-text';\n\nconst DisclosureTextItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <div>\n    {Children.map(children, child => cloneElement(child, { className: CSS_PREFIX, expanded, focus, id, index, onClick, onKeyDown }))}\n  </div>\n);\n\nDisclosureTextItem.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nDisclosureTextItem.displayName = 'DisclosureTextItem';\n\nexport default DisclosureTextItem;\n","import React, { forwardRef } from 'react';\nimport { bool, elementType, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-content';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureContent = forwardRef(\n  ({ children, className, expanded, focus, id, index, tag: Tag, ...remainingProps }, ref) => (\n    <Tag\n      aria-hidden={expanded ? 'false' : 'true'}\n      ref={ref}\n      className={classnames(\n        CSS_PREFIX,\n        {\n          [`${CSS_STATE}--hidden`]: Boolean(expanded) === false\n        },\n        className\n      )}\n      id={`disclosure-content-${id}`}\n      {...remainingProps}\n    >\n      {children}\n    </Tag>\n  )\n);\n\nDisclosureContent.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Tag\n   */\n  tag: elementType\n};\n\nDisclosureContent.defaultProps = {\n  tag: 'div'\n};\n\nDisclosureContent.displayName = 'DisclosureContent';\n\nexport default DisclosureContent;\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, elementType, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\n\nconst CSS_PREFIX = 'vds-disclosure-header';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureHeader = forwardRef(\n  (\n    {\n      children,\n      className,\n      expanded,\n      focus,\n      iconCollapse,\n      iconExpand,\n      id,\n      index,\n      onBlur,\n      onClick,\n      onFocus,\n      onKeyDown,\n      tag: Tag,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = useState(focus);\n\n    ref = ref || useRef(null);\n\n    useEffect(() => {\n      if (focus && ref.current) {\n        ref.current.focus();\n      }\n      setFocused(focus);\n    }, [focus, ref]);\n\n    const handleFocus = event => {\n      setFocused(true);\n      if (typeof onFocus === 'function') {\n        onFocus(event);\n      }\n    };\n\n    const handleBlur = event => {\n      setFocused(false);\n      if (typeof onBlur === 'function') {\n        onBlur(event);\n      }\n    };\n\n    const handleClick = (event, id) => {\n      if (typeof onClick === 'function') {\n        onClick(event, id);\n      }\n    };\n\n    const handleKeyDown = (event, id) => {\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event, id);\n      }\n    };\n\n    return (\n      <Tag>\n        <button\n          aria-controls={`disclosure-content-${id}`}\n          aria-expanded={expanded ? 'true' : 'false'}\n          className={classnames(\n            CSS_PREFIX,\n            {\n              [`${CSS_STATE}--active`]: Boolean(expanded),\n              [`${CSS_STATE}--focus`]: Boolean(focused),\n              'focus-visible': Boolean(focused)\n            },\n            className\n          )}\n          id={`disclosure-header-${id}`}\n          onBlur={handleBlur}\n          onClick={e => handleClick(e, index)}\n          onFocus={handleFocus}\n          onKeyDown={e => handleKeyDown(e, index)}\n          ref={ref}\n          {...remainingProps}\n        >\n          <span className={`${CSS_PREFIX}-icon`}>{expanded ? iconCollapse : iconExpand}</span>\n          {children}\n        </button>\n      </Tag>\n    );\n  }\n);\n\nDisclosureHeader.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Icon collapsed\n   */\n  iconCollapse: node,\n\n  /**\n   * Icon expanded\n   */\n  iconExpand: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onClick: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onKeyDown: func,\n\n  /**\n   * Tag\n   */\n  tag: elementType\n};\n\nDisclosureHeader.defaultProps = {\n  iconCollapse: <Icon name=\"disclosure-collapse\" resolution=\"tiny\" />,\n  iconExpand: <Icon name=\"disclosure-expand\" resolution=\"tiny\" />,\n  tag: 'div'\n};\n\nDisclosureHeader.displayName = 'DisclosureHeader';\n\nexport default DisclosureHeader;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-header-wrapper';\n\nconst DisclosureHeaderWrapper = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nDisclosureHeaderWrapper.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDisclosureHeaderWrapper.displayName = 'DisclosureHeaderWrapper';\n\nexport default DisclosureHeaderWrapper;\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, elementType, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-text-button';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureTextButton = forwardRef(\n  (\n    {\n      className,\n      expanded,\n      expandedText,\n      focus,\n      id,\n      index,\n      onBlur,\n      onClick,\n      onFocus,\n      onKeyDown,\n      tag: Tag,\n      text,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = useState(focus);\n\n    ref = ref || useRef(null);\n\n    useEffect(() => {\n      if (focus && ref.current) {\n        ref.current.focus();\n      }\n      setFocused(focus);\n    }, [focus, ref]);\n\n    const handleFocus = event => {\n      setFocused(true);\n      if (typeof onFocus === 'function') {\n        onFocus(event);\n      }\n    };\n\n    const handleBlur = event => {\n      setFocused(false);\n      if (typeof onBlur === 'function') {\n        onBlur(event);\n      }\n    };\n\n    const handleClick = (event, id) => {\n      if (typeof onClick === 'function') {\n        onClick(event, id);\n      }\n    };\n\n    const handleKeyDown = (event, id) => {\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event, id);\n      }\n    };\n\n    return (\n      <Tag>\n        <button\n          aria-controls={`disclosure-content-${id}`}\n          aria-expanded={expanded ? 'true' : 'false'}\n          className={classnames(\n            CSS_PREFIX,\n            {\n              [`${CSS_STATE}--active`]: Boolean(expanded),\n              [`${CSS_STATE}--focus`]: Boolean(focused),\n              'focus-visible': Boolean(focused)\n            },\n            className\n          )}\n          id={`disclosure-text-button-${id}`}\n          onBlur={handleBlur}\n          onClick={e => handleClick(e, index)}\n          onFocus={handleFocus}\n          onKeyDown={e => handleKeyDown(e, index)}\n          ref={ref}\n          {...remainingProps}\n        >\n          {expanded && expandedText ? expandedText : text}\n        </button>\n      </Tag>\n    );\n  }\n);\n\nDisclosureTextButton.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Text shown when expanded\n   */\n  expandedText: string,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onClick: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onKeyDown: func,\n\n\n  /**\n   * Tag\n   */\n  tag: elementType,\n\n  /**\n   * Text of the button\n   */\n  text: string\n};\n\nDisclosureTextButton.defaultProps = {\n  expandedText: 'Hide Details',\n  tag: 'div',\n  text: 'Show Details'\n};\n\nDisclosureTextButton.displayName = 'DisclosureTextButton';\n\nexport default DisclosureTextButton;\n","import React from 'react';\nimport Badge from '../../badge';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Disclosure from '../../disclosure';\nimport DisclosureItem from '../../disclosure-item';\nimport DisclosureDetailsItem from '../../disclosure-details-item';\nimport DisclosureTextItem from '../../disclosure-text-item';\nimport DisclosureContent from '../../disclosure-content';\nimport DisclosureHeader from '../../disclosure-header';\nimport DisclosureHeaderWrapper from '../../disclosure-header-wrapper';\nimport DisclosureTextButton from '../../disclosure-text-button';\nimport List from '../../list';\nimport stockPhoto from '@visa/vds-web/dist/_imgs/stockphoto.png';\n\nconst DisclosureExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Expansion Inline FAQ</Typography>\n      </Col>\n    </Row>\n    <Col>\n      <Row>\n        <Col>\n          <Disclosure tag=\"dl\">\n            <DisclosureItem>\n              <DisclosureHeader tag=\"dt\">\n                <DisclosureHeaderWrapper>\n                  Why can&apos;t I use my Visa card in U.S-sanctioned countries?\n                </DisclosureHeaderWrapper>\n              </DisclosureHeader>\n              <DisclosureContent tag=\"dd\">\n                <Typography>\n                  As a U.S. company, Visa Inc. and its affiliates must comply with U.S. law, including trade sanctions\n                  administered and enforced by the Office of Foreign Assets Control (OFAC). OFAC prohibits or restricts\n                  transactions with certain countries, organizations.\n                </Typography>\n              </DisclosureContent>\n            </DisclosureItem>\n            <DisclosureItem>\n              <DisclosureHeader tag=\"dt\">\n                <DisclosureHeaderWrapper>\n                  Can a merchant ask me to provide identification to use my Visa card?\n                </DisclosureHeaderWrapper>\n              </DisclosureHeader>\n              <DisclosureContent tag=\"dd\">\n                <Typography>\n                  In general, a merchant is permitted to ask for identification but cannot require it as a condition of\n                  Visa card acceptance. However, there are exceptions, for example, if Visa has granted the merchant\n                  permission to require identification under certain circumstances for fraud control.\n                </Typography>\n              </DisclosureContent>\n            </DisclosureItem>\n          </Disclosure>\n        </Col>\n      </Row>\n    </Col>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Details on Demand Disclosure</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Disclosure>\n          <DisclosureDetailsItem>\n            <DisclosureHeader style={{ backgroundColor: 'rgba(7, 120, 68, 0.1)' }}>\n              <Grid type=\"fluid\">\n                <Row>\n                  <Col valignCenter>\n                    <DisclosureHeaderWrapper>\n                      <Icon name=\"cloud\" resolution=\"low\" />\n                      Cloud Upload Services\n                    </DisclosureHeaderWrapper>\n                  </Col>\n                  <Col textAlign=\"right\" valignCenter noTopGutter noBottomGutter>\n                    <Badge type=\"stable\">Normal</Badge>\n                  </Col>\n                </Row>\n              </Grid>\n            </DisclosureHeader>\n            <DisclosureContent>\n              <Typography>Issues Reported:</Typography>\n              <List>\n                <li>\n                  05/20/2019, 6:36PM - 6:50PM\n                  <p>Users may be experiencing slower than normal performance with this service.</p>\n                </li>\n                <li>\n                  05/20/2019, 12:03AM - 3:20AM\n                  <p>New users were not able to access recent content across devices.</p>\n                </li>\n              </List>\n            </DisclosureContent>\n          </DisclosureDetailsItem>\n          <DisclosureDetailsItem>\n            <DisclosureHeader style={{ backgroundColor: 'rgba(247,182,0,0.1)' }}>\n              <Grid type=\"fluid\">\n                <Row>\n                  <Col valignCenter>\n                    <DisclosureHeaderWrapper>\n                      <Icon name=\"pos\" resolution=\"low\" />\n                      POS Processing\n                    </DisclosureHeaderWrapper>\n                  </Col>\n                  <Col textAlign=\"right\" valignCenter noTopGutter noBottomGutter>\n                    <Badge type=\"accent\">Issues (2)</Badge>\n                  </Col>\n                </Row>\n              </Grid>\n            </DisclosureHeader>\n            <DisclosureContent>\n              <Typography>Resolved Issues:</Typography>\n              <List>\n                <li>\n                  05/21/2019, 6:36PM\n                  <p>Some users are experiencing slower than normal performance with this service.</p>\n                </li>\n                <li>\n                  05/20/2019, 1:05PM\n                  <p>Users may not be able to connect immediately to service.</p>\n                </li>\n              </List>\n            </DisclosureContent>\n          </DisclosureDetailsItem>\n        </Disclosure>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Text Based Disclosure</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <img alt=\"Adam Smith\" src={stockPhoto} />\n        <Typography tag=\"h3\" style={{ fontSize: '1rem' }}>\n          Presidio Coffee and Tea\n        </Typography>\n        <Disclosure id=\"text-based-example\">\n          <DisclosureTextItem>\n            <DisclosureContent>\n              <Typography>\n                By becoming a Visa merchant, Presidio Coffee and Tea have boost their sales, increased efficiencies and\n                improved the checkout experience. Using the latest Visa payment innovation, they have safe, reliable\n                transactions and expand to where their customers are both in-store and online.\n              </Typography>\n            </DisclosureContent>\n            <DisclosureTextButton\n              text=\"Show details about Presidio Coffee and Tea\"\n              expandedText=\"Hide details about Presidio Coffee and Tea\"\n            />\n          </DisclosureTextItem>\n        </Disclosure>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default DisclosureExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/disclosure/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/disclosure/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/disclosure/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DisclosureExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Disclosure\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Disclosure</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Disclosure Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDisclosureExample.displayName = 'DisclosureExample';\n\nexport default DisclosureExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-badge';\n\nconst Badge = ({ children, className, size, type, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${type}`]: Boolean(type),\n      [`${CSS_PREFIX}--${size}`]: Boolean(size)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nBadge.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Size\n   */\n  size: oneOf([\n    'small'\n  ]),\n\n  /**\n   * Type\n   */\n  type: oneOf([\n    'accent',\n    'warning',\n    'critical',\n    'stable',\n    'disabled',\n    'status'\n  ])\n};\n\nBadge.displayName = 'Badge';\n\nexport default Badge;\n","import { useState } from 'react';\n\nexport default (defaultExpandedId, onChange, allowMultipleExpanded) => {\n  const [focusedId, setFocusedId] = useState();\n\n  const [expandedId, setExpandedId] = useState(\n    !allowMultipleExpanded ? defaultExpandedId.slice(0, 1) : defaultExpandedId\n  );\n\n  const updateFocusedId = (e, index, count) => {\n    const code = e.charCode || e.keyCode;\n\n    if (code === 35) {\n      e.preventDefault();\n      setFocusedId(count - 1);\n    }\n\n    if (code === 36) {\n      e.preventDefault();\n      setFocusedId(0);\n    }\n\n    if (code === 38) {\n      e.preventDefault();\n      setFocusedId(index - 1 < 0 ? count - 1 : index - 1);\n    }\n\n    if (code === 40) {\n      e.preventDefault();\n      setFocusedId((index + 1) % count);\n    }\n  };\n\n  const updateExpandedId = (e, index) => {\n    let ids = [...expandedId];\n    const disclosureIndex = ids.findIndex(i => i === index);\n\n    if (disclosureIndex === -1 && Number.isInteger(index)) {\n      ids = allowMultipleExpanded ? [...ids, index] : [index];\n    }\n\n    if (disclosureIndex > -1) {\n      ids = [...ids.slice(0, disclosureIndex), ...ids.slice(disclosureIndex + 1)];\n    }\n\n    setExpandedId(ids);\n    if (typeof onChange === 'function') {\n      onChange(index);\n    }\n  };\n\n  return { focusedId, expandedId, updateFocusedId, updateExpandedId };\n};\n","module.exports = __webpack_public_path__ + \"static/media/stockphoto.a3f1d696.png\";"],"sourceRoot":""}