{"version":3,"sources":["components/date-selector/date-utilities.js","components/date-selector/index.js","components/date-selector/example/index.js","pages/components/date-selector.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","components/input-option/index.js","components/input-label/index.js","components/input-container/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/date-selector-locale/index.js"],"names":["getDateElementById","CSS_PREFIX","focusedDate","formatDateForIdString","locale","ref","uid","dateId","format","current","querySelector","getWeekDayNames","date","map","offset","day","addDays","ariaAbbr","name","getDayNames","getNextDateNotDisabled","before","disabledDates","maxDate","minDate","isDisabledDate","isDisabled","nextDate","prevDate","subDays","hasValidMinDate","Boolean","isValid","hasValidMaxDate","isLessThanMinDate","isBefore","isGreaterThanMaxDate","isAfter","disabled","Array","isArray","findIndex","d","isSameDay","isWithinInterval","DateSelector","forwardRef","ariaLabelCalendarButtonIcon","className","ariaLabelNextMonth","ariaLabelNextYear","ariaLabelPreviousMonth","ariaLabelPreviousYear","ariaNavigationInstructions","containerProps","closeCalendarButton","formatAriaLabelDate","endDate","formatCalendarTitle","formatInputValue","iconCalendarButton","formatWeekDay","highlightedDates","iconNextMonth","iconNextYear","iconPrevMonth","iconPrevYear","id","shortid","generate","onChange","onSelect","popperProps","selected","selectsEnd","startDate","selectsStart","remainingProps","useRef","getLocaleObject","getDefaultLocale","inputButtonRef","useState","showCalendar","setShowCalendar","isDayFocusActive","setIsDayFocusActive","Date","setFocusedDate","selectedDate","setSelectedDate","inputValue","setInputValue","weeksInMonth","eachWeekOfInterval","start","startOfMonth","end","endOfMonth","getWeeksInSelectedMonth","week","eachDayOfInterval","startOfWeek","endOfWeek","useEffect","el","setTimeout","focus","handleInputChange","e","value","target","parseValue","handleShowCalendar","classnames","Manager","Reference","ariaLabel","iconType","onClick","Popper","style","placement","undefined","displayName","defaultProps","handleClickCloseButton","colorScheme","resolution","registerLocale","ja","ko","DateSelectorExample","setStartDate","setEndDate","tag","href","label","lang","es","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","role","aria-label","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","width","token","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","length","color","v","join","defaultValue","ScreenReader","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","flippable","isFullWidth","tabIndex","includes","oneOfType","number","ButtonIcon","InputOption","InputLabel","InputContainer","expanded","filled","invalid","isTextarea","readOnly","func","InputBar","InputMessage","show","InputHint","InputText","Input","checkmarkIcon","contentAfterInput","contentBeforeInput","errorIcon","errorText","helpIcon","helpText","inputContainerProps","labelId","noValidate","onBlur","onFocus","placeholder","showCheckmark","showErrorText","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","InputInput","localeName","localeData","window","global","__localeData__","__localeId__","localeSpec","warn"],"mappings":"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","file":"static/js/14.f4843997.chunk.js","sourcesContent":["import addDays from 'date-fns/addDays';\nimport format from 'date-fns/format';\nimport eachWeekOfInterval from 'date-fns/eachWeekOfInterval';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport isAfter from 'date-fns/isAfter';\nimport isBefore from 'date-fns/isBefore';\nimport isSameDay from 'date-fns/isSameDay';\nimport isValid from 'date-fns/isValid';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport subDays from \"date-fns/subDays\";\n\nexport const getDateElementById = ({\n  CSS_PREFIX,\n  focusedDate,\n  formatDateForIdString,\n  locale,\n  ref,\n  uid\n}) => {\n  const dateId = `#${CSS_PREFIX}-day-${format(focusedDate, formatDateForIdString, { locale })}-${uid}`;\n  return ref && ref.current ? ref.current.querySelector(dateId) : null;\n};\n\nexport const getDayNames = (date, locale) => {\n  return [0, 1, 2, 3, 4, 5, 6].map(offset => {\n    const day = addDays(date, offset);\n    return {\n      ariaAbbr: format(day, 'EEEE', locale),\n      name: format(day, 'EEEEEE', locale)\n    }\n  });\n};\n\nexport const getWeekDayNames = (date, locale) => getDayNames(date, locale);\n\nexport const getWeeksInSelectedMonth = (date, locale) => eachWeekOfInterval({\n  start: startOfMonth(date),\n  end: endOfMonth(date)\n}, locale);\n\nexport const getNextDateNotDisabled = (date, { before, disabledDates, maxDate, minDate }) => {\n  let isDisabledDate = isDisabled(date, disabledDates, maxDate, minDate);\n  const nextDate = addDays(date, 1);\n  const prevDate = subDays(date, 1);\n  const hasValidMinDate = Boolean(minDate) && isValid(minDate);\n  const hasValidMaxDate = Boolean(maxDate) && isValid(maxDate);\n  const isLessThanMinDate = hasValidMinDate && isBefore(date, minDate);\n  const isGreaterThanMaxDate = hasValidMaxDate && isAfter(date, maxDate);\n\n  if (isDisabledDate && isLessThanMinDate) {\n    return getNextDateNotDisabled(nextDate, {\n      before: true,\n      disabledDates,\n      maxDate,\n      minDate\n    });\n  }\n\n  if (isDisabledDate && isGreaterThanMaxDate) {\n    return getNextDateNotDisabled(prevDate, {\n      before: false,\n      disabledDates,\n      maxDate,\n      minDate\n    });\n  }\n\n  if (isDisabledDate) {\n    return getNextDateNotDisabled(before ? nextDate: prevDate, {\n      before,\n      disabledDates,\n      maxDate,\n      minDate\n    });\n  }\n  return date;\n};\n\nexport const isDisabled = (date, disabled, maxDate, minDate) => {\n  const hasValidMinDate = Boolean(minDate) && isValid(minDate);\n  const hasValidMaxDate = Boolean(maxDate) && isValid(maxDate);\n  const isLessThanMinDate = hasValidMinDate && isBefore(date, minDate);\n  const isGreaterThanMaxDate = hasValidMaxDate && isAfter(date, maxDate);\n  let isDisabledDate = false;\n\n  if (Array.isArray(disabled)) {\n    isDisabledDate = disabled.findIndex(d => isSameDay(date, d)) > -1;\n  }\n\n  if (typeof disabled === \"object\" && !Array.isArray(disabled) && disabled !== null) {\n    isDisabledDate = isWithinInterval(date, {...disabled });\n  }\n  return isLessThanMinDate || isGreaterThanMaxDate || isDisabledDate;\n};\n\nexport const isHighlighted = (date, highlightedDates) => {\n  if (Array.isArray(highlightedDates)) {\n    return highlightedDates.findIndex(d => isSameDay(date, d)) > -1;\n  }\n\n  if (typeof highlightedDates === \"object\" && !Array.isArray(highlightedDates) && highlightedDates !== null) {\n    return isWithinInterval(date, {...highlightedDates });\n  }\n};\n\nexport const isInHoverRange = (date, { startDate, endDate, mouseEnterDate, selectsEnd, selectsStart }) => {\n  startDate = startDate || endDate || new Date();\n  endDate = endDate || startDate || new Date();\n\n  if (!isValid(startDate) || !isValid(endDate) || !isValid(mouseEnterDate)) {\n    return;\n  }\n\n  if (Boolean(selectsStart) && isBefore(mouseEnterDate, startDate)) {\n    return isWithinInterval(date, { start: mouseEnterDate, end: startDate });\n  }\n\n  if (Boolean(selectsEnd) && isAfter(mouseEnterDate, endDate)) {\n    return isWithinInterval(date, { start: endDate, end: mouseEnterDate });\n  }\n};\n\nexport const isInRange = (date, { startDate, endDate }) => {\n  if (!isValid(startDate) || !isValid(endDate)) {\n    return;\n  }\n  if (isBefore(startDate, endDate)) {\n    return isWithinInterval(date, { start: startDate, end: endDate });\n  }\n};\n\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { arrayOf, bool, func, instanceOf, node, number, object, oneOfType, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport shortid from 'shortid';\nimport addDays from \"date-fns/addDays\";\nimport addMonths from \"date-fns/addMonths\";\nimport addWeeks from \"date-fns/addWeeks\";\nimport addYears from \"date-fns/addYears\";\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfWeek from \"date-fns/endOfWeek\";\nimport format from 'date-fns/format';\nimport isBefore from 'date-fns/isBefore';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isToday from 'date-fns/isToday';\nimport isValid from 'date-fns/isValid';\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport subDays from \"date-fns/subDays\";\nimport subMonths from \"date-fns/subMonths\";\nimport subWeeks from \"date-fns/subWeeks\";\nimport subYears from \"date-fns/subYears\";\nimport Input from '../input';\nimport InputOption from '../input-option';\nimport ButtonIcon from '../button-icon';\nimport ButtonText from '../button-text';\nimport Icon from '../icon';\nimport ScreenReader from '../screen-reader';\nimport {\n  getDateElementById,\n  getNextDateNotDisabled,\n  getWeekDayNames,\n  getWeeksInSelectedMonth,\n  isDisabled,\n  isHighlighted,\n  isInHoverRange,\n  isInRange\n} from \"./date-utilities\";\nimport {\n  getDefaultLocale,\n  getLocaleObject\n} from '../date-selector-locale';\n\nconst CSS_PREFIX = 'vds-date-selector';\nconst CSS_STATE = 'vds-state';\n\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  TAB: 9,\n  PAGEUP: 33,\n  PAGEDOWN: 34\n};\n\nconst DateSelector = forwardRef(({\n  ariaLabelCalendarButtonIcon,\n  ariaLabelNextMonth,\n  ariaLabelNextYear,\n  ariaLabelPreviousMonth,\n  ariaLabelPreviousYear,\n  ariaNavigationInstructions,\n  className,\n  closeCalendarButton,\n  containerProps,\n  disabledDates,\n  endDate,\n  formatAriaLabelDate,\n  formatCalendarTitle,\n  formatDateForIdString,\n  formatInputValue,\n  formatWeekDay,\n  highlightedDates,\n  iconCalendarButton,\n  iconNextMonth,\n  iconNextYear,\n  iconPrevMonth,\n  iconPrevYear,\n  id = shortid.generate(),\n  locale,\n  maxDate,\n  minDate,\n  onChange,\n  onSelect,\n  popperProps,\n  selected,\n  selectsEnd,\n  selectsStart,\n  startDate,\n  ...remainingProps\n  }, ref) => {\n\n  ref = ref || useRef();\n  locale = getLocaleObject(locale) || getLocaleObject(getDefaultLocale());\n  const inputButtonRef = useRef();\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  let dialogBlurTimeout = null;\n\n  const [showCalendar, setShowCalendar] = useState();\n  const [isDayFocusActive, setIsDayFocusActive] = useState(false)\n  const [showNavigationHelpMessage, setShowNavigationHelpMessage] = useState();\n  const [focusedDate, setFocusedDate] = useState(\n    getNextDateNotDisabled((selected || new Date()), {\n    before: true,\n    disabledDates,\n    maxDate,\n    minDate\n  }));\n  const [selectedDate, setSelectedDate] = useState(selected);\n  const [mouseEnterDate, setMouseEnterDate] = useState();\n  const [inputValue, setInputValue] = useState(\n    Boolean(selected) && isValid(selected)\n      ? format(selected, formatInputValue, { locale })\n      : ''\n  );\n  const weeksInMonth = getWeeksInSelectedMonth(focusedDate, { locale });\n  const dayNames = getWeekDayNames(weeksInMonth[0], { locale });\n  const weeksWithDaysInMonth = weeksInMonth.map(week => {\n    return eachDayOfInterval({\n      start: startOfWeek(week, { locale }),\n      end: endOfWeek(week, { locale })\n    });\n  });\n\n  useEffect(() => {\n    if (typeof onSelect === 'function') {\n      onSelect(selectedDate);\n    }\n\n    if (showCalendar === false && selectedDate) {\n      setFocusedDate(selectedDate);\n    }\n  }, [onSelect,showCalendar, selectedDate]);\n\n  useEffect(() => {\n    if (Boolean(selectsEnd) && isValid(selectedDate || focusedDate) && isValid(startDate)) {\n      if (isBefore((selectedDate || focusedDate), startDate)) {\n        setSelectedDate(startDate);\n        setFocusedDate(startDate);\n        setInputValue('');\n      }\n    }\n  }, [focusedDate, formatInputValue, locale, selectedDate, selectsEnd, startDate]);\n\n  useEffect(() => {\n    const el = getDateElementById({\n      CSS_PREFIX,\n      focusedDate,\n      formatDateForIdString,\n      locale,\n      ref,\n      uid\n    });\n    if (el && showCalendar && isDayFocusActive) {\n      setTimeout(() => el.focus());\n      setIsDayFocusActive(false);\n    }\n  }, [isDayFocusActive, uid, formatDateForIdString, locale, showCalendar, focusedDate, ref]);\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    const parseValue = new Date(value);\n\n    setShowCalendar(false);\n    setInputValue(value);\n\n    if (isValid(parseValue)) {\n      setFocusedDate(parseValue);\n      setSelectedDate(parseValue);\n    } else {\n      setFocusedDate(focusedDate);\n      setSelectedDate(null);\n    }\n\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleShowCalendar = () => {\n    setShowCalendar(!showCalendar);\n    setIsDayFocusActive(!showCalendar);\n  };\n\n  const handleSelectedDate = date => {\n    setFocusedDate(date);\n    setInputValue(format(date, formatInputValue, { locale }));\n    setSelectedDate(date);\n    setShowCalendar(false);\n    inputButtonRef.current.focus();\n  };\n\n  const gotoPreviousYear = () => {\n    setFocusedDate(getNextDateNotDisabled(subYears(focusedDate, 1), {\n      before: false,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const gotoNextYear = () => {\n    setFocusedDate(getNextDateNotDisabled(addYears(focusedDate, 1), {\n      before: true,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const gotoPreviousMonth= () => {\n    setFocusedDate(getNextDateNotDisabled(subMonths(focusedDate, 1), {\n      before: false,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const gotoNextMonth= () => {\n    setFocusedDate(getNextDateNotDisabled(addMonths(focusedDate, 1), {\n      before: true,\n      disabledDates,\n      maxDate,\n      minDate\n    }));\n  };\n\n  const handleDialogKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const focusableElements = ref.current.querySelectorAll(`.${CSS_PREFIX}-calendar button:not([disabled]):not(.vds-state--disabled)`);\n    const firstFocusableElement = focusableElements[0];\n    const lastFocusableElement = focusableElements[focusableElements.length - 1];\n    if ([KEY_CODES.ESC].includes(code)) {\n      setShowCalendar(false);\n      inputButtonRef.current.focus();\n    }\n\n    if ([KEY_CODES.TAB].includes(code)) {\n      if (firstFocusableElement === e.target && e.shiftKey) {\n        e.preventDefault();\n        lastFocusableElement.focus();\n      }\n\n      if (lastFocusableElement === e.target && !e.shiftKey) {\n        e.preventDefault();\n        firstFocusableElement.focus();\n      }\n    }\n  };\n\n  const handleClickCloseButton = e => {\n    setShowCalendar(false);\n    inputButtonRef.current.focus();\n  };\n\n  const handleDialogFocus = e => {\n    setShowNavigationHelpMessage(e.target.classList.contains(`${CSS_PREFIX}-day`));\n    if (dialogBlurTimeout) {\n      clearTimeout(dialogBlurTimeout);\n    }\n  };\n\n  const handleDialogBlur = e => dialogBlurTimeout = setTimeout(() => {\n    setShowNavigationHelpMessage(false);\n    setShowCalendar(false);\n  }, 200);\n\n  const handleDialogClick = e => {\n    if (e.target.tagName.toLowerCase() !== 'button' && dialogBlurTimeout) {\n      clearTimeout(dialogBlurTimeout);\n      const el = getDateElementById({\n        CSS_PREFIX,\n        focusedDate,\n        formatDateForIdString,\n        locale,\n        ref,\n        uid\n      });\n      if (el && showCalendar) {\n        setTimeout(() => el.focus());\n      }\n    }\n  };\n\n  const handleDayMouseEnter = date => setMouseEnterDate(date);\n\n  const handleDayMouseLeave = () => setMouseEnterDate(null);\n\n  const handleNavigation = (e, day, locale) => {\n    const code = e.charCode || e.keyCode;\n    let nextDate = day;\n    let before = true;\n\n    if (!Object.keys(KEY_CODES).map(k => KEY_CODES[k]).includes(code) || [KEY_CODES.TAB].includes(code)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    switch (e.keyCode) {\n      case KEY_CODES.ARROW_DOWN:\n        nextDate = addWeeks(day, 1);\n        break;\n\n      case KEY_CODES.ARROW_LEFT:\n        before = false;\n        nextDate = subDays(day, 1);\n        break;\n\n      case KEY_CODES.ARROW_RIGHT:\n        nextDate = addDays(day, 1);\n        break;\n\n      case KEY_CODES.ARROW_UP:\n        before = false;\n        nextDate = subWeeks(day, 1);\n        break;\n\n      case KEY_CODES.END:\n        before = false;\n        nextDate = endOfWeek(day, { locale });\n        break;\n\n      case KEY_CODES.HOME:\n        nextDate = startOfWeek(day, { locale });\n        break;\n\n      case KEY_CODES.PAGEDOWN:\n        if (e.shiftKey) {\n          nextDate = addYears(day, 1);\n        } else {\n          nextDate = addMonths(day, 1);\n        }\n        break;\n\n      case KEY_CODES.PAGEUP:\n        before = false;\n        if (e.shiftKey) {\n          nextDate = subYears(day, 1);\n        } else {\n          nextDate = subMonths(day, 1);\n        }\n        break;\n\n      default:\n        break;\n    }\n\n    nextDate = getNextDateNotDisabled(nextDate, { before, disabledDates, maxDate, minDate });\n\n    if (Boolean(selectsStart) || Boolean(selectsEnd)) {\n      setMouseEnterDate(nextDate);\n    }\n    setIsDayFocusActive(true);\n    setFocusedDate(nextDate);\n  };\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, className)}\n      id={`${CSS_PREFIX}-${uid}`}\n      ref={ref}\n      {...containerProps}\n    >\n      {\n        <Manager>\n          <Reference>\n            {({ ref }) => (\n              <Input\n                containerProps={{ ref }}\n                id={`input-${uid}`}\n                onChange={handleInputChange}\n                value={inputValue}\n                {...remainingProps}\n              >\n                <InputOption>\n                  <ButtonIcon\n                    ariaLabel={ariaLabelCalendarButtonIcon(selectedDate, formatAriaLabelDate, locale)}\n                    iconType=\"light-tiny\"\n                    id={`input-button-${uid}`}\n                    onClick={handleShowCalendar}\n                    ref={inputButtonRef}\n                  >\n                    {iconCalendarButton}\n                  </ButtonIcon>\n                </InputOption>\n              </Input>\n            )}\n          </Reference>\n          {\n            showCalendar\n              ? <Popper {...popperProps}>\n              {({ ref, style, placement }) => (\n                // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n                <div\n                  aria-labelledby={`${CSS_PREFIX}-header-title-${uid}`}\n                  className={classnames(`${CSS_PREFIX}-calendar`)}\n                  data-placement={placement}\n                  onBlur={handleDialogBlur}\n                  onClick={handleDialogClick}\n                  onFocus={handleDialogFocus}\n                  onKeyDown={handleDialogKeyDown}\n                  ref={ref}\n                  role=\"dialog\"\n                  style={style}\n                >\n                  <div>\n                    <div className={classnames(`${CSS_PREFIX}-header`)}>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelPreviousYear}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-previous-year-${uid}`}\n                        onClick={gotoPreviousYear}\n                      >\n                        {iconPrevYear}\n                      </ButtonIcon>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelPreviousMonth}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-previous-month-${uid}`}\n                        onClick={gotoPreviousMonth}\n                      >\n                        {iconPrevMonth}\n                      </ButtonIcon>\n                      <div\n                        aria-live=\"polite\"\n                        className={classnames(`${CSS_PREFIX}-header-title`)}\n                        id={`${CSS_PREFIX}-header-title-${uid}`}\n                      >\n                        {format(focusedDate, formatCalendarTitle, { locale })}\n                      </div>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelNextMonth}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-next-month-${uid}`}\n                        onClick={gotoNextMonth}\n                      >\n                        {iconNextMonth}\n                      </ButtonIcon>\n                      <ButtonIcon\n                        ariaLabel={ariaLabelNextYear}\n                        iconType=\"light-tiny\"\n                        id={`${CSS_PREFIX}-header-next-year-${uid}`}\n                        onClick={gotoNextYear}\n                      >\n                        {iconNextYear}\n                      </ButtonIcon>\n                      <ScreenReader aria-live=\"polite\">{showNavigationHelpMessage ? ariaNavigationInstructions : ''}</ScreenReader>\n                    </div>\n                    <table\n                      aria-labelledby={`${CSS_PREFIX}-header-title-${uid}`}\n                      className={classnames(`${CSS_PREFIX}-calendar-grid`)}\n                      role=\"grid\"\n                    >\n                      <thead>\n                        <tr>\n                          {\n                            dayNames.map((day, k) => (\n                              <th\n                                abbr={day.ariaAbbr}\n                                className={classnames(`${CSS_PREFIX}-day-name`)}\n                                key={`${CSS_PREFIX}-th-${uid}-${k}`}\n                                scope=\"col\"\n                              >\n                                {day.name}\n                              </th>\n                            ))\n                          }\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {\n                          weeksWithDaysInMonth.map((week, k) => (\n                            <tr key={`${CSS_PREFIX}-tbody-tr-${uid}-${k}`}>\n                              {\n                                week.map((day, i) => (\n                                  <td key={`${CSS_PREFIX}-tbody-tr-td-${uid}-${k}-${i}`}>\n                                    <ButtonIcon\n                                      aria-label={format(day, formatAriaLabelDate, { locale })}\n                                      className={classnames(`${CSS_PREFIX}-day`, {\n                                        [`${CSS_PREFIX}-today`]: isToday(day),\n                                        [`${CSS_PREFIX}-next-prev-month`]: !isSameMonth(day, focusedDate),\n                                        [`${CSS_PREFIX}-in-range`]: isInRange(day, { startDate, endDate }),\n                                        [`${CSS_PREFIX}-start-of-range`]: Boolean(selectsStart) && isSameDay(day, selectedDate),\n                                        [`${CSS_PREFIX}-end-of-range`]: Boolean(selectsEnd) && isSameDay(day, selectedDate),\n                                        [`${CSS_PREFIX}-mouse-enter-range`]: isInHoverRange(day, {\n                                          startDate,\n                                          endDate,\n                                          mouseEnterDate,\n                                          selectsEnd,\n                                          selectsStart\n                                        }),\n                                        [`${CSS_STATE}-focused`]: isSameDay(day, focusedDate),\n                                        [`${CSS_STATE}-selected`]: isSameDay(day, selectedDate),\n                                        [`${CSS_STATE}-disabled`]: isDisabled(day, disabledDates, maxDate, minDate),\n                                        [`${CSS_STATE}-highlighted`]: isHighlighted(day, highlightedDates)\n                                      })}\n                                      disabled={isDisabled(day, disabledDates, maxDate, minDate)}\n                                      iconType=\"light-tiny\"\n                                      id={`${CSS_PREFIX}-day-${format(day, formatDateForIdString, { locale })}-${uid}`}\n                                      onClick={() => handleSelectedDate(day)}\n                                      onMouseEnter={() => handleDayMouseEnter(day)}\n                                      onMouseLeave={handleDayMouseLeave}\n                                      onKeyDown={e => handleNavigation(e, day, locale)}\n                                      tabIndex={isSameDay(day, focusedDate) ? 0 : -1}\n                                    >\n                                      {format(day, 'd', { locale })}\n                                    </ButtonIcon>\n                                  </td>\n                                ))\n                              }\n                            </tr>\n                          ))\n                        }\n                      </tbody>\n                    </table>\n                    <div className={`${CSS_PREFIX}-footer`}>\n                      {closeCalendarButton(handleClickCloseButton)}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Popper>\n              : undefined\n          }\n        </Manager>\n      }\n    </div>\n  );\n});\n\nDateSelector.propTypes = {\n  /**\n   * Calendar Button Icon Aria Label\n   */\n  ariaLabelCalendarButtonIcon: func,\n\n  /**\n   * Next Month Aria Label\n   */\n  ariaLabelNextMonth: string,\n\n  /**\n   * Next Year Aria Label\n   */\n  ariaLabelNextYear: string,\n\n  /**\n   * Previous Month Aria Label\n   */\n  ariaLabelPreviousMonth: string,\n\n  /**\n   * Previous Year Aria Label\n   */\n  ariaLabelPreviousYear: string,\n\n  /**\n   * Instructions for keyboard navigation\n   */\n  ariaNavigationInstructions: string,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Close calendar Button\n   */\n  closeCalendarButton: func,\n\n  /**\n   * Container props\n   */\n  containerProps: object,\n\n  /**\n   * Disabled dates\n   */\n  disabledDates: oneOfType([\n    arrayOf(instanceOf(Date)),\n    shape({\n      end: instanceOf(Date).isRequired,\n      start: instanceOf(Date).isRequired\n    })\n  ]),\n\n  /**\n   * End date for date range\n   */\n  endDate: instanceOf(Date),\n\n  /**\n   * Format for date aria label\n   */\n  formatAriaLabelDate: string,\n\n  /**\n   * Format for calendar title\n   */\n  formatCalendarTitle: string,\n\n  /**\n   * Format for date id string\n   */\n  formatDateForIdString: string,\n\n  /**\n   * Format for input value\n   */\n  formatInputValue: string,\n\n  /**\n   * Format for weekday\n   */\n  formatWeekDay: string,\n\n  /**\n   * Highlighted dates\n   */\n  highlightedDates: oneOfType([\n    arrayOf(instanceOf(Date)),\n    shape({\n      end: instanceOf(Date).isRequired,\n      start: instanceOf(Date).isRequired\n    })\n  ]),\n\n  /**\n   * Calendar Button icon\n   */\n  iconCalendarButton: node,\n\n  /**\n   * Next Month icon\n   */\n  iconNextMonth: node,\n\n  /**\n   * Next Year icon\n   */\n  iconNextYear: node,\n\n  /**\n   * Prev Month icon\n   */\n  iconPrevMonth: node,\n\n  /**\n   * Prev Year icon\n   */\n  iconPrevYear: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Locale\n   */\n  locale: oneOfType([\n    string,\n    shape({ locale: object })\n  ]),\n\n  /**\n   * Maximum date\n   */\n  maxDate: instanceOf(Date),\n\n  /**\n   * Minimum date\n   */\n  minDate: instanceOf(Date),\n\n  /**\n   * On Change of input\n   */\n  onChange: func,\n\n  /**\n   * On Select of date\n   */\n  onSelect: func,\n\n  /**\n   * React popper props\n   */\n  popperProps: object,\n\n  /**\n   * Selected date\n   */\n  selected: instanceOf(Date),\n\n  /**\n   * Range end input\n   */\n  selectsEnd: bool,\n\n  /**\n   * Range start input\n   */\n  selectsStart: bool,\n\n  /**\n   * Start date for date range\n   */\n  startDate: instanceOf(Date)\n};\n\nDateSelector.displayName = 'DateSelector';\n\nDateSelector.defaultProps = {\n  ariaLabelCalendarButtonIcon: (date, formatAriaLabelDate, locale) => (\n    isValid(date)\n      ? `Choose Date, selected date is ${format(date, formatAriaLabelDate, { locale })}`\n      : 'Choose Date'\n  ),\n  ariaLabelNextMonth: 'Next Month',\n  ariaLabelNextYear: 'Next Year',\n  ariaLabelPreviousMonth: 'Previous Month',\n  ariaLabelPreviousYear: 'Previous Year',\n  ariaNavigationInstructions: 'Cursor keys can navigate dates',\n  // eslint-disable-next-line react/display-name\n  closeCalendarButton: handleClickCloseButton => (\n    <ButtonText\n      className={classnames(`${CSS_PREFIX}-button-cancel`)}\n      colorScheme=\"tertiary\"\n      onClick={handleClickCloseButton}\n    >\n      Close\n    </ButtonText>\n  ),\n  iconCalendarButton: <Icon name=\"calendar\" resolution=\"tiny\" />,\n  iconNextMonth: <Icon name=\"arrow-next\" resolution=\"tiny\" />,\n  iconNextYear: <Icon name=\"fast-forward\" resolution=\"tiny\" />,\n  iconPrevMonth: <Icon name=\"arrow-previous\" resolution=\"tiny\" />,\n  iconPrevYear: <Icon name=\"rewind\" resolution=\"tiny\" />,\n  formatAriaLabelDate: 'EEEE LLLL d, yyyy',\n  formatCalendarTitle: 'LLLL yyyy',\n  formatDateForIdString: 'MM-dd-yyyy',\n  formatInputValue: 'MM/dd/yyyy',\n  popperProps: {\n    placement: 'bottom-start'\n  }\n};\n\nexport default DateSelector;\n","import React, { useState } from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport DateSelector from '../../date-selector';\nimport Typography from '../../typography';\nimport format from 'date-fns/format';\nimport isValid from 'date-fns/isValid';\nimport es from 'date-fns/locale/es';\nimport ja from 'date-fns/locale/ja';\nimport ko from 'date-fns/locale/ko';\nimport { registerLocale } from '../../date-selector-locale';\n\nregisterLocale('ja', ja);\nregisterLocale('ko', ko);\n\nconst DateSelectorExample = () => {\n  const [startDate, setStartDate] = useState();\n  const [endDate, setEndDate] = useState();\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Row>\n            <Col>\n              <Typography tag=\"h2\">Default Date Selector</Typography>\n              <Typography>\n                VDS Date-picker uses all props available to the <strong>{`<Input />`}</strong> component in\n                addition to the props table below. Use this for ref and other validation needs for the input.\n              </Typography>\n              <Typography>\n                VDS Date-picker also uses <a href=\"https://date-fns.org/\">Date-fns</a> (think lodash utilities for Dates)\n                to support locales usage and to run other date manipulation functions.\n              </Typography>\n              <Typography>\n                <a href=\"https://popper.js.org/\">Popper.js</a> is used for helping properly position the calendar dialog. Use popperProps to modify functionality.\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <DateSelector\n                label=\"Date (MM/DD/YYYY)\"\n                name=\"date-picker\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Date picker with disabled dates</Typography>\n              <Typography>\n                Disabled March 15 and March 20 in the example below\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <DateSelector\n                disabledDates={[new Date('03/15/2020'), new Date('03/20/2020')]}\n                label=\"Date (MM/DD/YYYY)\"\n                name=\"date-picker-disabled-dates\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Locale (Spanish) Example</Typography>\n              <Typography>\n                Below is an example that imports the Spanish locale from date-fns\n              </Typography>\n              <Typography>\n                <code>\n                  {`import es from 'date-fns/locale/es';`}\n                </code><br />\n                <code>\n                  {`<DateSelector ... locale={es} />`}\n                </code><br />\n              </Typography>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(date)\n                    ? `Elige fecha, la fecha seleccionada es ${format(date, formatAriaLabelDate, { locale })}`\n                    : 'Elige fecha'\n                )}\n                ariaLabelNextMonth=\"próximo mes\"\n                ariaLabelNextYear=\"el próximo año\"\n                ariaLabelPreviousMonth=\"mes anterior\"\n                ariaLabelPreviousYear=\"año anterior\"\n                containerProps={{ lang: 'es' }}\n                label=\"La Fecha (MM/DD/AAAA)\"\n                locale={es}\n                name=\"date-picker-locale-es\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h3\">Locale (Japanese &amp; Korean) Examples</Typography>\n              <Typography>\n                Below is an example that uses the locale string &apos;ja&apos; after importing(from date-fns) and\n                registering the locale using registerLocale\n              </Typography>\n              <Typography>\n                <code>\n                  {`import { registerLocale, setDefaultLocale } from '../../date-picker-locale';`}\n                </code><br />\n                <code>\n                  {`import ja from 'date-fns/locale/ja';`}\n                </code><br />\n                <code>\n                  {`import ko from 'date-fns/locale/ko';`}\n                </code><br />\n                <code>\n                  {`registerLocale('ja', ja);`}\n                </code><br />\n                <code>\n                  {`registerLocale('ko', ko);`}\n                </code><br /><br />\n                <code>\n                  {`GLOBAL - To set a default locale for all instances of Datepicker use the setDefaultLocale e.g.`}\n                </code><br />\n                <code>\n                  {`setDefaultLocale('es');`}\n                </code><br />\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                <code>\n                  {`<DateSelector ... locale=\"ja\" />`}\n                </code><br />\n              </Typography>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(date)\n                    ? `日付を選択、選択した日付は ${format(date, formatAriaLabelDate, { locale })}`\n                    : '日付を選択'\n                )}\n                ariaLabelNextMonth=\"来月\"\n                ariaLabelNextYear=\"来年\"\n                ariaLabelPreviousMonth=\"前月\"\n                ariaLabelPreviousYear=\"前年\"\n                containerProps={{ lang: 'ja' }}\n                label=\"日付 (月/日/年)\"\n                locale=\"ja\"\n                name=\"date-picker-locale-ja\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography>\n                <code>\n                  {`<DateSelector ... locale=\"ko\" />`}\n                </code><br />\n              </Typography>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(date)\n                    ? `날짜를 선택하십시오. 선택한 날짜는 ${format(date, formatAriaLabelDate, { locale })}`\n                    : '날짜를 선택하십시오'\n                )}\n                ariaLabelNextMonth=\"다음 달\"\n                ariaLabelNextYear=\"내년\"\n                ariaLabelPreviousMonth=\"지난달\"\n                ariaLabelPreviousYear=\"전년도\"\n                containerProps={{ lang: 'ko' }}\n                label=\"데이트 (달/일/년)\"\n                locale=\"ko\"\n                name=\"date-picker-locale-ko\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Typography tag=\"h2\">Range Selector</Typography>\n              <Typography>\n                Below is an example that uses 2 date-pickers as a date range picker.\n              </Typography>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(date)\n                    ? `Choose Start Date, selected start date is ${format(date, formatAriaLabelDate, { locale })}`\n                    : 'Choose Start Date'\n                )}\n                endDate={endDate}\n                label=\"Start Date (MM/DD/YYYY)\"\n                name=\"date-picker-before\"\n                onSelect={date => {\n                  setStartDate(date);\n                }}\n                selectsStart\n                startDate={startDate}\n              />\n              <DateSelector\n                ariaLabelCalendarButtonIcon={(date, formatAriaLabelDate, locale) => (\n                  isValid(date)\n                    ? `Choose End Date, selected end date is ${format(date, formatAriaLabelDate, { locale })}`\n                    : 'Choose End Date'\n                )}\n                endDate={endDate}\n                label=\"End Date (MM/DD/YYYY)\"\n                name=\"date-picker-after\"\n                minDate={startDate}\n                onSelect={date => {\n                  setEndDate(date);\n                }}\n                selectsEnd\n                startDate={startDate}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\nexport default DateSelectorExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/date-selector/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/date-selector/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/date-selector/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DateSelectorExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for DateSelector\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Date Selector</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/date-selector`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Date Selector Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/date-selector/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/date-selector/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/date-selector`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/date-selector`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/date-selector/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/date-selector/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/date-selector/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/date-selector/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDateSelectorExample.displayName = 'DateSelectorExample';\n\nexport default DateSelectorExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...inputContainerProps}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","export const registerLocale = (localeName, localeData) => {\n  const scope = typeof window !== \"undefined\" ? window : global;\n\n  if (!scope.__localeData__) {\n    scope.__localeData__ = {};\n  }\n  scope.__localeData__[localeName] = localeData;\n};\n\nexport const setDefaultLocale = (localeName) => {\n  const scope = typeof window !== \"undefined\" ? window : global;\n\n  scope.__localeId__ = localeName;\n};\n\nexport const getDefaultLocale = () => {\n  const scope = typeof window !== \"undefined\" ? window : global;\n\n  return scope.__localeId__;\n};\n\nexport const getLocaleObject = (localeSpec) => {\n  if (typeof localeSpec === \"string\") {\n    // Treat it as a locale name registered by registerLocale\n    const scope = typeof window !== \"undefined\" ? window : global;\n    const localeData = scope.__localeData__ ? scope.__localeData__[localeSpec] : null\n    if (localeSpec && !localeData) {\n      console.warn(\n        `A locale object was not found for the provided string [\"${localeSpec}\"].`\n      );\n    }\n    return localeData;\n  } else {\n    // Treat it as a raw date-fns locale object\n    return localeSpec;\n  }\n};\n"],"sourceRoot":""}