{"version":3,"sources":["components/_imgs/stockphoto.png","components/chip/index.js","components/chip-container/index.js","components/chip-text/index.js","components/chip/example/index.js","pages/components/chip.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","components/button-label/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-icon/index.js","components/fieldset/index.js","components/checkbox/index.js","components/avatar-photo/index.js"],"names":["module","exports","Chip","children","className","disabled","focused","onBlur","onChange","onFocus","readonly","selected","type","remainingProps","useState","focus","setFocus","select","setSelect","useEffect","classnames","Boolean","event","target","checked","tabIndex","undefined","defaultProps","displayName","ChipContainer","ChipText","ChipExample","items","id","label","value","state","setState","handleChange","e","map","item","initials","alt","src","stockPhoto","ariaLabel","iconType","name","resolution","tag","variant","key","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","color","length","Array","isArray","v","join","defaultValue","ScreenReader","forwardRef","ref","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","ButtonLabel","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","RegExp","test","ButtonIcon","aria-label","isRequired","Fieldset","Checkbox","shortid","indeterminate","invalid","defaultChecked","check","setCheck","indetermined","setIndetermined","uid","useRef","current","aria-checked","htmlFor","onClick","stopPropagation","onKeyPress","AvatarPhoto","Children","only","cloneElement"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,wC,kUCOrCC,EAAO,SAAC,GAYP,IAAD,EAXJC,EAWI,EAXJA,SACAC,EAUI,EAVJA,UACAC,EASI,EATJA,SACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,OACAC,EAMI,EANJA,SACAC,EAKI,EALJA,QACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,KACGC,EACC,0HACsBC,mBAASR,GAD/B,mBACGS,EADH,KACUC,EADV,OAEwBF,mBAASH,GAFjC,mBAEGM,EAFH,KAEWC,EAFX,KAIJC,qBAAU,WACRH,EAASV,KACR,CAACA,IAEJa,qBAAU,WACRD,EAAUP,KACT,CAACA,IAuBJ,OACE,uCACEP,UAAWgB,KAAU,6BAlDR,YAmDiB,YAATR,GADA,wBAlDR,WAkDQ,YAEiB,WAATA,GAFR,wBAjDT,YAiDS,cAGSS,QAAQhB,IAHjB,wBAjDT,YAiDS,cAISgB,QAAQX,IAJjB,wBAjDT,YAiDS,cAKSW,QAAQJ,IAAoB,WAATL,GAL5B,wBAjDT,YAiDS,WAMMS,QAAQN,IANd,GAOlBX,GACHG,OAxBe,SAAAe,GACjBN,GAAS,GACa,oBAAXT,GACTA,EAAOe,IAsBPd,SAlBiB,SAAAc,GACnBJ,EAAUI,EAAMC,OAAOC,SACC,oBAAbhB,GACTA,EAASc,IAgBTb,QAjCgB,SAAAa,GAClBN,GAAS,GACc,oBAAZP,GACTA,EAAQa,IA+BRG,SAAUpB,GAAY,OAAIqB,GACtBb,GAEHV,IAwDPD,EAAKyB,aAAe,CAClBf,KAAM,WAGRV,EAAK0B,YAAc,OAEJ1B,QC5HT2B,EAAgB,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcS,EAA3B,+CACpB,uCACET,UAAWgB,IAJI,qBAImBhB,IAC9BS,GAEHV,IAgBL0B,EAAcD,YAAc,gBAEbC,QCvBTC,EAAW,SAAC,GAAD,IAAG3B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcS,EAA3B,+CACf,wCACET,UAAWgB,IAJI,gBAImBhB,IAC9BS,GAEHV,IAgBL2B,EAASF,YAAc,WAERE,Q,4BC2TAC,EAxUK,WAAO,IAAD,EACEjB,mBAAS,CACjCkB,MAAO,CACL,CACER,SAAS,EACTS,GAAI,oBACJC,MAAO,kBACPC,MAAO,WAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,SACPC,MAAO,UAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,UACPC,MAAO,WAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,MACPC,MAAO,OAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,MACPC,MAAO,OAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,cACPC,MAAO,eAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,gBACPC,MAAO,iBAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,oFACPC,MAAO,WAET,CACEX,SAAS,EACTS,GAAI,oBACJC,MAAO,OACPC,MAAO,QAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,QACPC,MAAO,SAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,SACPC,MAAO,UAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,SACPC,MAAO,UAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,QACPC,MAAO,SAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,QACPC,MAAO,SAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,MACPC,MAAO,OAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,MACPC,MAAO,OAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,OACPC,MAAO,QAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,WACPC,MAAO,YAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,cACPC,MAAO,eAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,cACPC,MAAO,QAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,gBACPC,MAAO,iBAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,UACPC,MAAO,WAET,CACEX,SAAS,EACTS,GAAI,qBACJC,MAAO,SACPC,MAAO,UAET,CACE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","file":"static/js/17.86c51ba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stockphoto.a3f1d696.png\";","import React, { useEffect, useState } from 'react';\nimport { bool, func, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip';\nconst CSS_STATE = 'vds-state';\n\nconst Chip = ({\n  children,\n  className,\n  disabled,\n  focused,\n  onBlur,\n  onChange,\n  onFocus,\n  readonly,\n  selected,\n  type,\n  ...remainingProps\n}) => {\n  const [focus, setFocus] = useState(focused);\n  const [select, setSelect] = useState(selected);\n\n  useEffect(() => {\n    setFocus(focused);\n  }, [focused]);\n\n  useEffect(() => {\n    setSelect(selected);\n  }, [selected]);\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  const handleChange = event => {\n    setSelect(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  return (\n    <div\n      className={classnames({\n        [`${CSS_PREFIX}`]: type === 'default',\n        [`${CSS_PREFIX}--filter`]: type === 'filter',\n        [`${CSS_STATE}--disabled`]: Boolean(disabled),\n        [`${CSS_STATE}--readonly`]: Boolean(readonly),\n        [`${CSS_STATE}--selected`]: Boolean(select) && type === 'filter',\n        [`${CSS_STATE}--focus`]: Boolean(focus)\n      }, className)}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      tabIndex={disabled ? -1 : undefined}\n      {...remainingProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nChip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * disabled\n  */\n  disabled: bool,\n\n  /**\n  * focused\n  */\n  focused: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n  * Readonly\n  */\n  readonly: bool,\n\n  /**\n  * Selected\n  */\n  selected: bool,\n  /**\n   * Type\n   */\n  type: oneOf(['default', 'filter'])\n};\n\nChip.defaultProps = {\n  type: 'default'\n};\n\nChip.displayName = 'Chip';\n\nexport default Chip;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip-container';\n\nconst ChipContainer = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nChipContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nChipContainer.displayName = 'ChipContainer';\n\nexport default ChipContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip-text';\n\nconst ChipText = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nChipText.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nChipText.displayName = 'ChipText';\n\nexport default ChipText;\n","import React, { useState } from 'react';\nimport Avatar from '../../avatar';\nimport AvatarPhoto from '../../avatar-photo';\nimport ButtonIcon from '../../button-icon';\nimport Checkbox from '../../checkbox';\nimport Chip from '../../chip';\nimport ChipContainer from '../../chip-container';\nimport ChipText from '../../chip-text';\nimport Col from '../../col';\nimport Fieldset from '../../fieldset';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport stockPhoto from '../../_imgs/stockphoto.png';\nimport Typography from '../../typography';\n\nconst ChipExample = () => {\n  const [state, setState] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'chip-group-test-1',\n        label: 'Popular near me',\n        value: 'Popular'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-2',\n        label: 'Advice',\n        value: 'Advice'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-3',\n        label: 'Animals',\n        value: 'Animals'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-4',\n        label: 'Art',\n        value: 'Art'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-5',\n        label: 'DIY',\n        value: 'DIY'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-6',\n        label: 'Electronics',\n        value: 'Electronics'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-7',\n        label: 'Entertainment',\n        value: 'Entertainment'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-8',\n        label: 'Explain like I\\'m five and lorem ipsum dolor sit amet, consectetur adipiscing elit',\n        value: 'Explain'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-9',\n        label: 'Food',\n        value: 'Food'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-10',\n        label: 'Funny',\n        value: 'Funny'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-11',\n        label: 'Gaming',\n        value: 'Gaming'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-12',\n        label: 'Health',\n        value: 'Health'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-13',\n        label: 'Memes',\n        value: 'Memes'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-14',\n        label: 'Music',\n        value: 'Music'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-15',\n        label: 'NBA',\n        value: 'NBA'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-16',\n        label: 'NFL',\n        value: 'NFL'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-17',\n        label: 'News',\n        value: 'News'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-18',\n        label: 'Outdoors',\n        value: 'Outdoors'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-19',\n        label: 'Photography',\n        value: 'Photography'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-20',\n        label: 'Pics & GIFs',\n        value: 'Pics'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-21',\n        label: 'Relationships',\n        value: 'Relationships'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-22',\n        label: 'Science',\n        value: 'Science'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-23',\n        label: 'Sports',\n        value: 'Sports'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-24',\n        label: 'TV',\n        value: 'TV'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-25',\n        label: 'Tech',\n        value: 'Tech'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-26',\n        label: 'Travel',\n        value: 'Travel'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-27',\n        label: 'Video Games',\n        value: 'Video'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-28',\n        label: 'Videos',\n        value: 'Videos'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-29',\n        label: 'Broom',\n        value: 'Broom'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-30',\n        label: 'Writing',\n        value: 'Writing'\n      }\n    ]\n  });\n\n  const handleChange = e => setState({\n    items: [\n      ...state.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked\n      }))\n    ]\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          Chip Default\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <ChipText>Default Chip</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar initials=\"AS\" label=\"Adam Smith\" />\n            <ChipText>Adam Smith</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <ChipText>Adam Smith</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Icon Button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <ChipText>Adam Smith</ChipText>\n            <ButtonIcon ariaLabel=\"search\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar and icon button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <ChipText>Adam Smith</ChipText>\n            <ButtonIcon ariaLabel=\"search\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip filter\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip type=\"filter\">\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <Checkbox\n              name=\"example\"\n              label=\"Adam Smith\"\n              id=\"chip-filter-test-2\"\n              value=\"2\"\n            />\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Group\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ChipContainer>\n            <Fieldset>\n              <Typography tag=\"legend\" variant=\"body--alt\">Select your interests:</Typography>\n              {\n                state.items.map(item => (\n                  <Chip key={item.id} selected={item.checked} type=\"filter\">\n                    <Checkbox\n                      checked={item.checked}\n                      id={item.id}\n                      name=\"chip-group-example\"\n                      onChange={handleChange}\n                      label={item.label}\n                      value={item.value}\n                    />\n                  </Chip>\n                ))\n              }\n            </Fieldset>\n          </ChipContainer>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ChipExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/chip/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/chip/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/chip/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ChipExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Chip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Chip</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Chip Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nChipExample.displayName = 'ChipExample';\n\nexport default ChipExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-checkbox';\nconst CSS_STATE = 'vds-state';\n\nconst Checkbox = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  indeterminate,\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const [indetermined, setIndetermined] = useState(indeterminate);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setIndetermined(indeterminate);\n  }, [indeterminate]);\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setIndetermined(false);\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        aria-checked={indetermined ? 'mixed' : check ? 'true' : 'false'}\n        className={classnames(CSS_PREFIX, {\n          'focus-visible': Boolean(focus)\n        }, className)}\n        disabled={disabled}\n        id={uid}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        ref={ref}\n        type=\"checkbox\"\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focus),\n            [`${CSS_STATE}--indeterminate`]: indetermined && !check,\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          }\n        )}\n        htmlFor={uid}\n        onClick={e => e.stopPropagation()} // if not click event fires 2x, one for checkbox and one for label\n        onKeyPress={e  => e.stopPropagation()} // if not key-press event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nCheckbox.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the checkbox will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   *   Indeterminate\n   */\n  indeterminate: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the checkbox element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n","import React, { Children, cloneElement } from 'react';\nimport { element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-avatar';\n\nconst AvatarPhoto = ({ children, className, label, type, ...remainingProps }) => {\n  if (Children.only(children).type === 'img') {\n    return (\n      cloneElement(\n        children,\n        {\n          alt: Children.only(children).props.alt || label,\n          className: classnames({\n            [`${CSS_PREFIX}--photo`]: Boolean(type) === false,\n            [`${CSS_PREFIX}--${type}`]: Boolean(type)\n          }, className),\n          ...remainingProps\n        }\n      )\n    );\n  }\n\n  return (\n    <div\n      className={classnames(`${CSS_PREFIX}--photo`, className)}\n      role=\"img\"\n      aria-label={label}\n      {...remainingProps}\n    >\n      {\n        cloneElement(\n          children,\n          {\n            ...remainingProps\n          }\n        )\n      }\n    </div>\n  );\n};\n\nAvatarPhoto.propTypes = {\n  /**\n  * Content\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Label\n   */\n  label: string.isRequired,\n\n  /**\n   * Type\n   */\n  type: oneOf(['company-logo'])\n};\n\nAvatarPhoto.displayName = 'AvatarPhoto';\n\nexport default AvatarPhoto;\n"],"sourceRoot":""}