{"version":3,"sources":["components/select/example/index.js","pages/components/select.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/input-option/index.js","components/input-label/index.js","components/input-container/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-hint/index.js","components/input-text/index.js","components/button-group/index.js","components/fieldset/index.js","components/legend/index.js","components/input-select-focusbox/index.js","components/input-select/index.js","components/select/index.js","components/select-group-delimiter/index.js","components/select-group-container/index.js","components/select-group-message/index.js","components/select-group/index.js"],"names":["SelectExample","useState","touched","valid","validated","value","stateOne","setStateOne","refOneValidation","useRef","day","errorText","month","showError","validDay","validMonth","validYear","validatedDay","validatedMonth","validatedYear","year","stateTwo","setStateTwo","refTwoValidationDay","refTwoValidationMonth","refTwoValidationYear","handleStateTwo","String","current","length","tag","position","alertType","name","resolution","label","defaultValue","disabled","hidden","readOnly","variant","helpText","invalid","onChange","e","target","ref","required","showErrorText","showHelpText","Boolean","colorScheme","onClick","focus","legend","id","aria-describedby","map","i","key","substring","toLowerCase","Array","from","x","Date","getFullYear","errorCommaIndex","test","test2","errorString","errorCount","toUpperCase","lastIndexOf","replace","prettier","require","plugins","reactDocs","jsParsed","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","type","color","isArray","v","join","displayName","ScreenReader","forwardRef","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","flippable","isFullWidth","tabIndex","includes","oneOfType","number","InputOption","InputLabel","InputContainer","expanded","filled","isTextarea","func","InputBar","InputMessage","show","InputHint","InputText","ButtonGroup","direction","Fieldset","Legend","InputSelectFocusbox","InputSelect","aria-required","Select","ariaLabel","autoComplete","caretIcon","errorIcon","helpIcon","shortid","generate","onBlur","onFocus","placeholder","focused","setFocused","setFilled","uid","handleBlur","handleFocus","htmlFor","aria-invalid","SelectGroupDelimiter","aria-hidden","SelectGroupContainer","SelectGroupMessage","ariaAtomic","ariaLive","aria-atomic","aria-live","SelectGroup"],"mappings":"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","file":"static/js/12.e804ced9.chunk.js","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport Alert from '../../alert';\nimport AlertIcon from '../../alert-icon';\nimport AlertLabel from '../../alert-label';\nimport ButtonText from '../../button-text';\nimport ButtonGroup from '../../button-group';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport ScreenReader from '../../screen-reader';\nimport Select from '../../select';\nimport SelectGroup from '../../select-group';\nimport SelectGroupDelimiter from '../../select-group-delimiter';\nimport Typography from '../../typography';\n\nconst SelectExample = () => {\n  const [stateOne, setStateOne] = useState({\n    touched: false,\n    valid: false,\n    validated: false,\n    value: ''\n  });\n\n  const refOneValidation = useRef();\n\n  const handleStateOne = e => {\n    setStateOne({\n      ...stateOne,\n      touched: true,\n      validated: false,\n      value: e.target.value\n    });\n  };\n\n  const handleStateOneSubmit = () => {\n    const valid = stateOne.value && stateOne.value.length > 0;\n\n    setStateOne({\n      ...stateOne,\n      touched: false,\n      valid,\n      validated: true\n    });\n\n    if (!valid) {\n      refOneValidation.current.focus();\n    }\n  };\n\n  const handleStateOneReset = () => {\n    setStateOne({\n      touched: false,\n      valid: false,\n      validated: false,\n      value: ''\n    });\n\n    refOneValidation.current.focus();\n  };\n\n  const [stateTwo, setStateTwo] = useState({\n    day: '',\n    errorText: 'Error: Please provide a valid Date of Birth',\n    month: '',\n    showError: false,\n    touched: false,\n    valid: false,\n    validDay: false,\n    validMonth: false,\n    validYear: false,\n    validated: false,\n    validatedDay: false,\n    validatedMonth: false,\n    validatedYear: false,\n    year: ''\n  });\n\n  const refTwoValidationDay = useRef();\n  const refTwoValidationMonth = useRef();\n  const refTwoValidationYear = useRef();\n\n  const handleStateTwoDay = () => {\n    setStateTwo({\n      ...stateTwo,\n      validatedDay: true\n    });\n\n    handleStateTwo();\n  };\n\n  const handleStateTwoMonth = () => {\n    setStateTwo({\n      ...stateTwo,\n      validatedMonth: true\n    });\n\n    handleStateTwo();\n  };\n\n  const handleStateTwoYear = () => {\n    setStateTwo({\n      ...stateTwo,\n      validatedYear: true\n    });\n\n    handleStateTwo();\n  };\n\n  const handleStateTwo = () => {\n    const day = String(refTwoValidationDay.current.value);\n    const month = refTwoValidationMonth.current.value;\n    const year = String(refTwoValidationYear.current.value);\n\n    const validDay = day.length > 0;\n    const validMonth = month.length > 0;\n    const validYear = year.length > 0;\n\n    setStateTwo({\n      ...stateTwo,\n      day,\n      month,\n      touched: true,\n      validDay,\n      validMonth,\n      validYear,\n      validated: false,\n      year\n    });\n  };\n\n  const handleStateTwoSubmit = () => {\n    const test = stateTwo.validDay && stateTwo.validMonth && stateTwo.validYear;\n    const test2 = !stateTwo.validDay || !stateTwo.validMonth || !stateTwo.validYear;\n\n    let errorCommaIndex;\n    let errorString = 'Error: Please provide a valid ';\n    let errorCount = 0;\n    let errorArray = [\n      'month',\n      'day',\n      'year'\n    ];\n\n    errorArray.map((e, i) => { // eslint-disable-line\n      let validField = stateTwo['valid' + e.substring(0,1).toUpperCase() + e.substring(1)];\n      if (!validField) {\n        errorString += e + ', ';\n        errorCount += 1;\n      }\n    });\n\n    errorCommaIndex = errorString.lastIndexOf(', ');\n    errorString = errorString.substring(0, errorCommaIndex);\n\n    errorCommaIndex = errorString.lastIndexOf(', ');\n\n    if (errorCount === 2) {\n      errorString = errorString.replace(', ', ' and ');\n    } else if (errorCount === 3) {\n      errorString = errorString.substring(0, errorCommaIndex + 1) + ' and ' + errorString.substring(errorCommaIndex + 1);\n    }\n\n    setStateTwo({\n      ...stateTwo,\n      errorText: errorString,\n      showError: test2,\n      touched: false,\n      valid: test,\n      validated: true,\n      validatedDay: true,\n      validatedMonth: true,\n      validatedYear: true\n    });\n\n    // @TODO: focus on first invalid select\n    if (!stateTwo.valid) {\n      if (!stateTwo.validMonth) {\n        refTwoValidationMonth.current.focus();\n      } else if (!stateTwo.validDay) {\n        refTwoValidationDay.current.focus();\n      } else if (!stateTwo.validYear) {\n        refTwoValidationYear.current.focus();\n      }\n    }\n  };\n\n  const handleStateTwoReset = () => {\n    setStateTwo({\n      day: '',\n      errorText: 'Error: Please provide a valid Date of Birth',\n      month: '',\n      showError: false,\n      touched: false,\n      valid: false,\n      validDay: false,\n      validMonth: false,\n      validYear: false,\n      validated: false,\n      validatedDay: false,\n      validatedMonth: false,\n      validatedYear: false,\n      year: ''\n    });\n\n    refTwoValidationMonth.current.focus();\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Alert position=\"relative\" alertType=\"information\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"info\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>\n                    Select takes all native React props directly, (e.g. onChange, etc)\n                  </AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Card Type\"\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select (ReadOnly)</Typography>\n          <Select\n            label=\"Select Card\"\n            readOnly\n            value=\"Visa Signature Card\"\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select (Disabled)</Typography>\n          <Select\n            disabled\n            label=\"Select Card\"\n            value=\"signature_card\"\n          >\n            <option value=\"\" disabled />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select with preselection</Typography>\n          <Select\n            label=\"Card Type\"\n            defaultValue=\"signature_card\"\n          >\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select with validation</Typography>\n          <Typography variant=\"caption\">*=required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            errorText=\"Error: A card type is required\"\n            helpText={stateOne.valid ? \"Successfully selected card type\" : !stateOne.touched ? \"Please select a card type\" : ''}\n            invalid={stateOne.validated && !stateOne.valid}\n            label=\"Card Type *\"\n            onChange={handleStateOne}\n            ref={refOneValidation}\n            required\n            showErrorText={!stateOne.valid}\n            showHelpText={Boolean(!stateOne.validated || stateOne.valid)}\n            value={stateOne.value}\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={handleStateOneReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateOneSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select Group with validity states</Typography>\n          <Typography variant=\"caption\">*=required</Typography>\n          <SelectGroup\n            errorText={stateTwo.showError ? stateTwo.errorText : ''}\n            helpText={stateTwo.valid ? \"Successfully selected date of birth\" : !stateTwo.touched ? \"Please fill out your Date of Birth info field\" : ''}\n            invalid={(!stateTwo.valid && stateTwo.validated) || !stateTwo.validMonth || !stateTwo.validDay || !stateTwo.validYear}\n            legend=\"Date of Birth\"\n            showErrorText={stateTwo.showError}\n            showHelpText={Boolean(!stateTwo.validated || stateTwo.valid)}\n          >\n            <ScreenReader id=\"select-group-invalid-month\">\n              { stateTwo.validated && !stateTwo.validMonth ? <Fragment>Error: Please select a valid month</Fragment> : null }\n            </ScreenReader>\n            <Select\n              aria-describedby=\"select-group-invalid-month\"\n              invalid={!stateTwo.validMonth && stateTwo.validatedMonth}\n              label=\"Month *\"\n              onChange={handleStateTwoMonth}\n              ref={refTwoValidationMonth}\n              required\n              showErrorText={false}\n              value={stateTwo.month}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December'\n                ].map((e, i) => (\n                  <option key={i} value={e.substring(0, 3).toLowerCase()}>{e}</option>\n                ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <ScreenReader id=\"select-group-invalid-day\">\n              { stateTwo.validated && !stateTwo.validDay ? <Fragment>Error: Please select a valid day</Fragment> : null }\n            </ScreenReader>\n            <Select\n              aria-describedby=\"select-group-invalid-day\"\n              invalid={!stateTwo.validDay && stateTwo.validatedDay}\n              label=\"Day *\"\n              onChange={handleStateTwoDay}\n              ref={refTwoValidationDay}\n              required\n              showErrorText={false}\n              value={stateTwo.day}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                Array\n                  .from(new Array(31), (x, i) => (i + 1))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <ScreenReader id=\"select-group-invalid-year\">\n              { stateTwo.validated && !stateTwo.validYear ? <Fragment>Error: Please select a valid year</Fragment> : null }\n            </ScreenReader>\n            <Select\n              aria-describedby=\"select-group-invalid-year\"\n              invalid={!stateTwo.validYear && stateTwo.validatedYear}\n              label=\"Year *\"\n              onChange={handleStateTwoYear}\n              ref={refTwoValidationYear}\n              required\n              showErrorText={false}\n              value={stateTwo.year}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                Array\n                  .from(new Array((new Date()).getFullYear() - 1900), (x, i) => (i + 1900))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n          </SelectGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={handleStateTwoReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateTwoSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SelectExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/select/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/select/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/select/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SelectExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Select\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Select</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Select Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSelectExample.displayName = 'SelectExample';\n\nexport default SelectExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-legend';\n\nconst Legend = ({ children, className, ...remainingProps }) => (\n  <legend\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </legend>\n);\n\nLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nLegend.displayName = 'Legend';\n\nexport default Legend;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--select-focusbox';\n\nconst InputSelectFocusbox = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputSelectFocusbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputSelectFocusbox.displayName = 'InputSelectFocusbox';\n\nexport default InputSelectFocusbox;\n","import React, { forwardRef } from 'react';\nimport { node, string, bool } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--select';\n\nconst InputSelect = forwardRef(({\n  children,\n  className,\n  required,\n  ...remainingProps\n}, ref) => (\n  <select\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    required={required}\n    aria-required={required ? required : undefined}\n    {...remainingProps}\n  >\n    {children}\n  </select>\n));\n\nInputSelect.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n    * @ignore\n    */\n  required: bool\n};\n\nInputSelect.defaultProps = {\n  required: false\n};\n\nInputSelect.displayName = 'InputSelect';\n\nexport default InputSelect;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputSelectFocusbox from '../input-select-focusbox';\nimport InputMessage from '../input-message';\nimport InputSelect from '../input-select';\nimport InputOption from '../input-option';\nimport InputHint from '../input-hint';\nimport InputText from '../input-text';\nimport Icon from '../icon';\n\nconst Select = forwardRef(({\n  ariaLabel,\n  autoComplete,\n  caretIcon,\n  children,\n  className,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  required,\n  readOnly,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}, ref) => {\n  const [focused, setFocused] = useState();\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={invalid}\n    >\n      {label ? <InputLabel htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        { placeholder ? <InputHint>{placeholder}</InputHint> : undefined}\n        { readOnly ?\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={invalid}\n            autoComplete={autoComplete}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onFocus={handleFocus}\n            readOnly\n            required={required}\n            ref={ref}\n            {...remainingProps}\n          />\n          :\n          <InputSelect\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={invalid}\n            autoComplete={autoComplete}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            readOnly={readOnly}\n            ref={ref}\n            required={required}\n            {...remainingProps}\n          >\n            {children}\n          </InputSelect>\n        }\n        <InputOption>{caretIcon}</InputOption>\n      </InputBar>\n      <InputSelectFocusbox />\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={invalid}\n        show\n      >\n      {\n        showHelpText && Boolean(helpText) && focused\n          ? <Fragment>{helpIcon} {helpText}</Fragment>\n          : ''\n      }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid\n        show\n      >\n        {\n          invalid && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nSelect.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   * AutoComplete\n   */\n  autoComplete: string,\n\n  /**\n   * Input Caret Icon\n   */\n  caretIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Input Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   * Error Text\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Hint\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n    * Required\n    */\n  required: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Value\n   */\n  value: string\n};\n\nSelect.defaultProps = {\n  autoComplete: 'off',\n  caretIcon: <Icon name=\"arrow-expand\" resolution=\"tiny\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />,\n  helpIcon: <Icon name=\"info\" resolution=\"tiny\" />\n};\n\nSelect.displayName = 'Select';\n\nexport default Select;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-select-group-delimiter';\n\nconst SelectGroupDelimiter = ({ children, className, ...remainingProps }) => (\n  <span\n    aria-hidden=\"true\"\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nSelectGroupDelimiter.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSelectGroupDelimiter.displayName = 'SelectGroupDelimiter';\n\nexport default SelectGroupDelimiter;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-select-group-container';\n\nconst SelectGroupContainer = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSelectGroupContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSelectGroupContainer.displayName = 'SelectGroupContainer';\n\nexport default SelectGroupContainer;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-select-group-message';\nconst CSS_STATE = 'vds-state';\n\nconst SelectGroupMessage = ({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--show`]: show\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nSelectGroupMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n   * Aria Live\n   */\n  ariaLive: oneOf(['assertive', 'polite', 'off']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nSelectGroupMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive'\n};\n\nSelectGroupMessage.displayName = 'SelectGroupMessage';\n\nexport default SelectGroupMessage;\n","import React, { Fragment, useRef } from 'react';\nimport { bool, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Fieldset from '../fieldset';\nimport Legend from '../legend';\nimport SelectGroupContainer from '../select-group-container';\nimport SelectGroupMessage from '../select-group-message';\nimport Icon from '../icon';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-select-group';\nconst CSS_STATE = 'vds-state';\n\nconst SelectGroup = ({\n  children,\n  className,\n  id = shortid.generate(),\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  invalid,\n  legend,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <div\n      className={classnames(\n        CSS_PREFIX,\n        {\n          [`${CSS_STATE}--disabled`]: Boolean(disabled),\n          [`${CSS_STATE}--error`]: Boolean(invalid)\n        },\n        className\n      )}\n      {...remainingProps}\n    >\n      <Fieldset\n        aria-describedby={`select-group-message-help-${uid} select-group-message-error-${uid}`}\n      >\n        <Legend>{legend}</Legend>\n        <SelectGroupContainer>\n          {children}\n        </SelectGroupContainer>\n        <SelectGroupMessage\n          id={`select-group-message-help-${uid}`}\n          invalid={invalid}\n          show\n        >\n          {!invalid && showHelpText && Boolean(helpText) ? (\n            <Fragment>\n              {helpIcon} {helpText}\n            </Fragment>\n          ) : (\n            ''\n          )}\n        </SelectGroupMessage>\n        <SelectGroupMessage\n          id={`select-group-message-error-${uid}`}\n          invalid={invalid}\n          show\n        >\n          {invalid && showErrorText && Boolean(errorText) ? (\n            <Fragment>\n              {errorIcon} {errorText}\n            </Fragment>\n          ) : (\n            ''\n          )}\n        </SelectGroupMessage>\n      </Fieldset>\n    </div>\n  );\n};\n\nSelectGroup.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Input Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   * Error Text\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Legend\n   */\n  legend: node,\n\n  /**\n   * Select Group Message\n   */\n  selectGroupMessage: node,\n\n  /**\n   * Select Group Message Icon\n   */\n  selectGroupMessageIcon: node,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool\n};\n\nSelectGroup.defaultProps = {\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />,\n  helpIcon: <Icon name=\"info\" resolution=\"low\" />\n};\n\nSelectGroup.displayName = 'SelectGroup';\n\nexport default SelectGroup;\n"],"sourceRoot":""}