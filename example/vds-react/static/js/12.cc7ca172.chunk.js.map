{"version":3,"sources":["components/nav-action/index.js","components/nav-action-info/index.js","components/search/index.js","components/search-button/index.js","components/search-clear-button/index.js","components/search-icon/index.js","components/search/example/search-combobox.js","components/search/example/index.js","pages/components/search.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/input-option/index.js","components/input-label/index.js","components/input-container/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/listbox/index.js","components/listbox-item/index.js","components/nav-site/index.js"],"names":["NavAction","children","className","remainingProps","classnames","displayName","NavActionInfo","Search","forwardRef","ref","container","dynamic","expandable","navbar","role","Boolean","propTypes","node","string","bool","defaultProps","SearchButton","SearchClearButton","style","display","SearchIcon","SearchCombobox","components","history","setSearchQuery","inputContainerProps","useState","name","value","setValue","onSubmit","e","preventDefault","target","elements","q","trim","push","process","itemToString","item","onStateChange","changes","hasOwnProperty","selectedItem","inputValue","getInputProps","getItemProps","getMenuProps","getRootProps","highlightedIndex","isOpen","undefined","aria-haspopup","aria-expanded","aria-labelledby","type","ariaLabel","iconType","resolution","aria-label","label","labelId","placeholder","suppressRefError","useNativePlaceholder","length","filter","match","map","index","active","key","selected","SearchExample","props","refOne","useRef","refTwo","refThree","refFour","disableToggle","expanded","stateOne","setStateOne","stateTwo","setStateTwo","stateThree","setStateThree","stateFour","setStateFour","tag","onBlur","setTimeout","onChange","tabIndex","onClick","current","focus","position","href","alt","src","Logo","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","activeClassName","path","theme","code","language","tokens","getLineProps","getTokenProps","line","i","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","Object","entries","doc","description","required","color","Array","isArray","v","join","defaultValue","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","disabled","InputOption","InputLabel","InputContainer","filled","invalid","isTextarea","readOnly","func","InputBar","InputMessage","show","InputHint","InputText","Input","checkmarkIcon","containerProps","contentAfterInput","contentBeforeInput","errorIcon","errorText","helpIcon","helpText","id","shortid","generate","noValidate","onFocus","showCheckmark","showErrorText","showHelpText","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","setValidity","checkValidity","htmlFor","aria-describedby","aria-invalid","InputInput","Listbox","multiselect","ListboxItem","listItemValue","aria-disabled","data-list-item-value","NavSite"],"mappings":"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","file":"static/js/12.cc7ca172.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-action';\n\nconst NavAction = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavAction.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavAction.displayName = 'NavAction';\n\nexport default NavAction;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-action-info';\n\nconst NavActionInfo = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavActionInfo.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavActionInfo.displayName = 'NavActionInfo';\n\nexport default NavActionInfo;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search';\n\nconst Search = forwardRef(({\n  children,\n  className,\n  container,\n  dynamic,\n  expandable,\n  navbar,\n  role,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--container`]: Boolean(container),\n      [`${CSS_PREFIX}--dynamic`]: Boolean(dynamic),\n      [`${CSS_PREFIX}--expandable`]: Boolean(expandable),\n      [`${CSS_PREFIX}--nav-bar`]: Boolean(navbar)\n    }, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nSearch.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Search bar\n   */\n  container: bool,\n\n  /**\n   * Dynamic Search bar\n   */\n  dynamic: bool,\n\n  /**\n   * Expandable Search bar\n   */\n  expandable: bool,\n\n  /**\n   * Navbar Search bar\n   */\n  navbar: bool,\n\n  /**\n   * @ignore\n   */\n  role: string\n};\n\nSearch.displayName = 'Search';\n\nSearch.defaultProps = {\n  role: 'search'\n};\n\nexport default Search;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search-button';\n\nconst SearchButton = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSearchButton.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSearchButton.displayName = 'SearchButton';\n\nexport default SearchButton;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search-clear-btn';\n\nconst SearchClearButton = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    style={{ display: 'block' }}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSearchClearButton.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSearchClearButton.displayName = 'SearchClearButton';\n\nexport default SearchClearButton;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search-icon';\n\nconst SearchIcon = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSearchIcon.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport React, { useState } from 'react';\nimport { arrayOf, func, object, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Downshift from 'downshift';\nimport ButtonIcon from '../../button-icon';\nimport Icon from '../../icon';\nimport Input from '../../input';\nimport Search from '../../search';\nimport SearchButton from '../../search-button';\nimport Listbox from '../../listbox'\nimport ListboxItem from '../../listbox-item'\n\nconst SearchCombobox = ({ components, history, setSearchQuery, inputContainerProps }) => {\n  const [value, setValue] = useState({ name: '' });\n\n  const handleStateChange = changes => {\n    if (changes.hasOwnProperty('selectedItem')) {\n      setValue(changes.selectedItem);\n    } else if (changes.hasOwnProperty('inputValue')) {\n      setValue({ name: changes.inputValue })\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchQuery(e.target.elements.q.value.trim());\n    history.push(`${process.env.PUBLIC_URL}/search`);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} role=\"search\">\n      <Downshift\n        itemToString={item => (item ? item.name : '')}\n        onStateChange={handleStateChange}\n        selectedItem={value}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          getMenuProps,\n          getRootProps,\n          highlightedIndex,\n          inputValue,\n          isOpen,\n          selectedItem,\n          ...rest\n        }) => (\n          <Search \n            role={undefined}\n            aria-haspopup={undefined}\n            aria-expanded={undefined}\n            aria-labelledby={undefined}\n          >\n            <SearchButton>\n              <ButtonIcon type=\"submit\" ariaLabel=\"search\" iconType=\"light\">\n                <Icon name=\"search\" resolution=\"low\" />\n              </ButtonIcon>\n            </SearchButton>\n            <Input\n              {...getInputProps()}\n              aria-label=\"Site-wide\"\n              label=\"Search components\"\n              labelId={getInputProps()['aria-labelledby']}\n              inputContainerProps={{\n                ...inputContainerProps,\n                'aria-expanded': isOpen ? 'true' : 'false'\n              }}\n              name=\"q\"\n              placeholder=\"Search components\"\n              type=\"search\"\n              {...getRootProps({}, { suppressRefError: true })}\n              useNativePlaceholder\n            />\n            <div\n              className={classnames('vds-menu--absolute', {\n                [`vds-menu--show`]: isOpen && inputValue.length && components.filter(item => item.name.match(inputValue)).length\n              })}\n            >\n              <Listbox {...getMenuProps()}>\n                {\n                  isOpen\n                  ? components.filter(item => item.name.match(inputValue)).map((item, index) => (\n                    <ListboxItem\n                      active={highlightedIndex === index}\n                      key={index}\n                      selected={selectedItem === item}\n                      {...getItemProps({\n                        key: index,\n                        index,\n                        item\n                      })}\n                    >\n                      {item.name}\n                    </ListboxItem>\n                  ))\n              : null}\n              </Listbox>\n            </div>\n          </Search>)}\n      </Downshift>\n    </form>\n  );\n};\n\nSearchCombobox.defaultProps = {\n  inputContainerProps: {\n    role: 'combobox',\n    'aria-haspopup': 'listbox'\n  }\n};\n\nSearchCombobox.propTypes = {\n  /**\n   * List of components\n   */\n  components: arrayOf(shape),\n\n  /**\n   * History\n   */\n  history: object,\n\n  /**\n   * Set search query\n   */\n  setSearchQuery: func,\n\n  inputContainerProps: shape({\n    role: string,\n    'aria-haspopup': string,\n    'aria-expanded': string\n  })\n};\n\nexport default SearchCombobox;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport React, { useRef, useState } from 'react';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Input from '../../input';\nimport Nav from '../../nav';\nimport NavAction from '../../nav-action';\nimport NavActionInfo from '../../nav-action-info';\nimport NavBrand from '../../nav-brand';\nimport NavBrandInfo from '../../nav-brand-info';\nimport NavBrandLogo from '../../nav-brand-logo';\nimport NavBrandLogoImage from '../../nav-brand-logo-image';\nimport NavLinks from '../../nav-links';\nimport NavSite from '../../nav-site';\nimport NavSkip from '../../nav-skip';\nimport Row from '../../row';\nimport Search from '../../search';\nimport SearchButton from '../../search-button';\nimport SearchClearButton from '../../search-clear-button';\nimport SearchIcon from '../../search-icon';\nimport Tab from '../../tab';\nimport TabList from '../../tab-list';\nimport Typography from '../../typography';\nimport SearchCombobox from './search-combobox';\nimport Logo from '@visa/vds-web/dist/_logos/visa/visa_vbm_wht.svg';\nimport  './index.css';\n\nconst SearchExample = (props) => {\n  const refOne = useRef();\n  const refTwo = useRef();\n  const refThree = useRef();\n  const refFour = useRef();\n\n  const [stateOne, setStateOne] = useState({\n    disableToggle: false,\n    expanded: false,\n    value: ''\n  });\n\n  const [stateTwo, setStateTwo] = useState({\n    disableToggle: false,\n    expanded: false,\n    value: ''\n  });\n\n  const [stateThree, setStateThree] = useState({\n    value: ''\n  });\n\n  const [stateFour, setStateFour] = useState({\n    value: ''\n  });\n\n  const handleClickOne = () => {\n    if (stateOne.value === '' && stateOne.disableToggle === false) {\n      refOne.current.focus();\n\n      setStateOne({\n        ...stateOne,\n        disableToggle: true,\n        expanded: !stateOne.expanded\n      });\n    }\n  };\n\n  const handleBlurOne = () => {\n    setStateOne({\n      ...stateOne,\n      expanded: Boolean(stateOne.value.length)\n    });\n\n    setTimeout(() => setStateOne({\n      ...stateOne,\n      disableToggle: false,\n      expanded: Boolean(stateOne.value.length)\n    }), 300);\n  };\n\n  const handleClickTwo = () => {\n    if (stateTwo.value === '' && stateTwo.disableToggle === false) {\n      refTwo.current.focus();\n\n      setStateTwo({\n        ...stateTwo,\n        disableToggle: true,\n        expanded: !stateTwo.expanded\n      });\n    }\n  };\n\n  const handleBlurTwo = () => {\n    setStateTwo({\n      ...stateTwo,\n      expanded: Boolean(stateTwo.value.length)\n    });\n\n    setTimeout(() => setStateTwo({\n      ...stateTwo,\n      disableToggle: false,\n      expanded: Boolean(stateTwo.value.length)\n    }), 300);\n  };\n\n  const handleClickThree = () => {\n    refThree.current.focus();\n    setStateThree({\n      ...stateThree,\n      value: ''\n    })\n  };\n\n  const handleClickFour = () => {\n    refFour.current.focus();\n    setStateFour({\n      ...stateFour,\n      value: ''\n    })\n  };\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Search Default with interactive/a11y functionality</Typography>\n          <Typography>\n            This is a simple example of how to wire the search component to showcase how it can be used in\n            an application. The different versions of the atomic search component can be used to support different\n            application needs for Search.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <SearchCombobox {...props} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Search Default</Typography>\n          <Typography tag=\"h3\">Component Only (no search functionality)</Typography>\n          <Typography>\n            Standard search interaction provides search results\n            after user has input their keyword search query and\n            submit the action. While auto-suggest may help the user\n            complete their input, search results are not displayed\n            until users explicitly submit the search action.\n          </Typography>\n          <Typography>\n            Note: Standard Search includes a button with the\n            magnifying glass icon and the input field is 48px tall.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search aria-label=\"Demo Example 2\">\n            <SearchButton>\n              <ButtonIcon ariaLabel=\"search\" iconType=\"light\">\n                <Icon name=\"search\" resolution=\"low\" />\n              </ButtonIcon>\n            </SearchButton>\n            <Input\n              aria-label=\"Site-wide\"\n              name=\"q\"\n              placeholder=\"Search events\"\n              type=\"search\"\n              useNativePlaceholder\n            />\n          </Search>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Search Expandable (with state)</Typography>\n          <Typography tag=\"h3\">Component Only (no search functionality)</Typography>\n          <Typography>\n            When the search feature is more of a secondary action and\n            the allowed canvas real-estate is limited, the search magnifying\n            glass icon can be used as an entry point to invoke a modal search box.\n          </Typography>\n          <Typography>\n            Once users press the search icon, the text field will expand and be ready for input.\n          </Typography>\n          <Typography>\n            After the field is expanded, if focus is removed from field\n            before an entry is made, then the field will collapse to it’s default state.\n          </Typography>\n          <Typography>\n            Pressing the search icon while the field is expanded will check\n            if the field contains entered text. If there is an entry then a\n            search is performed, otherwise the field is collapsed to it’s default state.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search aria-label=\"Demo Example 3\" container expandable>\n            <Input\n              expanded={stateOne.expanded}\n              aria-label=\"Site-wide\"\n              name=\"q\"\n              onBlur={handleBlurOne}\n              onChange={e => setStateOne({ ...stateOne, value: e.target.value })}\n              placeholder=\"Search real-estate\"\n              ref={refOne}\n              type=\"search\"\n              useNativePlaceholder\n              tabIndex={stateOne.expanded ? '0' : '-1'}\n              value={stateOne.value}\n            />\n            <SearchButton>\n              <ButtonIcon\n                ariaLabel=\"search\"\n                iconType={stateOne.expanded ? 'light' : undefined}\n                onClick={handleClickOne}\n              >\n                <Icon name=\"search\" resolution=\"low\" />\n              </ButtonIcon>\n            </SearchButton>\n          </Search>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Navigation Bar With Standard Expandable Search</Typography>\n          <Typography tag=\"h3\">Component Only (no search functionality)</Typography>\n          <Typography>\n            Search feature as placed in the Navigation Bar will gather\n            results from across the entire app experience. By default,\n            it will use the expandable behavior with non-dynamic search behavior.\n            This design of the text field input (no borders) is specific to Search on the Navigation Bar.\n          </Typography>\n          <Typography>\n            Default\n          </Typography>\n          <Typography>\n            By default the user will only see the Search magnifying glass\n            icon as part of the navigation bar. To invoke the search feature,\n            the user will press on the icon button.\n          </Typography>\n          <Typography>\n            After Expansion\n          </Typography>\n          <Typography>\n            Once the user presses on the Search magnifying glass,\n            the search box will expand and place the focus on the text\n            field, ready for users to type in their query.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav position=\"relative\">\n            <Grid>\n              <Row>\n                <Col>\n                  <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                  <NavBrand>\n                    <NavBrandInfo>\n                      <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                        <Icon name=\"menu\" resolution=\"low\" />\n                      </ButtonIcon>\n                      <NavBrandLogo href=\"http://www.visa.com\">\n                        <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                      </NavBrandLogo>\n                    </NavBrandInfo>\n                  </NavBrand>\n                  <NavSite>\n                    <NavLinks ariaLabel=\"Demo Site Navigation\">\n                      <TabList>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Contact</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Service</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Statistics</Tab>\n                      </TabList>\n                    </NavLinks>\n                  </NavSite>\n                  <NavAction>\n                    <NavActionInfo>\n                      <Search aria-label=\"Demo Example 4\" expandable navbar>\n                        <Input\n                          expanded={stateTwo.expanded}\n                          aria-label=\"Site-wide\"\n                          name=\"q\"\n                          onBlur={handleBlurTwo}\n                          onChange={e => setStateTwo({ ...stateTwo, value: e.target.value })}\n                          placeholder=\"Search restaurants\"\n                          ref={refTwo}\n                          type=\"search\"\n                          tabIndex={stateTwo.expanded ? '0' : '-1'}\n                          useNativePlaceholder\n                          value={stateTwo.value}\n                        />\n                        <SearchButton>\n                          <ButtonIcon\n                            ariaLabel=\"search\"\n                            iconType={stateTwo.expanded ? 'light' : 'dark'}\n                            onClick={handleClickTwo}\n                          >\n                            <Icon name=\"search\" resolution=\"low\" />\n                          </ButtonIcon>\n                        </SearchButton>\n                      </Search>\n                    </NavActionInfo>\n                  </NavAction>\n                </Col>\n              </Row>\n            </Grid>\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Dynamic Search</Typography>\n          <Typography tag=\"h3\">Component Only (no search functionality)</Typography>\n          <Typography>\n            Dynamic search begins when the user starts typing in their\n            query after invoking the search function. Users will see a\n            list of auto-suggestions to help users find the proper query or\n            related results. The search-as-you-type is often used in dedicated\n            search experiences and often in mobile app experiences.\n          </Typography>\n          <Typography>\n            Typing three or more characters presents the search assist menu.\n          </Typography>\n          <Typography>\n            Note: Unlike Standard Search, Dynamic Search includes a\n            &quot;clear entry&quot; button and not a Search button and the input\n            field is 40px tall.\n          </Typography>\n          <Typography>\n            The clear button will show up if users entered a keyword entry.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search aria-label=\"Demo Example 5\" dynamic>\n            <Input\n              aria-label=\"Site-wide\"\n              name=\"q\"\n              onChange={e => setStateThree({ value: e.target.value })}\n              placeholder=\"Search locations\"\n              type=\"search\"\n              useNativePlaceholder\n              value={stateThree.value}\n              ref={refThree}\n            />\n            <SearchIcon>\n              <Icon name=\"search\" resolution=\"low\" />\n            </SearchIcon>\n            {\n              stateThree.value.length\n                ? <SearchClearButton>\n                  <ButtonIcon\n                    ariaLabel=\"clear entry\"\n                    iconType=\"light-tiny\"\n                    onClick={handleClickThree}\n                  >\n                    <Icon name=\"clear\" resolution=\"tiny\" />\n                  </ButtonIcon>\n                </SearchClearButton>\n                : undefined\n            }\n          </Search>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Contextual Search</Typography>\n          <Typography tag=\"h3\">Component Only (no search functionality)</Typography>\n          <Typography>\n            As the search scope becomes more narrow and contextual,\n            the placement of the search feature will be placed closer with\n            the content that it will search. This will utilize the text field,\n            hidden label variant. The search feature may run dynamically\n            depending on the app architecture.\n          </Typography>\n          <Typography>\n            Typing three or more characters presents the search assist menu.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search aria-label=\"Demo Example 6\" dynamic>\n            <Input\n              aria-label=\"Site-wide\"\n              name=\"q\"\n              onChange={e => setStateFour({ value: e.target.value })}\n              placeholder=\"Search news articles\"\n              type=\"search\"\n              useNativePlaceholder\n              value={stateFour.value}\n              ref={refFour}\n            />\n            <SearchIcon>\n              <Icon name=\"search\" resolution=\"low\" />\n            </SearchIcon>\n            {\n              stateFour.value.length\n                ? <SearchClearButton>\n                  <ButtonIcon\n                    ariaLabel=\"clear entry\"\n                    iconType=\"light-tiny\"\n                    onClick={handleClickFour}\n                  >\n                    <Icon name=\"clear\" resolution=\"tiny\" />\n                  </ButtonIcon>\n                </SearchClearButton>\n                : undefined\n            }\n          </Search>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SearchExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/search/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/search/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/search/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SearchExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Search\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Search</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/search`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Search Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/search/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/search/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/search`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/search`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/search/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/search/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/search/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/search/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSearchExample.displayName = 'SearchExample';\n\nexport default SearchExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...inputContainerProps}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox';\n\nconst Listbox = forwardRef(({\n  children,\n  className,\n  multiselect,\n  role,\n  ...remainingProps\n}, ref) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      'vds-select--multi': Boolean(multiselect)\n    }, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n));\n\nListbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Multi select\n   */\n  multiselect: bool,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nListbox.defaultProps = {\n  role: 'listbox'\n};\n\nListbox.displayName = 'Listbox';\n\nexport default Listbox;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItem = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  focus,\n  listItemValue,\n  role,\n  selected,\n  ...remainingProps\n}, ref) => (\n  <li\n    aria-disabled={Boolean(disabled) ? 'true' : undefined}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    data-list-item-value={listItemValue}\n    ref={ref}\n    role={role}\n    tabIndex={Boolean(disabled) ? '-1' : undefined}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nListboxItem.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * List item value\n   */\n  listItemValue: string,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Selected\n   */\n  selected: bool\n};\n\nListboxItem.defaultProps = {\n  role: 'option'\n};\n\nListboxItem.displayName = 'ListboxItem';\n\nexport default ListboxItem;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-site';\nconst CSS_STATE = 'vds-state';\n\nconst NavSite = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavSite.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show in mobile\n   */\n  show: bool\n};\n\nNavSite.displayName = 'NavSite';\n\nexport default NavSite;\n"],"sourceRoot":""}