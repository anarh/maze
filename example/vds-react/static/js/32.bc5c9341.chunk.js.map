{"version":3,"sources":["components/switch/index.js","components/switch/example/index.js","pages/components/switch.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js"],"names":["Switch","forwardRef","ref","className","checked","defaultChecked","defaultFocused","disabled","id","shortid","generate","label","name","onBlur","onChange","onFocus","switchOffText","switchOnText","remainingProps","useState","isChecked","setChecked","isFocused","setFocused","uid","useRef","current","useEffect","classnames","htmlFor","aria-checked","type","event","target","role","aria-hidden","defaultProps","displayName","SwitchExample","tag","lg","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","value","length","color","Array","isArray","v","join","undefined","defaultValue","ScreenReader","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","RegExp","test"],"mappings":"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","file":"static/js/32.bc5c9341.chunk.js","sourcesContent":["import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-switch';\nconst CSS_STATE = 'vds-state';\n\nconst Switch = forwardRef(({\n  className,\n  checked,\n  defaultChecked,\n  defaultFocused,\n  disabled,\n  id = shortid.generate(),\n  label,\n  name,\n  onBlur,\n  onChange,\n  onFocus,\n  switchOffText,\n  switchOnText,\n  ...remainingProps\n}, ref) => {\n  const [isChecked, setChecked] = useState(checked || defaultChecked);\n  const [isFocused, setFocused] = useState(defaultFocused);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setChecked(checked);\n  }, [checked]);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, {\n        [`${CSS_STATE}--active`]: isChecked,\n        [`${CSS_STATE}--disabled`]: disabled,\n        [`${CSS_STATE}--focus`]: isFocused\n      }, className)}\n      id={uid}\n    >\n      <label\n        className={classnames(`${CSS_PREFIX}-label`)}\n        htmlFor={`switch-control-${uid}`}\n        id={`switch-control-label-${uid}`}\n      >\n        {label}\n        <input\n          aria-checked={isChecked ? 'true' : 'false'}\n          type=\"checkbox\"\n          id={`switch-control-${uid}`}\n          className={classnames(`${CSS_PREFIX}-input`)}\n          defaultChecked={isChecked}\n          name={name}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          ref={ref}\n          role=\"switch\"\n          {...remainingProps}\n        />\n        <div className={classnames(`${CSS_PREFIX}-value`)} aria-hidden=\"true\">\n          {isChecked ? switchOnText : switchOffText}\n        </div>\n        <span className={classnames(`${CSS_PREFIX}-toggle`)} />\n      </label>\n    </div>\n  );\n});\n\nSwitch.propTypes = {\n  /**\n   *   Checked\n   */\n  checked: bool,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Default checked\n   */\n  defaultChecked: bool,\n\n  /**\n   * Default focused\n   */\n  defaultFocused: bool,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n  * Label\n  */\n  label: node,\n\n  /**\n   * Name\n   */\n  name: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the value is changed.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /*\n   * Switch off text\n   */\n  switchOffText: node,\n\n  /*\n   * Switch on text\n   */\n  switchOnText: node\n};\n\nSwitch.defaultProps = {\n  switchOffText: 'Off',\n  switchOnText: 'On'\n};\n\nSwitch.displayName = 'Switch';\n\nexport default Switch;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Switch from '../../switch';\n\nconst SwitchExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Switch</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col lg={2}>\n        <Switch id=\"switch-id-1\" label=\"Location\" name=\"location-input\" />\n      </Col>\n      <Col />\n    </Row>\n  </Grid>\n);\n\nexport default SwitchExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/switch/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/switch/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/switch/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SwitchExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Switch\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Switch</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Switch Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSwitchExample.displayName = 'SwitchExample';\n\nexport default SwitchExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n"],"sourceRoot":""}