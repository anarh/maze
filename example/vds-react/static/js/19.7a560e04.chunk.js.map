{"version":3,"sources":["components/_imgs/stockphoto.png","components/chip/index.js","components/chip-container/index.js","components/chip-text/index.js","components/chip/example/input-chips-example.js","components/chip/example/index.js","pages/components/chip.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/input-label/index.js","components/link/index.js","components/checkbox/index.js","components/avatar-photo/index.js"],"names":["module","exports","Chip","forwardRef","ref","children","className","disabled","focused","onBlur","onChange","onFocus","readonly","selected","type","remainingProps","useState","focus","setFocus","select","setSelect","useEffect","classnames","Boolean","event","target","checked","tabIndex","undefined","defaultProps","displayName","ChipContainer","propTypes","node","string","ChipText","KEY_CODES","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","BACKSPACE","DELETE","END","ENTER","HOME","SPACE","TAB","InputChipsExample","useRef","inputRef","value","setValue","focusedId","setFocusedId","setFocused","items","id","state","setState","el","current","querySelector","handleDelete","e","eventType","isKeydown","isClick","isBackspaceKey","includes","charCode","keyCode","isDeleteKey","isDownKey","isEndKey","isEnterKey","isHomeKey","isLeftKey","isRightKey","isSpaceKey","isUpKey","preventDefault","map","item","i","length","slice","handleButtonBlur","aria-label","onClick","role","key","ariaLabel","iconType","onKeyDown","name","resolution","code","idToFocus","ChipExample","label","handleChange","tag","initials","alt","src","stockPhoto","htmlFor","href","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","color","Array","isArray","v","join","defaultValue","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","active","InputLabel","Link","inline","cloneElement","element","Checkbox","shortid","generate","indeterminate","invalid","defaultChecked","check","setCheck","indetermined","setIndetermined","uid","aria-checked","stopPropagation","onKeyPress","AvatarPhoto","Children","only"],"mappings":"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","file":"static/js/19.7a560e04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stockphoto.a3f1d696.png\";","import React, { forwardRef, useEffect, useState } from 'react';\nimport { bool, func, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip';\nconst CSS_STATE = 'vds-state';\n\nconst Chip = forwardRef(({\n  children,\n  className,\n  disabled,\n  focused,\n  onBlur,\n  onChange,\n  onFocus,\n  readonly,\n  selected,\n  type,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState(focused);\n  const [select, setSelect] = useState(selected);\n\n  useEffect(() => {\n    setFocus(focused);\n  }, [focused]);\n\n  useEffect(() => {\n    setSelect(selected);\n  }, [selected]);\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  const handleChange = event => {\n    setSelect(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  return (\n    <div\n      className={classnames({\n        [`${CSS_PREFIX}`]: type === 'default',\n        [`${CSS_PREFIX}--filter`]: type === 'filter',\n        [`${CSS_STATE}--disabled`]: Boolean(disabled),\n        [`${CSS_STATE}--readonly`]: Boolean(readonly),\n        [`${CSS_STATE}--selected`]: Boolean(select),\n        [`${CSS_STATE}--focus`]: Boolean(focus)\n      }, className)}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      tabIndex={disabled ? -1 : undefined}\n      ref={ref}\n      {...remainingProps}\n    >\n      {children}\n    </div>\n  );\n});\n\nChip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * disabled\n  */\n  disabled: bool,\n\n  /**\n  * focused\n  */\n  focused: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n  * Readonly\n  */\n  readonly: bool,\n\n  /**\n  * Selected\n  */\n  selected: bool,\n  /**\n   * Type\n   */\n  type: oneOf(['default', 'filter'])\n};\n\nChip.defaultProps = {\n  type: 'default'\n};\n\nChip.displayName = 'Chip';\n\nexport default Chip;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip-container';\n\nconst ChipContainer = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nChipContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nChipContainer.displayName = 'ChipContainer';\n\nexport default ChipContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip-text';\n\nconst ChipText = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nChipText.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nChipText.displayName = 'ChipText';\n\nexport default ChipText;\n","import React, { useEffect, useState, useRef } from 'react';\nimport classnames from 'classnames';\nimport ButtonIcon from '../../button-icon';\nimport Chip from '../../chip';\nimport ChipContainer from '../../chip-container';\nimport ChipText from '../../chip-text';\nimport Icon from '../../icon';\nimport './input-chips-example.scss';\n\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  BACKSPACE: 8,\n  DELETE: 46,\n  END: 35,\n  ENTER: 13,\n  HOME: 36,\n  SPACE: 32,\n  TAB: 9\n};\n\nconst InputChipsExample = () => {\n  const ref = useRef();\n  const inputRef = useRef();\n  const [value, setValue] = useState('');\n  const [focusedId, setFocusedId] = useState(-1);\n  const [focused, setFocused] = useState(false);\n  const [state, setState] = useState({\n    items: [\n      {\n        focused: false,\n        id: 'input-chip-group-test-0',\n        value: 'Mango'\n      },\n      {\n        focused: false,\n        id: 'input-chip-group-test-1',\n        value: 'Orange'\n      },\n      {\n        focused: false,\n        id: 'input-chip-group-test-2',\n        value: 'Apple'\n      },\n      {\n        focused: false,\n        id: 'input-chip-group-test-3',\n        value: 'Peach'\n      }\n    ]\n  });\n\n  useEffect(() => {\n    const el = ref.current.querySelector(`#input-chip-group-test-${focusedId}`);\n    if (Boolean(el)) {\n      el.focus();\n    }\n  }, [focusedId]);\n\n  const handleInputClick = e => {\n    setFocusedId(-1);\n    setState({\n      items: [\n        ...state.items.map((item, i) => ({\n          ...item,\n          focused: false\n        }))\n      ]\n    });\n  };\n\n  const handleContainerClick = e => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleDelete = (e, id) => {\n    const eventType = e.type;\n    const isKeydown = e.type === 'keydown';\n    const isClick = eventType === 'click';\n    const isBackspaceKey = isKeydown && [KEY_CODES.BACKSPACE].includes(e.charCode || e.keyCode);\n    const isDeleteKey = isKeydown && [KEY_CODES.DELETE].includes(e.charCode || e.keyCode);\n    const isDownKey = isKeydown && [KEY_CODES.ARROW_DOWN].includes(e.charCode || e.keyCode);\n    const isEndKey = isKeydown && [KEY_CODES.END].includes(e.charCode || e.keyCode);\n    const isEnterKey = isKeydown && [KEY_CODES.ENTER].includes(e.charCode || e.keyCode);\n    const isHomeKey = isKeydown && [KEY_CODES.HOME].includes(e.charCode || e.keyCode);\n    const isLeftKey = isKeydown && [KEY_CODES.ARROW_LEFT].includes(e.charCode || e.keyCode);\n    const isRightKey = isKeydown && [KEY_CODES.ARROW_RIGHT].includes(e.charCode || e.keyCode);\n    const isSpaceKey = isKeydown && [KEY_CODES.SPACE].includes(e.charCode || e.keyCode);\n    const isUpKey = isKeydown && [KEY_CODES.ARROW_UP].includes(e.charCode || e.keyCode);\n    if (isEnterKey || isSpaceKey) {\n      e.preventDefault();\n    }\n\n    const items = state.items.map((item, i) => ({\n      ...item,\n      focused: isClick ? false : i === id - 1\n    }));\n\n    if (isClick || isBackspaceKey) {\n      if (id > -1 && items.length) {\n        setState({\n          items: [\n            ...items.slice(0, id),\n            ...items.slice(id + 1)\n          ]\n        });\n        if (isClick || id - 1 === -1) {\n          inputRef.current.focus();\n        }\n        setFocusedId(isClick ? -1 : id - 1);\n      }\n    }\n\n    if (isDeleteKey) {\n      if (id > -1 && items.length) {\n        setState({\n          items: [\n            ...items.slice(0, id),\n            ...items.slice(id + 1)\n          ]\n        });\n        if (id === items.length - 1) {\n          inputRef.current.focus();\n        }\n        setFocusedId(id === items.length - 1 ? -1 : id);\n      }\n    }\n\n    if (isLeftKey || isUpKey) {\n      e.preventDefault();\n      setFocusedId(id > 0 ? (id % state.items.length) - 1 : state.items.length - 1);\n    }\n\n    if (isRightKey || isDownKey) {\n      e.preventDefault();\n      setFocusedId(id < state.items.length - 1 ? (id % state.items.length) + 1 : 0);\n    }\n\n    if (isHomeKey) {\n      e.preventDefault();\n      setFocusedId(0);\n    }\n\n    if (isEndKey) {\n      e.preventDefault();\n      setFocusedId(state.items.length - 1);\n    }\n  }\n\n  const handleFocus = e => {\n    setFocused(true);\n    setFocusedId(-1);\n  };\n\n  const handleBlur = e => {\n    setFocused(false);\n  }\n\n  const handleChange = e => {\n    setFocusedId(-1);\n    setState({\n      items: [\n        ...state.items.map((item, i) => ({\n          ...item,\n          focused: false\n        }))\n      ]\n    });\n    setValue(e.target.value);\n  };\n\n  const handleButtonBlur = e => {\n    setFocusedId(-1);\n  }\n\n  const handleKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const value = e.target.value;\n\n    switch (code) {\n      case KEY_CODES.BACKSPACE: {\n        if (focusedId === -1 && value === '' && state.items.length) {\n          setFocusedId(state.items.length - 1);\n          setState({\n            items: [\n              ...state.items.map((item, i) => ({\n                ...item,\n                focused: i === state.items.length - 1\n              })),\n            ]\n          });\n        }\n\n        if (focusedId !== -1 && value === '' && state.items.length) {\n          handleDelete(e, focusedId);\n        }\n        break;\n      }\n\n      case KEY_CODES.ENTER: {\n        if (value !== '') {\n          setState({\n            items: [\n              ...state.items,\n              {\n                focused: false,\n                id: `input-chip-group-test-${state.items.length}`,\n                value\n              }\n            ]\n          });\n          setValue('');\n        }\n        break;\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        if (value === '' && state.items.length) {\n          e.preventDefault();\n          const idToFocus = focusedId > 0 ? (focusedId % state.items.length) - 1 : state.items.length - 1;\n          setFocusedId(idToFocus);\n          setState({\n            items: [\n              ...state.items.map((item, i) => ({\n                ...item,\n                focused: i === idToFocus\n              })),\n            ]\n          });\n          setValue('');\n        }\n        break;\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        if (value === '' && state.items.length) {\n          e.preventDefault();\n          const idToFocus = focusedId < state.items.length - 1 ? (focusedId % state.items.length) + 1 : 0;\n          setFocusedId(idToFocus);\n          setState({\n            items: [\n              ...state.items.map((item, i) => ({\n                ...item,\n                focused: i === idToFocus\n              })),\n            ]\n          });\n          setValue('');\n        }\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ChipContainer\n      aria-label=\"press backspace or delete to delete item\"\n      className={classnames('vds-chip-type-input', {\n        'vds-state--focus': focused\n      })}\n      onClick={handleContainerClick}\n      ref={ref}\n      role=\"listbox\"\n    >\n        {\n          state.items.map((item, i) => (\n            <Chip\n              key={i}\n              focused={item.focused}\n              selected={i === focusedId}\n            >\n              <ChipText>{item.value}</ChipText>\n              <ButtonIcon\n                ariaLabel={`${item.value}`}\n                iconType=\"light-tiny\"\n                id={`input-chip-group-test-${i}`}\n                onBlur={handleButtonBlur}\n                onClick={e => handleDelete(e, i)}\n                onFocus={e => setFocusedId(i)}\n                onKeyDown={e => handleDelete(e, i)}\n                role=\"option\"\n                tabIndex={focused\n                  ? i === state.items.length - 1 ? 0 : -1\n                  : focusedId === -1 ? (i === 0 ? 0: -1) : (i === focusedId ? 0 : -1)\n                }\n              >\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </Chip>\n          ))\n        }\n        <input\n          className=\"vds-chip-input\"\n          id=\"chips-example-id\"\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onClick={handleInputClick}\n          onFocus={handleFocus}\n          onKeyDown={handleKeyDown}\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n        />\n    </ChipContainer>\n  );\n};\n\nexport default InputChipsExample;\n","import React, { useState } from 'react';\nimport Avatar from '../../avatar';\nimport AvatarPhoto from '../../avatar-photo';\nimport ButtonIcon from '../../button-icon';\nimport Checkbox from '../../checkbox';\nimport Chip from '../../chip';\nimport ChipContainer from '../../chip-container';\nimport ChipText from '../../chip-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport stockPhoto from '../../_imgs/stockphoto.png';\nimport Typography from '../../typography';\nimport InputChipsExample from './input-chips-example';\nimport InputLabel from '../../input-label';\nimport Link from '../../link';\n\n\nconst ChipExample = () => {\n  const [state, setState] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'chip-group-test-1',\n        label: 'Popular near me',\n        value: 'Popular'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-2',\n        label: 'Advice',\n        value: 'Advice'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-3',\n        label: 'Animals',\n        value: 'Animals'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-4',\n        label: 'Art',\n        value: 'Art'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-5',\n        label: 'DIY',\n        value: 'DIY'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-6',\n        label: 'Electronics',\n        value: 'Electronics'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-7',\n        label: 'Entertainment',\n        value: 'Entertainment'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-8',\n        label: 'Explain like I\\'m five and lorem ipsum dolor sit amet, consectetur adipiscing elit',\n        value: 'Explain'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-9',\n        label: 'Food',\n        value: 'Food'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-10',\n        label: 'Funny',\n        value: 'Funny'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-11',\n        label: 'Gaming',\n        value: 'Gaming'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-12',\n        label: 'Health',\n        value: 'Health'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-13',\n        label: 'Memes',\n        value: 'Memes'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-14',\n        label: 'Music',\n        value: 'Music'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-15',\n        label: 'NBA',\n        value: 'NBA'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-16',\n        label: 'NFL',\n        value: 'NFL'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-17',\n        label: 'News',\n        value: 'News'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-18',\n        label: 'Outdoors',\n        value: 'Outdoors'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-19',\n        label: 'Photography',\n        value: 'Photography'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-20',\n        label: 'Pics & GIFs',\n        value: 'Pics'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-21',\n        label: 'Relationships',\n        value: 'Relationships'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-22',\n        label: 'Science',\n        value: 'Science'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-23',\n        label: 'Sports',\n        value: 'Sports'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-24',\n        label: 'TV',\n        value: 'TV'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-25',\n        label: 'Tech',\n        value: 'Tech'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-26',\n        label: 'Travel',\n        value: 'Travel'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-27',\n        label: 'Video Games',\n        value: 'Video'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-28',\n        label: 'Videos',\n        value: 'Videos'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-29',\n        label: 'Broom',\n        value: 'Broom'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-30',\n        label: 'Writing',\n        value: 'Writing'\n      }\n    ]\n  });\n\n  const handleChange = e => setState({\n    items: [\n      ...state.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked\n      }))\n    ]\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Filter Chips</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <ChipText>Default Chip</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar initials=\"AS\" label=\"Adam Smith\" />\n            <ChipText>Adam Smith</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <ChipText>Adam Smith</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Icon Button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <ChipText>Adam Smith</ChipText>\n            <ButtonIcon ariaLabel=\"clear\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar and icon button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <ChipText>Adam Smith</ChipText>\n            <ButtonIcon ariaLabel=\"clear\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip filter\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip type=\"filter\">\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <Checkbox\n              name=\"example\"\n              label=\"Adam Smith\"\n              id=\"chip-filter-test-2\"\n              value=\"2\"\n            />\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Group\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ChipContainer>\n            <Typography tag=\"h4\">Select your interests:</Typography>\n            {\n              state.items.map(item => (\n                <Chip key={item.id} selected={item.checked} type=\"filter\">\n                  <Checkbox\n                    checked={item.checked}\n                    id={item.id}\n                    name=\"chip-group-example\"\n                    onChange={handleChange}\n                    label={item.label}\n                    value={item.value}\n                  />\n                </Chip>\n              ))\n            }\n          </ChipContainer>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Input Chips</Typography>\n          <InputLabel htmlFor=\"chips-example-id\">Add your favorite fruit:</InputLabel>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputChipsExample />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Link href=\"https://stash.trusted.visa.com:7990/projects/VC/repos/vds/browse/src/components/chip/example/input-chips-example.js\">JSX for Input Chips example</Link>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ChipExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/chip/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/chip/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/chip/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ChipExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Chip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Chip</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Chip Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nChipExample.displayName = 'ChipExample';\n\nexport default ChipExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-checkbox';\nconst CSS_STATE = 'vds-state';\n\nconst Checkbox = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  indeterminate,\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const [indetermined, setIndetermined] = useState(indeterminate);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setIndetermined(indeterminate);\n  }, [indeterminate]);\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setIndetermined(false);\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        aria-checked={indetermined ? 'mixed' : check ? 'true' : 'false'}\n        className={classnames(CSS_PREFIX, {\n          'focus-visible': Boolean(focus)\n        }, className)}\n        disabled={disabled}\n        id={uid}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        ref={ref}\n        type=\"checkbox\"\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focus),\n            [`${CSS_STATE}--indeterminate`]: indetermined && !check,\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          }\n        )}\n        htmlFor={uid}\n        onClick={e => e.stopPropagation()} // if not click event fires 2x, one for checkbox and one for label\n        onKeyPress={e  => e.stopPropagation()} // if not key-press event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nCheckbox.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the checkbox will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   *   Indeterminate\n   */\n  indeterminate: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the checkbox element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n","import React, { Children, cloneElement } from 'react';\nimport { element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-avatar';\n\nconst AvatarPhoto = ({ children, className, label, type, ...remainingProps }) => {\n  if (Children.only(children).type === 'img') {\n    return (\n      cloneElement(\n        children,\n        {\n          alt: Children.only(children).props.alt || label,\n          className: classnames({\n            [`${CSS_PREFIX}--photo`]: Boolean(type) === false,\n            [`${CSS_PREFIX}--${type}`]: Boolean(type)\n          }, className),\n          ...remainingProps\n        }\n      )\n    );\n  }\n\n  return (\n    <div\n      className={classnames(`${CSS_PREFIX}--photo`, className)}\n      role=\"img\"\n      aria-label={label}\n      {...remainingProps}\n    >\n      {\n        cloneElement(\n          children,\n          {\n            ...remainingProps\n          }\n        )\n      }\n    </div>\n  );\n};\n\nAvatarPhoto.propTypes = {\n  /**\n  * Content\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Label\n   */\n  label: string.isRequired,\n\n  /**\n   * Type\n   */\n  type: oneOf(['company-logo'])\n};\n\nAvatarPhoto.displayName = 'AvatarPhoto';\n\nexport default AvatarPhoto;\n"],"sourceRoot":""}