{"version":3,"sources":["components/button-icon/example/index.js","pages/components/button-icon.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js"],"names":["ButtonIconExample","tag","ariaLabel","name","resolution","disabled","iconType","style","backgroundColor","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","undefined","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","aria-label"],"mappings":"kWAuJeA,EA/IW,kBACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,IAAI,MAAhB,oCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,UAAU,SACpB,kBAAC,IAAD,CAAMC,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,SAC7B,kBAAC,IAAD,CAAMC,KAAK,QAAQC,WAAW,YAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,kCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,UAAU,QAAQI,SAAS,SACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,SAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,YAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,0CAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,UAAU,QAAQI,SAAS,iBACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,iBAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,YAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,uCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,UAAU,QAAQI,SAAS,cACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,cAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,YAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,uCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,UAAU,QAAQI,SAAS,cACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,cAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,YAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,iCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKM,MAAO,CAAEC,gBAAiB,YAC7B,kBAAC,IAAD,CAAYN,UAAU,QAAQI,SAAS,QACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,QAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,aAKtC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,yCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKM,MAAO,CAAEC,gBAAiB,YAC7B,kBAAC,IAAD,CAAYN,UAAU,QAAQI,SAAS,gBACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,gBAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,aAKtC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,IAAI,MAAhB,sCAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKM,MAAO,CAAEC,gBAAiB,YAC7B,kBAAC,IAAD,CAAYN,UAAU,QAAQI,SAAS,aACrC,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,UAGhC,kBAAC,IAAD,CAAYC,UAAQ,EAACH,UAAU,QAAQI,SAAS,aAC9C,kBAAC,IAAD,CAAMH,KAAK,QAAQC,WAAW,iBClHxCK,EAAWC,EAAQ,KACnBC,EAAU,CAACD,EAAQ,MACnBE,EAAYF,EAAQ,KAEpBG,EADE,yvCACYC,QAAQ,YAAa,yBAAyBA,QAAQ,gBAAiB,uBAErFC,EADc,uqJACeD,QAAQ,aAAvB,qBAEdd,EAAoB,SAAC,GAA2B,IAAtBgB,EAAqB,oBACPC,mBAAS,IADF,mBAC5CC,EAD4C,KAC5BC,EAD4B,KAcnD,OAXAC,qBAAU,WACR,IACED,EAAkBP,EAAUS,MAAMR,IAClC,SAEAS,QAAQC,IAAR,iJAID,IAGD,kBAAC,IAAD,CAAMC,uBAAqB,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYvB,IAAI,MAAhB,iBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,IAAK,kBAAC,IAAD,CAASwB,OAAK,EAACC,GAAE,UAAKC,aAAL,2BAAsDC,gBAAgB,yBAC/F,kBAAC,IAAD,CAAMzB,KAAK,MAAMC,WAAW,QAD9B,uBAGA,kBAAC,IAAD,CAAKH,IAAK,kBAAC,IAAD,CAASwB,OAAK,EAACC,GAAE,UAAKC,aAAL,gCAA2DC,gBAAgB,yBACpG,kBAAC,IAAD,CAAMzB,KAAK,qBAAqBC,WAAW,QAD7C,kBAGA,kBAAC,IAAD,CAAKH,IAAK,kBAAC,IAAD,CAASwB,OAAK,EAACC,GAAE,UAAKC,aAAL,gCAA2DC,gBAAgB,yBACpG,kBAAC,IAAD,CAAMzB,KAAK,qBAAqBC,WAAW,QAD7C,sBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACEyB,UAAWC,IAAW,CACpB,oBAAqBd,EAAee,MAAMC,OAArB,UAAiCL,aAAjC,2BACrB,kBAAmBX,EAAee,MAAMC,OAArB,UAAiCL,aAAjC,8BAGrB,kBAAC,EAAYX,IAEf,yBACEa,UAAWC,IAAW,CACpB,oBAAqBd,EAAee,MAAMC,OAArB,UAAiCL,aAAjC,gCACrB,kBAAmBX,EAAee,MAAMC,OAArB,UAAiCL,aAAjC,mCAGrB,kBAAC,IAAD,iBAAeM,IAAf,CAA6BC,MAAOA,IAAOC,KAAMpB,EAAaqB,SAAS,SACpE,gBAAGP,EAAH,EAAGA,UAAWtB,EAAd,EAAcA,MAAO8B,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKV,UAAWA,EAAWtB,MAAOA,GAC/B8B,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,yCAASJ,EAAa,CAAEK,IAAKD,EAAGD,SAAhC,CAAyCE,IAAKD,IAC5C,0BACEnC,MAAO,CACLqC,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRL,EAAI,GAEND,EAAKD,KAAI,SAACQ,EAAOL,GAAR,OAAgB,0CAAUJ,EAAc,CAAEI,MAAKK,UAA/B,CAAyCL,IAAKA,iBAOpF,yBACEd,UAAWC,IAAW,CACpB,oBAAqBd,EAAee,MAAMC,OAArB,UAAiCL,aAAjC,gCACrB,kBAAmBX,EAAee,MAAMC,OAArB,UAAiCL,aAAjC,mCAGrB,kBAAC,IAAD,iBACMM,IADN,CAEEC,MAAOA,IACPC,KAAM1B,EAASwC,OAAOC,IAAeC,qBAAqB,kBAAC,EAAYnC,IAAqB,CAAEoC,IAAK,SAAUC,OAAQ,OAAQ1C,UAAS2C,WAAY,MAClJlB,SAAS,UAER,gBAAGP,EAAH,EAAGA,UAAWtB,EAAd,EAAcA,MAAO8B,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKV,UAAWA,EAAWtB,MAAOA,GAC/B8B,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,yCAASJ,EAAa,CAAEK,IAAKD,EAAGD,SAAhC,CAAyCE,IAAKD,IAC5C,0BACEnC,MAAO,CACLqC,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRL,EAAI,GAEND,EAAKD,KAAI,SAACQ,EAAOL,GAAR,OAAgB,0CAAUJ,EAAc,CAAEI,MAAKK,UAA/B,CAAyCL,IAAKA,mBASxF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEd,UAAWC,IAAW,CACpB,eAEFyB,cAAY,EACZC,KAAK,WAEL,kBAAC,IAAD,CAAcvD,IAAI,WAAlB,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAI4B,UAAU,UACZ,kBAAC,IAAD,CAAI4B,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,WAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,iBAKJ,kBAAC,IAAD,KAEIzC,EAAe0C,OAASC,OAAOC,QAAQ5C,EAAe0C,OACnDG,QAAO,SAAAC,GAAG,MAA2B,YAAvBA,EAAI,GAAGC,eACrBzB,KAAI,SAACwB,EAAKtB,GAAN,OACH,kBAAC,IAAD,CAAIb,UAAU,SAASc,IAAKD,GAC1B,kBAAC,IAAD,CAAIb,UAAU,UACXmC,EAAI,GADP,IACYA,EAAI,GAAGE,SAAW,+CAA+B,IAE7D,kBAAC,IAAD,CAAIrC,UAAU,UACZ,gCAASmC,EAAI,GAAGG,KAAKhE,MAEnB6D,EAAI,GAAGG,KAAKC,OAASJ,EAAI,GAAGG,KAAKC,MAAMC,OACnC,2BAAO9D,MAAO,CAAE+D,MAAO,YAAa,6BAElCC,MAAMC,QAAQR,EAAI,GAAGG,KAAKC,OACtBJ,EAAI,GAAGG,KAAKC,MAAM5B,KAAI,SAAAiC,GAAC,OAAIA,EAAEL,OAASK,EAAEtE,QAAMuE,KAAK,MACtB,kBAAtBV,EAAI,GAAGG,KAAKC,MACjBJ,EAAI,GAAGG,KAAKC,WACZO,GAGR,IAGR,kBAAC,IAAD,CAAI9C,UAAU,UACXmC,EAAI,GAAGY,aAAeZ,EAAI,GAAGY,aAAaR,MAAQ,IAErD,kBAAC,IAAD,CAAIvC,UAAU,UACXmC,EAAI,GAAGC,uBAahCjE,EAAkB6E,YAAc,oBAEjB7E,a,mFChNT8E,EAAeC,sBAAW,WAAuDC,GAAvD,IAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,UAAgBqD,EAA7B,EAAwBjF,IAAae,EAArC,qDAC9B,kBAACkE,EAAD,eACErD,UAAWC,IAJI,oBAImBD,GAClCmD,IAAKA,GACDhE,GAEHiE,MAILH,EAAaK,UAAY,CAIvBF,SAAUG,OAKVvD,UAAWwD,SAKXpF,IAAKqF,eAGPR,EAAa7C,aAAe,CAC1BhC,IAAK,QAGP6E,EAAaD,YAAc,eAEZC,O,0FChCTS,EAAYR,sBAAW,WAa1BC,GAb0B,MAC3BC,EAD2B,EAC3BA,SACApD,EAF2B,EAE3BA,UACA2D,EAH2B,EAG3BA,oBACAjC,EAJ2B,EAI3BA,aACAkC,EAL2B,EAK3BA,cACAC,EAN2B,EAM3BA,OACAC,EAP2B,EAO3BA,kBACAC,EAR2B,EAQ3BA,iBACAC,EAT2B,EAS3BA,aACArC,EAV2B,EAU3BA,KACAsC,EAX2B,EAW3BA,aACG9E,EAZwB,yLAc3B,2CACMA,EADN,CAEEa,UAAWC,IAnBI,kBAmBM,6BAlBP,YAkBO,0BACqBiE,QAAQP,IAD7B,wBAlBP,YAkBO,mBAEcO,QAAQxC,IAFtB,wBAlBP,YAkBO,qBAGgBwC,QAAQN,IAHxB,wBAlBP,YAkBO,aAIDjC,GAASuC,QAAQvC,IAJhB,wBAlBP,YAkBO,YAKOuC,QAAQL,IALf,wBAlBP,YAkBO,yBAMoBK,QAAQJ,IAN5B,wBAlBP,YAkBO,wBAOmBI,QAAQH,IAP3B,wBAlBP,YAkBO,aAQDC,GAAiBE,QAAQF,IARxB,wBAlBP,YAkBO,mBAScE,QAAQD,IATtB,GAUlBjE,GACHmD,IAAKA,IAEJC,MAILM,EAAUJ,UAAY,CAIpBF,SAAUG,OAKVvD,UAAWwD,SAKXW,QAASC,kBAAQC,gBAAM,KAKvBV,oBAAqBW,OAKrBC,KAAMH,kBAAQC,gBAAM,KAKpB3C,aAAc4C,OAKdV,cAAeU,OAKfT,OAAQS,OAKRR,kBAAmBQ,OAKnBP,iBAAkBO,OAKlBN,aAAcQ,gBAAM,CAAC,eAAgB,kBAKrC7C,KAAM6C,gBAAM,CAAC,YAKbP,aAAcK,QAGhBZ,EAAUV,YAAc,YAETU,O,mFCvGTe,EAAQvB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,UAAcb,EAA3B,+CACvB,yCACEa,UAAWC,IAJI,YAImBD,GAClCmD,IAAKA,GACDhE,GAEHiE,MAILqB,EAAMnB,UAAY,CAIhBF,SAAUG,OAKVvD,UAAWwD,UAGbiB,EAAMzB,YAAc,QAELyB,O,0FCxBTC,EAAKxB,sBAAW,WAKnBC,GALmB,IACpBC,EADoB,EACpBA,SACApD,EAFoB,EAEpBA,UACA2E,EAHoB,EAGpBA,UACGxF,EAJiB,2DAMpB,sCACEa,UAAWC,IATI,SASM,mCACL0E,GAAcT,QAAQS,IACnC3E,GACHmD,IAAKA,GACDhE,GAEHiE,MAILsB,EAAGpB,UAAY,CAIbF,SAAUG,OAKVvD,UAAWwD,SAKXmB,UAAWH,gBAAM,CAAC,SAAU,OAAQ,WAGtCE,EAAG1B,YAAc,KAEF0B,O,mFCpCTE,EAAK1B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,UAAcb,EAA3B,+CACpB,sCACEa,UAAWC,IAJI,SAImBD,GAClCmD,IAAKA,GACDhE,GAEHiE,MAILwB,EAAGtB,UAAY,CAIbF,SAAUG,OAKVvD,UAAWwD,UAGboB,EAAG5B,YAAc,KAEF4B,O,mFCxBTC,EAAQ3B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,UAAcb,EAA3B,+CACvB,yCACEa,UAAWC,IAJI,YAImBD,GAClCmD,IAAKA,GACDhE,GAEHiE,MAILyB,EAAMvB,UAAY,CAIhBF,SAAUG,OAKVvD,UAAWwD,UAGbqB,EAAM7B,YAAc,QAEL6B,O,mFCxBTC,EAAK5B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,UAAcb,EAA3B,+CACpB,sCACEa,UAAWC,IAJI,SAImBD,GAClCmD,IAAKA,GACDhE,GAEHiE,MAIL0B,EAAGxB,UAAY,CAIbF,SAAUG,OAKVvD,UAAWwD,UAGbsB,EAAG9B,YAAc,KAEF8B,O,4ECxBTC,EAAc,SAAC,GAAD,IAAG3B,EAAH,EAAGA,SAAUpD,EAAb,EAAaA,UAAcb,EAA3B,+CAClB,wCACEa,UAAWC,IAJI,gBAImBD,IAC9Bb,GAEHiE,IAgBL2B,EAAY/B,YAAc,cAEX+B,O,2ICtBTC,EAAa9B,sBAAW,WAQ3BC,GAR2B,IAC5B9E,EAD4B,EAC5BA,UACA+E,EAF4B,EAE5BA,SACApD,EAH4B,EAG5BA,UACAxB,EAJ4B,EAI5BA,SACAC,EAL4B,EAK5BA,SACA6D,EAN4B,EAM5BA,KACGnD,EAPyB,wFAS5B,0CACE8F,aAAY5G,EACZ2B,UAAWC,IAbI,eAaM,yBAbN,eAaM,aACAxB,GAAayF,QAAQzF,IACvCuB,GACHxB,SAAUA,EACV2E,IAAKA,EACLb,KAAMA,GACFnD,GAEJ,kBAAC,IAAD,KAAciE,OAIlB4B,EAAW1B,UAAY,CAIrBjF,UAAWmF,SAKXJ,SAAUG,OAKVvD,UAAWwD,SAKXhF,SAAU8F,OAKV7F,SAAU+F,gBAAM,CACd,OACA,eACA,YACA,QACA,aACA,gBACA,eAMFlC,KAAMkB,UAGRwB,EAAW5E,aAAe,CACxBkC,KAAM,UAGR0C,EAAWhC,YAAc,aAEVgC","file":"static/js/46.946bf2a0.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst ButtonIconExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon default & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonIcon ariaLabel=\"close\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n\n            <ButtonIcon disabled ariaLabel=\"close\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon light & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonIcon ariaLabel=\"close\" iconType=\"light\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n\n            <ButtonIcon disabled ariaLabel=\"close\" iconType=\"light\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon light outline & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonIcon ariaLabel=\"close\" iconType=\"light-outline\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n\n            <ButtonIcon disabled ariaLabel=\"close\" iconType=\"light-outline\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon light tiny & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonIcon ariaLabel=\"close\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n\n            <ButtonIcon disabled ariaLabel=\"close\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon light fill & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonIcon ariaLabel=\"close\" iconType=\"light-fill\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n\n            <ButtonIcon disabled ariaLabel=\"close\" iconType=\"light-fill\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon dark & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div style={{ backgroundColor: '#333333' }}>\n              <ButtonIcon ariaLabel=\"close\" iconType=\"dark\">\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n\n              <ButtonIcon disabled ariaLabel=\"close\" iconType=\"dark\">\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon dark outline & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div style={{ backgroundColor: '#333333' }}>\n              <ButtonIcon ariaLabel=\"close\" iconType=\"dark-outline\">\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n\n              <ButtonIcon disabled ariaLabel=\"close\" iconType=\"dark-outline\">\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Button Icon dark tiny & Disabled</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div style={{ backgroundColor: '#333333' }}>\n              <ButtonIcon ariaLabel=\"close\" iconType=\"dark-tiny\">\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n\n              <ButtonIcon disabled ariaLabel=\"close\" iconType=\"dark-tiny\">\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </div>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default ButtonIconExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/button-icon/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/button-icon/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/button-icon/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ButtonIconExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for ButtonIcon\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Button Icon</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-icon`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Button Icon Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-icon/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-icon/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-icon`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-icon`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-icon/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-icon/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-icon/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-icon/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nButtonIconExample.displayName = 'ButtonIconExample';\n\nexport default ButtonIconExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n"],"sourceRoot":""}