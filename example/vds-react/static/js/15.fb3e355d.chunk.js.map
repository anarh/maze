{"version":3,"sources":["components/input-cvv-information/index.js","components/input-cvv/index.js","components/input-cvv/example/index.js","pages/components/input-cvv.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","components/input-option/index.js","components/input-label/index.js","components/input-container/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js"],"names":["CSS_PREFIX","InputCvvInformation","children","className","maxLength","remainingProps","classnames","parseInt","defaultProps","displayName","INPUT_TYPE","InputCvv","forwardRef","ref","buttonAriaLabel","css","disabled","id","shortid","generate","inputMode","label","name","pattern","showInfoButton","useState","showCvvInfo","setShowCvvInfo","inputType","setInputType","uid","useRef","current","useEffect","value","length","substr","onBlur","onFocus","onKeyDown","e","key","test","altKey","ctrlKey","metaKey","shiftKey","preventDefault","onPaste","stopPropagation","pastedText","clipboardData","window","getData","type","aria-controls","aria-expanded","toString","ariaLabel","iconType","onClick","resolution","undefined","variant","InputCvvExample","stateOne","setStateOne","stateTwo","setStateTwo","stateThree","setStateThree","errorText","showErrorText","onChange","target","invalid","required","containerProps","lang","Fragment","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","tag","role","aria-label","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","color","Array","isArray","v","join","defaultValue","ScreenReader","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","colorScheme","flippable","isFullWidth","tabIndex","includes","oneOfType","number","ButtonIcon","InputOption","InputLabel","InputContainer","expanded","filled","focus","isTextarea","readOnly","func","InputBar","InputMessage","show","InputHint","InputText","Input","checkmarkIcon","contentAfterInput","contentBeforeInput","errorIcon","helpIcon","helpText","inputContainerProps","labelId","noValidate","placeholder","showCheckmark","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","InputInput"],"mappings":"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","file":"static/js/15.fb3e355d.chunk.js","sourcesContent":["import React from 'react';\nimport { node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-cvv-information';\n\nconst InputCvvInformation = ({\n  children,\n  className,\n  maxLength,\n  ...remainingProps\n}) => (\n  <figure\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    <div\n      className={classnames(`${CSS_PREFIX}__svg`, {\n        [`${CSS_PREFIX}__svg--three-digit-img`]: parseInt(maxLength, 10) === 3,\n        [`${CSS_PREFIX}__svg--four-digit-img`]: parseInt(maxLength, 10) === 4\n      })}\n    />\n    <figcaption>\n      {children}\n    </figcaption>\n  </figure>\n);\n\nInputCvvInformation.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Max Length\n   */\n  maxLength: oneOfType([number, string])\n};\n\nInputCvvInformation.defaultProps = {\n  maxLength: 3\n};\n\nInputCvvInformation.displayName = 'InputCvvInformation';\n\nexport default InputCvvInformation;\n","/* eslint-disable react/display-name */\n\nimport React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport Input from '../input';\nimport InputCvvInformation from '../input-cvv-information';\nimport InputOption from '../input-option';\nimport Typography from '../typography';\n\nconst CSS_PREFIX = 'vds-input-cvv';\nconst INPUT_TYPE = {\n  PASSWORD: 'password',\n  TEXT: 'text'\n};\n\nconst InputCvv = forwardRef(({\n  buttonAriaLabel,\n  children,\n  className,\n  css,\n  disabled,\n  id = shortid.generate(),\n  inputMode,\n  label,\n  name,\n  maxLength,\n  pattern,\n  showInfoButton,\n  ...remainingProps\n}, ref) => {\n  const [showCvvInfo, setShowCvvInfo] = useState(false);\n  const [inputType, setInputType] = useState(INPUT_TYPE.PASSWORD);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  ref = ref || useRef();\n\n  const handleBlur = () => setInputType(INPUT_TYPE.PASSWORD);\n  const handleClick = () => setShowCvvInfo(!showCvvInfo);\n  const handleFocus = () => setInputType(INPUT_TYPE.TEXT);\n\n  // Prevent pasting of non-digits\n  const handlePaste = e => {\n    e.stopPropagation();\n\n    const clipboardData = e.clipboardData || window.clipboardData;\n    const pastedText = clipboardData.getData('Text');\n\n    if (!/^\\d*$/.test(pastedText)) {\n      e.preventDefault();\n    }\n  };\n\n  // Prevent alpha letters\n  // but allow numeric and combination keys\n  const handleKeyDown = e => {\n    if (\n      e.key.length === 1 &&\n      !/^\\d*$/.test(e.key) &&\n      !e.altKey &&\n      !e.ctrlKey &&\n      !e.metaKey &&\n      !e.shiftKey\n    ) {\n      e.preventDefault();\n    }\n  };\n\n  useEffect(() => {\n    if (ref.current.value && (ref.current.value.length > maxLength)) {\n      ref.current.value = ref.current.value.substr(0, maxLength);\n    }\n  }, [maxLength, ref]);\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, className)}\n      css={css}\n    >\n      <Input\n        disabled={disabled}\n        label={typeof label === 'function' ? label(maxLength) : label}\n        id={uid}\n        inputMode={inputMode}\n        maxLength={maxLength}\n        name={name}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        onPaste={handlePaste}\n        pattern={pattern ? pattern : `[0-9]{${maxLength}}`}\n        ref={ref}\n        type={inputType}\n        {...remainingProps}\n      >\n        {\n          showInfoButton && !disabled\n            ? <InputOption>\n              <ButtonIcon\n                aria-controls={`${uid}__cvv-information`}\n                aria-expanded={showCvvInfo.toString()}\n                ariaLabel={buttonAriaLabel}\n                iconType=\"light-tiny\"\n                onClick={handleClick}\n              >\n                <Icon name=\"info\" resolution=\"low\" />\n              </ButtonIcon>\n            </InputOption>\n            : undefined\n        }\n      </Input>\n      {\n        showCvvInfo\n          ? <InputCvvInformation id={`${uid}__cvv-information`} maxLength={maxLength}>\n            {\n              typeof children === 'function'\n                ? children(maxLength)\n                : children\n            }\n          </InputCvvInformation>\n          : undefined\n      }\n    </div>\n  );\n});\n\nInputCvv.propTypes = {\n  /**\n   * Button Aria Label\n   */\n  buttonAriaLabel: string,\n\n  /**\n  *  a Function that provides maxLength as param\n  */\n  children: oneOfType([func, node]),\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * If true, the input will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Mode to force mobile screens to use large number pad\n   */\n  inputMode: string,\n\n  /**\n   * Label\n   */\n  label: oneOfType([func, string]),\n\n  /**\n   * Max Length\n   */\n  maxLength: number,\n\n  /**\n   * Name\n   */\n  name: string,\n\n  /**\n   * Pattern\n   */\n  pattern: string,\n\n  /**\n   * Show info button\n   */\n  showInfoButton: bool,\n\n  /**\n   * Style\n   */\n  style: string\n};\n\nInputCvv.defaultProps = {\n  buttonAriaLabel: 'CVV Information',\n  children: maxLength => (\n    <Fragment>\n      <Typography variant=\"subtitle\">Security Code</Typography>\n      <Typography variant=\"caption\">The {maxLength}-digit code on the back of your card</Typography>\n    </Fragment>\n  ),\n  inputMode: 'decimal',\n  label: maxLength => `Enter ${maxLength} digit CVV`,\n  maxLength: 3,\n  name: 'cvc',\n  showInfoButton: true\n};\n\nInputCvv.displayName = 'InputCvv';\n\nexport default InputCvv;\n","import React, { useState } from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport InputCvv from '../../input-cvv';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst InputCvvExample = () => {\n  const [stateOne, setStateOne] = useState({ value: '044' });\n  const [stateTwo, setStateTwo] = useState({ maxLength: 3 });\n  const [stateThree, setStateThree] = useState({ maxLength: 3 });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          InputCvv Default Uncontrolled (3 digits)\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Enter 3 digits\"\n            name=\"cvv\"\n            showErrorText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Default Controlled (3 digits)\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Enter 3 digits\"\n            name=\"cvv\"\n            onChange={e => setStateOne({ value: e.target.value })}\n            showErrorText\n            value={stateOne.value}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Default (4 digits)\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Enter 4 digits\"\n            maxLength={4}\n            name=\"cvv\"\n            showErrorText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv disabled\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Enter 3 digits\"\n            disabled name=\"cvv\"\n            showErrorText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv error\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Enter 3 digits\"\n            invalid\n            name=\"cvv\"\n            showErrorText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Required with custom error text\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText=\"Input Required\"\n            name=\"cvv\"\n            required\n            showErrorText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Default (3 digits)\n\n          Custom labels\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            containerProps={{ lang: 'ja' }}\n            errorText={`桁のコードを入力します。`}\n            label={maxLength => `${maxLength}桁のコードを入力します。`}\n            name=\"cvv\"\n            showErrorText\n          >\n            {\n              maxLength => (\n                <React.Fragment>\n                  <Typography lang=\"ja\" variant=\"subtitle\">セキュリティコード</Typography>\n                  <Typography lang=\"ja\" variant=\"caption\">カードの裏側にある{maxLength}桁のコード</Typography>\n                </React.Fragment>\n              )\n            }\n          </InputCvv>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv Switch from 3 to 4 digits\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            errorText={`Enter ${stateTwo.maxLength === 3 ? 3 : 4} digits`}\n            maxLength={stateTwo.maxLength}\n            name=\"cvv\"\n            showErrorText\n          />\n          <ButtonText\n            onClick={() => setStateTwo({ maxLength: stateTwo.maxLength === 3 ? 4 : 3 })}\n          >\n            Switch to {stateTwo.maxLength === 3 ? 4 : 3} digits\n          </ButtonText>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          InputCvv switch between 3  and 4 digits with custom labels\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <InputCvv\n            containerProps={{ lang: 'ja' }}\n            errorText={`桁のコードを入力します。`}\n            label={maxLength => `${maxLength}桁のコードを入力します。`}\n            name=\"cvv\"\n            maxLength={stateThree.maxLength}\n            showErrorText\n          >\n            {\n              maxLength => (\n                <React.Fragment>\n                  <Typography lang=\"ja\" variant=\"subtitle\">セキュリティコード</Typography>\n                  <Typography lang=\"ja\" variant=\"caption\">カードの裏側にある{maxLength}桁のコード</Typography>\n                </React.Fragment>\n              )\n            }\n          </InputCvv>\n          <ButtonText\n            onClick={() => setStateThree({ maxLength: stateThree.maxLength === 3 ? 4 : 3 })}\n          >\n            Switch to {stateThree.maxLength === 3 ? 4 : 3} digits\n          </ButtonText>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default InputCvvExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/input-cvv/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/input-cvv/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/input-cvv/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst InputCvvExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for InputCvv\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Input Cvv</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-cvv`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Input Cvv Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-cvv/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-cvv/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-cvv`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-cvv`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-cvv/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-cvv/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-cvv/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-cvv/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nInputCvvExample.displayName = 'InputCvvExample';\n\nexport default InputCvvExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...inputContainerProps}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n"],"sourceRoot":""}