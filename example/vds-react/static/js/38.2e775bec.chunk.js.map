{"version":3,"sources":["components/dialog-card/index.js","components/dialog/index.js","components/dialog-card-body/index.js","components/dialog-card-close/index.js","components/dialog-card-footer/index.js","components/dialog-card-head/index.js","components/dialog-card-head-icon/index.js","components/dialog-card-head-title/index.js","components/dialog-subtitle/index.js","components/dialog/example/index.js","pages/components/dialog.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","components/button-group/index.js"],"names":["DialogCard","forwardRef","ref","children","className","role","remainingProps","classnames","propTypes","node","string","displayName","Dialog","css","open","type","underlayClass","underlayColor","Boolean","undefined","func","bool","oneOf","defaultProps","DialogCardBody","DialogCardClose","DialogCardFooter","DialogCardHead","DialogCardHeadIcon","DialogCardHeadTitle","Tag","tag","elementType","DialogSubtitle","DialogExample","useState","stateOne","setStateOne","stateTwo","setStateTwo","stateThree","setStateThree","stateFour","setStateFour","stateFive","setStateFive","onClick","onExit","titleText","direction","colorScheme","name","resolution","initialFocus","ariaLabel","iconType","id","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","value","length","Array","isArray","v","join","defaultValue","ScreenReader","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","disabled","flippable","isFullWidth","includes","oneOfType","number","ButtonIcon","aria-label","isRequired","ButtonGroup"],"mappings":"4ZAMMA,EAAaC,sBAAW,WAK3BC,GAL2B,IAC5BC,EAD4B,EAC5BA,SACAC,EAF4B,EAE5BA,UACAC,EAH4B,EAG5BA,KACGC,EAJyB,sDAM5B,uCACEF,UAAWG,IATI,kBASmBH,GAClCF,IAAKA,EACLG,KAAMA,GACFC,GAEHH,MAILH,EAAWQ,UAAY,CAIrBL,SAAUM,OAKVL,UAAWM,SAKXL,KAAMK,UAGRV,EAAWW,YAAc,aAEVX,QChCTY,EAASX,sBAAW,WASvBC,GATuB,MACxBC,EADwB,EACxBA,SACAC,EAFwB,EAExBA,UACAS,EAHwB,EAGxBA,IACAC,EAJwB,EAIxBA,KACAC,EALwB,EAKxBA,KACAC,EANwB,EAMxBA,cACAC,EAPwB,EAOxBA,cACGX,EARqB,mGAUxB,kBAAC,WAAD,KAEIQ,EACI,kBAAC,IAAD,eACAE,cAAeA,EACfC,cAAeA,GACXX,GAEJ,yBACEF,UAAWG,IAtBJ,cAsBc,6BArBf,YAqBe,WACK,GADL,wBArBf,YAqBe,aAEDQ,GAASG,QAAQH,IAFhB,GAGlBX,GACHS,IAAKA,EACLX,IAAKA,GAEL,kBAAC,EAAD,KACGC,UAILgB,MAKVP,EAAOJ,UAAY,CAIjBL,SAAUM,OAKVL,UAAWM,SAKXG,IAAKO,OAKLN,KAAMO,OAKNN,KAAMO,gBAAM,CAAC,QAAS,UAAW,YAKjCN,cAAeN,SAKfO,cAAeI,QAGjBT,EAAOW,aAAe,CACpBP,cAAc,GAAD,OA7EI,aA6EJ,oBA5EG,YA4EH,UACbC,eAAe,GAGjBL,EAAOD,YAAc,SAENC,QCnFTY,EAAiBvB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CAChC,uCACEF,UAAWG,IAJI,wBAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILqB,EAAehB,UAAY,CAIzBL,SAAUM,OAKVL,UAAWM,UAGbc,EAAeb,YAAc,iBAEda,QCxBTC,EAAkBxB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CACjC,uCACEF,UAAWG,IAJI,yBAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILsB,EAAgBjB,UAAY,CAI1BL,SAAUM,OAKVL,UAAWM,UAGbe,EAAgBd,YAAc,kBAEfc,QCxBTC,EAAmBzB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CAClC,uCACEF,UAAWG,IAJI,0BAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILuB,EAAiBlB,UAAY,CAI3BL,SAAUM,OAKVL,UAAWM,UAGbgB,EAAiBf,YAAc,mBAEhBe,QCxBTC,EAAiB1B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CAChC,uCACEF,UAAWG,IAJI,wBAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILwB,EAAenB,UAAY,CAIzBL,SAAUM,OAKVL,UAAWM,UAGbiB,EAAehB,YAAc,iBAEdgB,QCxBTC,EAAqB3B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CACpC,wCACEF,UAAWG,IAJI,6BAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILyB,EAAmBpB,UAAY,CAI7BL,SAAUM,OAKVL,UAAWM,UAGbkB,EAAmBjB,YAAc,qBAElBiB,QCxBTC,EAAsB5B,sBAAW,WAAuDC,GAAvD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAgB0B,EAA7B,EAAwBC,IAAazB,EAArC,qDACrC,kBAACwB,EAAD,eACE1B,UAAWG,IAJI,8BAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAIL0B,EAAoBrB,UAAY,CAI9BL,SAAUM,OAKVL,UAAWM,SAKXqB,IAAKC,eAGPH,EAAoBN,aAAe,CACjCQ,IAAK,MAIPF,EAAoBlB,YAAc,sBAEnBkB,QClCTI,EAAiBhC,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CAChC,wCACEF,UAAWG,IAJI,sBAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAIL8B,EAAezB,UAAY,CAIzBL,SAAUM,OAKVL,UAAWM,UAGbuB,EAAetB,YAAc,iBAEdsB,QCiTAC,GA7TO,WAAO,IAAD,EACMC,mBAAS,CAAErB,MAAM,IADvB,mBACnBsB,EADmB,KACTC,EADS,OAEMF,mBAAS,CAAErB,MAAM,IAFvB,mBAEnBwB,EAFmB,KAETC,EAFS,OAGUJ,mBAAS,CAAErB,MAAM,IAH3B,mBAGnB0B,EAHmB,KAGPC,EAHO,OAIQN,mBAAS,CAAErB,MAAM,IAJzB,mBAInB4B,EAJmB,KAIRC,EAJQ,OAKQR,mBAAS,CAAErB,MAAM,IALzB,mBAKnB8B,EALmB,KAKRC,EALQ,KAO1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYd,IAAI,MAAhB,UACA,kBAAC,IAAD,0FAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYe,QAAS,kBAAMT,EAAY,CAAEvB,MAAOsB,EAAStB,SACtDsB,EAAStB,KAAO,QAAU,OAD7B,WAIA,kBAAC,EAAD,CACEiC,OAAQ,kBAAMV,EAAY,CAAEvB,MAAM,KAClCA,KAAMsB,EAAStB,KACfkC,UAAU,kBAEV,kBAAC,EAAD,KACE,kBAAC,EAAD,kCAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,8TASA,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,+TASF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaC,UAAU,SACrB,kBAAC,IAAD,CACEC,YAAY,YACZJ,QAAS,kBAAMT,EAAY,CAAEvB,MAAOsB,EAAStB,SAF/C,UAMA,kBAAC,IAAD,CACEoC,YAAY,UACZJ,QAAS,kBAAMT,EAAY,CAAEvB,MAAOsB,EAAStB,SAF/C,eAWV,kBAAC,IAAD,KACE,kBAAC,IAAD,wBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYgC,QAAS,kBAAMP,EAAY,CAAEzB,MAAOwB,EAASxB,SACtDwB,EAASxB,KAAO,QAAU,OAD7B,mBAIA,kBAAC,EAAD,CACEiC,OAAQ,kBAAMR,EAAY,CAAEzB,MAAM,KAClCA,KAAMwB,EAASxB,KACfkC,UAAU,iBACVjC,KAAK,WAEL,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMoC,KAAK,UAAUC,WAAW,SAElC,kBAAC,EAAD,kCAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,gUAUA,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,+TASF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaH,UAAU,SACrB,kBAAC,IAAD,CACEC,YAAY,YACZJ,QAAS,kBAAMP,EAAY,CAAEzB,MAAOwB,EAASxB,SAF/C,UAMA,kBAAC,IAAD,CACEoC,YAAY,UACZJ,QAAS,kBAAMP,EAAY,CAAEzB,MAAOwB,EAASxB,SAF/C,eAWV,kBAAC,IAAD,KACE,kBAAC,IAAD,wBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAYgC,QAAS,kBAAML,EAAc,CAAE3B,MAAO0B,EAAW1B,SAC1D0B,EAAW1B,KAAO,QAAU,OAD/B,mBAIA,kBAAC,EAAD,CACEiC,OAAQ,kBAAMN,EAAc,CAAE3B,MAAM,KACpCA,KAAM0B,EAAW1B,KACjBkC,UAAU,iBACVjC,KAAK,WAEL,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMoC,KAAK,UAAUC,WAAW,SAElC,kBAAC,EAAD,kCAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,8TASA,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,+TASF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaH,UAAU,SACrB,kBAAC,IAAD,CACEC,YAAY,YACZJ,QAAS,kBAAML,EAAc,CAAE3B,MAAO0B,EAAW1B,SAFnD,UAMA,kBAAC,IAAD,CACEoC,YAAY,UACZJ,QAAS,kBAAML,EAAc,CAAE3B,MAAO0B,EAAW1B,SAFnD,eAWV,kBAAC,IAAD,KACE,kBAAC,IAAD,sBAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAYgC,QAAS,kBAAMH,EAAa,CAAE7B,MAAO4B,EAAU5B,SACxD4B,EAAU5B,KAAO,QAAU,OAD9B,iBAIA,kBAAC,EAAD,CACEiC,OAAQ,kBAAMJ,EAAa,CAAE7B,MAAM,KACnCA,KAAM4B,EAAU5B,KAChBkC,UAAU,iBACVjC,KAAK,SAEL,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMoC,KAAK,QAAQC,WAAW,SAEhC,kBAAC,EAAD,kCAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,8TAOA,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,+TAQF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaH,UAAU,SACrB,kBAAC,IAAD,CACEC,YAAY,YACZJ,QAAS,kBAAMH,EAAa,CAAE7B,MAAO4B,EAAU5B,SAFjD,UAMA,kBAAC,IAAD,CACEoC,YAAY,UACZJ,QAAS,kBAAMH,EAAa,CAAE7B,MAAO4B,EAAU5B,SAFjD,eAWV,kBAAC,IAAD,KACE,kBAAC,IAAD,kCAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYgC,QAAS,kBAAMD,EAAa,CAAE/B,MAAO8B,EAAU9B,SACxD8B,EAAU9B,KAAO,QAAU,OAD9B,6BAIA,kBAAC,EAAD,CACEuC,aAAa,wBACbN,OAAQ,kBAAMF,EAAa,CAAE/B,MAAM,KACnCA,KAAM8B,EAAU9B,KAChBkC,UAAU,kBAEV,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaC,UAAU,SACrB,kBAAC,IAAD,CACEK,UAAU,QACVC,SAAS,aACTT,QAAS,kBAAMD,EAAa,CAAE/B,MAAO8B,EAAU9B,SAE/C,kBAAC,IAAD,CAAMqC,KAAK,QAAQC,WAAW,YAIpC,kBAAC,EAAD,KACE,kBAAC,EAAD,kCAEF,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,8TAQA,kBAAC,IAAD,KACE,kBAAC,EAAD,iBADF,+TASF,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAaH,UAAU,SACrB,kBAAC,IAAD,CACEC,YAAY,UACZM,GAAG,uBACHV,QAAS,kBAAMD,EAAa,CAAE/B,MAAO8B,EAAU9B,SAHjD,iBCpSV2C,GAAWC,EAAQ,KACnBC,GAAU,CAACD,EAAQ,MACnBE,GAAYF,EAAQ,KAEpBG,GADE,gqDACYC,QAAQ,YAAa,yBAAyBA,QAAQ,gBAAiB,uBAErFC,GADc,unbACeD,QAAQ,aAAvB,qBAEd5B,GAAgB,SAAC,GAA2B,IAAtB5B,EAAqB,oBACH6B,mBAAS,IADN,mBACxC6B,EADwC,KACxBC,EADwB,KAc/C,OAXAC,qBAAU,WACR,IACED,EAAkBL,GAAUO,MAAMN,KAClC,SAEAO,QAAQC,IAAR,6IAID,IAGD,kBAAC,IAAD,CAAMC,uBAAqB,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYvC,IAAI,MAAhB,YAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,IAAK,kBAAC,IAAD,CAASwC,OAAK,EAACC,GAAE,UAAKC,aAAL,sBAAiDC,gBAAgB,yBAC1F,kBAAC,IAAD,CAAMvB,KAAK,MAAMC,WAAW,QAD9B,kBAGA,kBAAC,IAAD,CAAKrB,IAAK,kBAAC,IAAD,CAASwC,OAAK,EAACC,GAAE,UAAKC,aAAL,2BAAsDC,gBAAgB,yBAC/F,kBAAC,IAAD,CAAMvB,KAAK,qBAAqBC,WAAW,QAD7C,kBAGA,kBAAC,IAAD,CAAKrB,IAAK,kBAAC,IAAD,CAASwC,OAAK,EAACC,GAAE,UAAKC,aAAL,2BAAsDC,gBAAgB,yBAC/F,kBAAC,IAAD,CAAMvB,KAAK,qBAAqBC,WAAW,QAD7C,sBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACEhD,UAAWG,IAAW,CACpB,oBAAqBD,EAAeqE,MAAMC,OAArB,UAAiCH,aAAjC,sBACrB,kBAAmBnE,EAAeqE,MAAMC,OAArB,UAAiCH,aAAjC,yBAGrB,kBAAC,GAAYnE,IAEf,yBACEF,UAAWG,IAAW,CACpB,oBAAqBD,EAAeqE,MAAMC,OAArB,UAAiCH,aAAjC,2BACrB,kBAAmBnE,EAAeqE,MAAMC,OAArB,UAAiCH,aAAjC,8BAGrB,kBAAC,IAAD,iBAAelD,IAAf,CAA6BsD,MAAOA,IAAOC,KAAMf,GAAagB,SAAS,SACpE,gBAAG3E,EAAH,EAAGA,UAAW4E,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAK/E,UAAWA,EAAW4E,MAAOA,GAC/BC,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,wBAASJ,EAAa,CAAEK,IAAKD,EAAGD,SAC9B,0BACEL,MAAO,CACLQ,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRL,EAAI,GAEND,EAAKD,KAAI,SAACQ,EAAOL,GAAR,OAAgB,yBAAUJ,EAAc,CAAEI,MAAKK,uBAOrE,yBACExF,UAAWG,IAAW,CACpB,oBAAqBD,EAAeqE,MAAMC,OAArB,UAAiCH,aAAjC,2BACrB,kBAAmBnE,EAAeqE,MAAMC,OAArB,UAAiCH,aAAjC,8BAGrB,kBAAC,IAAD,iBACMlD,IADN,CAEEsD,MAAOA,IACPC,KAAMrB,GAASoC,OAAOC,IAAeC,qBAAqB,kBAAC,GAAYzF,IAAqB,CAAEO,IAAK,SAAUmF,OAAQ,OAAQrC,WAASsC,WAAY,MAClJlB,SAAS,UAER,gBAAG3E,EAAH,EAAGA,UAAW4E,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAK/E,UAAWA,EAAW4E,MAAOA,GAC/BC,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,wBAASJ,EAAa,CAAEK,IAAKD,EAAGD,SAC9B,0BACEL,MAAO,CACLQ,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRL,EAAI,GAEND,EAAKD,KAAI,SAACQ,EAAOL,GAAR,OAAgB,yBAAUJ,EAAc,CAAEI,MAAKK,yBASzE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACExF,UAAWG,IAAW,CACpB,eAEF2F,cAAY,EACZC,KAAK,WAEL,kBAAC,IAAD,CAAcpE,IAAI,WAAlB,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAI3B,UAAU,UACZ,kBAAC,IAAD,CAAIgG,YAAU,OAAO/F,KAAK,eAAegG,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAID,YAAU,OAAO/F,KAAK,eAAegG,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAID,YAAU,OAAO/F,KAAK,eAAegG,MAAM,OAA/C,WAGA,kBAAC,IAAD,CAAID,YAAU,OAAO/F,KAAK,eAAegG,MAAM,OAA/C,iBAKJ,kBAAC,IAAD,KAEIrC,EAAesC,OAASC,OAAOC,QAAQxC,EAAesC,OACnDG,QAAO,SAAAC,GAAG,MAA2B,YAAvBA,EAAI,GAAGC,eACrBvB,KAAI,SAACsB,EAAKpB,GAAN,OACH,kBAAC,IAAD,CAAIlF,UAAU,SAASmF,IAAKD,EAAGsB,SAAS,KACtC,kBAAC,IAAD,CAAIxG,UAAU,UACXsG,EAAI,GADP,IACYA,EAAI,GAAGG,SAAW,yBAAK7B,MAAO,CAAE8B,MAAO,QAArB,aAAgD,IAE9E,kBAAC,IAAD,CAAI1G,UAAU,UACZ,gCAASsG,EAAI,GAAG3F,KAAKoC,MAEnBuD,EAAI,GAAG3F,KAAKgG,OAASL,EAAI,GAAG3F,KAAKgG,MAAMC,OACnC,2BAAOhC,MAAO,CAAE8B,MAAO,YAAa,6BAElCG,MAAMC,QAAQR,EAAI,GAAG3F,KAAKgG,OACtBL,EAAI,GAAG3F,KAAKgG,MAAM3B,KAAI,SAAA+B,GAAC,OAAIA,EAAEJ,OAASI,EAAEhE,QAAMiE,KAAK,MACtB,kBAAtBV,EAAI,GAAG3F,KAAKgG,MACjBL,EAAI,GAAG3F,KAAKgG,WACZ5F,GAGR,IAGR,kBAAC,IAAD,CAAIf,UAAU,UACXsG,EAAI,GAAGW,aAAeX,EAAI,GAAGW,aAAaN,MAAQ,IAErD,kBAAC,IAAD,CAAI3G,UAAU,UACXsG,EAAI,GAAGC,uBAahCzE,GAAcvB,YAAc,gBAEbuB,c,mFChNToF,EAAerH,sBAAW,WAAuDC,GAAvD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAgB0B,EAA7B,EAAwBC,IAAazB,EAArC,qDAC9B,kBAACwB,EAAD,eACE1B,UAAWG,IAJI,oBAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILmH,EAAa9G,UAAY,CAIvBL,SAAUM,OAKVL,UAAWM,SAKXqB,IAAKC,eAGPsF,EAAa/F,aAAe,CAC1BQ,IAAK,QAGPuF,EAAa3G,YAAc,eAEZ2G,O,0FChCTC,EAAYtH,sBAAW,WAa1BC,GAb0B,MAC3BC,EAD2B,EAC3BA,SACAC,EAF2B,EAE3BA,UACAoH,EAH2B,EAG3BA,oBACAtB,EAJ2B,EAI3BA,aACAuB,EAL2B,EAK3BA,cACAC,EAN2B,EAM3BA,OACAC,EAP2B,EAO3BA,kBACAC,EAR2B,EAQ3BA,iBACAC,EAT2B,EAS3BA,aACA1B,EAV2B,EAU3BA,KACA2B,EAX2B,EAW3BA,aACGxH,EAZwB,yLAc3B,2CACMA,EADN,CAEEF,UAAWG,IAnBI,kBAmBM,6BAlBP,YAkBO,0BACqBW,QAAQsG,IAD7B,wBAlBP,YAkBO,mBAEctG,QAAQgF,IAFtB,wBAlBP,YAkBO,qBAGgBhF,QAAQuG,IAHxB,wBAlBP,YAkBO,aAIDtB,GAASjF,QAAQiF,IAJhB,wBAlBP,YAkBO,YAKOjF,QAAQwG,IALf,wBAlBP,YAkBO,yBAMoBxG,QAAQyG,IAN5B,wBAlBP,YAkBO,wBAOmBzG,QAAQ0G,IAP3B,wBAlBP,YAkBO,aAQDC,GAAiB3G,QAAQ2G,IARxB,wBAlBP,YAkBO,mBASc3G,QAAQ4G,IATtB,GAUlB1H,GACHF,IAAKA,IAEJC,MAILoH,EAAU/G,UAAY,CAIpBL,SAAUM,OAKVL,UAAWM,SAKXqH,QAASC,kBAAQC,gBAAM,KAKvBT,oBAAqBnG,OAKrB6G,KAAMF,kBAAQC,gBAAM,KAKpB/B,aAAc7E,OAKdoG,cAAepG,OAKfqG,OAAQrG,OAKRsG,kBAAmBtG,OAKnBuG,iBAAkBvG,OAKlBwG,aAAcvG,gBAAM,CAAC,eAAgB,kBAKrC6E,KAAM7E,gBAAM,CAAC,YAKbwG,aAAczG,QAGhBkG,EAAU5G,YAAc,YAET4G,O,mFCvGTY,EAAQlI,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CACvB,yCACEF,UAAWG,IAJI,YAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILgI,EAAM3H,UAAY,CAIhBL,SAAUM,OAKVL,UAAWM,UAGbyH,EAAMxH,YAAc,QAELwH,O,0FCxBTC,EAAKnI,sBAAW,WAKnBC,GALmB,IACpBC,EADoB,EACpBA,SACAC,EAFoB,EAEpBA,UACAiI,EAHoB,EAGpBA,UACG/H,EAJiB,2DAMpB,sCACEF,UAAWG,IATI,SASM,mCACL8H,GAAcnH,QAAQmH,IACnCjI,GACHF,IAAKA,GACDI,GAEHH,MAILiI,EAAG5H,UAAY,CAIbL,SAAUM,OAKVL,UAAWM,SAKX2H,UAAW/G,gBAAM,CAAC,SAAU,OAAQ,WAGtC8G,EAAGzH,YAAc,KAEFyH,O,mFCpCTE,EAAKrI,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CACpB,sCACEF,UAAWG,IAJI,SAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILmI,EAAG9H,UAAY,CAIbL,SAAUM,OAKVL,UAAWM,UAGb4H,EAAG3H,YAAc,KAEF2H,O,mFCxBTC,EAAQtI,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CACvB,yCACEF,UAAWG,IAJI,YAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILoI,EAAM/H,UAAY,CAIhBL,SAAUM,OAKVL,UAAWM,UAGb6H,EAAM5H,YAAc,QAEL4H,O,mFCxBTC,EAAKvI,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CACpB,sCACEF,UAAWG,IAJI,SAImBH,GAClCF,IAAKA,GACDI,GAEHH,MAILqI,EAAGhI,UAAY,CAIbL,SAAUM,OAKVL,UAAWM,UAGb8H,EAAG7H,YAAc,KAEF6H,O,4ECxBTC,EAAc,SAAC,GAAD,IAAGtI,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcE,EAA3B,+CAClB,wCACEF,UAAWG,IAJI,gBAImBH,IAC9BE,GAEHH,IAgBLsI,EAAY9H,YAAc,cAEX8H,O,2ICrBTC,EAAazI,sBAAW,WAa3BC,GAb2B,MAC5ByI,EAD4B,EAC5BA,OACAxI,EAF4B,EAE5BA,SACAC,EAH4B,EAG5BA,UACA8C,EAJ4B,EAI5BA,YACA0F,EAL4B,EAK5BA,SACAC,EAN4B,EAM5BA,UACAC,EAP4B,EAO5BA,YACAzI,EAR4B,EAQ5BA,KACAuG,EAT4B,EAS5BA,SACK9E,EAVuB,EAU5BC,IACAhB,EAX4B,EAW5BA,KACGT,EAZyB,0IAc5B,kBAACwB,EAAD,eACE1B,UAAWG,KAAU,6BAlBN,iBAmB+B,IAAzBW,QAAQgC,IADR,wBAjBP,YAiBO,YAEOhC,QAAQyH,IAFf,wBAlBN,eAkBM,aAGAzF,GAAgBhC,QAAQgC,IAHxB,wBAjBP,YAiBO,eAIUhC,QAAQ2H,IAJlB,wBAlBN,eAkBM,eAKW3H,QAAQ4H,IALnB,wBAjBP,YAiBO,cAMS5H,QAAQ0H,IANjB,GAOlBxI,GACHwI,SAAUA,EACVvI,KAAc,WAARyB,OAAmBX,EAAYd,EACrCuG,SAAU,CAAC,OAAQ,OAAOmC,SAASjH,GAAO8E,OAAWzF,EACrDJ,KAAc,WAARe,EAAmBf,OAAOI,EAChCjB,IAAKA,GACDI,GAEJ,kBAAC,IAAD,KAAcH,OAIlBuI,EAAWlI,UAAY,CAIrBmI,OAAQtH,OAKRlB,SAAUM,OAKVL,UAAWM,SAKXwC,YAAa5B,gBAAM,CACjB,UACA,YACA,aAMFsH,SAAUvH,OAKVwH,UAAWxH,OAKXyH,YAAazH,OAKbhB,KAAMK,SAKNkG,SAAUoC,oBAAU,CAACC,SAAQvI,WAK7BqB,IAAKT,gBAAM,CACT,IACA,SACA,MACA,SAMFP,KAAML,UAGRgI,EAAWnH,aAAe,CACxBlB,KAAM,SACNuG,SAAU,EACV7E,IAAK,SACLhB,KAAM,UAGR2H,EAAW/H,YAAc,aAEV+H,O,mGC9GTQ,EAAajJ,sBAAW,WAQ3BC,GAR2B,IAC5BoD,EAD4B,EAC5BA,UACAnD,EAF4B,EAE5BA,SACAC,EAH4B,EAG5BA,UACAwI,EAJ4B,EAI5BA,SACArF,EAL4B,EAK5BA,SACAxC,EAN4B,EAM5BA,KACGT,EAPyB,wFAS5B,0CACE6I,aAAY7F,EACZlD,UAAWG,IAbI,eAaM,yBAbN,eAaM,aACAgD,GAAarC,QAAQqC,IACvCnD,GACHwI,SAAUA,EACV1I,IAAKA,EACLa,KAAMA,GACFT,GAEJ,kBAAC,IAAD,KAAcH,OAIlB+I,EAAW1I,UAAY,CAIrB8C,UAAW5C,SAAO0I,WAKlBjJ,SAAUM,OAKVL,UAAWM,SAKXkI,SAAUvH,OAKVkC,SAAUjC,gBAAM,CACd,OACA,eACA,YACA,QACA,aACA,gBACA,eAMFP,KAAML,UAGRwI,EAAW3H,aAAe,CACxBR,KAAM,UAGRmI,EAAWvI,YAAc,aAEVuI,O,mFCtETG,EAAc,SAAC,GAAD,IAAGlJ,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAW6C,EAAxB,EAAwBA,UAAc3C,EAAtC,2DAClB,uCACEF,UAAWG,IAJI,gBAIM,yBAJN,gBAIM,aACA0C,GAAc/B,QAAQ+B,IACxC7C,IACCE,GAEHH,IAwBLkJ,EAAY1I,YAAc,cAEX0I","file":"static/js/38.2e775bec.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card';\n\nconst DialogCard = forwardRef(({\n  children,\n  className,\n  role,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDialogCard.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nDialogCard.displayName = 'DialogCard';\n\nexport default DialogCard;\n","import React, { forwardRef, Fragment } from 'react';\nimport { bool, func, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ReactAriaModal from 'react-aria-modal';\nimport DialogCard from '../dialog-card';\n\nconst CSS_PREFIX = 'vds-dialog';\nconst CSS_STATE = 'vds-state';\n\nconst Dialog = forwardRef(({\n  children,\n  className,\n  css,\n  open,\n  type,\n  underlayClass,\n  underlayColor,\n  ...remainingProps\n}, ref) => (\n  <Fragment>\n    {\n      open\n        ? <ReactAriaModal\n          underlayClass={underlayClass}\n          underlayColor={underlayColor}\n          {...remainingProps}\n        >\n          <div\n            className={classnames(CSS_PREFIX, {\n              [`${CSS_STATE}--show`]: true,\n              [`${CSS_STATE}--${type}`]: Boolean(type)\n            }, className)}\n            css={css}\n            ref={ref}\n          >\n            <DialogCard>\n              {children}\n            </DialogCard>\n          </div>\n        </ReactAriaModal>\n        : undefined\n    }\n  </Fragment>\n));\n\nDialog.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Show dialog\n   */\n  open: bool,\n\n  /**\n   * Dialog Type\n   */\n  type: oneOf(['error', 'success', 'warning']),\n\n  /**\n   * Dialog underlay class\n   */\n  underlayClass: string,\n\n  /**\n   * Dialog underlay color\n   */\n  underlayColor: bool\n};\n\nDialog.defaultProps = {\n  underlayClass: `${CSS_PREFIX}-curtain ${CSS_STATE}--show`,\n  underlayColor: false\n};\n\nDialog.displayName = 'Dialog';\n\nexport default Dialog;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card--body';\n\nconst DialogCardBody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDialogCardBody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDialogCardBody.displayName = 'DialogCardBody';\n\nexport default DialogCardBody;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card--close';\n\nconst DialogCardClose = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDialogCardClose.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDialogCardClose.displayName = 'DialogCardClose';\n\nexport default DialogCardClose;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card--footer';\n\nconst DialogCardFooter = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDialogCardFooter.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDialogCardFooter.displayName = 'DialogCardFooter';\n\nexport default DialogCardFooter;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card--head';\n\nconst DialogCardHead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDialogCardHead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDialogCardHead.displayName = 'DialogCardHead';\n\nexport default DialogCardHead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card--head-icon';\n\nconst DialogCardHeadIcon = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n));\n\nDialogCardHeadIcon.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDialogCardHeadIcon.displayName = 'DialogCardHeadIcon';\n\nexport default DialogCardHeadIcon;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-card--head-title';\n\nconst DialogCardHeadTitle = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nDialogCardHeadTitle.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nDialogCardHeadTitle.defaultProps = {\n  tag: 'h2'\n};\n\n\nDialogCardHeadTitle.displayName = 'DialogCardHeadTitle';\n\nexport default DialogCardHeadTitle;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-dialog-subtitle';\n\nconst DialogSubtitle = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n));\n\nDialogSubtitle.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDialogSubtitle.displayName = 'DialogSubtitle';\n\nexport default DialogSubtitle;\n","import React, { useState } from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonIcon from '../../button-icon';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Dialog from '../../dialog';\nimport DialogCardBody from '../../dialog-card-body';\nimport DialogCardClose from '../../dialog-card-close';\nimport DialogCardFooter from '../../dialog-card-footer';\nimport DialogCardHead from '../../dialog-card-head';\nimport DialogCardHeadIcon from '../../dialog-card-head-icon';\nimport DialogCardHeadTitle from '../../dialog-card-head-title';\nimport DialogSubtitle from '../../dialog-subtitle';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst DialogExample = () => {\n  const [stateOne, setStateOne] = useState({ open: false });\n  const [stateTwo, setStateTwo] = useState({ open: false });\n  const [stateThree, setStateThree] = useState({ open: false });\n  const [stateFour, setStateFour] = useState({ open: false });\n  const [stateFive, setStateFive] = useState({ open: false });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Dialog</Typography>\n          <Typography>Based off [react-aria-modal](https://github.com/davidtheclark/react-aria-modal)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonText onClick={() => setStateOne({ open: !stateOne.open })}>\n            {stateOne.open ? 'Close' : 'Open'} Dialog\n          </ButtonText>\n\n          <Dialog\n            onExit={() => setStateOne({ open: false })}\n            open={stateOne.open}\n            titleText=\"Dialog Example\"\n          >\n            <DialogCardHead>\n              <DialogCardHeadTitle>VDS React Dialog Example</DialogCardHeadTitle>\n            </DialogCardHead>\n            <DialogCardBody>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key\n                  component of any modern web application.\n                  As such, we have created this dialog in such a way\n                   that it fulfills the accessibility requirements\n                   of the modern web. We seek to keep the focus on\n                   accessibility while providing a functional,\n                   capable dialog component for general use.\n              </Typography>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key component of\n                  any modern web application. As such, we have created\n                  this dialog in such a way that it fulfills the\n                  accessibility requirements of the modern web. We\n                  seek to keep the focus on accessibility while providing\n                  a functional, capable dialog component for general use.\n              </Typography>\n            </DialogCardBody>\n            <DialogCardFooter>\n              <ButtonGroup direction=\"right\">\n                <ButtonText\n                  colorScheme=\"secondary\"\n                  onClick={() => setStateOne({ open: !stateOne.open })}\n                >\n                  Cancel\n                </ButtonText>\n                <ButtonText\n                  colorScheme=\"primary\"\n                  onClick={() => setStateOne({ open: !stateOne.open })}\n                >\n                  Accept\n                </ButtonText>\n              </ButtonGroup>\n            </DialogCardFooter>\n          </Dialog>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Dialog Success\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonText onClick={() => setStateTwo({ open: !stateTwo.open })}>\n            {stateTwo.open ? 'Close' : 'Open'} Success Dialog\n          </ButtonText>\n\n          <Dialog\n            onExit={() => setStateTwo({ open: false })}\n            open={stateTwo.open}\n            titleText=\"Dialog Example\"\n            type=\"success\"\n          >\n            <DialogCardHead>\n              <DialogCardHeadIcon>\n                <Icon name=\"success\" resolution=\"low\" />\n              </DialogCardHeadIcon>\n              <DialogCardHeadTitle>VDS React Dialog Example</DialogCardHeadTitle>\n            </DialogCardHead>\n            <DialogCardBody>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key\n                  component of any modern web application.\n                  As such, we have created this dialog in such\n                  a way that it fulfills the accessibility r\n                  requirements of the modern web.\n                  We seek to keep the focus on accessibility\n                  while providing a functional, capable dialog\n                  component for general use.\n              </Typography>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key component\n                  of any modern web application. As such, we\n                  have created this dialog in such a way that it\n                  fulfills the accessibility requirements of the modern web.\n                  We seek to keep the focus on accessibility while providing a\n                  functional, capable dialog component for general use.\n              </Typography>\n            </DialogCardBody>\n            <DialogCardFooter>\n              <ButtonGroup direction=\"right\">\n                <ButtonText\n                  colorScheme=\"secondary\"\n                  onClick={() => setStateTwo({ open: !stateTwo.open })}\n                >\n                  Cancel\n                </ButtonText>\n                <ButtonText\n                  colorScheme=\"primary\"\n                  onClick={() => setStateTwo({ open: !stateTwo.open })}\n                >\n                  Accept\n                </ButtonText>\n              </ButtonGroup>\n            </DialogCardFooter>\n          </Dialog>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Dialog Warning\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n\n          <ButtonText onClick={() => setStateThree({ open: !stateThree.open })}>\n            {stateThree.open ? 'Close' : 'Open'} Warning Dialog\n          </ButtonText>\n\n          <Dialog\n            onExit={() => setStateThree({ open: false })}\n            open={stateThree.open}\n            titleText=\"Dialog Example\"\n            type=\"warning\"\n          >\n            <DialogCardHead>\n              <DialogCardHeadIcon>\n                <Icon name=\"warning\" resolution=\"low\" />\n              </DialogCardHeadIcon>\n              <DialogCardHeadTitle>VDS React Dialog Example</DialogCardHeadTitle>\n            </DialogCardHead>\n            <DialogCardBody>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key\n                  component of any modern web application.\n                  As such, we have created this dialog in such a\n                  way that it fulfills the accessibility requirements\n                  of the modern web. We seek to keep the focus on\n                  accessibility while providing a functional,\n                  capable dialog component for general use.\n              </Typography>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key\n                  component of any modern web application.\n                  As such, we have created this dialog in such a\n                  way that it fulfills the accessibility requirements\n                  of the modern web. We seek to keep the focus on accessibility\n                  while providing a functional, capable dialog component for general use.\n              </Typography>\n            </DialogCardBody>\n            <DialogCardFooter>\n              <ButtonGroup direction=\"right\">\n                <ButtonText\n                  colorScheme=\"secondary\"\n                  onClick={() => setStateThree({ open: !stateThree.open })}\n                >\n                  Cancel\n                </ButtonText>\n                <ButtonText\n                  colorScheme=\"primary\"\n                  onClick={() => setStateThree({ open: !stateThree.open })}\n                >\n                  Accept\n                </ButtonText>\n              </ButtonGroup>\n            </DialogCardFooter>\n          </Dialog>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Dialog Error\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n\n          <ButtonText onClick={() => setStateFour({ open: !stateFour.open })}>\n            {stateFour.open ? 'Close' : 'Open'} Error Dialog\n          </ButtonText>\n\n          <Dialog\n            onExit={() => setStateFour({ open: false })}\n            open={stateFour.open}\n            titleText=\"Dialog Example\"\n            type=\"error\"\n          >\n            <DialogCardHead>\n              <DialogCardHeadIcon>\n                <Icon name=\"error\" resolution=\"low\" />\n              </DialogCardHeadIcon>\n              <DialogCardHeadTitle>VDS React Dialog Example</DialogCardHeadTitle>\n            </DialogCardHead>\n            <DialogCardBody>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key component\n                  of any modern web application. As such, we have created\n                  this dialog in such a way that it fulfills the accessibility requirements of\n                  the modern web. We seek to keep the focus on accessibility while\n                   providing a functional, capable dialog component for general use.\n              </Typography>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key component\n                  of any modern web application. As such, we have created\n                  this dialog in such a way that it fulfills the accessibility requirements of\n                  the modern web. We seek to keep the focus on accessibility while\n                   providing a functional, capable dialog component for general use.\n              </Typography>\n            </DialogCardBody>\n            <DialogCardFooter>\n              <ButtonGroup direction=\"right\">\n                <ButtonText\n                  colorScheme=\"secondary\"\n                  onClick={() => setStateFour({ open: !stateFour.open })}\n                >\n                  Cancel\n                </ButtonText>\n                <ButtonText\n                  colorScheme=\"primary\"\n                  onClick={() => setStateFour({ open: !stateFour.open })}\n                >\n                  Accept\n                </ButtonText>\n              </ButtonGroup>\n            </DialogCardFooter>\n          </Dialog>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Dialog With Close button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonText onClick={() => setStateFive({ open: !stateFive.open })}>\n            {stateFive.open ? 'Close' : 'Open'} Dialog With Close Button\n          </ButtonText>\n\n          <Dialog\n            initialFocus=\"#dialog-accept-button\"\n            onExit={() => setStateFive({ open: false })}\n            open={stateFive.open}\n            titleText=\"Dialog Example\"\n          >\n            <DialogCardClose>\n              <ButtonGroup direction=\"right\">\n                <ButtonIcon\n                  ariaLabel=\"close\"\n                  iconType=\"light-tiny\"\n                  onClick={() => setStateFive({ open: !stateFive.open })}\n                >\n                  <Icon name=\"close\" resolution=\"tiny\" />\n                </ButtonIcon>\n              </ButtonGroup>\n            </DialogCardClose>\n            <DialogCardHead>\n              <DialogCardHeadTitle>VDS React Dialog Example</DialogCardHeadTitle>\n            </DialogCardHead>\n            <DialogCardBody>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key component\n                  of any modern web application. As such, we have\n                  created this dialog in such a way that it fulfills the\n                  accessibility requirements of the modern web. We\n                  seek to keep the focus on accessibility while providing\n                  a functional, capable dialog component for general use.\n              </Typography>\n              <Typography>\n                <DialogSubtitle>Subtitle</DialogSubtitle> We maintain that accessibility is a key component\n                  of any modern web application. As such, we have\n                  created this dialog in such a way that it fulfills the\n                  accessibility requirements of the modern web. We\n                  seek to keep the focus on accessibility while providing\n                  a functional, capable dialog component for general use.\n              </Typography>\n            </DialogCardBody>\n            <DialogCardFooter>\n              <ButtonGroup direction=\"right\">\n                <ButtonText\n                  colorScheme=\"primary\"\n                  id=\"dialog-accept-button\"\n                  onClick={() => setStateFive({ open: !stateFive.open })}\n                >\n                  Accept\n                </ButtonText>\n              </ButtonGroup>\n            </DialogCardFooter>\n          </Dialog>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default DialogExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/dialog/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/dialog/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/dialog/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DialogExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Dialog\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Dialog</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/dialog`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Dialog Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/dialog/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/dialog/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/dialog`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/dialog`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/dialog/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/dialog/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/dialog/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/dialog/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDialogExample.displayName = 'DialogExample';\n\nexport default DialogExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n"],"sourceRoot":""}