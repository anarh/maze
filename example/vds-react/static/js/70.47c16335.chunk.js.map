{"version":3,"sources":["components/tooltip/example/index.js","pages/components/tooltip.js","components/link/index.js"],"names":["TooltipExample","useState","showTooltip","setShowTooltip","tag","textAlign","tooltip","placement","trigger","id","colorScheme","href","tooltipShown","onFocus","onBlur","onMouseEnter","onMouseLeave","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","name","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","defaultValue","displayName","Link","forwardRef","ref","disabled","inline","cloneElement","Boolean","propTypes","children","node","string","bool","element"],"mappings":"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","file":"static/js/70.47c16335.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Link from '../../link';\nimport Row from '../../row';\nimport Tooltip from '../../tooltip';\nimport Typography from '../../typography';\n\nconst TooltipExample = () => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <Grid>\n      <Row>\n        <Typography tag=\"h2\">Raw state, mouse-only interactions</Typography>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"right\"\n            trigger=\"hover\"\n            id=\"tooltip-12\"\n          >\n            <ButtonText>Right</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"top\"\n            trigger=\"hover\"\n            id=\"tooltip-1\"\n          >\n            <ButtonText>Top</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"bottom\"\n            trigger=\"hover\"\n            id=\"tooltip-15\"\n          >\n            <ButtonText>Bottom</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"left\"\n            trigger=\"hover\"\n            id=\"tooltip-13\"\n          >\n            <ButtonText colorScheme=\"primary\">Left</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Typography>{\"This is an example of a \"}\n            <Tooltip\n              trigger=\"hover\"\n              id=\"tooltip-20\"\n              tooltip=\"Because it's for demo purposes only\"\n            >\n              <Link href=\"#\">link</Link>\n            </Tooltip> with a tooltip.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Typography tag=\"h2\">A11y/VGAR usage, with mouse + keyboard/focus interactions</Typography>\n        <Typography tag=\"h4\">\n          Use the Tooltip component as a stateless wrapper component\n          to take control of the visibility of the tooltip. See code example for how to proceed...\n        </Typography>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            tooltipShown={showTooltip}\n            placement=\"right\"\n            trigger=\"none\"\n            id=\"tooltip-012\"\n          >\n            <ButtonText\n              onFocus={() => setShowTooltip(true)}\n              onBlur={() => setShowTooltip(false)}\n              onMouseEnter={() => setShowTooltip(true)}\n              onMouseLeave={() => setShowTooltip(false)}\n            >\n              Supports keyboard(focus) and mouse(hover)\n            </ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TooltipExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/tooltip/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/tooltip/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/tooltip/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst TooltipExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Tooltip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Tooltip</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Tooltip Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nTooltipExample.displayName = 'TooltipExample';\n\nexport default TooltipExample;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n"],"sourceRoot":""}