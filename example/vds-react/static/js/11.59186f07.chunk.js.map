{"version":3,"sources":["components/form/example/index.js","pages/components/form.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/input-option/index.js","components/input-label/index.js","components/input-container/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/button-group/index.js","components/fieldset/index.js","components/form-control/index.js","components/form/index.js"],"names":["FormExample","tag","helpText","label","name","showHelpText","position","space","direction","colorScheme","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","disabled","flippable","isFullWidth","tabIndex","includes","oneOfType","number","InputOption","InputLabel","InputContainer","expanded","filled","focus","invalid","isTextarea","readOnly","func","InputBar","InputMessage","show","InputHint","InputText","Input","ariaLabel","checkmarkIcon","containerProps","contentAfterInput","contentBeforeInput","errorIcon","errorText","helpIcon","id","shortid","generate","inputContainerProps","labelId","noValidate","onBlur","onChange","onFocus","placeholder","showCheckmark","showErrorText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","useRef","current","setValidity","e","target","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","InputInput","ButtonGroup","Fieldset","FormControl","divide","resize","element","Form"],"mappings":"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","file":"static/js/11.59186f07.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Fieldset from '../../fieldset';\nimport Form from '../../form';\nimport FormControl from '../../form-control';\nimport Grid from '../../grid';\nimport Input from '../../input';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst FormExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl>\n              <Input\n                helpText=\"Enter Address\"\n                label=\"Address Line 1\"\n                name=\"address-line-1\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                helpText=\"Address line 2\"\n                label=\"Address Line 2\"\n                name=\"address-line-2\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                helpText=\"Enter City\"\n                label=\"City\"\n                name=\"City\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n          <ButtonGroup direction=\"right\">\n            <ButtonText colorScheme=\"primary\">Submit</ButtonText>\n            <ButtonText colorScheme=\"secondary\">Reset</ButtonText>\n          </ButtonGroup>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 30/70</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 40/60</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"forty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"sixty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 50/50</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"fifty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"fifty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 60/40</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"sixty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"forty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 70/30</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default FormExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/form/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/form/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/form/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst FormExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Form\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Form</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Form Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nFormExample.displayName = 'FormExample';\n\nexport default FormExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...inputContainerProps}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","import React, { forwardRef } from 'react';\nimport { bool, element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst FormControl = forwardRef(({\n  children,\n  className,\n  divide,\n  resize,\n  space,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(`${CSS_PREFIX}-control`, {\n      [`${CSS_PREFIX}-control--${divide}${resize ? '--resize' : ''}`]: Boolean(divide),\n      [`${CSS_PREFIX}-control--${space}`]: Boolean(space),\n      [`vds-input--split-field`]: Boolean(space)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nFormControl.propTypes = {\n  /**\n  * @ignore\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Divide by\n   */\n  divide: oneOf(['twenty-five', 'fifty']),\n\n  /**\n   * Position\n   */\n  position: oneOf(['left', 'right']),\n\n  /**\n   * Resize\n   */\n  resize: bool,\n  /**\n   * Space\n   */\n  space: oneOf(['thirty', 'forty', 'fifty', 'sixty', 'seventy'])\n};\n\nFormControl.displayName = 'FormControl';\n\nexport default FormControl;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst Form = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nForm.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nForm.defaultProps = {\n  tag: 'form'\n};\n\nForm.displayName = 'Form';\n\nexport default Form;\n"],"sourceRoot":""}