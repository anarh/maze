(this["webpackJsonp@visa/vds-react"]=this["webpackJsonp@visa/vds-react"]||[]).push([[11],{291:function(e,n,t){"use strict";t.r(n);var a=t(64),l=t(0),r=t.n(l),o=t(533),s=t.n(o),c=t(2),i=t.n(c),u=t(541),p=t(540),d=t(39),m=t(8),h=t(524),v=t(18),f=t(23),y=t(16),g=t(523),b=t(65),T=t(140),x=t(525),w=t(526),E=t(527),I=t(528),O=t(529),C=t(7),j=t(13),N=t(578),k=t(555),R=t(554),S=t(567),B=t(556),P=function(){var e=Object(l.useRef)(null),n=Object(l.useRef)(null),t=Object(l.useState)({value:""}),o=Object(a.a)(t,2),s=o[0],c=o[1],i=Object(l.useState)({errorText:'Error: Please enter "peter"',helpText:'Type "peter" into the input field',invalid:void 0,label:'Type "peter"',name:"simple-validation-example-peter",value:""}),u=Object(a.a)(i,2),p=u[0],d=u[1],h=Object(l.useState)({value:""}),g=Object(a.a)(h,2),b=g[0],T=g[1],x=Object(l.useState)({value:""}),w=Object(a.a)(x,2),E=w[0],I=w[1],O=Object(l.useState)({type:"text",value:""}),P=Object(a.a)(O,2),F=P[0],H=P[1],L=Object(l.useState)({errorText:'Error: Please enter "john"',helpText:'Type "john" into the input field',invalid:!0,label:'Simple Validation (type "john")',name:"simple-validation-example",value:""}),V=Object(a.a)(L,2),M=V[0],A=V[1],q=Object(l.useState)({pattern:"^(?=.*)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$",type:"password",value:""}),D=Object(a.a)(q,2),z=D[0],$=D[1],Z=Object(l.useState)({errorText:"",invalid:void 0,showCheckmark:!0,value:"Mango"}),G=Object(a.a)(Z,2),J=G[0],Y=G[1],W=function(n){e.current.focus(),T({value:n})},_=function(e){n.current.focus(),I({value:e})};return r.a.createElement(f.a,null,r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"All native React input props apply e.g. defaultValue, value... etc"),r.a.createElement(C.a,null,'The Input component can be used in an uncontrolled or controlled way with the presence of "defaultValue" or "value" props as described in the React docs.'),r.a.createElement(C.a,null,"Input Text Default (uncontrolled) example"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your full name",label:"Full Name",name:"full-name",showHelpText:!0}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text Default (controlled) example"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your full name",label:"Full Name",name:"full-name",onChange:function(e){return c({value:e.target.value})},showHelpText:!0,value:s.value}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text ReadOnly"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your full name",label:"Full Name",name:"full-name",readOnly:!0,showHelpText:!0}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text Disabled"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{disabled:!0,helpText:"Please enter your full name",label:"Full Name",name:"full-name",showHelpText:!0}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text Pre-filled"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your full name",label:"Full Name",name:"full-name",showHelpText:!0,defaultValue:"John Smith"}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text noValidate (HTML5)"),r.a.createElement(C.a,null,"Disable native HTML5 validation with noValidate prop and manage your own validations"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{errorText:p.errorText,helpText:p.helpText,invalid:p.invalid,label:p.label,name:p.name,noValidate:!0,onChange:function(e){return d(Object(j.a)({},p,{errorText:e.target.value.length>5?"Too many characters":'Please type "peter"',helpText:"peter"===e.target.value?'You\'ve successfully typed "peter"':'Type "peter" into the input field',invalid:"peter"!==e.target.value,value:e.target.value}))},required:!0,showErrorText:!0,showHelpText:!0,value:p.value}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text with Custom Button Icon (clear)"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your full name",label:"Full Name",name:"full-name",onChange:function(e){return W(e.target.value)},ref:e,showHelpText:!0,value:b.value},r.a.createElement(B.a,null,r.a.createElement(k.a,{ariaLabel:"clear",iconType:"light-tiny",onClick:function(){return W("")}},r.a.createElement(v.a,{name:"close",resolution:"tiny"})))))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text with Custom Button Icon on the left"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{contentBeforeInput:r.a.createElement(B.a,null,r.a.createElement(k.a,{ariaLabel:"Account",iconType:"light-tiny"},r.a.createElement(v.a,{name:"account",resolution:"low"}))),helpText:"Please enter your full name",label:"Full Name",name:"full-name",showHelpText:!0}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text with Custom Button Icon (clear) that appears after value is entered"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your full name",label:"Full Name",name:"full-name",onChange:function(e){return _(e.target.value)},ref:n,showHelpText:!0,value:E.value},E.value.length?r.a.createElement(B.a,null,r.a.createElement(k.a,{ariaLabel:"clear",iconType:"light-tiny",onClick:function(){return _("")}},r.a.createElement(v.a,{name:"close",resolution:"tiny"}))):void 0))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text with Custom Button Icon (toggle password view)"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{helpText:"Please enter your password",label:"Password",name:"password",onChange:function(e){return H(Object(j.a)({},F,{value:e.target.value}))},showHelpText:!0,type:F.type,value:F.value},r.a.createElement(B.a,null,r.a.createElement(k.a,{ariaLabel:"text"===F.type?"hide password":"show password",iconType:"light-tiny",onClick:function(){return H(Object(j.a)({},F,{type:"text"===F.type?"password":"text"}))}},"text"===F.type?r.a.createElement(v.a,{name:"password-hide",resolution:"tiny"}):r.a.createElement(v.a,{name:"password-show",resolution:"tiny"})))))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text Default HTML5 Required"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{errorText:"Error: Please fill out this field",helpText:"Please enter your full name",label:"Full Name",name:"full-name",required:!0,showErrorText:!0,showHelpText:!0}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},'Input Text Default with HTML5 "type=email" Validation'))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{containerProps:{style:{width:"350px"}},errorText:"Error: Invalid email address",helpText:"Please enter an email address",label:"Email Address",name:"email-validation",placeholder:"email@visa.com",showCheckmark:!0,showErrorText:!0,showHelpText:!0,type:"email"}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text with internal HTML5 regex pattern validation"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{containerProps:{style:{width:"350px"}},errorText:"Error: Enter 2 - 5 characters",helpText:"2 - 5 characters",label:"Enter 2 to 5 characters starting with a letter e.g. abc or a2d",name:"default-username",pattern:"^[a-zA-Z][a-zA-Z0-9-_\\.]{1,4}$",placeholder:"2 to 5 characters",required:!0,showCheckmark:!0,showErrorText:!0,showHelpText:!0,type:"text"}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Custom Input Simple Validation"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{containerProps:{style:{width:"350px"}},errorText:M.errorText,helpText:M.helpText,invalid:M.invalid,label:M.label,name:M.name,noValidate:!0,onChange:function(e){return A(Object(j.a)({},M,{errorText:e.target.value.length>4?"Error: Too many characters":'Error: Please type "john"',helpText:"john"===e.target.value?'You\'ve successfully typed "john"':'Type "john" into the input field',invalid:"john"!==e.target.value,value:e.target.value}))},showCheckmark:!0,showErrorText:!0,showHelpText:!0,type:"text"}))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Input Text with Custom Button Icon (toggle password view) with HTML5 pattern Validation"),r.a.createElement(C.a,null,"- at least 8 characters"),r.a.createElement(C.a,null,"- must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number"),r.a.createElement(C.a,null,"- optional - can contain special characters"),r.a.createElement(C.a,null,"example: Testing123!"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(S.a,{containerProps:{style:{width:"350px"}},errorText:"Error: at least 8 characters, - at least 1 uppercase, lowercase and number, - can contain special characters",helpText:new RegExp(z.pattern).test(z.value)?"Successfully entered a valid password":"Please enter your password",label:"Password",name:"password",onChange:function(e){return $(Object(j.a)({},z,{value:e.target.value}))},pattern:z.pattern,required:!0,showErrorText:!0,showHelpText:!0,type:z.type,value:z.value},r.a.createElement(B.a,null,r.a.createElement(k.a,{ariaLabel:"text"===z.type?"hide password":"show password",iconType:"light-tiny",onClick:function(){return $(Object(j.a)({},z,{type:"text"===z.type?"password":"text"}))}},"text"===z.type?r.a.createElement(v.a,{name:"password-hide",resolution:"tiny"}):r.a.createElement(v.a,{name:"password-show",resolution:"tiny"})))))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h2"},"Clear and reset value"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement("div",{style:{display:"inline-block",marginBottom:"20px"}},r.a.createElement(S.a,{errorText:J.errorText,helpText:"Please enter a fruit",id:"default-input-example",invalid:J.invalid,label:"Fruit",name:"default-fruit",onBlur:function(e){return n=e.target.value,Y(Object(j.a)({},J,{errorText:"Citron"===n?"Error: Invalid fruit":""===n?"Error: Field cannot be empty":""}));var n},onChange:function(e){return Y({value:e.target.value})},showCheckmark:J.showCheckmark,showErrorText:!0,type:"text",value:J.value}),r.a.createElement(N.a,{direction:"right",style:{marginTop:"30px"}},r.a.createElement(R.a,{onClick:function(){return Y(Object(j.a)({},J,{errorText:"Error: Field cannot be empty",invalid:!0,value:""}))}},"Clear"),r.a.createElement(R.a,{colorScheme:"secondary",onClick:function(){return Y(Object(j.a)({},J,{errorText:"",invalid:!1,showCheckmark:!1,value:"Mango"}))}},"Reset"),r.a.createElement(R.a,{onClick:function(){return Y(Object(j.a)({},J,{errorText:"Error: Invalid fruit",invalid:!0,value:"Citron"}))}},"Invalid Fruit"),r.a.createElement(R.a,{colorScheme:"secondary",onClick:function(){return Y(Object(j.a)({},J,{invalid:!1,showCheckmark:!J.showCheckmark}))}},"Toggle Checkmark"))))))},F=t(535),H=[t(536)],L=t(537),V="import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput {...inputContainerProps}>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-input\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n".replace("= memo(({","= React.forwardRef(({").replace("cloneElement(","React.cloneElement("),M='import React, { useState, useRef } from \'react\';\nimport ButtonGroup from \'../../button-group\';\nimport ButtonIcon from \'../../button-icon\';\nimport ButtonText from \'../../button-text\';\nimport Col from \'../../col\';\nimport Grid from \'../../grid\';\nimport Icon from \'../../icon\';\nimport Input from \'../../input\';\nimport InputOption from \'../../input-option\';\nimport Row from \'../../row\';\nimport Typography from \'../../typography\';\n\nconst InputExample = () => {\n  const inputThreeRef = useRef(null);\n  const inputFourRef = useRef(null);\n\n  const [stateOne, setStateOne] = useState({\n    value: \'\'\n  });\n\n  const [stateTwo, setStateTwo] = useState({\n    errorText: \'Error: Please enter "peter"\',\n    helpText: \'Type "peter" into the input field\',\n    invalid: undefined,\n    label: \'Type "peter"\',\n    name: \'simple-validation-example-peter\',\n    value: \'\'\n  });\n\n  const [stateThree, setStateThree] = useState({\n    value: \'\'\n  });\n\n  const [stateFour, setStateFour] = useState({\n    value: \'\'\n  });\n\n  const [stateFive, setStateFive] = useState({\n    type: \'text\',\n    value: \'\'\n  });\n\n  const [stateSix, setStateSix] = useState({\n    errorText: \'Error: Please enter "john"\',\n    helpText: \'Type "john" into the input field\',\n    invalid: true,\n    label: \'Simple Validation (type "john")\',\n    name: \'simple-validation-example\',\n    value: \'\'\n  });\n\n  const [stateSeven, setStateSeven] = useState({\n    pattern: \'^(?=.*)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\',\n    type: \'password\',\n    value: \'\'\n  });\n\n  const [stateEight, setStateEight] = useState({\n    errorText: \'\',\n    invalid: undefined,\n    showCheckmark: true,\n    value: \'Mango\'\n  });\n\n  const handleStateThree = value => {\n    inputThreeRef.current.focus();\n    setStateThree({ value });\n  };\n\n  const handleStateFour = value => {\n    inputFourRef.current.focus();\n    setStateFour({ value });\n  };\n\n  const validateFruit = value => setStateEight({\n    ...stateEight,\n    errorText: value === \'Citron\' ? \'Error: Invalid fruit\' : value === \'\' ? \'Error: Field cannot be empty\' : \'\'\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag="h2">\n            All native React input props apply e.g. defaultValue, value... etc\n          </Typography>\n          <Typography>\n            The Input component can be used in an uncontrolled or\n            controlled way with the presence of &quot;defaultValue&quot; or\n            &quot;value&quot; props as described in the React docs.\n          </Typography>\n          <Typography>\n            Input Text Default (uncontrolled) example\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text Default (controlled) example</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            onChange={e => setStateOne({ value: e.target.value })}\n            showHelpText\n            value={stateOne.value}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text ReadOnly</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            readOnly\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text Disabled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            disabled\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text Pre-filled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            showHelpText\n            defaultValue="John Smith"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text noValidate (HTML5)</Typography>\n          <Typography>\n            Disable native HTML5 validation with noValidate\n            prop and manage your own validations\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            errorText={stateTwo.errorText}\n            helpText={stateTwo.helpText}\n            invalid={stateTwo.invalid}\n            label={stateTwo.label}\n            name={stateTwo.name}\n            noValidate\n            onChange={e => setStateTwo({\n              ...stateTwo,\n              errorText: e.target.value.length > 5 ? \'Too many characters\' : \'Please type "peter"\',\n              helpText: e.target.value === \'peter\' ? \'You\\\'ve successfully typed "peter"\' : \'Type "peter" into the input field\',\n              invalid: e.target.value !== \'peter\',\n              value: e.target.value\n            })}\n            required\n            showErrorText\n            showHelpText\n            value={stateTwo.value}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text with Custom Button Icon (clear)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            onChange={e => handleStateThree(e.target.value)}\n            ref={inputThreeRef}\n            showHelpText\n            value={stateThree.value}\n          >\n            <InputOption>\n              <ButtonIcon\n                ariaLabel="clear"\n                iconType="light-tiny"\n                onClick={() => handleStateThree(\'\')}\n              >\n                <Icon name="close" resolution="tiny" />\n              </ButtonIcon>\n            </InputOption>\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text with Custom Button Icon on the left</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            contentBeforeInput={<InputOption>\n              <ButtonIcon\n                ariaLabel="Account"\n                iconType="light-tiny"\n              >\n                <Icon name="account" resolution="low" />\n              </ButtonIcon>\n            </InputOption>}\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">\n            Input Text with Custom Button Icon (clear)\n            that appears after value is entered\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            onChange={e => handleStateFour(e.target.value)}\n            ref={inputFourRef}\n            showHelpText\n            value={stateFour.value}\n          >\n            {\n              stateFour.value.length\n                ? <InputOption>\n                  <ButtonIcon\n                    ariaLabel="clear"\n                    iconType="light-tiny"\n                    onClick={() => handleStateFour(\'\')}\n                  >\n                    <Icon name="close" resolution="tiny" />\n                  </ButtonIcon>\n                </InputOption>\n                : undefined\n            }\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text with Custom Button Icon (toggle password view)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            helpText="Please enter your password"\n            label="Password"\n            name="password"\n            onChange={e => setStateFive({\n              ...stateFive,\n              value: e.target.value\n            })}\n            showHelpText\n            type={stateFive.type}\n            value={stateFive.value}\n          >\n            <InputOption>\n              <ButtonIcon\n                ariaLabel={stateFive.type === \'text\' ? \'hide password\' : \'show password\'}\n                iconType="light-tiny"\n                onClick={() => setStateFive({\n                  ...stateFive,\n                  type: stateFive.type === \'text\' ? \'password\' : \'text\'\n                })}\n              >\n                {\n                  stateFive.type === \'text\'\n                    ? <Icon name="password-hide" resolution="tiny" />\n                    : <Icon name="password-show" resolution="tiny" />\n                }\n              </ButtonIcon>\n            </InputOption>\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text Default HTML5 Required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            errorText="Error: Please fill out this field"\n            helpText="Please enter your full name"\n            label="Full Name"\n            name="full-name"\n            required\n            showErrorText\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text Default with HTML5 &quot;type=email&quot; Validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            containerProps={{\n              style: {\n                width: \'350px\'\n              }\n            }}\n            errorText="Error: Invalid email address"\n            helpText="Please enter an email address"\n            label="Email Address"\n            name="email-validation"\n            placeholder="email@visa.com"\n            showCheckmark\n            showErrorText\n            showHelpText\n            type="email"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text with internal HTML5 regex pattern validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            containerProps={{\n              style: {\n                width: \'350px\'\n              }\n            }}\n            errorText="Error: Enter 2 - 5 characters"\n            helpText="2 - 5 characters"\n            label="Enter 2 to 5 characters starting with a letter e.g. abc or a2d"\n            name="default-username"\n            pattern="^[a-zA-Z][a-zA-Z0-9-_\\.]{1,4}$"\n            placeholder="2 to 5 characters"\n            required\n            showCheckmark\n            showErrorText\n            showHelpText\n            type="text"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Custom Input Simple Validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            containerProps={{\n              style: {\n                width: \'350px\'\n              }\n            }}\n            errorText={stateSix.errorText}\n            helpText={stateSix.helpText}\n            invalid={stateSix.invalid}\n            label={stateSix.label}\n            name={stateSix.name}\n            noValidate\n            onChange={e => setStateSix({\n              ...stateSix,\n              errorText: e.target.value.length > 4 ? \'Error: Too many characters\' : \'Error: Please type "john"\',\n              helpText: e.target.value === \'john\' ? \'You\\\'ve successfully typed "john"\' : \'Type "john" into the input field\',\n              invalid: e.target.value !== \'john\',\n              value: e.target.value\n            })}\n            showCheckmark\n            showErrorText\n            showHelpText\n            type="text"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Input Text with Custom Button Icon (toggle password view) with HTML5 pattern Validation</Typography>\n          <Typography>- at least 8 characters</Typography>\n          <Typography>- must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number</Typography>\n          <Typography>- optional - can contain special characters</Typography>\n          <Typography>example: Testing123!</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Input\n            containerProps={{\n              style: {\n                width: \'350px\'\n              }\n            }}\n            errorText="Error: at least 8 characters, - at least 1 uppercase, lowercase and number, - can contain special characters"\n            helpText={(() => {\n              const pattern = new RegExp(stateSeven.pattern);\n              const test = pattern.test(stateSeven.value);\n              return test ? "Successfully entered a valid password" : "Please enter your password";\n            })()}\n            label="Password"\n            name="password"\n            onChange={e => setStateSeven({\n              ...stateSeven,\n              value: e.target.value\n            })}\n            pattern={stateSeven.pattern}\n            required\n            showErrorText\n            showHelpText\n            type={stateSeven.type}\n            value={stateSeven.value}\n          >\n            <InputOption>\n              <ButtonIcon\n                ariaLabel={stateSeven.type === \'text\' ? \'hide password\' : \'show password\'}\n                iconType="light-tiny"\n                onClick={() => setStateSeven({\n                  ...stateSeven,\n                  type: stateSeven.type === \'text\' ? \'password\' : \'text\' }\n                )}\n              >\n                {\n                  stateSeven.type === \'text\'\n                    ? <Icon name="password-hide" resolution="tiny" />\n                    : <Icon name="password-show" resolution="tiny" />\n                }\n              </ButtonIcon>\n            </InputOption>\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Clear and reset value</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div style={{ display: \'inline-block\', marginBottom: \'20px\' }}>\n            <Input\n              errorText={stateEight.errorText}\n              helpText="Please enter a fruit"\n              id="default-input-example"\n              invalid={stateEight.invalid}\n              label="Fruit"\n              name="default-fruit"\n              onBlur={e => validateFruit(e.target.value)}\n              onChange={e => setStateEight({ value: e.target.value })}\n              showCheckmark={stateEight.showCheckmark}\n              showErrorText\n              type="text"\n              value={stateEight.value}\n            />\n            <ButtonGroup direction="right" style={{ marginTop: \'30px\' }}>\n              <ButtonText\n                onClick={() => setStateEight({\n                  ...stateEight,\n                  errorText: \'Error: Field cannot be empty\',\n                  invalid: true,\n                  value: \'\'\n                })}\n              >\n                Clear\n              </ButtonText>\n              <ButtonText\n                colorScheme="secondary"\n                onClick={() => setStateEight({\n                  ...stateEight,\n                  errorText: \'\',\n                  invalid: false,\n                  showCheckmark: false,\n                  value: \'Mango\'\n                })}\n              >\n                Reset\n              </ButtonText>\n              <ButtonText\n                onClick={() => setStateEight({\n                  ...stateEight,\n                  errorText: \'Error: Invalid fruit\',\n                  invalid: true,\n                  value: \'Citron\'\n                })}\n              >\n                Invalid Fruit\n              </ButtonText>\n              <ButtonText\n                colorScheme="secondary"\n                onClick={() => setStateEight({\n                  ...stateEight,\n                  invalid: false,\n                  showCheckmark: !stateEight.showCheckmark\n                })}\n              >\n                Toggle Checkmark\n              </ButtonText>\n            </ButtonGroup>\n          </div>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default InputExample;\n'.replace(/'..\/..\//g,"'@visa/vds-react/"),A=function(e){var n=Object.assign({},e),t=Object(l.useState)({}),o=Object(a.a)(t,2),c=o[0],j=o[1];return Object(l.useEffect)((function(){try{j(L.parse(V))}catch(e){console.log("\n        React-docgen could not parse props for Input\n        check for fix here https://github.com/reactjs/react-docgen/issues/342")}}),[]),r.a.createElement(f.a,{siblingOfStickyFooter:!0},r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(C.a,{tag:"h1"},"Input"))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(T.a,null,r.a.createElement(b.a,{tag:r.a.createElement(d.c,{exact:!0,to:"".concat("/vds-react","/components/input"),activeClassName:"vds-state--selected"})},r.a.createElement(v.a,{name:"log",resolution:"low"}),"Input Example"),r.a.createElement(b.a,{tag:r.a.createElement(d.c,{exact:!0,to:"".concat("/vds-react","/components/input/code"),activeClassName:"vds-state--selected"})},r.a.createElement(v.a,{name:"code-fork-code-alt",resolution:"low"}),"JSX of Example"),r.a.createElement(b.a,{tag:r.a.createElement(d.c,{exact:!0,to:"".concat("/vds-react","/components/input/html"),activeClassName:"vds-state--selected"})},r.a.createElement(v.a,{name:"code-fork-code-alt",resolution:"low"}),"HTML of Example")))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement("div",{className:i()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/input"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/input")})},r.a.createElement(P,n)),r.a.createElement("div",{className:i()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/input/code"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/input/code")})},r.a.createElement(u.a,Object.assign({},u.b,{theme:p.a,code:M,language:"jsx"}),(function(e){var n=e.className,t=e.style,a=e.tokens,l=e.getLineProps,o=e.getTokenProps;return r.a.createElement("pre",{className:n,style:t},a.map((function(e,n){return r.a.createElement("div",Object.assign({},l({key:n,line:e}),{key:n}),r.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},n+1),e.map((function(e,n){return r.a.createElement("span",Object.assign({},o({key:n,token:e}),{key:n}))})))})))}))),r.a.createElement("div",{className:i()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/input/html"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/input/html")})},r.a.createElement(u.a,Object.assign({},u.b,{theme:p.a,code:F.format(s.a.renderToStaticMarkup(r.a.createElement(P,n)),{css:"ignore",parser:"html",plugins:H,printWidth:120}),language:"html"}),(function(e){var n=e.className,t=e.style,a=e.tokens,l=e.getLineProps,o=e.getTokenProps;return r.a.createElement("pre",{className:n,style:t},a.map((function(e,n){return r.a.createElement("div",Object.assign({},l({key:n,line:e}),{key:n}),r.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},n+1),e.map((function(e,n){return r.a.createElement("span",Object.assign({},o({key:n,token:e}),{key:n}))})))})))}))))),r.a.createElement(y.a,null,r.a.createElement(m.a,null,r.a.createElement(h.a,{className:i()(["components"]),dividerLines:!0,size:"compact"},r.a.createElement(g.a,{tag:"caption"},"Props"),r.a.createElement(I.a,null,r.a.createElement(O.a,{className:"vds-tr"},r.a.createElement(E.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Prop"),r.a.createElement(E.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Type"),r.a.createElement(E.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Default"),r.a.createElement(E.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Description"))),r.a.createElement(x.a,null,c.props&&Object.entries(c.props).filter((function(e){return"@ignore"!==e[1].description})).map((function(e,n){return r.a.createElement(O.a,{className:"vds-tr",key:n},r.a.createElement(w.a,{className:"vds-td"},e[0]," ",e[1].required?r.a.createElement("strong",null," - required"):""),r.a.createElement(w.a,{className:"vds-td"},r.a.createElement("strong",null,e[1].type.name),e[1].type.value&&e[1].type.value.length?r.a.createElement("small",{style:{color:"#1a1f71"}},r.a.createElement("br",null),Array.isArray(e[1].type.value)?e[1].type.value.map((function(e){return e.value||e.name})).join(", "):"string"===typeof e[1].type.value?e[1].type.value:void 0):""),r.a.createElement(w.a,{className:"vds-td"},e[1].defaultValue?e[1].defaultValue.value:""),r.a.createElement(w.a,{className:"vds-td"},e[1].description))})))))))};A.displayName="InputExample";n.default=A},523:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.children,l=e.className,o=e.tag,s=Object(a.a)(e,["children","className","tag"]);return r.a.createElement(o,Object.assign({className:c()("vds-screen-reader",l),ref:n},s),t)}));i.propTypes={children:o.node,className:o.string,tag:o.elementType},i.defaultProps={tag:"span"},i.displayName="ScreenReader",n.a=i},524:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(3),c=t(2),i=t.n(c),u=Object(r.forwardRef)((function(e,n){var t,r=e.children,s=e.className,c=e.customizableColumns,u=e.dividerLines,p=e.keyValuePairs,d=e.reveal,m=e.revealFirstColumn,h=e.revealLastColumn,v=e.rowSelection,f=e.size,y=e.stickyHeader,g=Object(l.a)(e,["children","className","customizableColumns","dividerLines","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","size","stickyHeader"]);return o.a.createElement("table",Object.assign({},g,{className:i()("vds-data-table",(t={},Object(a.a)(t,"".concat("vds-state","--customizable-columns"),Boolean(c)),Object(a.a)(t,"".concat("vds-state","--divider-lines"),Boolean(u)),Object(a.a)(t,"".concat("vds-state","--key-value-pairs"),Boolean(p)),Object(a.a)(t,"".concat("vds-state","--").concat(f),Boolean(f)),Object(a.a)(t,"".concat("vds-state","--reveal"),Boolean(d)),Object(a.a)(t,"".concat("vds-state","--reveal-first-column"),Boolean(m)),Object(a.a)(t,"".concat("vds-state","--reveal-last-column"),Boolean(h)),Object(a.a)(t,"".concat("vds-state","--").concat(v),Boolean(v)),Object(a.a)(t,"".concat("vds-state","--sticky-header"),Boolean(y)),t),s),ref:n}),r)}));u.propTypes={children:s.node,className:s.string,columns:Object(s.arrayOf)(Object(s.shape)({})),customizableColumns:s.bool,data:Object(s.arrayOf)(Object(s.shape)({})),dividerLines:s.bool,keyValuePairs:s.bool,reveal:s.bool,revealFirstColumn:s.bool,revealLastColumn:s.bool,rowSelection:Object(s.oneOf)(["multi-select","single-select"]),size:Object(s.oneOf)(["compact"]),stickyHeader:s.bool},u.displayName="DataTable",n.a=u},525:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.children,l=e.className,o=Object(a.a)(e,["children","className"]);return r.a.createElement("tbody",Object.assign({className:c()("vds-tbody",l),ref:n},o),t)}));i.propTypes={children:o.node,className:o.string},i.displayName="Tbody",n.a=i},526:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(3),c=t(2),i=t.n(c),u=Object(r.forwardRef)((function(e,n){var t=e.children,r=e.className,s=e.textAlign,c=Object(l.a)(e,["children","className","textAlign"]);return o.a.createElement("td",Object.assign({className:i()("vds-td",Object(a.a)({},"vds-text--".concat(s),Boolean(s)),r),ref:n},c),t)}));u.propTypes={children:s.node,className:s.string,textAlign:Object(s.oneOf)(["center","left","right"])},u.displayName="Td",n.a=u},527:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.children,l=e.className,o=Object(a.a)(e,["children","className"]);return r.a.createElement("th",Object.assign({className:c()("vds-th",l),ref:n},o),t)}));i.propTypes={children:o.node,className:o.string},i.displayName="Th",n.a=i},528:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.children,l=e.className,o=Object(a.a)(e,["children","className"]);return r.a.createElement("thead",Object.assign({className:c()("vds-thead",l),ref:n},o),t)}));i.propTypes={children:o.node,className:o.string},i.displayName="Thead",n.a=i},529:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.children,l=e.className,o=Object(a.a)(e,["children","className"]);return r.a.createElement("tr",Object.assign({className:c()("vds-tr",l),ref:n},o),t)}));i.propTypes={children:o.node,className:o.string},i.displayName="Tr",n.a=i},530:function(e,n,t){"use strict";var a,l,r,o=t(544),s="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-";function c(){r=!1}function i(e){if(e){if(e!==a){if(e.length!==s.length)throw new Error("Custom alphabet for shortid must be "+s.length+" unique characters. You submitted "+e.length+" characters: "+e);var n=e.split("").filter((function(e,n,t){return n!==t.lastIndexOf(e)}));if(n.length)throw new Error("Custom alphabet for shortid must be "+s.length+" unique characters. These characters were not unique: "+n.join(", "));a=e,c()}}else a!==s&&(a=s,c())}function u(){return r||(r=function(){a||i(s);for(var e,n=a.split(""),t=[],l=o.nextValue();n.length>0;)l=o.nextValue(),e=Math.floor(l*n.length),t.push(n.splice(e,1)[0]);return t.join("")}())}e.exports={get:function(){return a||s},characters:function(e){return i(e),a},seed:function(e){o.seed(e),l!==e&&(c(),l=e)},lookup:function(e){return u()[e]},shuffled:u}},531:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(2),s=t.n(o),c=function(e){var n=e.children,t=e.className,l=e.tag,o=Object(a.a)(e,["children","className","tag"]);return r.a.createElement(l,Object.assign({className:s()("vds-btn-label",t)},o),n)};c.displayName="ButtonLabel",c.defaultProps={tag:"span"},n.a=c},532:function(e,n,t){"use strict";e.exports=t(543)},538:function(e,n){},539:function(e,n){},543:function(e,n,t){"use strict";var a=t(530),l=t(545),r=t(549),o=t(550)||0;function s(){return l(o)}e.exports=s,e.exports.generate=s,e.exports.seed=function(n){return a.seed(n),e.exports},e.exports.worker=function(n){return o=n,e.exports},e.exports.characters=function(e){return void 0!==e&&a.characters(e),a.shuffled()},e.exports.isValid=r},544:function(e,n,t){"use strict";var a=1;e.exports={nextValue:function(){return(a=(9301*a+49297)%233280)/233280},seed:function(e){a=e}}},545:function(e,n,t){"use strict";var a,l,r=t(546);t(530);e.exports=function(e){var n="",t=Math.floor(.001*(Date.now()-1567752802062));return t===l?a++:(a=0,l=t),n+=r(7),n+=r(e),a>0&&(n+=r(a)),n+=r(t)}},546:function(e,n,t){"use strict";var a=t(530),l=t(547),r=t(548);e.exports=function(e){for(var n,t=0,o="";!n;)o+=r(l,a.get(),1),n=e<Math.pow(16,t+1),t++;return o}},547:function(e,n,t){"use strict";var a,l="object"===typeof window&&(window.crypto||window.msCrypto);a=l&&l.getRandomValues?function(e){return l.getRandomValues(new Uint8Array(e))}:function(e){for(var n=[],t=0;t<e;t++)n.push(Math.floor(256*Math.random()));return n},e.exports=a},548:function(e,n){e.exports=function(e,n,t){for(var a=(2<<Math.log(n.length-1)/Math.LN2)-1,l=-~(1.6*a*t/n.length),r="";;)for(var o=e(l),s=l;s--;)if((r+=n[o[s]&a]||"").length===+t)return r}},549:function(e,n,t){"use strict";var a=t(530);e.exports=function(e){return!(!e||"string"!==typeof e||e.length<6)&&!new RegExp("[^"+a.get().replace(/[|\\{}()[\]^$+*?.-]/g,"\\$&")+"]").test(e)}},550:function(e,n,t){"use strict";e.exports=0},554:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(3),c=t(2),i=t.n(c),u=t(531),p=Object(r.forwardRef)((function(e,n){var t,r=e.active,s=e.children,c=e.className,p=e.colorScheme,d=e.disabled,m=e.flippable,h=e.isFullWidth,v=e.role,f=e.tabIndex,y=e.tag,g=e.type,b=Object(l.a)(e,["active","children","className","colorScheme","disabled","flippable","isFullWidth","role","tabIndex","tag","type"]);return o.a.createElement(y,Object.assign({className:i()((t={},Object(a.a)(t,"".concat("vds-btn-text"),!1===Boolean(p)),Object(a.a)(t,"".concat("vds-state","--active"),Boolean(r)),Object(a.a)(t,"".concat("vds-btn-text","--").concat(p),Boolean(p)),Object(a.a)(t,"".concat("vds-state","--flippable"),Boolean(m)),Object(a.a)(t,"".concat("vds-btn-text","--fullwidth"),Boolean(h)),Object(a.a)(t,"".concat("vds-state","--disabled"),Boolean(d)),t),c),disabled:d,role:"button"===y?void 0:v,tabIndex:["span","div"].includes(y)?f:void 0,type:"button"===y?g:void 0,ref:n},b),o.a.createElement(u.a,null,s))}));p.propTypes={active:s.bool,children:s.node,className:s.string,colorScheme:Object(s.oneOf)(["primary","secondary","tertiary"]),disabled:s.bool,flippable:s.bool,isFullWidth:s.bool,role:s.string,tabIndex:Object(s.oneOfType)([s.number,s.string]),tag:Object(s.oneOf)(["a","button","div","span"]),type:s.string},p.defaultProps={role:"button",tabIndex:0,tag:"button",type:"button"},p.displayName="ButtonText",n.a=p},555:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(3),c=t(2),i=t.n(c),u=t(531),p=Object(r.forwardRef)((function(e,n){var t,r=e.active,s=e.ariaLabel,c=e.children,p=e.className,d=e.disabled,m=e.iconType,h=e.type,v=Object(l.a)(e,["active","ariaLabel","children","className","disabled","iconType","type"]);return o.a.createElement("button",Object.assign({"aria-label":s,className:i()("vds-btn-icon",(t={},Object(a.a)(t,"".concat("vds-btn-icon","--").concat(m),Boolean(m)),Object(a.a)(t,"".concat("vds-state","--active"),Boolean(r)),t),p),disabled:d,ref:n,type:h},v),o.a.createElement(u.a,null,c))}));p.propTypes={active:s.bool,ariaLabel:s.string,children:s.node,className:s.string,disabled:s.bool,iconType:Object(s.oneOf)(["dark","dark-outline","dark-tiny","light","light-fill","light-outline","light-tiny"]),type:s.string},p.defaultProps={type:"button"},p.displayName="ButtonIcon",n.a=p},556:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(2),s=t.n(o),c=function(e){var n=e.children,t=e.className,l=Object(a.a)(e,["children","className"]);return r.a.createElement("span",Object.assign({className:s()("vds-input-option",t)},l),n)};c.displayName="InputOption",n.a=c},557:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.children,l=e.className,o=Object(a.a)(e,["children","className"]);return r.a.createElement("label",Object.assign({className:c()("vds-input-label",l),ref:n},o),t)}));i.propTypes={children:o.node,className:o.string},i.displayName="InputLabel",n.a=i},558:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(3),c=t(2),i=t.n(c),u=Object(r.forwardRef)((function(e,n){var t,r=e.children,s=e.className,c=e.css,u=e.disabled,p=e.expanded,d=e.filled,m=e.focus,h=e.invalid,v=e.isTextarea,f=e.readOnly,y=Object(l.a)(e,["children","className","css","disabled","expanded","filled","focus","invalid","isTextarea","readOnly"]);return o.a.createElement("div",Object.assign({className:i()((t={},Object(a.a)(t,"".concat("vds-input"),!v),Object(a.a)(t,"".concat("vds-input","-textarea-container"),Boolean(v)),Object(a.a)(t,"".concat("vds-state","--disabled"),Boolean(u)),Object(a.a)(t,"".concat("vds-state","--error"),Boolean(h)),Object(a.a)(t,"".concat("vds-state","--expanded"),Boolean(p)),Object(a.a)(t,"".concat("vds-state","--filled"),Boolean(d)),Object(a.a)(t,"".concat("vds-state","--focus"),Boolean(m)),Object(a.a)(t,"".concat("vds-state","--readonly"),Boolean(f)),Object(a.a)(t,"".concat("vds-state","--success"),"boolean"===typeof h&&!h),t),s),css:c,ref:n},y),r)}));u.propTypes={children:s.node,className:s.string,css:s.func,disabled:s.bool,expanded:s.bool,filled:s.bool,focus:s.bool,invalid:s.bool,isTextarea:s.bool,readOnly:s.bool},u.displayName="InputContainer",n.a=u},559:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(2),s=t.n(o),c=function(e){var n=e.children,t=e.className,l=Object(a.a)(e,["children","className"]);return r.a.createElement("div",Object.assign({className:s()("vds-input-bar",t)},l),n)};c.displayName="InputBar",n.a=c},560:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(2),c=t.n(s),i=function(e){var n,t=e.ariaAtomic,r=e.ariaLive,s=e.children,i=e.className,u=e.invalid,p=e.show,d=Object(l.a)(e,["ariaAtomic","ariaLive","children","className","invalid","show"]);return o.a.createElement("span",Object.assign({"aria-atomic":t,"aria-live":r,className:c()("vds-input-message",(n={},Object(a.a)(n,"".concat("vds-state","--hidden"),!p),Object(a.a)(n,"".concat("vds-state","--error"),Boolean(u)),n),i)},d),s)};i.defaultProps={ariaAtomic:"true",ariaLive:"assertive"},i.displayName="InputMessage",n.a=i},562:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(2),s=t.n(o),c=function(e){var n=e.children,t=e.className,l=Object(a.a)(e,["children","className"]);return r.a.createElement("span",Object.assign({className:s()("vds-input-hint",t)},l),n)};c.displayName="InputHint",n.a=c},563:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(3),s=t(2),c=t.n(s),i=Object(l.forwardRef)((function(e,n){var t=e.className,l=e.type,o=Object(a.a)(e,["className","type"]);return r.a.createElement("input",Object.assign({className:c()("vds-input--input-text",t),ref:n,type:l},o))}));i.propTypes={className:o.string,type:o.string},i.defaultProps={type:"text"},i.displayName="InputText",n.a=i},567:function(e,n,t){"use strict";var a=t(4),l=t(64),r=t(5),o=t(0),s=t.n(o),c=t(2),i=t.n(c),u=t(532),p=t.n(u),d=t(558),m=t(557),h=t(559),v=t(562),f=t(569),y=t(563),g=t(560),b=t(556),T=t(18),x=Object(o.forwardRef)((function(e,n){var t=e.ariaLabel,c=e.checkmarkIcon,u=e.children,T=e.className,x=e.containerProps,w=e.contentAfterInput,E=e.contentBeforeInput,I=e.css,O=e.disabled,C=e.errorIcon,j=e.errorText,N=e.expanded,k=e.helpIcon,R=e.helpText,S=e.id,B=void 0===S?p.a.generate():S,P=e.inputContainerProps,F=e.invalid,H=e.label,L=e.labelId,V=e.noValidate,M=e.onBlur,A=e.onChange,q=e.onFocus,D=e.placeholder,z=e.readOnly,$=e.showCheckmark,Z=e.showErrorText,G=e.showHelpText,J=e.useNativePlaceholder,Y=Object(r.a)(e,["ariaLabel","checkmarkIcon","children","className","containerProps","contentAfterInput","contentBeforeInput","css","disabled","errorIcon","errorText","expanded","helpIcon","helpText","id","inputContainerProps","invalid","label","labelId","noValidate","onBlur","onChange","onFocus","placeholder","readOnly","showCheckmark","showErrorText","showHelpText","useNativePlaceholder"]),W=Object(o.useState)(!1),_=Object(l.a)(W,2),U=_[0],X=_[1],K=Object(o.useState)(Boolean(Y.value)||Boolean(Y.defaultValue)),Q=Object(l.a)(K,2),ee=Q[0],ne=Q[1],te=Object(o.useState)(!1),ae=Object(l.a)(te,2),le=ae[0],re=ae[1],oe=Object(o.useState)(F),se=Object(l.a)(oe,2),ce=se[0],ie=se[1],ue=Object(o.useRef)(B).current,pe=function(e){V||(U&&ie(!e.target.checkValidity()||e.target.required&&!e.target.value.trim().length),U||!e.target.required||e.target.value.trim().length||ie(!0),!U||e.target.required||e.target.value.trim().length||ie(void 0))};Object(o.useEffect)((function(){ne(Boolean(Y.defaultValue)||Boolean(Y.value))}),[Y.defaultValue,Y.value]),Object(o.useEffect)((function(){ie(F)}),[F]);return s.a.createElement(d.a,Object.assign({className:i()(T),css:I,disabled:O,expanded:N,filled:ee,focus:le,readOnly:z,invalid:ce},x),H?s.a.createElement(m.a,{id:L,htmlFor:ue},H):void 0,s.a.createElement(h.a,null,s.a.createElement(f.a,P,E,D&&!J?s.a.createElement(v.a,null,D):void 0,s.a.createElement(y.a,Object.assign({"aria-describedby":"input-message-help-".concat(ue," input-message-error-").concat(ue),"aria-label":H?void 0:t,"aria-invalid":ce,id:ue,disabled:O,onBlur:function(e){re(!1),pe(e),"function"===typeof M&&M(e)},onChange:function(e){ne(""!==e.target.value),"boolean"===typeof ce&&pe(e),X(!0),"function"===typeof A&&A(e)},onFocus:function(e){re(!0),"function"===typeof q&&q(e)},placeholder:J?D:void 0,readOnly:z,ref:n},Y))),$&&"boolean"===typeof ce&&!ce&&Boolean(c)?s.a.createElement(b.a,{className:i()(Object(a.a)({},"".concat("vds-state","--hidden"),"boolean"===typeof ce&&ce))},c):void 0,w,u),s.a.createElement(g.a,{id:"input-message-help-".concat(ue),invalid:ce,show:!0},!ce&&le&&G&&Boolean(R)?s.a.createElement(o.Fragment,null,k," ",R):""),s.a.createElement(g.a,{id:"input-message-error-".concat(ue),invalid:ce,show:!0},!0===ce&&Z&&Boolean(j)?s.a.createElement(o.Fragment,null,C," ",j):""))}));x.defaultProps={checkmarkIcon:s.a.createElement(T.a,{name:"checkmark",resolution:"low"}),errorIcon:s.a.createElement(T.a,{name:"error",resolution:"tiny"})},x.displayName="Input",n.a=x},569:function(e,n,t){"use strict";var a=t(5),l=t(0),r=t.n(l),o=t(2),s=t.n(o),c=function(e){var n=e.children,t=e.className,l=Object(a.a)(e,["children","className"]);return r.a.createElement("div",Object.assign({className:s()("vds-input-input",t)},l),n)};c.displayName="InputInput",n.a=c},578:function(e,n,t){"use strict";var a=t(4),l=t(5),r=t(0),o=t.n(r),s=t(2),c=t.n(s),i=function(e){var n=e.children,t=e.className,r=e.direction,s=Object(l.a)(e,["children","className","direction"]);return o.a.createElement("div",Object.assign({className:c()("vds-btn-group",Object(a.a)({},"".concat("vds-btn-group","--").concat(r),Boolean(r)),t)},s),n)};i.displayName="ButtonGroup",n.a=i}}]);
//# sourceMappingURL=11.712cfd90.chunk.js.map