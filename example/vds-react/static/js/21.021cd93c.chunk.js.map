{"version":3,"sources":["components/input-count/index.js","components/input-message-error/index.js","components/input-message-help/index.js","components/input-textarea/index.js","components/textarea/index.js","components/textarea/utils.js","components/textarea/example/index.js","pages/components/textarea.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-input/index.js"],"names":["InputCount","memo","ariaAtomic","ariaLive","children","className","show","remainingProps","aria-atomic","aria-live","classnames","role","propTypes","string","node","bool","defaultProps","displayName","InputMessageError","oneOf","InputMessageHelp","invalid","Boolean","InputTextarea","forwardRef","ref","Textarea","ariaLabel","autoResize","containerProps","counterPrefix","css","disabled","errorIcon","errorText","helpIcon","helpText","id","shortid","generate","label","maxCharacters","noValidate","onBlur","onChange","onFocus","readOnly","rows","showCounter","showErrorText","showHelpText","useRef","useState","remainingChars","setRemainingChars","dirty","setDirty","filled","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","current","useEffect","textarea","checkValidity","required","value","trim","length","undefined","style","height","el","window","getComputedStyle","borderBottomWidth","borderTopWidth","lineHeight","paddingBottom","paddingTop","rowHeight","parseFloat","parseInt","scrollHeight","Math","max","getTextareaHeight","focus","isTextarea","htmlFor","aria-describedby","aria-label","aria-invalid","e","target","name","resolution","TextareaExample","state","setState","handleChange","useCallback","tag","defaultValue","autoComplete","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","tabIndex","color","type","Array","isArray","v","join","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","RegExp","test","InputContainer","expanded","InputLabel","InputBar","InputInput"],"mappings":"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","file":"static/js/21.021cd93c.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-count';\nconst CSS_STATE = 'vds-state';\n\nconst InputCount = memo(({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  show,\n  ...remainingProps\n}) => (\n  <div\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show\n    }, className)}\n    role=\"alert\"\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputCount.propTypes = {\n  /**\n  * Aria atomic\n  */\n  ariaAtomic: string,\n\n  /**\n  * Aria Live\n  */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputCount.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive'\n};\n\nInputCount.displayName = 'InputCount';\n\nexport default InputCount;\n","import React, { memo } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessageError = memo(({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <div\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, `${CSS_STATE}--error`, {\n      [`${CSS_STATE}--hidden`]: !show\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputMessageError.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n   * Aria Live\n   */\n  ariaLive: oneOf(['assertive', 'polite', 'off']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  // invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessageError.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive',\n  role: 'alert'\n};\n\nInputMessageError.displayName = 'InputMessageError';\n\nexport default InputMessageError;\n","import React, { memo } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessageHelp = memo(({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n));\n\nInputMessageHelp.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessageHelp.defaultProps = {\n  // ariaAtomic: 'true',\n  // role: 'alert'\n};\n\nInputMessageHelp.displayName = 'InputMessageHelp';\n\nexport default InputMessageHelp;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--textarea';\n\nconst InputTextarea = forwardRef(({ className, ...remainingProps }, ref) => (\n  <textarea\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  />\n));\n\nInputTextarea.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputTextarea.displayName = 'InputTextarea';\n\nexport default InputTextarea;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport Icon from '../icon';\nimport InputBar from '../input-bar';\nimport InputContainer from '../input-container';\nimport InputCount from '../input-count';\nimport InputInput from '../input-input';\nimport InputLabel from '../input-label';\nimport InputMessageError from '../input-message-error';\nimport InputMessageHelp from '../input-message-help';\nimport InputTextarea from '../input-textarea';\nimport { getTextareaHeight } from './utils';\n\nconst Textarea = forwardRef(({\n  ariaLabel,\n  autoResize,\n  className,\n  containerProps,\n  counterPrefix,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  maxCharacters,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  readOnly,\n  rows,\n  showCounter,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [remainingChars, setRemainingChars] = useState(maxCharacters);\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    const textarea = ref.current;\n\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!textarea.checkValidity() || (textarea.required && !textarea.value.trim().length)));\n      }\n\n      if (!dirty && (textarea.required && !textarea.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !textarea.required && !textarea.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  }, [dirty, focused, noValidate, ref]);\n\n  useEffect(() => {\n    const textarea = ref.current;\n\n    if (textarea && autoResize) {\n      textarea.style.height = '0';\n      textarea.style.height = `${getTextareaHeight(rows, textarea)}px`;\n    }\n  }, [autoResize, ref, rows]);\n\n  useEffect(() => {\n    const textarea = ref.current;\n    setRemainingChars(textarea.value ? (maxCharacters - textarea.value.length) : maxCharacters);\n    setFilled(Boolean(textarea.value));\n  }, [maxCharacters, ref]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setRemainingChars(value ? (maxCharacters - value.length) : maxCharacters);\n    setDirty(true);\n    setFilled(value !== '');\n\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      isTextarea={!autoResize}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          <InputTextarea\n            aria-describedby={`input-message-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n      </InputBar>\n      <span\n        id={`input-message-${uid}`}\n      >\n        <InputMessageHelp\n          id={`input-message-help-${uid}`}\n          show={showHelpText && Boolean(helpText)}\n          invalid={isInvalid}\n        >\n          {helpIcon} {helpText}\n        </InputMessageHelp>\n        <InputMessageError\n          show={showErrorText && Boolean(errorText)}\n        >\n          {\n            isInvalid\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : ''\n          }\n        </InputMessageError>\n        <InputCount\n          id={`count-${uid}`}\n          show={showCounter && Boolean(maxCharacters)}\n        >\n          {\n            showCounter && maxCharacters\n              ? `${counterPrefix} ${remainingChars}`\n              : ''\n          }\n        </InputCount>\n      </span>\n    </InputContainer>\n  );\n});\n\nTextarea.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   * Auto resize\n   */\n  autoResize: bool,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   *  Counter Prefix\n   */\n  counterPrefix: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * If true, component will go into invalid state.\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * The maximum number of characters that the user can enter.\n   * If this value isn't specified, the user can enter an unlimited number of characters.\n   */\n  maxCharacters: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element value changes.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * This Boolean attribute indicates that the user cannot modify the value of the control.\n   * Unlike the disabled attribute, the readonly attribute does not prevent the user from\n   * clicking or selecting in the control\n   */\n  readOnly: bool,\n\n  /**\n   * The number of visible text lines for the textarea.\n   */\n  rows: oneOfType([number, string]),\n\n  /**\n   * Show Counter\n   */\n  showCounter: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool\n};\n\nTextarea.defaultProps = {\n  counterPrefix: 'Characters remaining',\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nTextarea.displayName = 'Textarea';\n\nexport default Textarea;\n","const getTextareaHeight = (rows = null, el) => {\n  const {\n    borderBottomWidth,\n    borderTopWidth,\n    lineHeight,\n    paddingBottom,\n    paddingTop\n  } = window.getComputedStyle(el);\n\n  const rowHeight =\n    rows === null\n      ? 0\n      : parseFloat(lineHeight) * parseInt(rows, 10) +\n      parseFloat(borderBottomWidth) +\n      parseFloat(borderTopWidth) +\n      parseFloat(paddingBottom) +\n      parseFloat(paddingTop);\n\n  const scrollHeight = el.scrollHeight + parseFloat(borderBottomWidth) + parseFloat(borderTopWidth);\n\n  return Math.max(rowHeight, scrollHeight);\n};\n\nexport { getTextareaHeight };\n","/* eslint-disable spellcheck/spell-checker */\n\nimport React, { useCallback, useState } from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Textarea from '../../textarea';\nimport Typography from '../../typography';\n\nconst TextareaExample = () => {\n  const [state, setState] = useState({\n    invalid: true,\n    value: ''\n  });\n\n  const handleChange = useCallback(e => setState({\n    invalid: e.target.value === '',\n    value: e.target.value\n  }), []);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea</Typography>\n          <Typography tag=\"h2\">Similar to input text with controlled and uncontrolled features</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea prefilled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Some default value\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea prefilled with Auto resize</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea disabled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\" disabled\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea readonly</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            readOnly\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea error</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            errorText=\"Please correct error\"\n            helpText=\"Please Enter some text, example Hello\"\n            invalid={state.invalid}\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            noValidate\n            onChange={handleChange}\n            showErrorText\n            showHelpText\n            value={state.value}\n          />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea with Auto resize</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            rows=\"3\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea with Auto resize and text counter</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <form autoComplete=\"off\">\n            <Textarea\n              autoComplete=\"off\"\n              autoResize\n              label=\"Textarea Example\"\n              name=\"textarea-example\"\n              maxCharacters=\"350\"\n              rows=\"3\"\n              showCounter\n            />\n          </form>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TextareaExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/textarea/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/textarea/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/textarea/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst TextareaExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Textarea\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Textarea</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Textarea Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nTextareaExample.displayName = 'TextareaExample';\n\nexport default TextareaExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n"],"sourceRoot":""}