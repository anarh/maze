{"version":3,"sources":["components/disclosure/index.js","components/disclosure-item/index.js","components/disclosure-content/index.js","components/disclosure-header/index.js","components/disclosure-header-wrapper/index.js","components/disclosure/example/index.js","pages/components/disclosure.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/use-panel-expand/index.js"],"names":["Disclosure","forwardRef","ref","allowMultipleExpanded","children","className","defaultExpandedId","id","shortid","generate","onChange","remainingProps","uid","useRef","current","usePanelExpand","focusedId","expandedId","updateFocusedId","updateExpandedId","classnames","Children","map","child","k","cloneElement","expanded","includes","focus","index","onClick","e","onKeyDown","count","defaultProps","displayName","DisclosureItem","DisclosureContent","aria-hidden","Boolean","propTypes","node","string","bool","oneOfType","number","DisclosureHeader","iconCollapse","iconExpand","onBlur","onFocus","useState","focused","setFocused","useEffect","handleClick","event","handleKeyDown","aria-controls","aria-expanded","name","resolution","DisclosureHeaderWrapper","DisclosureExample","tag","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","undefined","defaultValue","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","RegExp","test","setFocusedId","slice","setExpandedId","charCode","keyCode","preventDefault","ids","disclosureIndex","findIndex","Number","isInteger"],"mappings":"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","file":"static/js/27.0b8cbb26.chunk.js","sourcesContent":["import React, { Children, cloneElement, forwardRef, useRef } from 'react';\nimport { array, bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport usePanelExpand from '../use-panel-expand';\n\nconst CSS_PREFIX = 'vds-disclosure';\n\nconst Disclosure = forwardRef(\n  (\n    {\n      allowMultipleExpanded,\n      children,\n      className,\n      defaultExpandedId,\n      id = shortid.generate(),\n      onChange,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const uniqueId = useRef(id);\n    const uid = uniqueId.current;\n    const { focusedId, expandedId, updateFocusedId, updateExpandedId } = usePanelExpand(\n      defaultExpandedId,\n      onChange,\n      allowMultipleExpanded\n    );\n\n    return (\n      <div className={classnames(CSS_PREFIX, className)} id={uid} ref={ref} {...remainingProps}>\n        {Children.map(children, (child, k) =>\n          cloneElement(child, {\n            expanded: expandedId.includes(k),\n            focus: k === focusedId,\n            id: `${k}--${uid}`,\n            index: k,\n            onClick: (e, index) => updateExpandedId(e, index),\n            onKeyDown: (e, index) => updateFocusedId(e, index, Children.count(children))\n          })\n        )}\n      </div>\n    );\n  }\n);\n\nDisclosure.propTypes = {\n  /**\n   * Allow multiple expanded\n   */\n  allowMultipleExpanded: bool,\n\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Array of panel indexes to initially show as expanded\n   */\n  defaultExpandedId: array,\n\n  /**\n   * disabled\n   */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * On Change fn\n   */\n  onChange: func\n};\n\nDisclosure.defaultProps = {\n  defaultExpandedId: [],\n  allowMultipleExpanded: true\n};\n\nDisclosure.displayName = 'Disclosure';\n\nexport default Disclosure;\n","import React, { Children, cloneElement } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst CSS_PREFIX = 'vds-disclosure-item';\n\nconst DisclosureItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <div className={CSS_PREFIX}>\n    {Children.map(children, child => cloneElement(child, { expanded, focus, id, index, onClick, onKeyDown }))}\n  </div>\n);\n\nDisclosureItem.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nDisclosureItem.displayName = 'DisclosureItem';\n\nexport default DisclosureItem;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-content';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureContent = forwardRef(({ children, className, expanded, focus, id, index, ...remainingProps }, ref) => (\n  <div\n    aria-hidden={expanded ? 'false' : 'true'}\n    ref={ref}\n    className={classnames(\n      CSS_PREFIX,\n      {\n        [`${CSS_STATE}--hidden`]: Boolean(expanded) === false\n      },\n      className\n    )}\n    id={`disclosure-content-${id}`}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDisclosureContent.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number\n};\n\nDisclosureContent.displayName = 'DisclosureContent';\n\nexport default DisclosureContent;\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\n\nconst CSS_PREFIX = 'vds-disclosure-header';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureHeader = forwardRef(\n  (\n    {\n      children,\n      className,\n      expanded,\n      focus,\n      iconCollapse,\n      iconExpand,\n      id,\n      index,\n      onBlur,\n      onClick,\n      onFocus,\n      onKeyDown,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = useState(focus);\n\n    ref = ref || useRef(null);\n\n    useEffect(() => {\n      if (focus && ref.current) {\n        ref.current.focus();\n      }\n      setFocused(focus);\n    }, [focus, ref]);\n\n    const handleFocus = event => {\n      setFocused(true);\n      if (typeof onFocus === 'function') {\n        onFocus(event);\n      }\n    };\n\n    const handleBlur = event => {\n      setFocused(false);\n      if (typeof onBlur === 'function') {\n        onBlur(event);\n      }\n    };\n\n    const handleClick = (event, id) => {\n      if (typeof onClick === 'function') {\n        onClick(event, id);\n      }\n    };\n\n    const handleKeyDown = (event, id) => {\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event, id);\n      }\n    };\n\n    return (\n      <button\n        aria-controls={`disclosure-body-${id}`}\n        aria-expanded={expanded ? 'true' : 'false'}\n        className={classnames(\n          CSS_PREFIX,\n          {\n            [`${CSS_STATE}--active`]: Boolean(expanded),\n            [`${CSS_STATE}--focus`]: Boolean(focused),\n            'focus-visible': Boolean(focused)\n          },\n          className\n        )}\n        id={`disclosure-header-${id}`}\n        onBlur={handleBlur}\n        onClick={e => handleClick(e, index)}\n        onFocus={handleFocus}\n        onKeyDown={e => handleKeyDown(e, index)}\n        ref={ref}\n        {...remainingProps}\n      >\n        <span className={`${CSS_PREFIX}-icon`}>{expanded ? iconCollapse : iconExpand}</span>\n        {children}\n      </button>\n    );\n  }\n);\n\nDisclosureHeader.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Icon collapsed\n   */\n  iconCollapse: node,\n\n  /**\n   * Icon expanded\n   */\n  iconExpand: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onClick: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onKeyDown: func\n};\n\nDisclosureHeader.defaultProps = {\n  iconCollapse: <Icon name=\"disclosure-collapse\" resolution=\"tiny\" />,\n  iconExpand: <Icon name=\"disclosure-expand\" resolution=\"tiny\" />\n};\n\nDisclosureHeader.displayName = 'DisclosureHeader';\n\nexport default DisclosureHeader;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-header-wrapper';\n\nconst DisclosureHeaderWrapper = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nDisclosureHeaderWrapper.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDisclosureHeaderWrapper.displayName = 'DisclosureHeaderWrapper';\n\nexport default DisclosureHeaderWrapper;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Disclosure from '../../disclosure';\nimport DisclosureItem from '../../disclosure-item';\nimport DisclosureContent from '../../disclosure-content';\nimport DisclosureHeader from '../../disclosure-header';\nimport DisclosureHeaderWrapper from '../../disclosure-header-wrapper';\n\nconst DisclosureExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Expansion Inline Disclosure</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Disclosure>\n          <DisclosureItem>\n            <DisclosureHeader>\n              <DisclosureHeaderWrapper>\n                Why can&apos;t I use my Visa card in U.S-sanctioned countries?\n              </DisclosureHeaderWrapper>\n            </DisclosureHeader>\n            <DisclosureContent>\n              <Typography>\n                As a U.S. company, Visa Inc. and its affiliates must comply with U.S. law, including trade sanctions\n                administered and enforced by the Office of Foreign Assets Control (OFAC). OFAC prohibits or restricts\n                transactions with certain countries, organizations.\n              </Typography>\n            </DisclosureContent>\n          </DisclosureItem>\n          <DisclosureItem>\n            <DisclosureHeader>\n              <DisclosureHeaderWrapper>\n                Can a merchant ask me to provide identification to use my Visa card?\n              </DisclosureHeaderWrapper>\n            </DisclosureHeader>\n            <DisclosureContent>\n              <Typography>\n                In general, a merchant is permitted to ask for identification but cannot require it as a condition of\n                Visa card acceptance. However, there are exceptions, for example, if Visa has granted the merchant\n                permission to require identification under certain circumstances for fraud control.\n              </Typography>\n            </DisclosureContent>\n          </DisclosureItem>\n        </Disclosure>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default DisclosureExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/disclosure/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/disclosure/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/disclosure/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DisclosureExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Disclosure\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Disclosure</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Disclosure Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDisclosureExample.displayName = 'DisclosureExample';\n\nexport default DisclosureExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import { useState } from 'react';\n\nexport default (defaultExpandedId, onChange, allowMultipleExpanded) => {\n  const [focusedId, setFocusedId] = useState();\n\n  const [expandedId, setExpandedId] = useState(\n    !allowMultipleExpanded ? defaultExpandedId.slice(0, 1) : defaultExpandedId\n  );\n\n  const updateFocusedId = (e, index, count) => {\n    const code = e.charCode || e.keyCode;\n\n    if (code === 35) {\n      e.preventDefault();\n      setFocusedId(count - 1);\n    }\n\n    if (code === 36) {\n      e.preventDefault();\n      setFocusedId(0);\n    }\n\n    if (code === 38) {\n      e.preventDefault();\n      setFocusedId(index - 1 < 0 ? count - 1 : index - 1);\n    }\n\n    if (code === 40) {\n      e.preventDefault();\n      setFocusedId((index + 1) % count);\n    }\n  };\n\n  const updateExpandedId = (e, index) => {\n    let ids = [...expandedId];\n    const disclosureIndex = ids.findIndex(i => i === index);\n\n    if (disclosureIndex === -1 && Number.isInteger(index)) {\n      ids = allowMultipleExpanded ? [...ids, index] : [index];\n    }\n\n    if (disclosureIndex > -1) {\n      ids = [...ids.slice(0, disclosureIndex), ...ids.slice(disclosureIndex + 1)];\n    }\n\n    setExpandedId(ids);\n    if (typeof onChange === 'function') {\n      onChange(index);\n    }\n  };\n\n  return { focusedId, expandedId, updateFocusedId, updateExpandedId };\n};\n"],"sourceRoot":""}