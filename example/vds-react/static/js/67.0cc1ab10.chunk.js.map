{"version":3,"sources":["components/button/index.js","components/nav-user/index.js","components/nav/example/index.js","pages/components/nav.js","components/button-icon/index.js","components/nav-site/index.js"],"names":["Button","forwardRef","ref","active","children","className","disabled","flippable","remainingProps","classnames","Boolean","propTypes","bool","node","string","displayName","NavUser","NavExample","useState","open","setOpen","tag","position","href","ariaLabel","iconType","name","resolution","alt","src","Logo","menu","placement","orientation","size","undefined","style","onClick","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","defaultValue","ButtonIcon","aria-label","isRequired","oneOf","NavSite","show"],"mappings":"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","file":"static/js/67.0cc1ab10.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn';\nconst CSS_STATE = 'vds-state';\n\nconst Button = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  flippable,\n  ...remainingProps\n}, ref) => (\n  <button\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </button>\n));\n\nButton.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-user';\n\nconst NavUser = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavUser.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavUser.displayName = 'NavUser';\n\nexport default NavUser;\n","import React, { useState } from 'react';\nimport Avatar from '../../avatar';\nimport AvatarText from '../../avatar-text';\nimport Button from '../../button';\nimport ButtonAction from '../../button-action';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Listbox from '../../listbox';\nimport ListboxItem from '../../listbox-item';\nimport ListboxItemContainer from '../../listbox-item-container';\nimport Nav from '../../nav';\nimport NavBrand from '../../nav-brand';\nimport NavBrandInfo from '../../nav-brand-info';\nimport NavBrandLogo from '../../nav-brand-logo';\nimport NavBrandLogoImage from '../../nav-brand-logo-image';\nimport NavLinks from '../../nav-links';\nimport Navmenu from '../../navmenu';\nimport NavPanel from '../../nav-panel';\nimport NavSite from '../../nav-site';\nimport NavSkip from '../../nav-skip';\nimport NavUser from '../../nav-user';\nimport NavVersionMenu from '../../nav-version-menu';\nimport NavVerticalFooter from '../../nav-vertical-footer';\nimport NavVerticalHeader from '../../nav-vertical-header';\nimport NavVerticalToggleButton from '../../nav-vertical-toggle-button';\nimport Row from '../../row';\nimport Tab from '../../tab';\nimport TabItemLabel from '../../tab-item-label';\nimport TabList from '../../tab-list';\nimport Typography from '../../typography';\nimport Logo from '@visa/vds-web/dist/_logos/visa/visa_vbm_wht.svg';\n\nconst NavExample = () => {\n  const [open, setOpen] = useState(true);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav position=\"relative\">\n            <Grid>\n              <Row>\n                <Col>\n                  <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                  <NavBrand>\n                    <NavBrandInfo>\n                      <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                        <Icon name=\"menu\" resolution=\"low\" />\n                      </ButtonIcon>\n                      <NavBrandLogo href=\"http://www.visa.com\">\n                        <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                      </NavBrandLogo>\n                    </NavBrandInfo>\n                  </NavBrand>\n                  <NavSite>\n                    <NavLinks ariaLabel=\"Site Navigation\">\n                      <TabList>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Contact</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Service</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Statistics</Tab>\n                      </TabList>\n                    </NavLinks>\n                  </NavSite>\n                  <NavUser>\n                    <Navmenu\n                      menu={\n                        <Listbox>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Profile</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Rewards</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Account</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">Send Email</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">Sign Out</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                        </Listbox>\n                      }\n                      placement=\"bottom-end\"\n                    >\n                      <Button flippable>\n                        <Avatar>\n                          <AvatarText>Adam Smith</AvatarText>\n                        </Avatar>\n                        <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n                      </Button>\n                    </Navmenu>\n                  </NavUser>\n                </Col>\n              </Row>\n            </Grid>\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Vertical Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav orientation=\"vertical\" size={open ? undefined : 'mini'}>\n            <NavPanel style={{ position: 'inherit' }}>\n              <NavVerticalHeader>\n                <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                <NavBrand>\n                  <NavBrandInfo>\n                    <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                      <Icon name=\"menu\" resolution=\"low\" />\n                    </ButtonIcon>\n                    <NavBrandLogo href=\"/\">\n                      <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                    </NavBrandLogo>\n                  </NavBrandInfo>\n                </NavBrand>\n              </NavVerticalHeader>\n              <NavLinks ariaLabel=\"Site Navigation\">\n                <TabList orientation=\"vertical\">\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"savings-account\" resolution=\"low\" /> <TabItemLabel>Info</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"note\" resolution=\"low\" /> <TabItemLabel>Docs</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"view-grid\" resolution=\"low\" /> <TabItemLabel>Components</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"folder-multiple\" resolution=\"low\" /> <TabItemLabel>Resources</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"analytics\" resolution=\"low\" /> <TabItemLabel>Charts Library</TabItemLabel>\n                  </Tab>\n                </TabList>\n              </NavLinks>\n              <NavVerticalFooter>\n                <NavVersionMenu>\n                  <Avatar><AvatarText>0.0.0</AvatarText></Avatar>\n                </NavVersionMenu>\n                <NavVerticalToggleButton onClick={() => setOpen(!open)}>\n                  <ButtonAction>\n                    {\n                      open\n                        ? <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n                        : <Icon name=\"arrow-next\" resolution=\"tiny\" />\n                    }\n                  </ButtonAction>\n                </NavVerticalToggleButton>\n              </NavVerticalFooter>\n            </NavPanel>\n          </Nav>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default NavExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/nav/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/nav/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/nav/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst NavExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Nav\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Nav Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nNavExample.displayName = 'NavExample';\n\nexport default NavExample;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-site';\nconst CSS_STATE = 'vds-state';\n\nconst NavSite = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavSite.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show in mobile\n   */\n  show: bool\n};\n\nNavSite.displayName = 'NavSite';\n\nexport default NavSite;\n"],"sourceRoot":""}