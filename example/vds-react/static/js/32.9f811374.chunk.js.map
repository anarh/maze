{"version":3,"sources":["components/switch/index.js","components/switch/example/index.js","pages/components/switch.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js"],"names":["Switch","forwardRef","ref","className","checked","defaultChecked","defaultFocused","disabled","id","shortid","generate","label","name","onBlur","onChange","onFocus","switchOffText","switchOnText","remainingProps","useState","isChecked","setChecked","isFocused","setFocused","uid","useRef","current","useEffect","aria-checked","classnames","role","htmlFor","type","event","target","aria-hidden","defaultProps","displayName","SwitchExample","tag","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","value","length","Array","isArray","v","join","undefined","defaultValue","DataTable","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","RegExp","test"],"mappings":"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","file":"static/js/32.9f811374.chunk.js","sourcesContent":["import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-switch';\nconst CSS_STATE = 'vds-state';\n\nconst Switch = forwardRef(({\n  className,\n  checked,\n  defaultChecked,\n  defaultFocused,\n  disabled,\n  id = shortid.generate(),\n  label,\n  name,\n  onBlur,\n  onChange,\n  onFocus,\n  switchOffText,\n  switchOnText,\n  ...remainingProps\n}, ref) => {\n  const [isChecked, setChecked] = useState(checked || defaultChecked);\n  const [isFocused, setFocused] = useState(defaultFocused);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setChecked(checked);\n  }, [checked]);\n\n  const handleChange = event => {\n    setChecked(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <div\n      aria-checked={isChecked ? 'true' : 'false'}\n      className={classnames(CSS_PREFIX, {\n        [`${CSS_STATE}--active`]: isChecked,\n        [`${CSS_STATE}--disabled`]: disabled,\n        [`${CSS_STATE}--focus`]: isFocused\n      }, className)}\n      id={uid}\n      role=\"switch\"\n      {...remainingProps}\n    >\n      <label\n        className={classnames(`${CSS_PREFIX}-label`)}\n        htmlFor={`switch-control-${uid}`}\n        id={`switch-control-label-${uid}`}\n      >\n        {label}\n        <input\n          type=\"checkbox\"\n          id={`switch-control-${uid}`}\n          className={classnames(`${CSS_PREFIX}-input`)}\n          defaultChecked={isChecked}\n          name={name}\n          onBlur={handleBlur}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          ref={ref}\n        />\n        <div className={classnames(`${CSS_PREFIX}-value`)} aria-hidden=\"true\">\n          {isChecked ? switchOnText : switchOffText}\n        </div>\n        <span className={classnames(`${CSS_PREFIX}-toggle`)} />\n      </label>\n    </div>\n  );\n});\n\nSwitch.propTypes = {\n  /**\n   *   Checked\n   */\n  checked: bool,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Default checked\n   */\n  defaultChecked: bool,\n\n  /**\n   * Default focused\n   */\n  defaultFocused: bool,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n  * Label\n  */\n  label: node,\n\n  /**\n   * Name\n   */\n  name: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the value is changed.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /*\n   * Switch off text\n   */\n  switchOffText: node,\n\n  /*\n   * Switch on text\n   */\n  switchOnText: node\n};\n\nSwitch.defaultProps = {\n  switchOffText: 'Off',\n  switchOnText: 'On'\n};\n\nSwitch.displayName = 'Switch';\n\nexport default Switch;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Switch from '../../switch';\n\nconst SwitchExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Switch</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Switch id=\"switch-id-1\" label=\"Location\" name=\"location-input\" />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default SwitchExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/switch/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/switch/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/switch/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SwitchExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Switch\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Switch</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Switch Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/switch/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/switch/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/switch/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSwitchExample.displayName = 'SwitchExample';\n\nexport default SwitchExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var i = step;\n    var bytes = random(i);\n\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || '';\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;"],"sourceRoot":""}