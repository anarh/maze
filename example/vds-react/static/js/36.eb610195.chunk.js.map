{"version":3,"sources":["components/input-count/index.js","components/input-textarea/index.js","components/textarea/index.js","components/textarea/utils.js","components/textarea/example/index.js","pages/components/textarea.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-input/index.js"],"names":["InputCount","memo","ariaAtomic","ariaLive","children","className","show","remainingProps","aria-atomic","aria-live","classnames","propTypes","string","node","bool","defaultProps","displayName","InputTextarea","forwardRef","ref","Textarea","ariaLabel","autoResize","containerProps","counterPrefix","css","disabled","errorIcon","errorText","helpIcon","helpText","id","shortid","generate","invalid","label","maxCharacters","noValidate","onBlur","onChange","onFocus","readOnly","rows","showCounter","showErrorText","showHelpText","useRef","useState","remainingChars","setRemainingChars","dirty","setDirty","filled","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","current","useEffect","textarea","checkValidity","required","value","trim","length","undefined","style","height","el","window","getComputedStyle","borderBottomWidth","borderTopWidth","lineHeight","paddingBottom","paddingTop","rowHeight","parseFloat","parseInt","scrollHeight","Math","max","getTextareaHeight","Boolean","handleCountChange","useCallback","debounce","focus","isTextarea","htmlFor","aria-describedby","aria-label","aria-invalid","e","target","name","resolution","TextareaExample","state","setState","handleChange","tag","defaultValue","autoComplete","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","color","type","Array","isArray","v","join","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","InputContainer","expanded","InputLabel","InputBar","InputMessage","InputInput"],"mappings":"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","file":"static/js/36.eb610195.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-count';\nconst CSS_STATE = 'vds-state';\n\nconst InputCount = memo(({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  show,\n  ...remainingProps\n}) => (\n  <div\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputCount.propTypes = {\n  /**\n  * Aria atomic\n  */\n  ariaAtomic: string,\n\n  /**\n  * Aria Live\n  */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputCount.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'polite'\n};\n\nInputCount.displayName = 'InputCount';\n\nexport default InputCount;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--textarea';\n\nconst InputTextarea = forwardRef(({ className, ...remainingProps }, ref) => (\n  <textarea\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  />\n));\n\nInputTextarea.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputTextarea.displayName = 'InputTextarea';\n\nexport default InputTextarea;\n","import React, { forwardRef, Fragment, useCallback, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { debounce } from 'lodash';\nimport shortid from 'shortid';\nimport Icon from '../icon';\nimport InputBar from '../input-bar';\nimport InputContainer from '../input-container';\nimport InputCount from '../input-count';\nimport InputInput from '../input-input';\nimport InputLabel from '../input-label';\nimport InputMessage from '../input-message';\nimport InputTextarea from '../input-textarea';\nimport { getTextareaHeight } from './utils';\n\nconst Textarea = forwardRef(({\n  ariaLabel,\n  autoResize,\n  className,\n  containerProps,\n  counterPrefix,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  maxCharacters,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  readOnly,\n  rows,\n  showCounter,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [remainingChars, setRemainingChars] = useState(maxCharacters);\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    const textarea = ref.current;\n\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!textarea.checkValidity() || (textarea.required && !textarea.value.trim().length)));\n      }\n\n      if (!dirty && (textarea.required && !textarea.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !textarea.required && !textarea.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  }, [dirty, focused, noValidate, ref]);\n\n  useEffect(() => {\n    const textarea = ref.current;\n\n    if (textarea && autoResize) {\n      textarea.style.height = '0';\n      textarea.style.height = `${getTextareaHeight(rows, textarea)}px`;\n    }\n  }, [autoResize, ref, rows]);\n\n  useEffect(() => {\n    const textarea = ref.current;\n    setRemainingChars(textarea.value ? (maxCharacters - textarea.value.length) : maxCharacters);\n    setFilled(Boolean(textarea.value));\n  }, [maxCharacters, ref]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleCountChange = useCallback(debounce(value => setRemainingChars(value ? (maxCharacters - value.length) : maxCharacters), 400), []);\n\n  const handleBlur = e => {\n    setFocused(false);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    handleCountChange(value);\n    setDirty(true);\n    setFilled(value !== '');\n\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      isTextarea={!autoResize}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          <InputTextarea\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n      </InputBar>\n      <span\n        id={`input-message-${uid}`}\n      >\n        <InputMessage\n          id={`input-message-help-${uid}`}\n          invalid={isInvalid}\n          show\n        >\n          {\n            showHelpText && Boolean(helpText) && focused\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : ''\n          }\n        </InputMessage>\n        <InputMessage\n          id={`input-message-error-${uid}`}\n          invalid={isInvalid}\n          show\n        >\n          {\n            isInvalid && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : ''\n          }\n        </InputMessage>\n        <InputCount\n          id={`count-${uid}`}\n          show={showCounter && Boolean(maxCharacters)}\n        >\n          {\n            showCounter && maxCharacters\n              ? `${counterPrefix} ${remainingChars}`\n              : ''\n          }\n        </InputCount>\n      </span>\n    </InputContainer>\n  );\n});\n\nTextarea.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   * Auto resize\n   */\n  autoResize: bool,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   *  Counter Prefix\n   */\n  counterPrefix: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * If true, component will go into invalid state.\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * The maximum number of characters that the user can enter.\n   * If this value isn't specified, the user can enter an unlimited number of characters.\n   */\n  maxCharacters: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element value changes.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * This Boolean attribute indicates that the user cannot modify the value of the control.\n   * Unlike the disabled attribute, the readonly attribute does not prevent the user from\n   * clicking or selecting in the control\n   */\n  readOnly: bool,\n\n  /**\n   * The number of visible text lines for the textarea.\n   */\n  rows: oneOfType([number, string]),\n\n  /**\n   * Show Counter\n   */\n  showCounter: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool\n};\n\nTextarea.defaultProps = {\n  counterPrefix: 'Characters remaining',\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nTextarea.displayName = 'Textarea';\n\nexport default Textarea;\n","const getTextareaHeight = (rows = null, el) => {\n  const {\n    borderBottomWidth,\n    borderTopWidth,\n    lineHeight,\n    paddingBottom,\n    paddingTop\n  } = window.getComputedStyle(el);\n\n  const rowHeight =\n    rows === null\n      ? 0\n      : parseFloat(lineHeight) * parseInt(rows, 10) +\n      parseFloat(borderBottomWidth) +\n      parseFloat(borderTopWidth) +\n      parseFloat(paddingBottom) +\n      parseFloat(paddingTop);\n\n  const scrollHeight = el.scrollHeight + parseFloat(borderBottomWidth) + parseFloat(borderTopWidth);\n\n  return Math.max(rowHeight, scrollHeight);\n};\n\nexport { getTextareaHeight };\n","/* eslint-disable spellcheck/spell-checker */\n\nimport React, { useCallback, useState } from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Textarea from '../../textarea';\nimport Typography from '../../typography';\n\nconst TextareaExample = () => {\n  const [state, setState] = useState({\n    invalid: true,\n    value: ''\n  });\n\n  const handleChange = useCallback(e => setState({\n    invalid: e.target.value === '',\n    value: e.target.value\n  }), []);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea</Typography>\n          <Typography tag=\"h2\">Similar to input text with controlled and uncontrolled features</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea prefilled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Some default value\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea prefilled with Auto resize</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea disabled</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            label=\"Textarea Example\"\n            name=\"textarea-example\" disabled\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea readonly</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            readOnly\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            defaultValue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea error</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            errorText=\"Please correct error\"\n            helpText=\"Please Enter some text, example Hello\"\n            invalid={state.invalid}\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            noValidate\n            onChange={handleChange}\n            showErrorText\n            showHelpText\n            value={state.value}\n          />\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea with Auto resize</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Textarea\n            autoResize\n            label=\"Textarea Example\"\n            name=\"textarea-example\"\n            rows=\"3\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Textarea with Auto resize and text counter</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <form autoComplete=\"off\">\n            <Textarea\n              autoComplete=\"off\"\n              autoResize\n              label=\"Textarea Example\"\n              name=\"textarea-example\"\n              maxCharacters=\"350\"\n              rows=\"3\"\n              showCounter\n            />\n          </form>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TextareaExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/textarea/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/textarea/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/textarea/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst TextareaExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Textarea\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Textarea</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Textarea Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/textarea/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/textarea/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/textarea/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nTextareaExample.displayName = 'TextareaExample';\n\nexport default TextareaExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    // role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n   * Aria Live\n   */\n  ariaLive: oneOf(['assertive', 'polite', 'off']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n"],"sourceRoot":""}