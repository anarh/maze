{"version":3,"sources":["components/alert/example/index.js","pages/components/alert.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","components/button-group/index.js","components/button-container/index.js"],"names":["AlertExample","globalState","buttonRef","useRef","tag","colorScheme","onClick","showAlertTimed","alertType","icon","name","resolution","label","onBeforeClose","hideGlobalAlertTimed","show","showAlertDismissable","button","direction","hideGlobalAlertDismissable","labelTitle","triggerRef","ref","id","position","sm","ariaLabel","iconType","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","undefined","defaultValue","displayName","ScreenReader","forwardRef","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","disabled","flippable","isFullWidth","includes","oneOfType","number","ButtonIcon","aria-label","isRequired","ButtonGroup","ButtonContainer"],"mappings":"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","file":"static/js/35.76470fa2.chunk.js","sourcesContent":["import React, { useRef } from 'react';\nimport Alert from '../../alert';\nimport AlertIcon from '../../alert-icon';\nimport AlertLabel from '../../alert-label';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport AlertLabelTitle from '../../alert-label-title';\nimport ButtonContainer from '../../button-container';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport ButtonIcon from '../../button-icon';\n\nconst AlertExample = globalState => {\n  const buttonRef = useRef();\n\n  const handleShowAlertTimed = () => {\n    globalState.showAlertTimed({\n      alertType: 'error',\n      icon: <Icon name=\"error\" resolution=\"low\" />,\n      label: 'This is a global alert notification',\n      onBeforeClose: globalState.hideGlobalAlertTimed,\n      show: true\n    });\n  };\n\n  const handleShowAlertDismissable = () => {\n    globalState.showAlertDismissable({\n      alertType: 'success',\n      button: <ButtonContainer>\n        <ButtonGroup direction=\"right\">\n          <ButtonText\n            colorScheme=\"tertiary\"\n            onClick={globalState.hideGlobalAlertDismissable}\n          >\n            Close\n          </ButtonText>\n        </ButtonGroup>\n      </ButtonContainer>,\n      icon: <Icon name=\"success\" resolution=\"low\" />,\n      label: 'This is a global alert notification',\n      labelTitle: 'Success: Information Updated.',\n      show: true,\n      triggerRef: buttonRef\n    });\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"p\">\n            Use optional props in the table below to manage timeout and onBeforeClose states\n          </Typography>\n          <ButtonText\n            colorScheme=\"secondary\"\n            onClick={handleShowAlertTimed}\n          >\n            Open Global Timed Alert -- 3 second timeout\n          </ButtonText>\n          <ButtonText\n            colorScheme=\"secondary\"\n            onClick={handleShowAlertDismissable}\n            ref={buttonRef}\n          >\n            Open Global Call to Action Alert\n          </ButtonText>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Timed (Default)</Typography>\n          <Alert id=\"alert-default-1\" position=\"relative\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"info\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>This is a alert notification.</AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Alert (success)</Typography>\n          <Alert id=\"alert-default-2\" position=\"relative\" alertType=\"success\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"success\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>This is a alert notification.</AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Alert (warning)</Typography>\n          <Alert id=\"alert-default-3\" position=\"relative\" alertType=\"warning\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"info\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>This is a alert notification.</AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Alert (error)</Typography>\n          <Alert id=\"alert-default-4\" position=\"relative\" alertType=\"error\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"error\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>This is a alert notification.</AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Alert Call to Action (success)</Typography>\n          <Alert id=\"alert-success\" position=\"relative\" alertType=\"success\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon><Icon name=\"success\" resolution=\"low\" /></AlertIcon>\n                  <AlertLabel>\n                    <AlertLabelTitle>Success: Information Updated.</AlertLabelTitle>\n                    This is a alert notification.\n                  </AlertLabel>\n                </Col>\n                <Col sm={1}>\n                  <ButtonContainer>\n                    <ButtonGroup direction=\"right\">\n                      <ButtonText colorScheme=\"tertiary\">Dismiss</ButtonText>\n                    </ButtonGroup>\n                  </ButtonContainer>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Alert Call to Action (close button)</Typography>\n          <Alert id=\"alert-error\" position=\"relative\" alertType=\"error\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon><Icon name=\"error\" resolution=\"low\" /></AlertIcon>\n                  <AlertLabel>\n                    <AlertLabelTitle>Error: Could not process your request.</AlertLabelTitle>\n                    There has been an error processing your request. Please try again later.\n                  </AlertLabel>\n                </Col>\n                <Col sm={1}>\n                  <ButtonGroup direction=\"right\">\n                    <ButtonIcon ariaLabel=\"search\" iconType=\"light-tiny\">\n                      <Icon name=\"close\" resolution=\"tiny\" />\n                    </ButtonIcon>\n                  </ButtonGroup>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default AlertExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/alert/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/alert/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/alert/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst AlertExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Alert\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Alert</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/alert`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Alert Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/alert/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/alert/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/alert`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/alert`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/alert/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/alert/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/alert/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/alert/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nAlertExample.displayName = 'AlertExample';\n\nexport default AlertExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-container';\n\nconst ButtonContainer = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonContainer.displayName = 'ButtonContainer';\n\nexport default ButtonContainer;\n"],"sourceRoot":""}