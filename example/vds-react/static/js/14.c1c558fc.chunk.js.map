{"version":3,"sources":["components/input/example/index.js","pages/components/input.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/input-option/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input/index.js","components/input-hint/index.js","components/input-text/index.js","components/input-input/index.js","components/divider/index.js"],"names":["InputExample","inputThreeRef","useRef","inputFourRef","useState","value","stateOne","setStateOne","stateThree","setStateThree","stateFour","setStateFour","type","stateFive","setStateFive","handleStateThree","handleStateFour","html5PatternHelpText","setHtml5PatternHelpText","tag","position","alertType","name","resolution","helpText","label","showHelpText","onChange","e","target","readOnly","disabled","defaultValue","ref","ariaLabel","iconType","onClick","current","focus","setTimeout","contentBeforeInput","length","undefined","errorText","required","showErrorText","containerProps","style","width","checkValidity","pattern","placeholder","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","color","Array","isArray","v","join","displayName","ScreenReader","forwardRef","children","Tag","propTypes","node","string","elementType","KEY_CODES","TabList","orientation","selectedTab","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","querySelectorAll","Boolean","Children","child","k","cloneElement","handleClick","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","handleKeyDown","selected","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","active","InputOption","InputContainer","expanded","filled","invalid","isTextarea","func","InputLabel","InputBar","InputMessage","show","Input","checkmarkIcon","contentAfterInput","errorIcon","helpIcon","id","shortid","generate","inputContainerProps","labelId","noValidate","onBlur","onFocus","showCheckmark","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","setValidity","trim","htmlFor","aria-describedby","aria-invalid","InputHint","InputText","InputInput","Divider","title","aria-hidden"],"mappings":"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","file":"static/js/14.c1c558fc.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport Alert from '../../alert';\nimport AlertIcon from '../../alert-icon';\nimport AlertLabel from '../../alert-label';\nimport AlertLabelTitle from '../../alert-label-title';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Divider from '../../divider';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Input from '../../input';\nimport InputOption from '../../input-option';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport './style.scss';\n\nconst InputExample = () => {\n  const inputThreeRef = useRef(null);\n  const inputFourRef = useRef(null);\n\n  const [stateOne, setStateOne] = useState({\n    value: ''\n  });\n\n  const [stateThree, setStateThree] = useState({\n    value: ''\n  });\n\n  const [stateFour, setStateFour] = useState({\n    value: ''\n  });\n\n  const [stateFive, setStateFive] = useState({\n    type: 'text',\n    value: ''\n  });\n\n  const handleStateThree = value => {\n    setStateThree({ value });\n  };\n\n  const handleStateFour = value => {\n    setStateFour({ value });\n  };\n\n  const html5PatternDefaultHelpText = 'Enter 2 to 5 characters';\n  const html5PatternSuccessHelpText = \"You've successfully entered 2 to 5 characters\";\n  const [html5PatternHelpText, setHtml5PatternHelpText] = useState(html5PatternDefaultHelpText);\n\n  const handleHtml5PatternChange = e => {\n    setHtml5PatternHelpText(e.target.checkValidity() ? html5PatternSuccessHelpText : html5PatternDefaultHelpText);\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">\n            Input\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Alert position=\"relative\" alertType=\"information\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"info\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>\n                    <AlertLabelTitle>\n                      All native React input props apply e.g. defaultValue, value... etc\n                    </AlertLabelTitle>\n                    The Input component can be used in an uncontrolled or\n                    controlled way with the presence of &quot;defaultValue&quot; or\n                    &quot;value&quot; props as described in the React docs.\n                  </AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">\n            Input Text Default (uncontrolled) example\n          </Typography>\n          <Input\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text Default (controlled) example</Typography>\n          <Input\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            onChange={e => setStateOne({ value: e.target.value })}\n            showHelpText\n            value={stateOne.value}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text ReadOnly</Typography>\n          <Input\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            readOnly\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text Disabled</Typography>\n          <Input\n            disabled\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text Pre-filled</Typography>\n          <Input\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            showHelpText\n            defaultValue=\"John Smith\"\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Divider type=\"standard\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Input with Icons</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text with Custom Button Icon (clear)</Typography>\n          <Input\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            onChange={e => handleStateThree(e.target.value)}\n            ref={inputThreeRef}\n            showHelpText\n            value={stateThree.value}\n          >\n            <InputOption>\n              <ButtonIcon\n                ariaLabel=\"clear\"\n                iconType=\"light-tiny\"\n                onClick={() => {\n                  inputThreeRef.current.focus();\n                  setTimeout(() => {\n                    handleStateThree('');\n                  });\n                }}\n              >\n                <Icon name=\"close\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </InputOption>\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text with Custom Button Icon on the left</Typography>\n          <Input\n            contentBeforeInput={<InputOption>\n              <ButtonIcon\n                ariaLabel=\"Account\"\n                iconType=\"light-tiny\"\n              >\n                <Icon name=\"account\" resolution=\"low\" />\n              </ButtonIcon>\n            </InputOption>}\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">\n            Input Text with Custom Button Icon (clear)\n            that appears after value is entered\n          </Typography>\n          <Input\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            onChange={e => handleStateFour(e.target.value)}\n            ref={inputFourRef}\n            showHelpText\n            value={stateFour.value}\n          >\n            {\n              stateFour.value.length\n                ? <InputOption>\n                  <ButtonIcon\n                    ariaLabel=\"clear\"\n                    iconType=\"light-tiny\"\n                    onClick={() => {\n                      inputFourRef.current.focus();\n                      setTimeout(() => {\n                        handleStateFour('');\n                      });\n                    }}\n                  >\n                    <Icon name=\"close\" resolution=\"tiny\" />\n                  </ButtonIcon>\n                </InputOption>\n                : undefined\n            }\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text with Custom Button Icon (toggle password view)</Typography>\n          <Input\n            helpText=\"Please enter your password\"\n            label=\"Password\"\n            name=\"password\"\n            onChange={e => setStateFive({\n              ...stateFive,\n              value: e.target.value\n            })}\n            showHelpText\n            type={stateFive.type}\n            value={stateFive.value}\n          >\n            <InputOption>\n              <ButtonIcon\n                ariaLabel={stateFive.type === 'text' ? 'hide password' : 'show password'}\n                iconType=\"light-tiny\"\n                onClick={() => setStateFive({\n                  ...stateFive,\n                  type: stateFive.type === 'text' ? 'password' : 'text'\n                })}\n              >\n                {\n                  stateFive.type === 'text'\n                    ? <Icon name=\"password-hide\" resolution=\"tiny\" />\n                    : <Icon name=\"password-show\" resolution=\"tiny\" />\n                }\n              </ButtonIcon>\n            </InputOption>\n          </Input>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Divider type=\"standard\" />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Input with Native Validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text Default HTML5 Required</Typography>\n          <Input\n            errorText=\"Error: Please fill out this field\"\n            helpText=\"Please enter your full name\"\n            label=\"Full Name\"\n            name=\"full-name\"\n            required\n            showErrorText\n            showHelpText\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Input Text with internal HTML5 regex pattern validation</Typography>\n          <Input\n            containerProps={{\n              style: {\n                width: '350px'\n              }\n            }}\n            errorText=\"Error: Enter 2 - 5 characters\"\n            onChange={handleHtml5PatternChange}\n            helpText={html5PatternHelpText}\n            label=\"Enter 2 to 5 characters starting with a letter e.g. abc or a2d\"\n            name=\"default-username\"\n            pattern=\"^[a-zA-Z][a-zA-Z0-9-_\\.]{1,4}$\"\n            placeholder=\"2 to 5 characters\"\n            required\n            showErrorText\n            showHelpText\n            type=\"text\"\n          />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default InputExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/input/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/input/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/input/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst InputExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Input\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Input</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Input Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nInputExample.displayName = 'InputExample';\n\nexport default InputExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput {...inputContainerProps}>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-divider';\n\nconst Divider = ({ className, title, type, ...remainingProps }) => (\n  <hr\n    aria-hidden=\"true\"\n    className={classnames({\n      [`${CSS_PREFIX}--${type}`]: Boolean(type)\n    }, className)}\n    title={title}\n    {...remainingProps}\n  />\n);\n\nDivider.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Title\n   */\n  title: string,\n\n  /**\n   * Type\n   */\n  type: oneOf(['section', 'standard'])\n};\n\nDivider.defaultProps = {\n  title: 'Separator',\n  type: 'standard'\n};\n\nDivider.displayName = 'Divider';\n\nexport default Divider;\n"],"sourceRoot":""}