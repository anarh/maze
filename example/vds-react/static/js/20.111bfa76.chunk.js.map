{"version":3,"sources":["components/input-card-indicator/index.js","components/input-card/index.js","components/input-card/example/index.js","pages/components/input-card.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/input-option/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input/index.js","components/input-hint/index.js","components/input-text/index.js","components/input-input/index.js"],"names":["InputCardIndicator","children","className","type","remainingProps","aria-label","Boolean","aria-live","classnames","role","displayName","AMEX","constants","AMEX_MASK","LENGTH_AMEX","LENGTH_DEFAULT","NON_AMEX_MASK","acceptedBrandsCheck","utilities","binCheck","brands","checkMod","filterAcceptedBrands","possibleBrand","InputCard","forwardRef","ref","acceptedCards","cardBins","checkMods","css","errorText","handleCardNumberChange","id","shortid","generate","inputMode","isValidCard","label","name","placeholder","shouldValidateAcceptedCards","validateMod11","useState","value","defaultValue","setValue","cardBrand","setCardBrand","isValidBin","isSupportedCard","partnerAcceptedCards","setIsValidCardNum","maxLength","setMaxLength","uid","useRef","current","__isPartnerAccepted","mask","onChange","e","isNaN","target","replace","enteredValue","enteredCardNumber","possibleEnteredBrand","isEnteredBinValid","shouldCheckAcceptedBrands","isEnteredCardSupported","passesMod","length","brand","isSupported","isValid","handleValueChange","textMaskProps","useTextMask","getInputProps","onBlur","onFocus","onKeyUp","includes","toLowerCase","undefined","defaultProps","autoComplete","validator","InputCardExample","cardNumber","setCardNumber","error","setError","isSupportedBrand","setIsSupportedBrand","isValidCardNumber","setIsValidCardNumber","getInlineError","tag","errorType","checkMod11","errorMessage","helpText","invalid","noValidate","required","showErrorText","showHelpText","prettier","require","plugins","reactDocs","jsParsed","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","color","Array","isArray","v","join","ScreenReader","Tag","propTypes","node","string","elementType","KEY_CODES","TabList","orientation","selectedTab","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","querySelectorAll","Children","child","k","cloneElement","onClick","handleClick","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","focus","handleKeyDown","selected","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","InputOption","InputContainer","disabled","expanded","filled","isTextarea","readOnly","func","InputLabel","InputBar","InputMessage","show","Input","ariaLabel","checkmarkIcon","containerProps","contentAfterInput","contentBeforeInput","errorIcon","helpIcon","inputContainerProps","labelId","showCheckmark","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","InputHint","InputText","InputInput"],"mappings":"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","file":"static/js/20.111bfa76.chunk.js","sourcesContent":["import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-card-indicator';\n\nconst InputCardIndicator = ({\n  children,\n  className,\n  type,\n  ...remainingProps\n}) => (\n  <div\n    aria-label={Boolean(type) ? type : 'card'}\n    aria-live=\"polite\"\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${type}`]: Boolean(type)\n    }, className)}\n    role=\"img\"\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputCardIndicator.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Type\n  */\n  type: oneOf([\n    'amex',\n    'discover',\n    'elo',\n    'mastercard',\n    'visa'\n  ])\n};\n\nInputCardIndicator.displayName = 'InputCardIndicator';\n\nexport default InputCardIndicator;\n","import React, { forwardRef, useRef, useState } from 'react';\nimport { arrayOf, bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport { constants, utilities } from '@visa/ui-utils/lib/js/card-number';\nimport { useTextMask } from '@visa/ui-utils/lib/js/text-mask/react';\nimport Input from '../input';\nimport InputOption from '../input-option';\nimport InputCardIndicator from '../input-card-indicator';\n\nconst CSS_PREFIX = 'vds-input-card';\n\nconst {\n  AMEX,\n  AMEX_MASK,\n  LENGTH_AMEX,\n  LENGTH_DEFAULT,\n  NON_AMEX_MASK\n} = constants;\n\nconst {\n  acceptedBrandsCheck,\n  binCheck,\n  brands,\n  checkMod,\n  filterAcceptedBrands,\n  possibleBrand\n} = utilities;\n\n/**\n * @return {JSX}\n */\nconst InputCard = forwardRef(({\n  acceptedCards = brands,\n  cardBins,\n  checkMods,\n  className,\n  css,\n  errorText,\n  handleCardNumberChange,\n  id = shortid.generate(),\n  inputMode,\n  isValidCard,\n  label,\n  name,\n  placeholder,\n  shouldValidateAcceptedCards,\n  type,\n  validateMod11,\n  ...remainingProps\n}, ref) => { // eslint-disable-line no-unused-vars\n  const [value, setValue] = useState(\n    remainingProps.value\n      ? remainingProps.value\n      : remainingProps.defaultValue\n        ? remainingProps.defaultValue\n        : ''\n  );\n  const [cardBrand, setCardBrand] = useState(value ? possibleBrand(value, cardBins) : '');\n  const isValidBin = value ? binCheck(value, cardBins) : isValidCard;\n\n  const isSupportedCard =\n    shouldValidateAcceptedCards && acceptedCards ? acceptedBrandsCheck(cardBrand, acceptedCards) : true;\n  const partnerAcceptedCards =\n    shouldValidateAcceptedCards && acceptedCards ? filterAcceptedBrands(acceptedCards) : acceptedCards;\n\n  // eslint-disable-next-line no-unused-vars\n  const [isValidCardNum, setIsValidCardNum] = useState(\n    shouldValidateAcceptedCards ? isValidBin && isSupportedCard : isValidBin\n  );\n  const [maxLength, setMaxLength] = useState(cardBrand === AMEX ? LENGTH_AMEX : LENGTH_DEFAULT);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const __isPartnerAccepted = isSupportedCard;\n\n  /**\n   * @description check entered value for validity then pass that info to caller for its validation and own purposes\n   * Since caller owns and determines validation it will need to inform CardNumber if entered value is valid\n   * along with the desired error message.\n   *\n   * @param {SyntheticEvent} e\n   */\n  const handleValueChange = e => {\n    // e.persist();\n    const cardInput = e.target;\n    const enteredValue = cardInput.value;\n    const enteredCardNumber = enteredValue.replace(/\\s/g, '');\n    const possibleEnteredBrand = possibleBrand(enteredCardNumber, cardBins);\n    const isEnteredBinValid = binCheck(enteredCardNumber, cardBins);\n    const shouldCheckAcceptedBrands = shouldValidateAcceptedCards && partnerAcceptedCards;\n    const isEnteredCardSupported = shouldCheckAcceptedBrands\n      ? acceptedBrandsCheck(possibleEnteredBrand, partnerAcceptedCards)\n      : __isPartnerAccepted;\n\n    setCardBrand(possibleEnteredBrand);\n    setIsValidCardNum(shouldCheckAcceptedBrands ? isEnteredBinValid && isEnteredCardSupported : isEnteredBinValid);\n    setValue(enteredValue);\n\n    const shouldCheckMod = enteredValue.length === maxLength && checkMods;\n    const passesMod = shouldCheckMod ? checkMod(enteredCardNumber, validateMod11) : true;\n\n    setMaxLength(possibleEnteredBrand === AMEX ? LENGTH_AMEX : LENGTH_DEFAULT);\n\n    handleCardNumberChange &&\n      handleCardNumberChange(e, {\n        brand: possibleEnteredBrand,\n        isSupported: isEnteredCardSupported,\n        isValid: shouldCheckAcceptedBrands ? isEnteredBinValid && isEnteredCardSupported : isEnteredBinValid,\n        passesMod,\n        value: e.target.value\n      });\n  };\n\n  /**\n   * @description handle change event but only for numbers-only values so field error state is correct\n   * @param {SyntheticEvent} e\n   */\n  const handleOnChange = e => {\n    if (!isNaN(e.target.value.replace(/\\s/g, ''))) {\n      handleValueChange(e);\n    }\n  };\n\n  remainingProps.mask = cardBrand === AMEX ? AMEX_MASK : NON_AMEX_MASK;\n  remainingProps.onChange = handleOnChange;\n\n  const textMaskProps = useTextMask(remainingProps).getInputProps;\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, className)}\n      css={css}\n    >\n      <Input\n        {...remainingProps}\n        {...textMaskProps}\n        errorText={errorText}\n        id={uid}\n        inputMode={inputMode}\n        label={label}\n        maxLength={maxLength}\n        name={name}\n        onBlur={remainingProps.onBlur}\n        onFocus={remainingProps.onFocus}\n        onKeyUp={remainingProps.onKeyUp}\n        placeholder={placeholder}\n        // ref={ref}\n        type={type}\n        value={value}\n      >\n        <InputOption>\n          <InputCardIndicator\n            type={brands.includes(cardBrand) ? cardBrand.toLowerCase() : undefined}\n          />\n        </InputOption>\n      </Input>\n    </div>\n  );\n});\n\nInputCard.propTypes = {\n  /**\n   * @type {!array}\n   * Accepted cards\n   */\n  acceptedCards: arrayOf(string),\n\n  /**\n   * @type {!string}\n   * Auto complete\n   */\n  autoComplete: string,\n\n  /**\n   * @type {!array}\n   * Card Bins\n   */\n  cardBins: arrayOf(number).isRequired,\n\n  /**\n   * @type {!bool}\n   * Check Mods\n   */\n  checkMods: bool,\n\n  /**\n   * @type {!string}\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @type {!string}\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * @type {!string}\n   * Error\n   */\n  errorText: string,\n\n  /**\n   * @type {?function(Event)}\n   * Handle card number change\n   */\n  handleCardNumberChange: func,\n\n  /**\n   * While overriding this value is likely to not cause issues it is recommended to override with caution.\n   * See jsdoc for `name` for more information.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Mode to force mobile screens to use large number pad\n   */\n  inputMode: string,\n\n  /**\n   * @type {bool}\n   * is valid card\n   */\n  isValidCard: bool,\n\n  /**\n   * Label\n   */\n  label: string,\n\n  /**\n   * @type {!string}\n   *\n   * Note: It is not recommended to override this name. It must follow a specific convention\n   to support card scanning and autocomplete.\n   * See: https://developers.google.com/web/fundamentals/design-and-ux/input/forms/#recommended_input_name_and_autocomplete_attribute_values\n  for more information.\n   * This name has been chosen based on experiences with real-world usage of applications.\n   *\n   * Variations of this value have not been tested and may not be supported, so override with caution.\n   *\n   * Overriding this value should be done only if there are multiple cardNumber fields present in the same form\n   or on the same screen at the same time.\n   */\n  name: string,\n\n  /**\n   * @type {?function(Event)}\n   * On Blur\n   */\n  onBlur: func,\n\n  /**\n   * @type {?function(Event)}\n   * On Focus\n   */\n  onFocus: func,\n\n  /**\n   * @type {?function(Event)}\n   * On Keyup\n   */\n  onKeyUp: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: string,\n\n  /**\n   * @type {!bool}\n   * Should validate accepted cards\n   */\n  shouldValidateAcceptedCards: bool,\n\n  /**\n   * Type\n   */\n  type: string,\n\n  /**\n   * @type {bool}\n   * Validate mod 11\n   */\n  validateMod11: bool\n};\n\nInputCard.defaultProps = {\n  autoComplete: 'cc-number',\n  inputMode: 'decimal',\n  isValidCard: true,\n  name: 'cardNumber',\n  type: 'text'\n};\n\nInputCard.displayName = 'InputCard';\n\nexport default InputCard;\n","import React, { useState } from 'react';\nimport { utilities } from '@visa/ui-utils/lib/js/card-number';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport InputCard from '../../input-card';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst { validator } = utilities;\n\nconst InputCardExample = () => {\n  const [cardBrand, setCardBrand] = useState(null);\n  const [cardNumber, setCardNumber] = useState('');\n  const [error, setError] = useState('');\n  const [isSupportedBrand, setIsSupportedBrand] = useState(true);\n  const [isValidCardNumber, setIsValidCardNumber] = useState(true);\n  const acceptedCards = ['AMEX', 'DISCOVER', 'ELO', 'MASTERCARD', 'VISA'];\n  const cardBins = [\n    400444,\n    412356,\n    506717,\n    512346,\n    650590,\n    612345\n  ];\n  const checkMod11 = false;\n  const checkMods = true;\n\n  const getInlineError = (type, brand) => {\n    const inlineErrors = {\n      'EMPTY': 'Error: You need to enter a value',\n      'INVALID_BIN': 'Error: That is not a real card brand',\n      'INVALID_BIN_BRAND': `Error: You sure that is a real ${brand} card?`,\n      'INVALID_GENERIC': 'Error: Something is not correct',\n      'NOT_SUPPORTED': 'Error: Apologies but we do not accept that card brand',\n      'PARTIAL': 'Error: Incomplete card number!'\n    };\n\n    return inlineErrors[type];\n  };\n\n  const handleBlur = () => {\n    const isBlur = true;\n    const conditions = {\n      brand: cardBrand,\n      checkMod11,\n      checkMods,\n      isSupported: isSupportedBrand,\n      isValid: isValidCardNumber,\n      value: cardNumber\n    };\n\n    const errorType = validator(isBlur, conditions);\n    const errorMessage = getInlineError(errorType, cardBrand);\n\n    setIsValidCardNumber(Boolean(errorMessage) !== true);\n    setError(errorMessage);\n  };\n\n  const handleChange = (e, { brand, isSupported, isValid, value }) => {\n    const isBlur = false;\n    const conditions = {\n      brand: cardBrand,\n      checkMod11,\n      checkMods,\n      isSupported,\n      isValid,\n      value\n    };\n\n    const errorType = validator(isBlur, conditions);\n    const errorMessage = getInlineError(errorType, brand);\n\n    setCardBrand(brand);\n    setCardNumber(value);\n    setIsSupportedBrand(isSupported);\n    setIsValidCardNumber(isValid);\n    setError(errorMessage);\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Input Card</Typography>\n          <Typography>All Card Brands Accepted with Full Validation</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <form>\n            <InputCard\n              acceptedCards={acceptedCards}\n              cardBins={cardBins}\n              checkMods\n              errorText={error}\n              handleCardNumberChange={handleChange}\n              helpText=\"Enter your card number here\"\n              invalid={!isValidCardNumber}\n              label=\"Card Number\"\n              noValidate\n              onBlur={handleBlur}\n              placeholder=\"15 to 16 digits\"\n              required\n              shouldValidateAcceptedCards\n              showErrorText\n              showHelpText\n              validateMod11\n            />\n          </form>\n        </Col>\n      </Row>\n\n    </Grid>\n  );\n};\n\nexport default InputCardExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/input-card/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/input-card/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/input-card/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst InputCardExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for InputCard\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Input Card</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-card`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Input Card Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-card/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/input-card/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-card`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-card`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-card/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-card/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/input-card/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/input-card/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nInputCardExample.displayName = 'InputCardExample';\n\nexport default InputCardExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React, { forwardRef } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = forwardRef(({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  contentAfterInput,\n  contentBeforeInput,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  inputContainerProps,\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput {...inputContainerProps}>\n          {contentBeforeInput}\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {contentAfterInput}\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n  * Content After input use for icons, etc\n  */\n  contentAfterInput: node,\n\n  /**\n  * Content Before input use for icons, etc\n  */\n  contentBeforeInput: node,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Input Container Props, applies to .vds-input-text\n   */\n  inputContainerProps: object, // eslint-disable-line\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, role, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    role={role}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n  /**\n   * @ignore\n   */\n  role: string,\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n"],"sourceRoot":""}