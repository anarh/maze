{"version":3,"sources":["components/select/example/index.js","pages/components/select.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-group/index.js"],"names":["SelectExample","useState","valid","validated","value","stateOne","setStateOne","refOneValidation","useRef","day","month","showError","validDay","validMonth","validYear","year","stateTwo","setStateTwo","refTwoValidationDay","refTwoValidationMonth","refTwoValidationYear","handleStateTwo","String","current","length","tag","label","defaultValue","disabled","hidden","variant","errorText","helpText","invalid","onChange","e","target","ref","required","showErrorText","showHelpText","Boolean","colorScheme","onClick","focus","legend","map","i","key","substring","toLowerCase","Array","from","x","Date","getFullYear","test","test2","readOnly","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","type","color","isArray","v","join","undefined","displayName","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","id","RegExp","ButtonGroup","children","direction"],"mappings":"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","file":"static/js/45.620323e8.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport ButtonText from '../../button-text';\nimport ButtonGroup from '../../button-group';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Select from '../../select';\nimport SelectGroup from '../../select-group';\nimport SelectGroupDelimiter from '../../select-group-delimiter';\nimport Typography from '../../typography';\n\nconst SelectExample = () => {\n  const [stateOne, setStateOne] = useState({\n    valid: false,\n    validated: false,\n    value: ''\n  });\n\n  const refOneValidation = useRef();\n\n  const handleStateOne = e => {\n    setStateOne({\n      ...stateOne,\n      validated: false,\n      value: e.target.value\n    });\n  };\n\n  const handleStateOneSubmit = () => {\n    const valid = stateOne.value && stateOne.value.length > 0;\n\n    setStateOne({\n      ...stateOne,\n      valid,\n      validated: true\n    });\n\n    if (!valid) {\n      refOneValidation.current.focus();\n    }\n  };\n\n  const handleStateOneReset = () => {\n    setStateOne({\n      valid: false,\n      validated: false,\n      value: ''\n    });\n\n    refOneValidation.current.focus();\n  };\n\n  const [stateTwo, setStateTwo] = useState({\n    day: '',\n    month: '',\n    showError: false,\n    valid: false,\n    validDay: false,\n    validMonth: false,\n    validYear: false,\n    validated: false,\n    year: ''\n  });\n\n  const refTwoValidationDay = useRef();\n  const refTwoValidationMonth = useRef();\n  const refTwoValidationYear = useRef();\n\n  const handleStateTwo = () => {\n    const day = String(refTwoValidationDay.current.value);\n    const month = refTwoValidationMonth.current.value;\n    const year = String(refTwoValidationYear.current.value);\n\n    const validDay = day.length > 0;\n    const validMonth = month.length > 0;\n    const validYear = year.length > 0;\n\n    setStateTwo({\n      ...stateTwo,\n      day,\n      month,\n      showError: false,\n      validDay,\n      validMonth,\n      validYear,\n      validated: false,\n      year\n    });\n  };\n\n  const handleStateTwoSubmit = () => {\n    const test = stateTwo.validDay && stateTwo.validMonth && stateTwo.validYear;\n    const test2 = !stateTwo.validDay && !stateTwo.validMonth && !stateTwo.validYear;\n\n    setStateTwo({\n      ...stateTwo,\n      showError: test2,\n      valid: test,\n      validated: true\n    });\n\n    // @TODO: focus on first invalid select\n    if (!stateTwo.valid) {\n      if (!stateTwo.validMonth) {\n        refTwoValidationMonth.current.focus();\n      } else if (!stateTwo.validDay) {\n        refTwoValidationDay.current.focus();\n      } else if (!stateTwo.validYear) {\n        refTwoValidationYear.current.focus();\n      }\n    }\n  };\n\n  const handleStateTwoReset = () => {\n    setStateTwo({\n      day: '',\n      month: '',\n      showError: false,\n      valid: false,\n      validDay: false,\n      validMonth: false,\n      validYear: false,\n      validated: false,\n      year: ''\n    });\n\n    refTwoValidationMonth.current.focus();\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select</Typography>\n          <Typography>Select takes all native React props directly, (e.g. onChange, etc)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Card Type\"\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select with preselection</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Card Type\"\n            defaultValue=\"signature_card\"\n          >\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select with validation</Typography>\n          <Typography variant=\"caption\">*=required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            errorText=\"Error: A card type is required\"\n            helpText={stateOne.valid ? \"Successfully selected card type\" : \"Please select a card type\"}\n            invalid={stateOne.validated && !stateOne.valid}\n            label=\"Card Type *\"\n            onChange={handleStateOne}\n            ref={refOneValidation}\n            required\n            showErrorText={!stateOne.valid}\n            showHelpText={Boolean(!stateOne.validated || stateOne.valid)}\n            value={stateOne.value}\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={handleStateOneReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateOneSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select Group with validity states</Typography>\n          <Typography variant=\"caption\">*=required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <SelectGroup\n            errorText=\"Error: Please provide a valid Date of Birth\"\n            helpText={stateTwo.valid ? \"Successfully selected date of birth\" : \"Please fill out your Date of Birth info field\"}\n            invalid={!stateTwo.valid && stateTwo.validated}\n            legend=\"Date of Birth\"\n            showErrorText={stateTwo.showError}\n            showHelpText={Boolean(!stateTwo.validated || stateTwo.valid)}\n          >\n            <Select\n              errorText=\"Error: Empty month\"\n              invalid={!stateTwo.validMonth && stateTwo.validated}\n              label=\"Month *\"\n              onChange={handleStateTwo}\n              ref={refTwoValidationMonth}\n              required\n              showErrorText={!stateTwo.validMonth && !stateTwo.showError}\n              value={stateTwo.month}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December'\n                ].map((e, i) => (\n                  <option key={i} value={e.substring(0, 3).toLowerCase()}>{e}</option>\n                ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <Select\n              errorText=\"Error: Empty day\"\n              invalid={!stateTwo.validDay && stateTwo.validated}\n              label=\"Day *\"\n              onChange={handleStateTwo}\n              ref={refTwoValidationDay}\n              required\n              showErrorText={!stateTwo.validDay && !stateTwo.showError}\n              value={stateTwo.day}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                Array\n                  .from(new Array(31), (x, i) => (i + 1))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <Select\n              errorText=\"Error: Empty year\"\n              invalid={!stateTwo.validYear && stateTwo.validated}\n              label=\"Year *\"\n              onChange={handleStateTwo}\n              ref={refTwoValidationYear}\n              required\n              showErrorText={!stateTwo.validYear && !stateTwo.showError}\n              value={stateTwo.year}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                Array\n                  .from(new Array((new Date()).getFullYear() - 1900), (x, i) => (i + 1900))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n          </SelectGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={handleStateTwoReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateTwoSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select (ReadOnly)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Select Card\"\n            readOnly\n            value=\"Visa Signature Card\"\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select (Disabled)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            disabled\n            label=\"Select Card\"\n            value=\"signature_card\"\n          >\n            <option value=\"\" disabled />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SelectExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/select/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/select/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/select/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SelectExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Select\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Select</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Select Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSelectExample.displayName = 'SelectExample';\n\nexport default SelectExample;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n"],"sourceRoot":""}