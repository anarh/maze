{"version":3,"sources":["components/wizard/index.js","components/wizard-step-error/index.js","components/wizard-step/index.js","components/wizard-step-title/index.js","components/wizard/example/index.js","pages/components/wizard.js","components/button-icon/index.js"],"names":["Wizard","children","className","remainingProps","classnames","displayName","WizardStepError","defaultProps","WizardStep","forwardRef","ref","active","completed","error","titles","Boolean","name","resolution","undefined","propTypes","bool","node","string","WizardStepTitle","WizardExample","useState","steps","label","title","tooltip","state","setState","handleWizardTooltip","step","value","map","s","k","tag","textAlign","disabled","findIndex","onClick","index","length","key","aria-current","tooltipShown","placement","trigger","id","aria-describedby","iconType","onFocus","onBlur","onMouseEnter","onMouseLeave","ariaLabel","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","color","Array","isArray","v","join","defaultValue","ButtonIcon","oneOf"],"mappings":"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","file":"static/js/69.39ee5af8.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-wizard';\n\nconst Wizard = ({ children, className, ...remainingProps }) => (\n  <div className={classnames(`${CSS_PREFIX}-container`)}>\n    <ul\n      className={classnames(CSS_PREFIX, className)}\n      {...remainingProps}\n    >\n      {children}\n    </ul>\n  </div>\n);\n\nWizard.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nWizard.displayName = 'Wizard';\n\nexport default Wizard;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-wizard-step-error';\n\nconst WizardStepError = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nWizardStepError.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nWizardStepError.defaultProps = {\n};\n\nWizardStepError.displayName = 'WizardStepError';\n\nexport default WizardStepError;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\nimport WizardStepError from '../wizard-step-error';\n\nconst CSS_PREFIX = 'vds-wizard-step';\nconst CSS_STATE = 'vds-state';\n\nconst WizardStep = forwardRef(({\n  active,\n  children,\n  className,\n  completed,\n  error,\n  titles,\n  ...remainingProps\n}, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--completed`]: Boolean(completed),\n      [`${CSS_STATE}--error`]: Boolean(error),\n      [`${CSS_PREFIX}--titles`]: Boolean(titles)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n    {\n      error ?\n        <WizardStepError>\n          <Icon name=\"error-alt\" resolution=\"tiny\" />\n        </WizardStepError>\n      : undefined\n    }\n  </li>\n));\n\nWizardStep.propTypes = {\n  /**\n  * Active\n  */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Completed\n  */\n  completed: bool,\n\n  /**\n  * Error\n  */\n  error: bool,\n\n  /**\n  * Title\n  */\n  titles: bool\n\n\n};\n\nWizardStep.displayName = 'WizardStep';\n\nexport default WizardStep;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-wizard-step-title';\n\nconst WizardStepTitle = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nWizardStepTitle.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nWizardStepTitle.defaultProps = {\n};\n\nWizardStepTitle.displayName = 'WizardStepTitle';\n\nexport default WizardStepTitle;\n","import React, { Fragment, useState } from 'react';\nimport ButtonIcon from '../../button-icon';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport ScreenReader from '../../screen-reader';\nimport Tooltip from '../../tooltip';\nimport Typography from '../../typography';\nimport Wizard from '../../wizard';\nimport WizardStep from '../../wizard-step';\nimport WizardStepTitle from '../../wizard-step-title';\n\nconst WizardExample = () => {\n  const [state, setState] = useState({\n    steps: [\n      {\n        active: true,\n        completed: false,\n        error: false,\n        label: '1',\n        title: 'Cart',\n        tooltip: false\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '2',\n        title: 'Order Info',\n        tooltip: false\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '3',\n        title: 'Shipping Info',\n        tooltip: false\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '4',\n        title: 'Payment Info',\n        tooltip: false\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '5',\n        title: 'Review',\n        tooltip: false\n      },\n      {\n        active: false,\n        completed: false,\n        error: false,\n        label: '6',\n        title: 'Confirmation',\n        tooltip: false\n      }]\n  });\n\n  const handleClickPrevious = () => {\n    let index = state.steps.findIndex(step => step.active === true);\n    index = index === -1 ? state.steps.length : index;\n    const steps = state.steps.map((step, k) => ({\n      ...step,\n      active: k === index - 1,\n      completed: k < index - 1, // use your own logic to determine completed state\n      error: k <= index - 1 ? (k === 0 ? true : step.error) : false//, // set first item to error for demo\n      // label: step.label,\n      // tooltip: step.tooltip\n    }));\n\n    setState({ steps });\n  };\n\n  const handleClickNext = () => {\n    const index = state.steps.findIndex(step => step.active === true);\n    const steps = state.steps.map((step, k) => ({\n      ...step,\n      active: k === index + 1,\n      completed: k <= index, // use your own logic/state to determine completed state\n      error: k <= index ? (k === 0 ? true : step.error) : false//, // set first item to error for demo\n      // label: step.label,\n      // tooltip: step.tooltip\n    }));\n\n    setState({ steps });\n  };\n\n  const handleWizardTooltip = (step, value) => {\n    const steps = state.steps.map((s, k) => ({\n      ...s,\n      tooltip: step === k ? value : s.tooltip\n    }));\n\n    setState({ steps });\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Wizard (BYO-State) Bring your own state</Typography>\n        </Col>\n        <Col textAlign=\"right\">\n          <ButtonText\n            disabled={state.steps.findIndex(step => step.active === true) === 0}\n            onClick={handleClickPrevious}\n          >\n            Previous\n          </ButtonText>\n\n          <ButtonText\n            disabled={state.steps.findIndex(step => step.active === true) === -1}\n            onClick={handleClickNext}\n          >\n            Next\n          </ButtonText>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Wizard>\n            {\n              state.steps.map((step, key) => (\n                <WizardStep\n                  key={key}\n                  active={step.active}\n                  completed={step.completed}\n                  error={step.error}\n                  aria-current={step.active ? \"step\" : undefined}\n                >\n                  <Tooltip\n                    tooltip={`${step.title}`}\n                    tooltipShown={step.tooltip}\n                    placement=\"top\"\n                    trigger=\"none\"\n                    id={`stepper-${key}`}\n                  >\n                    <ButtonIcon\n                      aria-describedby={`stepper-${key}`}\n                      iconType=\"light-tiny\"\n                      onFocus={() => handleWizardTooltip(key, true)}\n                      onBlur={() => handleWizardTooltip(key, false)}\n                      onMouseEnter={() => handleWizardTooltip(key, true)}\n                      onMouseLeave={() => handleWizardTooltip(key, false)}\n                    >\n                      <Fragment>\n                        {\n                          step.error ?\n                            <ScreenReader>Error: </ScreenReader>\n                            : step.active ?\n                              <ScreenReader>Current: </ScreenReader>\n                              : step.completed ?\n                                <ScreenReader>Completed: </ScreenReader>\n                                : undefined\n                        }\n                        { step.label }\n                      </Fragment>\n                    </ButtonIcon>\n                  </Tooltip>\n                </WizardStep>\n              ))\n            }\n          </Wizard>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Wizard with step titles</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Wizard>\n            {\n              state.steps.map((step, key) => (key > 3 ? null :\n                <WizardStep\n                  key={key}\n                  active={key === 0}\n                  aria-current={key === 0 ? \"step\" : undefined}\n                  titles\n                >\n                  <ButtonIcon\n                    aria-describedby={`wizard-step-title-${key}`}\n                    ariaLabel={step.label}\n                    iconType=\"light-tiny\"\n                  >\n                    {step.label}\n                  </ButtonIcon>\n                  <WizardStepTitle\n                    id={`wizard-step-title-${key}`}\n                  >\n                    {step.title}\n                  </WizardStepTitle>\n                </WizardStep>\n              ))\n            }\n          </Wizard>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default WizardExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/wizard/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/wizard/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/wizard/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst WizardExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Wizard\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Wizard</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/wizard`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Wizard Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/wizard/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/wizard/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/wizard`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/wizard`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/wizard/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/wizard/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/wizard/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/wizard/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nWizardExample.displayName = 'WizardExample';\n\nexport default WizardExample;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n"],"sourceRoot":""}