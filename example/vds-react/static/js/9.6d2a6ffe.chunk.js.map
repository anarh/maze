{"version":3,"sources":["components/form/example/index.js","pages/components/form.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","components/button-label/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-text/index.js","components/input-option/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/button-group/index.js","components/fieldset/index.js","components/form-control/index.js","components/form/index.js"],"names":["FormExample","tag","helpText","label","name","showHelpText","position","space","direction","colorScheme","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","undefined","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","ButtonLabel","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","id","RegExp","test","ButtonText","active","disabled","flippable","isFullWidth","includes","oneOfType","InputOption","InputContainer","expanded","filled","focus","invalid","isTextarea","readOnly","InputLabel","InputBar","InputMessage","ariaAtomic","ariaLive","show","aria-atomic","aria-live","InputHint","InputText","Input","ariaLabel","checkmarkIcon","containerProps","errorIcon","errorText","helpIcon","shortid","labelId","noValidate","onBlur","onChange","onFocus","placeholder","showCheckmark","showErrorText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","useRef","current","setValidity","e","target","checkValidity","trim","htmlFor","aria-describedby","aria-label","aria-invalid","ariaHidden","InputInput","ButtonGroup","Fieldset","FormControl","divide","resize","element","Form"],"mappings":"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","file":"static/js/9.6d2a6ffe.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Fieldset from '../../fieldset';\nimport Form from '../../form';\nimport FormControl from '../../form-control';\nimport Grid from '../../grid';\nimport Input from '../../input';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst FormExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl>\n              <Input\n                helpText=\"Enter Address\"\n                label=\"Address Line 1\"\n                name=\"address-line-1\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                helpText=\"Address line 2\"\n                label=\"Address Line 2\"\n                name=\"address-line-2\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                helpText=\"Enter City\"\n                label=\"City\"\n                name=\"City\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n          <ButtonGroup direction=\"right\">\n            <ButtonText colorScheme=\"primary\">Submit</ButtonText>\n            <ButtonText colorScheme=\"secondary\">Reset</ButtonText>\n          </ButtonGroup>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 30/70</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 40/60</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"forty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"sixty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 50/50</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"fifty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"fifty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 60/40</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"sixty\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"forty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Form Control Spacing 70/30</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Form>\n          <Fieldset>\n            <legend>Address Information</legend>\n            <FormControl position=\"right\" space=\"seventy\">\n              <Input\n                helpText=\"Enter State\"\n                label=\"State\"\n                name=\"state\"\n                showHelpText\n              />\n            </FormControl>\n            <FormControl position=\"right\" space=\"thirty\">\n              <Input\n                helpText=\"Enter Zip Code\"\n                label=\"Zip Code\"\n                name=\"Zip\"\n                showHelpText\n              />\n            </FormControl>\n          </Fieldset>\n        </Form>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default FormExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/form/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/form/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/form/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst FormExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Form\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Form</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Form Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/form/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/form/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/form/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nFormExample.displayName = 'FormExample';\n\nexport default FormExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  ariaLive,\n  children,\n  className,\n  invalid,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    // role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n   * Aria Live\n   */\n  ariaLive: oneOf(['assertive', 'polite', 'off']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          !isInvalid && focused && showHelpText && Boolean(helpText)\n            ? <Fragment>{helpIcon} {helpText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid={isInvalid}\n        show\n      >\n        {\n          isInvalid === true && showErrorText && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon ariaHidden={false} ariaLabel=\"Error \" name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-fieldset';\n\nconst Fieldset = ({ children, className, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nFieldset.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nFieldset.displayName = 'Fieldset';\n\nexport default Fieldset;\n","import React, { forwardRef } from 'react';\nimport { bool, element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst FormControl = forwardRef(({\n  children,\n  className,\n  divide,\n  resize,\n  space,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(`${CSS_PREFIX}-control`, {\n      [`${CSS_PREFIX}-control--${divide}${resize ? '--resize' : ''}`]: Boolean(divide),\n      [`${CSS_PREFIX}-control--${space}`]: Boolean(space),\n      [`vds-input--split-field`]: Boolean(space)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nFormControl.propTypes = {\n  /**\n  * @ignore\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Divide by\n   */\n  divide: oneOf(['twenty-five', 'fifty']),\n\n  /**\n   * Position\n   */\n  position: oneOf(['left', 'right']),\n\n  /**\n   * Resize\n   */\n  resize: bool,\n  /**\n   * Space\n   */\n  space: oneOf(['thirty', 'forty', 'fifty', 'sixty', 'seventy'])\n};\n\nFormControl.displayName = 'FormControl';\n\nexport default FormControl;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-form';\n\nconst Form = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nForm.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nForm.displayName = 'Form';\n\nexport default Form;\n"],"sourceRoot":""}