{"version":3,"sources":["components/_imgs/stockphoto.png","components/chip/index.js","components/chip-container/index.js","components/chip-text/index.js","components/chip/example/index.js","pages/components/chip.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/checkbox/index.js","components/avatar-photo/index.js"],"names":["module","exports","Chip","forwardRef","ref","children","className","disabled","focused","onBlur","onChange","onFocus","readonly","selected","type","remainingProps","useState","focus","setFocus","select","setSelect","useEffect","classnames","Boolean","event","target","checked","tabIndex","undefined","defaultProps","displayName","ChipContainer","propTypes","node","string","ChipText","ChipExample","items","id","label","value","state","setState","handleChange","e","map","item","tag","initials","alt","src","stockPhoto","ariaLabel","iconType","name","resolution","key","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","role","aria-label","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","length","color","Array","isArray","v","join","defaultValue","ScreenReader","Tag","elementType","KEY_CODES","TabList","orientation","selectedTab","useRef","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","current","querySelectorAll","Children","child","k","cloneElement","onClick","handleClick","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","handleKeyDown","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","active","Checkbox","shortid","generate","indeterminate","invalid","defaultChecked","check","setCheck","indetermined","setIndetermined","uid","aria-checked","htmlFor","stopPropagation","onKeyPress","AvatarPhoto","only"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,wC,0TCOrCC,EAAOC,sBAAW,WAYrBC,GAAS,IAAD,EAXTC,EAWS,EAXTA,SACAC,EAUS,EAVTA,UACAC,EASS,EATTA,SACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,OACAC,EAMS,EANTA,SACAC,EAKS,EALTA,QACAC,EAIS,EAJTA,SACAC,EAGS,EAHTA,SACAC,EAES,EAFTA,KACGC,EACM,0HACiBC,mBAASR,GAD1B,mBACFS,EADE,KACKC,EADL,OAEmBF,mBAASH,GAF5B,mBAEFM,EAFE,KAEMC,EAFN,KAITC,qBAAU,WACRH,EAASV,KACR,CAACA,IAEJa,qBAAU,WACRD,EAAUP,KACT,CAACA,IAuBJ,OACE,uCACEP,UAAWgB,KAAU,6BAlDR,YAmDiB,YAATR,GADA,wBAlDR,WAkDQ,YAEiB,WAATA,GAFR,wBAjDT,YAiDS,cAGSS,QAAQhB,IAHjB,wBAjDT,YAiDS,cAISgB,QAAQX,IAJjB,wBAjDT,YAiDS,cAKSW,QAAQJ,IALjB,wBAjDT,YAiDS,WAMMI,QAAQN,IANd,GAOlBX,GACHG,OAxBe,SAAAe,GACjBN,GAAS,GACa,oBAAXT,GACTA,EAAOe,IAsBPd,SAlBiB,SAAAc,GACnBJ,EAAUI,EAAMC,OAAOC,SACC,oBAAbhB,GACTA,EAASc,IAgBTb,QAjCgB,SAAAa,GAClBN,GAAS,GACc,oBAAZP,GACTA,EAAQa,IA+BRG,SAAUpB,GAAY,OAAIqB,EAC1BxB,IAAKA,GACDW,GAEHV,MAwDPH,EAAK2B,aAAe,CAClBf,KAAM,WAGRZ,EAAK4B,YAAc,OAEJ5B,Q,OC7HT6B,EAAgB5B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcS,EAA3B,+CAC/B,uCACET,UAAWgB,IAJI,qBAImBhB,GAClCF,IAAKA,GACDW,GAEHV,MAIL0B,EAAcC,UAAY,CAIxB3B,SAAU4B,OAKV3B,UAAW4B,UAGbH,EAAcD,YAAc,gBAEbC,QCxBTI,EAAW,SAAC,GAAD,IAAG9B,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAcS,EAA3B,+CACf,wCACET,UAAWgB,IAJI,gBAImBhB,IAC9BS,GAEHV,IAgBL8B,EAASL,YAAc,WAERK,Q,mBC8TAC,EA3UK,WAAO,IAAD,EACEpB,mBAAS,CACjCqB,MAAO,CACL,CACEX,SAAS,EACTY,GAAI,oBACJC,MAAO,kBACPC,MAAO,WAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,SACPC,MAAO,UAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,UACPC,MAAO,WAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,MACPC,MAAO,OAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,MACPC,MAAO,OAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,cACPC,MAAO,eAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,gBACPC,MAAO,iBAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,oFACPC,MAAO,WAET,CACEd,SAAS,EACTY,GAAI,oBACJC,MAAO,OACPC,MAAO,QAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,QACPC,MAAO,SAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,SACPC,MAAO,UAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,SACPC,MAAO,UAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,QACPC,MAAO,SAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,QACPC,MAAO,SAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,MACPC,MAAO,OAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,MACPC,MAAO,OAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,OACPC,MAAO,QAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,WACPC,MAAO,YAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,cACPC,MAAO,eAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,cACPC,MAAO,QAET,CACEd,SAAS,EACTY,GAAI,qBACJC,MAAO,gBACPC,MAAO,iBAET,CACEd,SAAS,EACTY,GAAI,qBA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","file":"static/js/24.cea95fb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stockphoto.a3f1d696.png\";","import React, { forwardRef, useEffect, useState } from 'react';\nimport { bool, func, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip';\nconst CSS_STATE = 'vds-state';\n\nconst Chip = forwardRef(({\n  children,\n  className,\n  disabled,\n  focused,\n  onBlur,\n  onChange,\n  onFocus,\n  readonly,\n  selected,\n  type,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState(focused);\n  const [select, setSelect] = useState(selected);\n\n  useEffect(() => {\n    setFocus(focused);\n  }, [focused]);\n\n  useEffect(() => {\n    setSelect(selected);\n  }, [selected]);\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  const handleChange = event => {\n    setSelect(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  return (\n    <div\n      className={classnames({\n        [`${CSS_PREFIX}`]: type === 'default',\n        [`${CSS_PREFIX}--filter`]: type === 'filter',\n        [`${CSS_STATE}--disabled`]: Boolean(disabled),\n        [`${CSS_STATE}--readonly`]: Boolean(readonly),\n        [`${CSS_STATE}--selected`]: Boolean(select),\n        [`${CSS_STATE}--focus`]: Boolean(focus)\n      }, className)}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      onFocus={handleFocus}\n      tabIndex={disabled ? -1 : undefined}\n      ref={ref}\n      {...remainingProps}\n    >\n      {children}\n    </div>\n  );\n});\n\nChip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * disabled\n  */\n  disabled: bool,\n\n  /**\n  * focused\n  */\n  focused: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n  * Readonly\n  */\n  readonly: bool,\n\n  /**\n  * Selected\n  */\n  selected: bool,\n  /**\n   * Type\n   */\n  type: oneOf(['default', 'filter'])\n};\n\nChip.defaultProps = {\n  type: 'default'\n};\n\nChip.displayName = 'Chip';\n\nexport default Chip;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip-container';\n\nconst ChipContainer = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nChipContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nChipContainer.displayName = 'ChipContainer';\n\nexport default ChipContainer;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-chip-text';\n\nconst ChipText = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nChipText.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nChipText.displayName = 'ChipText';\n\nexport default ChipText;\n","import React, { useState } from 'react';\nimport Avatar from '../../avatar';\nimport AvatarPhoto from '../../avatar-photo';\nimport ButtonIcon from '../../button-icon';\nimport Checkbox from '../../checkbox';\nimport Chip from '../../chip';\nimport ChipContainer from '../../chip-container';\nimport ChipText from '../../chip-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport stockPhoto from '../../_imgs/stockphoto.png';\nimport Typography from '../../typography';\n\n\nconst ChipExample = () => {\n  const [state, setState] = useState({\n    items: [\n      {\n        checked: false,\n        id: 'chip-group-test-1',\n        label: 'Popular near me',\n        value: 'Popular'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-2',\n        label: 'Advice',\n        value: 'Advice'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-3',\n        label: 'Animals',\n        value: 'Animals'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-4',\n        label: 'Art',\n        value: 'Art'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-5',\n        label: 'DIY',\n        value: 'DIY'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-6',\n        label: 'Electronics',\n        value: 'Electronics'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-7',\n        label: 'Entertainment',\n        value: 'Entertainment'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-8',\n        label: 'Explain like I\\'m five and lorem ipsum dolor sit amet, consectetur adipiscing elit',\n        value: 'Explain'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-9',\n        label: 'Food',\n        value: 'Food'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-10',\n        label: 'Funny',\n        value: 'Funny'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-11',\n        label: 'Gaming',\n        value: 'Gaming'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-12',\n        label: 'Health',\n        value: 'Health'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-13',\n        label: 'Memes',\n        value: 'Memes'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-14',\n        label: 'Music',\n        value: 'Music'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-15',\n        label: 'NBA',\n        value: 'NBA'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-16',\n        label: 'NFL',\n        value: 'NFL'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-17',\n        label: 'News',\n        value: 'News'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-18',\n        label: 'Outdoors',\n        value: 'Outdoors'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-19',\n        label: 'Photography',\n        value: 'Photography'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-20',\n        label: 'Pics & GIFs',\n        value: 'Pics'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-21',\n        label: 'Relationships',\n        value: 'Relationships'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-22',\n        label: 'Science',\n        value: 'Science'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-23',\n        label: 'Sports',\n        value: 'Sports'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-24',\n        label: 'TV',\n        value: 'TV'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-25',\n        label: 'Tech',\n        value: 'Tech'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-26',\n        label: 'Travel',\n        value: 'Travel'\n      },\n      {\n        checked: true,\n        id: 'chip-group-test-27',\n        label: 'Video Games',\n        value: 'Video'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-28',\n        label: 'Videos',\n        value: 'Videos'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-29',\n        label: 'Broom',\n        value: 'Broom'\n      },\n      {\n        checked: false,\n        id: 'chip-group-test-30',\n        label: 'Writing',\n        value: 'Writing'\n      }\n    ]\n  });\n\n  const handleChange = e => setState({\n    items: [\n      ...state.items.map(item => ({\n        ...item,\n        checked: e.target.id === item.id ? !item.checked : item.checked\n      }))\n    ]\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Filter Chips</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <ChipText>Default Chip</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar initials=\"AS\" label=\"Adam Smith\" />\n            <ChipText>Adam Smith</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <ChipText>Adam Smith</ChipText>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Icon Button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <ChipText>Adam Smith</ChipText>\n            <ButtonIcon ariaLabel=\"clear\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Default with Avatar and icon button\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip>\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <ChipText>Adam Smith</ChipText>\n            <ButtonIcon ariaLabel=\"clear\" iconType=\"light-tiny\">\n              <Icon name=\"close\" resolution=\"tiny\" />\n            </ButtonIcon>\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip filter\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Chip type=\"filter\">\n            <Avatar>\n              <AvatarPhoto label=\"Adam Smith\">\n                <img alt=\"Adam Smith\" src={stockPhoto} />\n              </AvatarPhoto>\n            </Avatar>\n            <Checkbox\n              name=\"example\"\n              label=\"Adam Smith\"\n              id=\"chip-filter-test-2\"\n              value=\"2\"\n            />\n          </Chip>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          Chip Group\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ChipContainer>\n            <Typography tag=\"h4\">Select your interests:</Typography>\n            {\n              state.items.map(item => (\n                <Chip key={item.id} selected={item.checked} type=\"filter\">\n                  <Checkbox\n                    checked={item.checked}\n                    id={item.id}\n                    name=\"chip-group-example\"\n                    onChange={handleChange}\n                    label={item.label}\n                    value={item.value}\n                  />\n                </Chip>\n              ))\n            }\n          </ChipContainer>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ChipExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/chip/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/chip/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/chip/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ChipExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Chip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Chip</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Chip Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/chip/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/chip/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/chip/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nChipExample.displayName = 'ChipExample';\n\nexport default ChipExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonIcon = forwardRef(({\n  active,\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType),\n      [`${CSS_STATE}--active`]: Boolean(active),\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-checkbox';\nconst CSS_STATE = 'vds-state';\n\nconst Checkbox = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  indeterminate,\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focus, setFocus] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const [indetermined, setIndetermined] = useState(indeterminate);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setIndetermined(indeterminate);\n  }, [indeterminate]);\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setIndetermined(false);\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocus(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocus(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        aria-checked={indetermined ? 'mixed' : check ? 'true' : 'false'}\n        className={classnames(CSS_PREFIX, {\n          'focus-visible': Boolean(focus)\n        }, className)}\n        disabled={disabled}\n        id={uid}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        ref={ref}\n        type=\"checkbox\"\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focus),\n            [`${CSS_STATE}--indeterminate`]: indetermined && !check,\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          }\n        )}\n        htmlFor={uid}\n        onClick={e => e.stopPropagation()} // if not click event fires 2x, one for checkbox and one for label\n        onKeyPress={e  => e.stopPropagation()} // if not key-press event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nCheckbox.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the checkbox will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   *   Indeterminate\n   */\n  indeterminate: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the checkbox element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change fn\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n","import React, { Children, cloneElement } from 'react';\nimport { element, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-avatar';\n\nconst AvatarPhoto = ({ children, className, label, type, ...remainingProps }) => {\n  if (Children.only(children).type === 'img') {\n    return (\n      cloneElement(\n        children,\n        {\n          alt: Children.only(children).props.alt || label,\n          className: classnames({\n            [`${CSS_PREFIX}--photo`]: Boolean(type) === false,\n            [`${CSS_PREFIX}--${type}`]: Boolean(type)\n          }, className),\n          ...remainingProps\n        }\n      )\n    );\n  }\n\n  return (\n    <div\n      className={classnames(`${CSS_PREFIX}--photo`, className)}\n      role=\"img\"\n      aria-label={label}\n      {...remainingProps}\n    >\n      {\n        cloneElement(\n          children,\n          {\n            ...remainingProps\n          }\n        )\n      }\n    </div>\n  );\n};\n\nAvatarPhoto.propTypes = {\n  /**\n  * Content\n  */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Label\n   */\n  label: string.isRequired,\n\n  /**\n   * Type\n   */\n  type: oneOf(['company-logo'])\n};\n\nAvatarPhoto.displayName = 'AvatarPhoto';\n\nexport default AvatarPhoto;\n"],"sourceRoot":""}