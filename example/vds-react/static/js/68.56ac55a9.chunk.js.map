{"version":3,"sources":["components/action-bar/index.js","components/action-bar-selected-items-count/index.js","components/action-bar/example/index.js","pages/components/action-bar.js","components/button-text/index.js"],"names":["ActionBar","children","className","type","remainingProps","classnames","Boolean","displayName","ActionBarSelectedItemsCount","ActionBarExample","useState","value","state","setState","tag","noGutter","flippable","colorScheme","name","resolution","alignEnd","dynamic","autoComplete","label","onChange","e","target","placeholder","useNativePlaceholder","length","ariaLabel","iconType","onClick","undefined","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","Array","isArray","v","join","defaultValue","ButtonText","forwardRef","ref","active","disabled","isFullWidth","Tag","includes","propTypes","bool","node","string","oneOf","oneOfType","number"],"mappings":"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","file":"static/js/68.56ac55a9.chunk.js","sourcesContent":["import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-action-bar';\n\nconst ActionBar = ({ children, className, type, ...remainingProps }) => (\n  <div\n    className={classnames('row', CSS_PREFIX, {\n      [`${CSS_PREFIX}--${type}-controls`]: Boolean(type)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nActionBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Active\n   */\n  type: oneOf(['active', 'standard'])\n};\n\nActionBar.displayName = 'ActionBar';\n\nexport default ActionBar;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-action-bar-selected-items-count';\n\nconst ActionBarSelectedItemsCount = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nActionBarSelectedItemsCount.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nActionBarSelectedItemsCount.displayName = 'ActionBarSelectedItemsCount';\n\nexport default ActionBarSelectedItemsCount;\n","import React, { useState } from 'react';\nimport ActionBar from '../../action-bar';\nimport ActionBarSelectedItemsCount from '../../action-bar-selected-items-count';\nimport ButtonAction from '../../button-action';\nimport ButtonIcon from '../../button-icon';\nimport ButtonLabel from '../../button-label';\nimport ButtonSplit from '../../button-split';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Input from '../../input';\nimport Row from '../../row';\nimport Search from '../../search';\nimport SearchClearButton from '../../search-clear-button';\nimport SearchIcon from '../../search-icon';\nimport Typography from '../../typography';\n\nconst ActionBarExample = () => {\n  const [state, setState] = useState({\n    value: ''\n  });\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Standard Controls</Typography>\n          <Typography>\n            Action bar will load actions that the user can\n            apply or initiate broadly to the page content loaded.\n            These actions allow users to manipulate the items loaded such as sort and filter.\n          </Typography>\n          <Typography>\n            If using icon buttons, include a tooltip\n            for additional clarity.\n          </Typography>\n          <Typography>\n            At this point, user has not made any selection\n            of items in the grid, table or list.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ActionBar>\n            <Col noGutter>\n              <ButtonText>Create Alert</ButtonText>\n              <ButtonSplit flippable colorScheme=\"secondary\">\n                <ButtonLabel>Export</ButtonLabel>\n                <ButtonAction><Icon name=\"arrow-expand\" resolution=\"tiny\" /></ButtonAction>\n              </ButtonSplit>\n            </Col>\n            <Col noGutter alignEnd>\n              <Search dynamic>\n                <Input\n                  autoComplete=\"off\"\n                  label=\"Search\"\n                  name=\"q\"\n                  onChange={e => setState({ value: e.target.value })}\n                  placeholder=\"Search\"\n                  type=\"search\"\n                  useNativePlaceholder\n                  value={state.value}\n                />\n                <SearchIcon>\n                  <Icon name=\"search\" resolution=\"low\" />\n                </SearchIcon>\n                {\n                  state.value.length\n                    ? <SearchClearButton>\n                      <ButtonIcon\n                        ariaLabel=\"clear entry\"\n                        iconType=\"light-tiny\"\n                        onClick={() => setState({ value: '' })}\n                      >\n                        <Icon name=\"clear\" resolution=\"tiny\" />\n                      </ButtonIcon>\n                    </SearchClearButton>\n                    : undefined\n                }\n              </Search>\n              <ButtonSplit flippable colorScheme=\"secondary\">\n                <ButtonLabel>Sort</ButtonLabel>\n                <ButtonAction><Icon name=\"arrow-expand\" resolution=\"tiny\" /></ButtonAction>\n              </ButtonSplit>\n            </Col>\n          </ActionBar>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Active Controls</Typography>\n          <Typography>\n            Once the user has made one or more item selections,\n            the action bar will contextually change to host controls\n            that can be applied. It will also list how many active items.\n          </Typography>\n          <Typography>\n            If using icon buttons, include a tooltip for additional clarity.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ActionBar type=\"active\">\n            <Col noGutter>\n              <ButtonSplit flippable>\n                <ButtonLabel>Add New</ButtonLabel>\n                <ButtonAction><Icon name=\"arrow-expand\" resolution=\"tiny\" /></ButtonAction>\n              </ButtonSplit>\n              <ButtonText colorScheme=\"secondary\">Close</ButtonText>\n              <ButtonText colorScheme=\"secondary\">Force Close</ButtonText>\n              <ButtonText colorScheme=\"secondary\">Acknowledge</ButtonText>\n            </Col>\n            <Col noGutter alignEnd>\n              <ActionBarSelectedItemsCount>1 selected</ActionBarSelectedItemsCount>\n              <Icon name=\"close\" resolution=\"low\" />\n            </Col>\n          </ActionBar>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Active Controls: Alternate Layout</Typography>\n          <Typography>\n            Adjust the hierarchy of the controls in the action bar as\n            needed and as it relates to the other elements on the page.\n          </Typography>\n          <Typography>\n            Maintain appropriate hierarchy among items in the set as well and use overflow when needed.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ActionBar type=\"active\">\n            <Col noGutter>\n              <ActionBarSelectedItemsCount>1 selected</ActionBarSelectedItemsCount>\n              <ButtonText colorScheme=\"tertiary\">Clear</ButtonText>\n            </Col>\n            <Col noGutter alignEnd>\n              <ButtonText colorScheme=\"tertiary\">Close</ButtonText>\n              <ButtonText colorScheme=\"tertiary\">Force Close</ButtonText>\n              <ButtonText colorScheme=\"tertiary\">Acknowledge</ButtonText>\n              <ButtonIcon ariaLabel=\"search\" iconType=\"light\">\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </Col>\n          </ActionBar>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ActionBarExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/action-bar/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/action-bar/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/action-bar/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ActionBarExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for ActionBar\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Action Bar</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/action-bar`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Action Bar Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/action-bar/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/action-bar/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/action-bar`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/action-bar`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/action-bar/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/action-bar/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/action-bar/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/action-bar/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nActionBarExample.displayName = 'ActionBarExample';\n\nexport default ActionBarExample;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n"],"sourceRoot":""}