{"version":3,"sources":["components/disclosure/index.js","components/disclosure-item/index.js","components/disclosure-text-item/index.js","components/disclosure-content/index.js","components/disclosure-header/index.js","components/disclosure-header-wrapper/index.js","components/disclosure-text-button/index.js","components/disclosure/example/index.js","pages/components/disclosure.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/use-panel-expand/index.js","../node_modules/@visa/vds-web/dist/_imgs/stockphoto.png"],"names":["Disclosure","forwardRef","ref","allowMultipleExpanded","children","className","defaultExpandedId","id","shortid","generate","onChange","remainingProps","uid","useRef","current","usePanelExpand","focusedId","expandedId","updateFocusedId","updateExpandedId","classnames","Children","map","child","k","cloneElement","expanded","includes","focus","index","onClick","e","onKeyDown","count","defaultProps","displayName","DisclosureItem","DisclosureTextItem","DisclosureContent","aria-hidden","Boolean","propTypes","node","string","bool","oneOfType","number","DisclosureHeader","iconCollapse","iconExpand","onBlur","onFocus","useState","focused","setFocused","useEffect","handleClick","event","handleKeyDown","aria-controls","aria-expanded","name","resolution","DisclosureHeaderWrapper","DisclosureTextButton","expandedText","text","DisclosureExample","tag","alt","src","stockPhoto","style","fontSize","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","defaultValue","ScreenReader","Tag","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","setFocusedId","slice","setExpandedId","charCode","keyCode","preventDefault","ids","disclosureIndex","findIndex","Number","isInteger","module","exports"],"mappings":"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","file":"static/js/42.f2f1ea73.chunk.js","sourcesContent":["import React, { Children, cloneElement, forwardRef, useRef } from 'react';\nimport { array, bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport usePanelExpand from '../use-panel-expand';\n\nconst CSS_PREFIX = 'vds-disclosure';\n\nconst Disclosure = forwardRef(\n  (\n    {\n      allowMultipleExpanded,\n      children,\n      className,\n      defaultExpandedId,\n      id = shortid.generate(),\n      onChange,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const uniqueId = useRef(id);\n    const uid = uniqueId.current;\n    const { focusedId, expandedId, updateFocusedId, updateExpandedId } = usePanelExpand(\n      defaultExpandedId,\n      onChange,\n      allowMultipleExpanded\n    );\n\n    return (\n      <div className={classnames(CSS_PREFIX, className)} id={uid} ref={ref} {...remainingProps}>\n        {Children.map(children, (child, k) =>\n          cloneElement(child, {\n            expanded: expandedId.includes(k),\n            focus: k === focusedId,\n            id: `${k}--${uid}`,\n            index: k,\n            onClick: (e, index) => updateExpandedId(e, index),\n            onKeyDown: (e, index) => updateFocusedId(e, index, Children.count(children))\n          })\n        )}\n      </div>\n    );\n  }\n);\n\nDisclosure.propTypes = {\n  /**\n   * Allow multiple expanded\n   */\n  allowMultipleExpanded: bool,\n\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Array of panel indexes to initially show as expanded\n   */\n  defaultExpandedId: array,\n\n  /**\n   * disabled\n   */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * On Change fn\n   */\n  onChange: func\n};\n\nDisclosure.defaultProps = {\n  defaultExpandedId: [],\n  allowMultipleExpanded: true\n};\n\nDisclosure.displayName = 'Disclosure';\n\nexport default Disclosure;\n","import React, { Children, cloneElement } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst CSS_PREFIX = 'vds-disclosure-item';\n\nconst DisclosureItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <div className={CSS_PREFIX}>\n    {Children.map(children, child => cloneElement(child, { expanded, focus, id, index, onClick, onKeyDown }))}\n  </div>\n);\n\nDisclosureItem.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nDisclosureItem.displayName = 'DisclosureItem';\n\nexport default DisclosureItem;\n","import React, { Children, cloneElement } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\n\nconst CSS_PREFIX = 'vds-disclosure-text-item';\n\nconst DisclosureTextItem = ({ children, expanded, focus, id, index, onClick, onKeyDown }) => (\n  <div className={CSS_PREFIX}>\n    {Children.map(children, child => cloneElement(child, { expanded, focus, id, index, onClick, onKeyDown }))}\n  </div>\n);\n\nDisclosureTextItem.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * on Click\n   */\n  onClick: func,\n\n  /**\n   * on KeyDown\n   */\n  onKeyDown: func\n};\n\nDisclosureTextItem.displayName = 'DisclosureTextItem';\n\nexport default DisclosureTextItem;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-content';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureContent = forwardRef(({ children, className, expanded, focus, id, index, ...remainingProps }, ref) => (\n  <div\n    aria-hidden={expanded ? 'false' : 'true'}\n    ref={ref}\n    className={classnames(\n      CSS_PREFIX,\n      {\n        [`${CSS_STATE}--hidden`]: Boolean(expanded) === false\n      },\n      className\n    )}\n    id={`disclosure-content-${id}`}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nDisclosureContent.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number\n};\n\nDisclosureContent.displayName = 'DisclosureContent';\n\nexport default DisclosureContent;\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\n\nconst CSS_PREFIX = 'vds-disclosure-header';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureHeader = forwardRef(\n  (\n    {\n      children,\n      className,\n      expanded,\n      focus,\n      iconCollapse,\n      iconExpand,\n      id,\n      index,\n      onBlur,\n      onClick,\n      onFocus,\n      onKeyDown,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = useState(focus);\n\n    ref = ref || useRef(null);\n\n    useEffect(() => {\n      if (focus && ref.current) {\n        ref.current.focus();\n      }\n      setFocused(focus);\n    }, [focus, ref]);\n\n    const handleFocus = event => {\n      setFocused(true);\n      if (typeof onFocus === 'function') {\n        onFocus(event);\n      }\n    };\n\n    const handleBlur = event => {\n      setFocused(false);\n      if (typeof onBlur === 'function') {\n        onBlur(event);\n      }\n    };\n\n    const handleClick = (event, id) => {\n      if (typeof onClick === 'function') {\n        onClick(event, id);\n      }\n    };\n\n    const handleKeyDown = (event, id) => {\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event, id);\n      }\n    };\n\n    return (\n      <button\n        aria-controls={`disclosure-content-${id}`}\n        aria-expanded={expanded ? 'true' : 'false'}\n        className={classnames(\n          CSS_PREFIX,\n          {\n            [`${CSS_STATE}--active`]: Boolean(expanded),\n            [`${CSS_STATE}--focus`]: Boolean(focused),\n            'focus-visible': Boolean(focused)\n          },\n          className\n        )}\n        id={`disclosure-header-${id}`}\n        onBlur={handleBlur}\n        onClick={e => handleClick(e, index)}\n        onFocus={handleFocus}\n        onKeyDown={e => handleKeyDown(e, index)}\n        ref={ref}\n        {...remainingProps}\n      >\n        <span className={`${CSS_PREFIX}-icon`}>{expanded ? iconCollapse : iconExpand}</span>\n        {children}\n      </button>\n    );\n  }\n);\n\nDisclosureHeader.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Icon collapsed\n   */\n  iconCollapse: node,\n\n  /**\n   * Icon expanded\n   */\n  iconExpand: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onClick: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onKeyDown: func\n};\n\nDisclosureHeader.defaultProps = {\n  iconCollapse: <Icon name=\"disclosure-collapse\" resolution=\"tiny\" />,\n  iconExpand: <Icon name=\"disclosure-expand\" resolution=\"tiny\" />\n};\n\nDisclosureHeader.displayName = 'DisclosureHeader';\n\nexport default DisclosureHeader;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-header-wrapper';\n\nconst DisclosureHeaderWrapper = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nDisclosureHeaderWrapper.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nDisclosureHeaderWrapper.displayName = 'DisclosureHeaderWrapper';\n\nexport default DisclosureHeaderWrapper;\n","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-disclosure-text-button';\nconst CSS_STATE = 'vds-state';\n\nconst DisclosureTextButton = forwardRef(\n  (\n    {\n      className,\n      expanded,\n      expandedText,\n      focus,\n      id,\n      index,\n      onBlur,\n      onClick,\n      onFocus,\n      onKeyDown,\n      text,\n      ...remainingProps\n    },\n    ref\n  ) => {\n    const [focused, setFocused] = useState(focus);\n\n    ref = ref || useRef(null);\n\n    useEffect(() => {\n      if (focus && ref.current) {\n        ref.current.focus();\n      }\n      setFocused(focus);\n    }, [focus, ref]);\n\n    const handleFocus = event => {\n      setFocused(true);\n      if (typeof onFocus === 'function') {\n        onFocus(event);\n      }\n    };\n\n    const handleBlur = event => {\n      setFocused(false);\n      if (typeof onBlur === 'function') {\n        onBlur(event);\n      }\n    };\n\n    const handleClick = (event, id) => {\n      if (typeof onClick === 'function') {\n        onClick(event, id);\n      }\n    };\n\n    const handleKeyDown = (event, id) => {\n      if (typeof onKeyDown === 'function') {\n        onKeyDown(event, id);\n      }\n    };\n\n    return (\n      <button\n        aria-controls={`disclosure-content-${id}`}\n        aria-expanded={expanded ? 'true' : 'false'}\n        className={classnames(\n          CSS_PREFIX,\n          {\n            [`${CSS_STATE}--active`]: Boolean(expanded),\n            [`${CSS_STATE}--focus`]: Boolean(focused),\n            'focus-visible': Boolean(focused)\n          },\n          className\n        )}\n        id={`disclosure-text-button-${id}`}\n        onBlur={handleBlur}\n        onClick={e => handleClick(e, index)}\n        onFocus={handleFocus}\n        onKeyDown={e => handleKeyDown(e, index)}\n        ref={ref}\n        {...remainingProps}\n      >\n        {expanded && expandedText ? expandedText : text}\n      </button>\n    );\n  }\n);\n\nDisclosureTextButton.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Text shown when expanded\n   */\n  expandedText: string,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Index\n   */\n  index: number,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onClick: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Callback fired when the input element is clicked on\n   */\n  onKeyDown: func,\n\n  /**\n   * Text of the button\n   */\n  text: string\n};\n\nDisclosureTextButton.defaultProps = {\n  expandedText: \"Hide Details\",\n  text: \"Show Details\"\n};\n\nDisclosureTextButton.displayName = 'DisclosureTextButton';\n\nexport default DisclosureTextButton;\n","import React from 'react';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport Disclosure from '../../disclosure';\nimport DisclosureItem from '../../disclosure-item';\nimport DisclosureTextItem from '../../disclosure-text-item';\nimport DisclosureContent from '../../disclosure-content';\nimport DisclosureHeader from '../../disclosure-header';\nimport DisclosureHeaderWrapper from '../../disclosure-header-wrapper';\nimport DisclosureTextButton from '../../disclosure-text-button';\nimport stockPhoto from '@visa/vds-web/dist/_imgs/stockphoto.png';\n\nconst DisclosureExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Expansion Inline Disclosure</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Disclosure>\n          <DisclosureItem>\n            <DisclosureHeader>\n              <DisclosureHeaderWrapper>\n                Why can&apos;t I use my Visa card in U.S-sanctioned countries?\n              </DisclosureHeaderWrapper>\n            </DisclosureHeader>\n            <DisclosureContent>\n              <Typography>\n                As a U.S. company, Visa Inc. and its affiliates must comply with U.S. law, including trade sanctions\n                administered and enforced by the Office of Foreign Assets Control (OFAC). OFAC prohibits or restricts\n                transactions with certain countries, organizations.\n              </Typography>\n            </DisclosureContent>\n          </DisclosureItem>\n          <DisclosureItem>\n            <DisclosureHeader>\n              <DisclosureHeaderWrapper>\n                Can a merchant ask me to provide identification to use my Visa card?\n              </DisclosureHeaderWrapper>\n            </DisclosureHeader>\n            <DisclosureContent>\n              <Typography>\n                In general, a merchant is permitted to ask for identification but cannot require it as a condition of\n                Visa card acceptance. However, there are exceptions, for example, if Visa has granted the merchant\n                permission to require identification under certain circumstances for fraud control.\n              </Typography>\n            </DisclosureContent>\n          </DisclosureItem>\n        </Disclosure>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Text Based Disclosure</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <img alt=\"Adam Smith\" src={stockPhoto} />\n        <Typography tag=\"h3\" style={{ fontSize: '1rem' }}>\n          Caption headline lorem ipsum\n        </Typography>\n        <Disclosure id=\"text-based-example\">\n          <DisclosureTextItem>\n            <DisclosureContent>\n              <Typography>\n                Description details lorem ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit amet\n                consectetur adipiscing elit lorem ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor sit\n                amet consectetur adipiscing elit lorem ipsum dolor sit amet consectetur adipiscing elit.\n              </Typography>\n            </DisclosureContent>\n            <DisclosureTextButton />\n          </DisclosureTextItem>\n        </Disclosure>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default DisclosureExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/disclosure/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/disclosure/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/disclosure/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst DisclosureExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Disclosure\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Disclosure</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Disclosure Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/disclosure/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/disclosure/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/disclosure/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nDisclosureExample.displayName = 'DisclosureExample';\n\nexport default DisclosureExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import { useState } from 'react';\n\nexport default (defaultExpandedId, onChange, allowMultipleExpanded) => {\n  const [focusedId, setFocusedId] = useState();\n\n  const [expandedId, setExpandedId] = useState(\n    !allowMultipleExpanded ? defaultExpandedId.slice(0, 1) : defaultExpandedId\n  );\n\n  const updateFocusedId = (e, index, count) => {\n    const code = e.charCode || e.keyCode;\n\n    if (code === 35) {\n      e.preventDefault();\n      setFocusedId(count - 1);\n    }\n\n    if (code === 36) {\n      e.preventDefault();\n      setFocusedId(0);\n    }\n\n    if (code === 38) {\n      e.preventDefault();\n      setFocusedId(index - 1 < 0 ? count - 1 : index - 1);\n    }\n\n    if (code === 40) {\n      e.preventDefault();\n      setFocusedId((index + 1) % count);\n    }\n  };\n\n  const updateExpandedId = (e, index) => {\n    let ids = [...expandedId];\n    const disclosureIndex = ids.findIndex(i => i === index);\n\n    if (disclosureIndex === -1 && Number.isInteger(index)) {\n      ids = allowMultipleExpanded ? [...ids, index] : [index];\n    }\n\n    if (disclosureIndex > -1) {\n      ids = [...ids.slice(0, disclosureIndex), ...ids.slice(disclosureIndex + 1)];\n    }\n\n    setExpandedId(ids);\n    if (typeof onChange === 'function') {\n      onChange(index);\n    }\n  };\n\n  return { focusedId, expandedId, updateFocusedId, updateExpandedId };\n};\n","module.exports = __webpack_public_path__ + \"static/media/stockphoto.a3f1d696.png\";"],"sourceRoot":""}