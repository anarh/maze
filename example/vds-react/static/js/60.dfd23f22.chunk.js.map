{"version":3,"sources":["components/slider-label/index.js","components/slider-label-text/index.js","components/slider/index.js","components/slider-marker-values/index.js","components/slider-marker-value-item/index.js","components/slider-marker-value-icons/index.js","components/slider-label-value/index.js","components/slider/example/index.js","pages/components/slider.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js"],"names":["SliderLabel","children","className","remainingProps","classnames","displayName","SliderLabelText","forwardRef","ref","propTypes","node","string","defaultProps","Slider","customTrackColors","customLabel","disabled","id","shortid","generate","label","markers","max","min","onChange","onFinalChange","tooltipPlacement","type","showTooltip","step","values","uid","useRef","current","useState","rangeValues","setRangeValues","enableTooltip","setEnableTooltip","length","Boolean","htmlFor","undefined","v","renderTrack","props","style","background","getTrackBackground","colors","backgroundSize","width","offsetWidth","zIndex","renderThumb","index","value","isDragged","aria-labelledby","onFocus","e","onKeyDown","onMouseEnter","onMouseLeave","onBlur","Manager","Reference","Popper","placement","arrowProps","data-placement","SliderMarkerValues","SliderMarkerValueItem","Tag","tag","elementType","SliderMarkerValueIcons","SliderLabelValue","SliderExample","aria-label","ariaHidden","name","resolution","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","Object","entries","filter","doc","description","tabIndex","required","color","Array","isArray","join","defaultValue","ScreenReader","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr"],"mappings":"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","file":"static/js/60.dfd23f22.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-label';\n\nconst SliderLabel = ({ children, className, ...remainingProps }) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n);\n\nSliderLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderLabel.displayName = 'SliderLabel';\n\nexport default SliderLabel;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-label-text';\n\nconst SliderLabelText = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n));\n\nSliderLabelText.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderLabelText.defaultProps = {\n};\n\nSliderLabelText.displayName = 'SliderLabelText';\n\nexport default SliderLabelText;\n","/* eslint-disable react/display-name */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable react/prop-types */\n\nimport React, { forwardRef, useRef, useState } from 'react';\nimport { arrayOf, bool, func, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport { Range, getTrackBackground } from 'react-range';\nimport shortid from 'shortid';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport SliderLabel from '../slider-label';\nimport SliderLabelText from '../slider-label-text';\n\nconst CSS_PREFIX = 'vds-slider';\nconst CSS_STATE = 'vds-state';\n\nconst Slider = forwardRef(({\n  className,\n  customTrackColors,\n  customLabel,\n  disabled,\n  id = shortid.generate(),\n  label,\n  markers,\n  max,\n  min,\n  onChange,\n  onFinalChange,\n  tooltipPlacement,\n  type,\n  showTooltip,\n  step,\n  values,\n  ...remainingProps\n}, ref) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const [rangeValues, setRangeValues] = useState(values);\n  const [enableTooltip, setEnableTooltip] = useState(false);\n  ref = ref || useRef(null);\n\n  return (\n    <div\n      className={classnames(CSS_PREFIX, {\n        [`${CSS_STATE}--default-value`]: rangeValues.length === 1 && rangeValues[0] === min,\n        [`${CSS_STATE}--disabled`]: disabled,\n        [`${CSS_PREFIX}--${type}`]: Boolean(type)\n      }, className)}\n      ref={ref}\n    >\n      {\n        label\n          ? <SliderLabel htmlFor={`slider-${uid}`} id={`slider-label-${uid}`}>\n            <SliderLabelText>{label}</SliderLabelText>\n          </SliderLabel>\n          : undefined\n      }\n      {\n        typeof customLabel === 'function'\n          ? customLabel(rangeValues, uid)\n          : undefined\n      }\n      <Range\n        disabled={disabled}\n        max={max}\n        min={min}\n        onChange={v => {\n          setRangeValues(v);\n          if (typeof onChange === 'function') {\n            onChange(v);\n          }\n        }}\n        onFinalChange={onFinalChange}\n        renderTrack={({ props, children }) => (\n          <div\n            {...props}\n            className={`${CSS_PREFIX}-track`}\n            style={{\n              background: Boolean(customTrackColors) ? getTrackBackground({\n                values: rangeValues,\n                colors: customTrackColors,\n                min,\n                max\n              }) : undefined,\n              backgroundSize: type === 'discrete-number' &&  Boolean(customTrackColors) === false ? `calc(${step - 1}px) 4px` : undefined\n            }}\n          >\n            {children}\n            {\n              ref && ref.current && Boolean(customTrackColors) === false\n                ? <div\n                  className={`${CSS_PREFIX}-range`}\n                  style={{\n                    backgroundSize: type === 'discrete-number' ? `calc(${step - 1}px) 4px` : undefined,\n                    width: ref && ref.current ? ((rangeValues[0] - min) * ref.current.offsetWidth)/(max - min) : 0,\n                    zIndex: -1\n                }} />\n                : undefined\n            }\n          </div>\n        )}\n        renderThumb={({ index, props, isDragged, value }) => (\n          <div\n            {...props}\n            aria-labelledby={`slider-label-${uid}`}\n            className={classnames(`${CSS_PREFIX}-thumb`)}\n            id={`slider-${uid}`}\n            onFocus={e => setEnableTooltip(true)}\n            onKeyDown={e => {\n              setEnableTooltip(true);\n              props.onKeyDown(e);\n            }}\n            onMouseEnter={e => setEnableTooltip(true)}\n            onMouseLeave={e => setEnableTooltip(false)}\n            onBlur={e => setEnableTooltip(false)}\n          >\n          {\n            showTooltip && enableTooltip\n              ? <Manager>\n              <Reference>\n                {({ ref }) => (\n                  <div ref={ref} />\n                )}\n              </Reference>\n              <Popper placement={tooltipPlacement}>\n                {({ ref, style, placement, arrowProps }) => (\n                  <div\n                    className={classnames('vds-tooltip', `${CSS_STATE}--show`)}\n                    data-placement={placement}\n                    ref={ref}\n                    style={style}\n                  >\n                    <div className=\"vds-tooltip-content\">\n                      <span className=\"vds-tooltip-text\">\n                        {value}\n                      </span>\n                    </div>\n                  </div>\n                )}\n              </Popper>\n            </Manager>\n              : undefined\n          }\n          </div>\n        )}\n        step={step}\n        values={rangeValues}\n      />\n      {markers}\n    </div>\n  );\n});\n\nSlider.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Custom label markup\n   */\n  customLabel: func,\n\n  /**\n   * Custom track colors\n   */\n  customTrackColors: arrayOf(string),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Markers\n   */\n  markers: node,\n\n  /**\n   * Max\n   */\n  max: number,\n\n  /**\n   * Min\n   */\n  min: number,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * On final change\n   */\n  onFinalChange: func,\n\n  /**\n   * Show tooltip\n   */\n  showTooltip: bool,\n\n  /**\n   * Step\n   */\n  step: number,\n\n  /**\n   * Tooltip placement\n   */\n  tooltipPlacement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Type of slider\n   */\n  type: oneOf([\n    'continuous-number',\n    'discrete-number'\n  ]),\n\n  /**\n   * Width\n   */\n  values: arrayOf(number),\n\n  /**\n   * Width\n   */\n  width: string\n};\n\nSlider.defaultProps = {\n  max: 100,\n  min: 0,\n  step: 1,\n  tooltipPlacement: 'top',\n  values: [0]\n};\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-marker-values';\n\nconst SliderMarkerValues = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <ul\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n));\n\nSliderMarkerValues.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderMarkerValues.defaultProps = {\n};\n\nSliderMarkerValues.displayName = 'SliderMarkerValues';\n\nexport default SliderMarkerValues;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-marker-value-item';\n\nconst SliderMarkerValueItem = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSliderMarkerValueItem.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSliderMarkerValueItem.defaultProps = {\n  tag: 'li'\n};\n\nSliderMarkerValueItem.displayName = 'SliderMarkerValueItem';\n\nexport default SliderMarkerValueItem;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-marker-value-icons';\n\nconst SliderMarkerValueIcons = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nSliderMarkerValueIcons.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderMarkerValueIcons.defaultProps = {\n};\n\nSliderMarkerValueIcons.displayName = 'SliderMarkerValueIcons';\n\nexport default SliderMarkerValueIcons;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-slider-label-value';\n\nconst SliderLabelValue = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n));\n\nSliderLabelValue.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSliderLabelValue.defaultProps = {\n};\n\nSliderLabelValue.displayName = 'SliderLabelValue';\n\nexport default SliderLabelValue;\n","import React from 'react';\nimport Col from '../../col';\nimport Icon from '../../icon';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Slider from '../../slider';\nimport Typography from '../../typography';\nimport SliderMarkerValues from '../../slider-marker-values';\nimport SliderMarkerValueItem from '../../slider-marker-value-item';\nimport SliderMarkerValueIcons from '../../slider-marker-value-icons';\nimport SliderLabel from '../../slider-label';\nimport SliderLabelText from '../../slider-label-text';\nimport SliderLabelValue from '../../slider-label-value';\n\nconst SliderExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider label=\"Slider control\" />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider with markers</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          label=\"Zoom\"\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>-100%</SliderMarkerValueItem>\n              <SliderMarkerValueItem>0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>+100%</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={100}\n          min={-100}\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider Disabled</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          disabled\n          label=\"Zoom\"\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>-100%</SliderMarkerValueItem>\n              <SliderMarkerValueItem>0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>+100%</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={100}\n          min={-100}\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider with icons</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          label=\"Zoom\"\n          markers={\n            <SliderMarkerValueIcons>\n              <SliderMarkerValueItem tag=\"div\">\n                <Icon\n                  aria-label=\"zoom out\"\n                  ariaHidden={false}\n                  name=\"zoom-out\"\n                  resolution=\"low\"\n                  />\n              </SliderMarkerValueItem>\n              <SliderMarkerValueItem tag=\"div\">\n                <Icon\n                  aria-label=\"zoom in\"\n                  ariaHidden={false}\n                  name=\"zoom-in\"\n                  resolution=\"low\"\n                />\n              </SliderMarkerValueItem>\n            </SliderMarkerValueIcons>\n          }\n          max={100}\n          min={-100}\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider Disabled with icons</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          disabled\n          label=\"Zoom\"\n          markers={\n            <SliderMarkerValueIcons>\n              <SliderMarkerValueItem tag=\"div\">\n                <Icon\n                  aria-label=\"zoom out\"\n                  ariaHidden={false}\n                  name=\"zoom-out\"\n                  resolution=\"low\"\n                  />\n              </SliderMarkerValueItem>\n              <SliderMarkerValueItem tag=\"div\">\n                <Icon\n                  aria-label=\"zoom in\"\n                  ariaHidden={false}\n                  name=\"zoom-in\"\n                  resolution=\"low\"\n                />\n              </SliderMarkerValueItem>\n            </SliderMarkerValueIcons>\n          }\n          max={100}\n          min={-100}\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Continuous Number Slider</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          customLabel={(values, uid) => (\n            <SliderLabel htmlFor={`slider-${uid}`}>\n            <SliderLabelText>Price</SliderLabelText>\n            <SliderLabelValue>${values[0]}</SliderLabelValue>\n          </SliderLabel>)}\n          max={100}\n          min={0}\n          type=\"continuous-number\"\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Continuous Number Slider with markers</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          customLabel={(values, uid) => (\n            <SliderLabel htmlFor={`slider-${uid}`}>\n            <SliderLabelText>Price</SliderLabelText>\n            <SliderLabelValue>${values[0]}</SliderLabelValue>\n          </SliderLabel>)}\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>$0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$70</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$140</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$210</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$280</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={280}\n          min={0}\n          type=\"continuous-number\"\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Continuous Number Slider with tooltip</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          customLabel={(values, uid) => (\n            <SliderLabel htmlFor={`slider-${uid}`}>\n            <SliderLabelText>Price</SliderLabelText>\n            <SliderLabelValue>${values[0]}</SliderLabelValue>\n          </SliderLabel>)}\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>$0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$70</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$140</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$210</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$280</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={280}\n          min={0}\n          showTooltip\n          type=\"continuous-number\"\n          values={[0]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Continuous Number Slider with preselection</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          customLabel={(values, uid) => (\n            <SliderLabel htmlFor={`slider-${uid}`}>\n            <SliderLabelText>Price</SliderLabelText>\n            <SliderLabelValue>${values[0]}</SliderLabelValue>\n          </SliderLabel>)}\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>$0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$70</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$140</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$210</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$280</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={280}\n          min={0}\n          type=\"continuous-number\"\n          values={[140]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Continuous Number Slider Disabled</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          customLabel={(values, uid) => (\n            <SliderLabel htmlFor={`slider-${uid}`}>\n            <SliderLabelText>Price</SliderLabelText>\n            <SliderLabelValue>${values[0]}</SliderLabelValue>\n          </SliderLabel>)}\n          disabled\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>$0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$70</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$140</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$210</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$280</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={280}\n          min={0}\n          type=\"continuous-number\"\n          values={[140]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Discrete Number Slider</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider\n          customLabel={(values, uid) => (\n            <SliderLabel htmlFor={`slider-${uid}`}>\n            <SliderLabelText>Price</SliderLabelText>\n            <SliderLabelValue>${values[0]}</SliderLabelValue>\n          </SliderLabel>)}\n          markers={\n            <SliderMarkerValues>\n              <SliderMarkerValueItem>$0</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$70</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$140</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$210</SliderMarkerValueItem>\n              <SliderMarkerValueItem>$280</SliderMarkerValueItem>\n            </SliderMarkerValues>\n          }\n          max={280}\n          min={0}\n          showTooltip\n          step={70}\n          type=\"discrete-number\"\n          values={[210]}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Slider with custom colors</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Slider customTrackColors={['red', 'green']} label=\"Slider with custom colors\" values={[40]} />\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default SliderExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/slider/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/slider/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/slider/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SliderExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Slider\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Slider</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Slider Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/slider/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/slider/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/slider/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSliderExample.displayName = 'SliderExample';\n\nexport default SliderExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n"],"sourceRoot":""}