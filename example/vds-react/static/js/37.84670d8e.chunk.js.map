{"version":3,"sources":["components/pagination/index.js","components/pagination-control/index.js","components/pagination-overflow/index.js","components/pagination-page/index.js","components/pagination/usePagination.js","components/pagination-wrapper/index.js","components/pagination/example/index.js","pages/components/pagination.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/link/index.js","components/button/index.js"],"names":["Pagination","forwardRef","ref","ariaLabel","children","className","role","remainingProps","aria-label","classnames","propTypes","string","isRequired","node","defaultProps","displayName","PaginationControl","PaginationOverflow","PaginationPage","selected","aria-current","undefined","Boolean","bool","ACTIONS","paginationReducer","state","action","type","payload","selectedPage","totalPages","Array","from","length","_","i","label","pagesToShow","concat","usePagination","reducer","initialState","React","useReducer","usePaginationReducer","paginationState","dispatch","useEffect","PaginationWrapper","firstPageLabel","lastPageLabel","morePagesLabel","nextPageLabel","onButtonClick","pageAriaLabel","previousPageLabel","handleClick","e","page","iconType","disabled","onClick","name","resolution","map","k","key","PaginationExample","useState","stateOne","setStateOne","stateTwo","setStateTwo","paginationOneState","tag","href","reactDocs","require","jsParsed","replace","exampleCode","componentProps","setComponentProps","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","value","v","join","defaultValue","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","Link","inline","cloneElement","element","Button","active","flippable"],"mappings":"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","file":"static/js/37.84670d8e.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination';\n\nconst Pagination = forwardRef(({ ariaLabel, children, className, role, ...remainingProps }, ref) => (\n  <nav\n    aria-label={ariaLabel}\n    className={className}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    <ul className={classnames(CSS_PREFIX)}>\n      {children}\n    </ul>\n  </nav>\n));\n\nPagination.propTypes = {\n  /**\n   * Aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  role: string\n};\n\nPagination.defaultProps = {\n  role: 'navigation'\n};\n\nPagination.displayName = 'Pagination';\n\nexport default Pagination;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination-control';\n\nconst PaginationControl = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nPaginationControl.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPaginationControl.displayName = 'PaginationControl';\n\nexport default PaginationControl;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination-overflow';\n\nconst PaginationOverflow = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nPaginationOverflow.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nPaginationOverflow.displayName = 'PaginationOverflow';\n\nexport default PaginationOverflow;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-pagination-page';\nconst CSS_STATE = 'vds-state';\n\nconst PaginationPage = forwardRef(({ children, className, selected, ...remainingProps }, ref) => (\n  <li\n    aria-current={selected ? 'true' : undefined}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nPaginationPage.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *  Selected\n   */\n  selected: bool\n};\n\nPaginationPage.displayName = 'PaginationPage';\n\nexport default PaginationPage;\n","import React from 'react';\n\nconst ACTIONS = {\n  DEFAULT: 'default',\n  ELLIPSE: 'ellipse',\n  EMPTY: 'empty',\n  LEFT_ELLIPSE: 'left_ellipse',\n  RIGHT_ELLIPSE: 'right_ellipse'\n};\n\nconst paginationReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.EMPTY: {\n      return [];\n    }\n\n    case ACTIONS.DEFAULT: {\n      const { selectedPage, totalPages } = action.payload;\n      return Array.from({ length: totalPages }, (_, i) => ({\n        label: i + 1,\n        selected: i + 1 === selectedPage\n      }));\n    }\n\n    case ACTIONS.RIGHT_ELLIPSE: {\n      const { pagesToShow, selectedPage, totalPages } = action.payload;\n      return Array.from({ length: pagesToShow }, (_, i) => ({\n        label: i + 1,\n        selected: i + 1 === selectedPage\n      })).concat([\n        {\n          label: '...',\n          selected: false\n        },\n        {\n          label: totalPages,\n          selected: false\n        }\n      ]);\n    }\n\n    case ACTIONS.LEFT_ELLIPSE: {\n      const { pagesToShow, selectedPage, totalPages } = action.payload;\n      return [\n        {\n          label: 1,\n          selected: false\n        },\n        {\n          label: '...',\n          selected: false\n        }\n      ].concat(\n        Array.from({ length: pagesToShow }, (_, i) => ({\n          label: totalPages - (pagesToShow - 1 - i),\n          selected: totalPages - (pagesToShow - 1 - i) === selectedPage\n        }))\n      );\n    }\n\n    default: {\n      const { pagesToShow, selectedPage, totalPages } = action.payload;\n      return [\n        {\n          label: 1, // page 1\n          selected: false\n        },\n        {\n          label: '...',\n          selected: false\n        }\n      ]\n        .concat([\n          ...Array.from({ length: pagesToShow }, (_, i) => ({\n            label: selectedPage - (selectedPage % pagesToShow || pagesToShow) + 1 + i,\n            selected: selectedPage - (selectedPage % pagesToShow || pagesToShow) + 1 + i === selectedPage\n          }))\n        ])\n        .concat([\n          {\n            label: '...',\n            selected: false\n          },\n          {\n            label: totalPages,\n            selected: selectedPage === totalPages\n          }\n        ]);\n    }\n  }\n};\n\nconst usePaginationReducer = (reducer = paginationReducer, initialState = []) =>\n  React.useReducer(reducer, initialState);\n\nconst usePagination = ({ pagesToShow, selectedPage, totalPages }) => {\n  const [paginationState, dispatch] = usePaginationReducer();\n\n  React.useEffect(() => {\n    const payload = {\n      pagesToShow,\n      selectedPage,\n      totalPages\n    };\n    if (!selectedPage) {\n      dispatch({ payload, type: ACTIONS.EMPTY });\n    } else if (totalPages <= pagesToShow + 2) {\n      // e.g. [1, 2, 3, 4, 5, 6]\n      dispatch({ payload, type: ACTIONS.DEFAULT });\n    } else if (selectedPage <= pagesToShow) {\n      // e.g. [1, 2, 3, 4, 5, 6, ..., 20]\n      dispatch({ payload, type: ACTIONS.RIGHT_ELLIPSE });\n    } else if (totalPages - selectedPage < pagesToShow) {\n      // e.g. [1, ..., x, x, x, x, 20]\n      dispatch({ payload, type: ACTIONS.LEFT_ELLIPSE });\n      //console.log(\"WER\");\n    } else {\n      dispatch({ payload });\n    }\n  }, [dispatch, pagesToShow, selectedPage, totalPages]);\n\n  return paginationState;\n};\n\nexport { ACTIONS, paginationReducer, usePagination, usePaginationReducer };\n","import React from 'react';\nimport { func, node, number, string } from 'prop-types';\nimport Pagination from '../pagination';\nimport PaginationControl from '../pagination-control';\nimport PaginationOverflow from '../pagination-overflow';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport PaginationPage from '../pagination-page';\nimport { usePagination } from '../pagination/usePagination';\n\nconst PaginationWrapper = ({\n  ariaLabel,\n  className,\n  firstPageLabel,\n  lastPageLabel,\n  morePagesLabel,\n  nextPageLabel,\n  onButtonClick,\n  pageAriaLabel,\n  pagesToShow,\n  previousPageLabel,\n  selectedPage,\n  totalPages,\n  ...remainingProps\n}) => {\n  const paginationState = usePagination({ pagesToShow, selectedPage, totalPages });\n\n  const handleClick = (e, page) => {\n    if (typeof onButtonClick === 'function') {\n      onButtonClick(e, page);\n    }\n  };\n\n  return (\n    <Pagination ariaLabel={ariaLabel} className={className} {...remainingProps}>\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={firstPageLabel}\n          disabled={selectedPage === 1}\n          onClick={e => handleClick(e, 1)}\n        >\n          <Icon name=\"arrow-start\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={previousPageLabel}\n          disabled={selectedPage === 1}\n          onClick={e => handleClick(e, selectedPage - 1)}\n        >\n          <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n      {paginationState.map((page, k) => {\n        if (page.label === '...') {\n          return (\n            <PaginationOverflow key={k}>\n              <ButtonIcon iconType=\"light-tiny\" ariaLabel={morePagesLabel} disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationOverflow>\n          );\n        }\n\n        return (\n          <PaginationPage key={k} selected={page.selected}>\n            <ButtonIcon\n              iconType=\"light-tiny\"\n              ariaLabel={`${pageAriaLabel} ${page.label}`}\n              disabled={page.selected}\n              onClick={e => handleClick(e, page.label)}\n            >\n              {page.label}\n            </ButtonIcon>\n          </PaginationPage>\n        );\n      })}\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={nextPageLabel}\n          disabled={selectedPage === totalPages}\n          onClick={e => handleClick(e, selectedPage + 1)}\n        >\n          <Icon name=\"arrow-next\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n      <PaginationControl>\n        <ButtonIcon\n          iconType=\"light-tiny\"\n          ariaLabel={lastPageLabel}\n          disabled={selectedPage === totalPages}\n          onClick={e => handleClick(e, totalPages)}\n        >\n          <Icon name=\"arrow-end\" resolution=\"tiny\" />\n        </ButtonIcon>\n      </PaginationControl>\n    </Pagination>\n  );\n};\n\nPaginationWrapper.propTypes = {\n  /**\n   * Aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * First page label\n   */\n  firstPageLabel: string,\n\n  /**\n   * Last page label\n   */\n  lastPageLabel: string,\n\n  /**\n   * More pages label\n   */\n  morePagesLabel: string,\n\n  /**\n   * Next page label\n   */\n  nextPageLabel: string,\n\n  /**\n   * Callback fired when a button is clicked.\n   */\n  onButtonClick: func,\n\n  /**\n   * Page aria label\n   */\n  pageAriaLabel: string,\n\n  /**\n   * Pages aria label\n   */\n  pagesToShow: number,\n\n  /**\n   * Previous page label\n   */\n  previousPageLabel: string,\n\n  /**\n   * Selected Page\n   */\n  selectedPage: number,\n\n  /**\n   * Total pages\n   */\n  totalPages: number.isRequired\n};\n\nPaginationWrapper.defaultProps = {\n  firstPageLabel: 'Go to first page',\n  lastPageLabel: 'Go to last page',\n  morePagesLabel: 'more pages',\n  nextPageLabel: 'Go to next page',\n  pageAriaLabel: 'Go to page',\n  pagesToShow: 6,\n  previousPageLabel: 'Go to previous page',\n  selectedPage: 1\n};\n\nPaginationWrapper.displayName = 'PaginationWrapper';\n\nexport default PaginationWrapper;\n","import React, { useState } from 'react';\nimport ButtonIcon from '../../button';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Link from '../../link';\nimport Pagination from '../../pagination';\nimport PaginationControl from '../../pagination-control';\nimport PaginationOverflow from '../../pagination-overflow';\nimport PaginationPage from '../../pagination-page';\nimport PaginationWrapper from '../../pagination-wrapper';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport { usePagination } from '../usePagination';\n\nconst PaginationExample = () => {\n  const [stateOne, setStateOne] = useState({\n    pagesToShow: 6,\n    selectedPage: 2,\n    totalPages: 20\n  });\n\n  const [stateTwo, setStateTwo] = useState({\n    selectedPage: 2,\n    totalPages: 20\n  });\n\n  const paginationOneState = usePagination(stateOne);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination</Typography>\n          <Typography>\n            Use Buttons for Actions and Links to Navigate\n          </Typography>\n          <Typography>\n            Generally speaking, buttons should only be used for actions\n            that are taken within a page and that do not take the user to\n            a new page or location. Buttons work better than links for\n            single page applications (SPAs).\n          </Typography>\n          <Typography>\n            Links should only be used when the user is being taken to a\n            new page. Links work better than buttons for server-side rendered\n            apps in which the page reloads.\n          </Typography>\n          <Typography>\n            Pagination Buttons example (view only, no functionality)\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination ariaLabel=\"Pagination Button example\">\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"first page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-start\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"previous page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationOverflow>\n              <ButtonIcon ariaLabel=\"more pages\" iconType=\"light-tiny\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationOverflow>\n            <PaginationPage selected>\n              <ButtonIcon ariaLabel=\"Go to page 1\" iconType=\"light-tiny\">1</ButtonIcon>\n            </PaginationPage>\n            <PaginationOverflow>\n              <ButtonIcon ariaLabel=\"more pages\" iconType=\"light-tiny\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationOverflow>\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"next page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-next\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon ariaLabel=\"last page\" iconType=\"light-tiny\">\n                <Icon name=\"arrow-end\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n          </Pagination>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination Links example (view only, no functionality)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination ariaLabel=\"Pagination Link example\">\n            <PaginationControl>\n              <Link aria-label=\"first page\" href=\"#\">\n                <Icon name=\"arrow-start\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n            <PaginationControl>\n              <Link aria-label=\"previous page\" href=\"#\">\n                <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n            <PaginationOverflow>\n              <Link aria-label=\"more pages\" href=\"#\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </Link>\n            </PaginationOverflow>\n            <PaginationPage selected>\n              <Link aria-label=\"Go to page 1\" href=\"#\">1</Link>\n            </PaginationPage>\n            <PaginationOverflow>\n              <Link aria-label=\"more pages\" href=\"#\" disabled>\n                <Icon name=\"options\" resolution=\"tiny\" />\n              </Link>\n            </PaginationOverflow>\n            <PaginationControl>\n              <Link aria-label=\"next page\" href=\"#\">\n                <Icon name=\"arrow-next\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n            <PaginationControl>\n              <Link aria-label=\"last page\" href=\"#\">\n                <Icon name=\"arrow-end\" resolution=\"tiny\" />\n              </Link>\n            </PaginationControl>\n          </Pagination>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination through BYO-State and composition</Typography>\n          <Typography>\n            Use this approach to create your own Custom Pagination\n            control or wrapper based on the shape of your data.\n          </Typography>\n          <Typography>\n            You can reuse the CODE below as the basis for a\n            PaginationWrapper in your application.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination ariaLabel=\"Pagination Button example\">\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"Go to first page\"\n                disabled={stateOne.selectedPage === 1}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: 1 })}\n              >\n                <Icon name=\"arrow-start\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"Go to previous page\"\n                disabled={stateOne.selectedPage === 1}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: stateOne.selectedPage - 1 })}\n              >\n                <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            {\n              paginationOneState.map((page, key) => (\n                page.label === '...'\n                  ? <PaginationOverflow key={key}>\n                    <ButtonIcon ariaLabel=\"more pages\" iconType=\"light-tiny\" disabled>\n                      <Icon name=\"options\" resolution=\"tiny\" />\n                    </ButtonIcon>\n                  </PaginationOverflow>\n                  : <PaginationPage selected={page.selected} key={key}>\n                    <ButtonIcon\n                      ariaLabel={`${page.selected ? 'Current page, page' : 'Go to page'} ${page.label}`}\n                      disabled={page.selected}\n                      iconType=\"light-tiny\"\n                      onClick={() => setStateOne({ ...stateOne, selectedPage: page.label })}\n                    >\n                      {page.label}\n                    </ButtonIcon>\n                  </PaginationPage>\n              ))\n            }\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"Go to next page\"\n                disabled={stateOne.selectedPage === stateOne.totalPages}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: stateOne.selectedPage + 1 })}\n              >\n                <Icon name=\"arrow-next\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n            <PaginationControl>\n              <ButtonIcon\n                ariaLabel=\"Go to last page\"\n                disabled={stateOne.selectedPage === stateOne.totalPages}\n                iconType=\"light-tiny\"\n                onClick={() => setStateOne({ ...stateOne, selectedPage: stateOne.totalPages })}\n              >\n                <Icon name=\"arrow-end\" resolution=\"tiny\" />\n              </ButtonIcon>\n            </PaginationControl>\n          </Pagination>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Pagination Wrapper (Legacy)</Typography>\n          <Typography>\n            If this wrapper is not sufficient for\n            your case, use the above example to create your\n            own wrapper based on the shape of your data.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <PaginationWrapper\n            ariaLabel=\"Pagination Button example\"\n            onButtonClick={(e, page) => setStateTwo({ ...stateTwo, selectedPage: page })}\n            selectedPage={stateTwo.selectedPage}\n            totalPages={stateTwo.totalPages}\n          />\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default PaginationExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/pagination/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/pagination/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/pagination/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst PaginationExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Pagination\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Pagination</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/pagination`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Pagination Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/pagination/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Pagination Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/pagination/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/pagination/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/pagination/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/pagination/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nPaginationExample.displayName = 'PaginationExample';\n\nexport default PaginationExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn';\nconst CSS_STATE = 'vds-state';\n\nconst Button = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  flippable,\n  ...remainingProps\n}, ref) => (\n  <button\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </button>\n));\n\nButton.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n"],"sourceRoot":""}