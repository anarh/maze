(this["webpackJsonp@visa/vds-react"]=this["webpackJsonp@visa/vds-react"]||[]).push([[45],{302:function(e,n,a){"use strict";a.r(n);var t=a(65),r=a(539),l=a(0),o=a.n(l),i=a(536),c=a.n(i),s=a(2),u=a.n(s),d=a(544),p=a(543),m=a(40),v=a(8),h=a(528),f=a(18),g=a(23),y=a(16),E=a(527),w=a(66),S=a(140),T=a(529),b=a(530),C=a(531),x=a(532),O=a(533),R=a(7),V=a(13),D=a(560),I=a(582),M=a(758),k=a(1087),B=a(973),_=function(){var e=Object(l.useState)({valid:!1,validated:!1,value:""}),n=Object(t.a)(e,2),a=n[0],r=n[1],i=Object(l.useRef)(),c=Object(l.useState)({day:"",month:"",showError:!1,valid:!1,validDay:!1,validMonth:!1,validYear:!1,validated:!1,year:""}),s=Object(t.a)(c,2),u=s[0],d=s[1],p=Object(l.useRef)(),m=Object(l.useRef)(),h=Object(l.useRef)(),f=function(){var e=String(p.current.value),n=m.current.value,a=String(h.current.value),t=e.length>0,r=n.length>0,l=a.length>0;d(Object(V.a)({},u,{day:e,month:n,showError:!1,validDay:t,validMonth:r,validYear:l,validated:!1,year:a}))};return o.a.createElement(g.a,null,o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h2"},"Select"),o.a.createElement(R.a,null,"Select takes all native React props directly, (e.g. onChange, etc)"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(M.a,{label:"Card Type",defaultValue:""},o.a.createElement("option",{value:"",disabled:!0,hidden:!0}),o.a.createElement("option",{value:"silver_card"},"Silver Signature Card"),o.a.createElement("option",{value:"signature_card"},"Visa Signature Card"),o.a.createElement("option",{value:"platinum_card"},"Platinum Visa Card"),o.a.createElement("option",{value:"premium_card"},"Premium Card With An Unnecessarily Long Description")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h2"},"Select with preselection"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(M.a,{label:"Card Type",defaultValue:"signature_card"},o.a.createElement("option",{value:"silver_card"},"Silver Signature Card"),o.a.createElement("option",{value:"signature_card"},"Visa Signature Card"),o.a.createElement("option",{value:"platinum_card"},"Platinum Visa Card"),o.a.createElement("option",{value:"premium_card"},"Premium Card With An Unnecessarily Long Description")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h2"},"Select with validation"),o.a.createElement(R.a,{variant:"caption"},"*=required"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(M.a,{errorText:"Error: A card type is required",helpText:a.valid?"Successfully selected card type":"Please select a card type",invalid:a.validated&&!a.valid,label:"Card Type *",onChange:function(e){r(Object(V.a)({},a,{validated:!1,value:e.target.value}))},ref:i,required:!0,showErrorText:!a.valid,showHelpText:Boolean(!a.validated||a.valid),value:a.value},o.a.createElement("option",{value:"",disabled:!0,hidden:!0}),o.a.createElement("option",{value:"silver_card"},"Silver Signature Card"),o.a.createElement("option",{value:"signature_card"},"Visa Signature Card"),o.a.createElement("option",{value:"platinum_card"},"Platinum Visa Card"),o.a.createElement("option",{value:"premium_card"},"Premium Card With An Unnecessarily Long Description")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(I.a,null,o.a.createElement(D.a,{colorScheme:"secondary",onClick:function(){r({valid:!1,validated:!1,value:""}),i.current.focus()}},"Reset"),o.a.createElement(D.a,{onClick:function(){var e=a.value&&a.value.length>0;r(Object(V.a)({},a,{valid:e,validated:!0})),e||i.current.focus()}},"Validate")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h2"},"Select Group with validity states"),o.a.createElement(R.a,{variant:"caption"},"*=required"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(k.a,{errorText:"Error: Please provide a valid Date of Birth",helpText:u.valid?"Successfully selected date of birth":"Please fill out your Date of Birth info field",invalid:!u.valid&&u.validated,legend:"Date of Birth",showErrorText:u.showError,showHelpText:Boolean(!u.validated||u.valid)},o.a.createElement(M.a,{errorText:"Error: Empty month",invalid:!u.validMonth&&u.validated,label:"Month *",onChange:f,ref:m,required:!0,showErrorText:!u.validMonth&&!u.showError,value:u.month},o.a.createElement("option",{value:"",disabled:!0,hidden:!0}),["January","February","March","April","May","June","July","August","September","October","November","December"].map((function(e,n){return o.a.createElement("option",{key:n,value:e.substring(0,3).toLowerCase()},e)}))),o.a.createElement(B.a,null," / "),o.a.createElement(M.a,{errorText:"Error: Empty day",invalid:!u.validDay&&u.validated,label:"Day *",onChange:f,ref:p,required:!0,showErrorText:!u.validDay&&!u.showError,value:u.day},o.a.createElement("option",{value:"",disabled:!0,hidden:!0}),Array.from(new Array(31),(function(e,n){return n+1})).map((function(e,n){return o.a.createElement("option",{key:n,value:e},e)}))),o.a.createElement(B.a,null," / "),o.a.createElement(M.a,{errorText:"Error: Empty year",invalid:!u.validYear&&u.validated,label:"Year *",onChange:f,ref:h,required:!0,showErrorText:!u.validYear&&!u.showError,value:u.year},o.a.createElement("option",{value:"",disabled:!0,hidden:!0}),Array.from(new Array((new Date).getFullYear()-1900),(function(e,n){return n+1900})).map((function(e,n){return o.a.createElement("option",{key:n,value:e},e)})))))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(I.a,null,o.a.createElement(D.a,{colorScheme:"secondary",onClick:function(){d({day:"",month:"",showError:!1,valid:!1,validDay:!1,validMonth:!1,validYear:!1,validated:!1,year:""}),m.current.focus()}},"Reset"),o.a.createElement(D.a,{onClick:function(){var e=u.validDay&&u.validMonth&&u.validYear,n=!u.validDay&&!u.validMonth&&!u.validYear;d(Object(V.a)({},u,{showError:n,valid:e,validated:!0})),u.valid||(u.validMonth?u.validDay?u.validYear||h.current.focus():p.current.focus():m.current.focus())}},"Validate")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h2"},"Select (ReadOnly)"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(M.a,{label:"Select Card",readOnly:!0,value:"Visa Signature Card"},o.a.createElement("option",{value:"",disabled:!0,hidden:!0}),o.a.createElement("option",{value:"silver_card"},"Silver Signature Card"),o.a.createElement("option",{value:"signature_card"},"Visa Signature Card"),o.a.createElement("option",{value:"platinum_card"},"Platinum Visa Card"),o.a.createElement("option",{value:"premium_card"},"Premium Card With An Unnecessarily Long Description")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h2"},"Select (Disabled)"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(M.a,{disabled:!0,label:"Select Card",value:"signature_card"},o.a.createElement("option",{value:"",disabled:!0}),o.a.createElement("option",{value:"silver_card"},"Silver Signature Card"),o.a.createElement("option",{value:"signature_card"},"Visa Signature Card"),o.a.createElement("option",{value:"platinum_card"},"Platinum Visa Card"),o.a.createElement("option",{value:"premium_card"},"Premium Card With An Unnecessarily Long Description")))))},P=a(540),j=[a(541)],N=a(542),A="import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputSelectFocusbox from '../input-select-focusbox';\nimport InputMessage from '../input-message';\nimport InputSelect from '../input-select';\nimport InputOption from '../input-option';\nimport InputHint from '../input-hint';\nimport InputText from '../input-text';\nimport Icon from '../icon';\n\nconst Select = forwardRef(({\n  ariaLabel,\n  autoComplete,\n  caretIcon,\n  children,\n  className,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  required,\n  readOnly,\n  showErrorText,\n  showHelpText,\n  ...remainingProps\n}, ref) => {\n  const [focused, setFocused] = useState();\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={invalid}\n    >\n      {label ? <InputLabel htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        { placeholder ? <InputHint>{placeholder}</InputHint> : undefined}\n        { readOnly ?\n          <InputText\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={invalid}\n            autoComplete={autoComplete}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onFocus={handleFocus}\n            readOnly\n            required={required}\n            ref={ref}\n            {...remainingProps}\n          />\n          :\n          <InputSelect\n            aria-describedby={`input-message-help-${uid} input-message-error-${uid}`}\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={invalid}\n            autoComplete={autoComplete}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            readOnly={readOnly}\n            ref={ref}\n            required={required}\n            {...remainingProps}\n          >\n            {children}\n          </InputSelect>\n        }\n        <InputOption>{caretIcon}</InputOption>\n      </InputBar>\n      <InputSelectFocusbox />\n      <InputMessage\n        id={`input-message-help-${uid}`}\n        invalid={invalid}\n        show\n      >\n      {\n        showHelpText && Boolean(helpText) && focused\n          ? <Fragment>{helpIcon} {helpText}</Fragment>\n          : ''\n      }\n      </InputMessage>\n      <InputMessage\n        id={`input-message-error-${uid}`}\n        invalid\n        show\n      >\n        {\n          invalid && Boolean(errorText)\n            ? <Fragment>{errorIcon} {errorText}</Fragment>\n            : ''\n        }\n      </InputMessage>\n    </InputContainer>\n  );\n});\n\nSelect.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   * AutoComplete\n   */\n  autoComplete: string,\n\n  /**\n   * Input Caret Icon\n   */\n  caretIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Input Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   * Error Text\n   */\n  errorText: node,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Hint\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n    * Required\n    */\n  required: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Value\n   */\n  value: string\n};\n\nSelect.defaultProps = {\n  autoComplete: 'off',\n  caretIcon: <Icon name=\"arrow-expand\" resolution=\"tiny\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />,\n  helpIcon: <Icon name=\"info\" resolution=\"tiny\" />\n};\n\nSelect.displayName = 'Select';\n\nexport default Select;\n".replace("= memo(({","= React.forwardRef(({").replace("cloneElement(","React.cloneElement("),q='import React, { useState, useRef } from \'react\';\nimport ButtonText from \'../../button-text\';\nimport ButtonGroup from \'../../button-group\';\nimport Col from \'../../col\';\nimport Grid from \'../../grid\';\nimport Row from \'../../row\';\nimport Select from \'../../select\';\nimport SelectGroup from \'../../select-group\';\nimport SelectGroupDelimiter from \'../../select-group-delimiter\';\nimport Typography from \'../../typography\';\n\nconst SelectExample = () => {\n  const [stateOne, setStateOne] = useState({\n    valid: false,\n    validated: false,\n    value: \'\'\n  });\n\n  const refOneValidation = useRef();\n\n  const handleStateOne = e => {\n    setStateOne({\n      ...stateOne,\n      validated: false,\n      value: e.target.value\n    });\n  };\n\n  const handleStateOneSubmit = () => {\n    const valid = stateOne.value && stateOne.value.length > 0;\n\n    setStateOne({\n      ...stateOne,\n      valid,\n      validated: true\n    });\n\n    if (!valid) {\n      refOneValidation.current.focus();\n    }\n  };\n\n  const handleStateOneReset = () => {\n    setStateOne({\n      valid: false,\n      validated: false,\n      value: \'\'\n    });\n\n    refOneValidation.current.focus();\n  };\n\n  const [stateTwo, setStateTwo] = useState({\n    day: \'\',\n    month: \'\',\n    showError: false,\n    valid: false,\n    validDay: false,\n    validMonth: false,\n    validYear: false,\n    validated: false,\n    year: \'\'\n  });\n\n  const refTwoValidationDay = useRef();\n  const refTwoValidationMonth = useRef();\n  const refTwoValidationYear = useRef();\n\n  const handleStateTwo = () => {\n    const day = String(refTwoValidationDay.current.value);\n    const month = refTwoValidationMonth.current.value;\n    const year = String(refTwoValidationYear.current.value);\n\n    const validDay = day.length > 0;\n    const validMonth = month.length > 0;\n    const validYear = year.length > 0;\n\n    setStateTwo({\n      ...stateTwo,\n      day,\n      month,\n      showError: false,\n      validDay,\n      validMonth,\n      validYear,\n      validated: false,\n      year\n    });\n  };\n\n  const handleStateTwoSubmit = () => {\n    const test = stateTwo.validDay && stateTwo.validMonth && stateTwo.validYear;\n    const test2 = !stateTwo.validDay && !stateTwo.validMonth && !stateTwo.validYear;\n\n    setStateTwo({\n      ...stateTwo,\n      showError: test2,\n      valid: test,\n      validated: true\n    });\n\n    // @TODO: focus on first invalid select\n    if (!stateTwo.valid) {\n      if (!stateTwo.validMonth) {\n        refTwoValidationMonth.current.focus();\n      } else if (!stateTwo.validDay) {\n        refTwoValidationDay.current.focus();\n      } else if (!stateTwo.validYear) {\n        refTwoValidationYear.current.focus();\n      }\n    }\n  };\n\n  const handleStateTwoReset = () => {\n    setStateTwo({\n      day: \'\',\n      month: \'\',\n      showError: false,\n      valid: false,\n      validDay: false,\n      validMonth: false,\n      validYear: false,\n      validated: false,\n      year: \'\'\n    });\n\n    refTwoValidationMonth.current.focus();\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag="h2">Select</Typography>\n          <Typography>Select takes all native React props directly, (e.g. onChange, etc)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label="Card Type"\n            defaultValue=""\n          >\n            <option value="" disabled hidden />\n            <option value="silver_card">Silver Signature Card</option>\n            <option value="signature_card">Visa Signature Card</option>\n            <option value="platinum_card">Platinum Visa Card</option>\n            <option value="premium_card">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Select with preselection</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label="Card Type"\n            defaultValue="signature_card"\n          >\n            <option value="silver_card">Silver Signature Card</option>\n            <option value="signature_card">Visa Signature Card</option>\n            <option value="platinum_card">Platinum Visa Card</option>\n            <option value="premium_card">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Select with validation</Typography>\n          <Typography variant="caption">*=required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            errorText="Error: A card type is required"\n            helpText={stateOne.valid ? "Successfully selected card type" : "Please select a card type"}\n            invalid={stateOne.validated && !stateOne.valid}\n            label="Card Type *"\n            onChange={handleStateOne}\n            ref={refOneValidation}\n            required\n            showErrorText={!stateOne.valid}\n            showHelpText={Boolean(!stateOne.validated || stateOne.valid)}\n            value={stateOne.value}\n          >\n            <option value="" disabled hidden />\n            <option value="silver_card">Silver Signature Card</option>\n            <option value="signature_card">Visa Signature Card</option>\n            <option value="platinum_card">Platinum Visa Card</option>\n            <option value="premium_card">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme="secondary"\n              onClick={handleStateOneReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateOneSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Select Group with validity states</Typography>\n          <Typography variant="caption">*=required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <SelectGroup\n            errorText="Error: Please provide a valid Date of Birth"\n            helpText={stateTwo.valid ? "Successfully selected date of birth" : "Please fill out your Date of Birth info field"}\n            invalid={!stateTwo.valid && stateTwo.validated}\n            legend="Date of Birth"\n            showErrorText={stateTwo.showError}\n            showHelpText={Boolean(!stateTwo.validated || stateTwo.valid)}\n          >\n            <Select\n              errorText="Error: Empty month"\n              invalid={!stateTwo.validMonth && stateTwo.validated}\n              label="Month *"\n              onChange={handleStateTwo}\n              ref={refTwoValidationMonth}\n              required\n              showErrorText={!stateTwo.validMonth && !stateTwo.showError}\n              value={stateTwo.month}\n            >\n              <option value="" disabled hidden />\n              {\n                [\n                  \'January\',\n                  \'February\',\n                  \'March\',\n                  \'April\',\n                  \'May\',\n                  \'June\',\n                  \'July\',\n                  \'August\',\n                  \'September\',\n                  \'October\',\n                  \'November\',\n                  \'December\'\n                ].map((e, i) => (\n                  <option key={i} value={e.substring(0, 3).toLowerCase()}>{e}</option>\n                ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <Select\n              errorText="Error: Empty day"\n              invalid={!stateTwo.validDay && stateTwo.validated}\n              label="Day *"\n              onChange={handleStateTwo}\n              ref={refTwoValidationDay}\n              required\n              showErrorText={!stateTwo.validDay && !stateTwo.showError}\n              value={stateTwo.day}\n            >\n              <option value="" disabled hidden />\n              {\n                Array\n                  .from(new Array(31), (x, i) => (i + 1))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <Select\n              errorText="Error: Empty year"\n              invalid={!stateTwo.validYear && stateTwo.validated}\n              label="Year *"\n              onChange={handleStateTwo}\n              ref={refTwoValidationYear}\n              required\n              showErrorText={!stateTwo.validYear && !stateTwo.showError}\n              value={stateTwo.year}\n            >\n              <option value="" disabled hidden />\n              {\n                Array\n                  .from(new Array((new Date()).getFullYear() - 1900), (x, i) => (i + 1900))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n          </SelectGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme="secondary"\n              onClick={handleStateTwoReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateTwoSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Select (ReadOnly)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label="Select Card"\n            readOnly\n            value="Visa Signature Card"\n          >\n            <option value="" disabled hidden />\n            <option value="silver_card">Silver Signature Card</option>\n            <option value="signature_card">Visa Signature Card</option>\n            <option value="platinum_card">Platinum Visa Card</option>\n            <option value="premium_card">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag="h2">Select (Disabled)</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            disabled\n            label="Select Card"\n            value="signature_card"\n          >\n            <option value="" disabled />\n            <option value="silver_card">Silver Signature Card</option>\n            <option value="signature_card">Visa Signature Card</option>\n            <option value="platinum_card">Platinum Visa Card</option>\n            <option value="premium_card">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SelectExample;\n'.replace(/'..\/..\//g,"'@visa/vds-react/"),F=function(e){var n=Object(r.a)({},e),a=Object(l.useState)({}),i=Object(t.a)(a,2),s=i[0],V=i[1];return Object(l.useEffect)((function(){try{V(N.parse(A))}catch(e){console.log("\n        React-docgen could not parse props for Select\n        check for fix here https://github.com/reactjs/react-docgen/issues/342")}}),[]),o.a.createElement(g.a,{siblingOfStickyFooter:!0},o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(R.a,{tag:"h1"},"Select"))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(S.a,null,o.a.createElement(w.a,{tag:o.a.createElement(m.c,{exact:!0,to:"".concat("/vds-react","/components/select"),activeClassName:"vds-state--selected"})},o.a.createElement(f.a,{name:"log",resolution:"low"}),"Select Example"),o.a.createElement(w.a,{tag:o.a.createElement(m.c,{exact:!0,to:"".concat("/vds-react","/components/select/code"),activeClassName:"vds-state--selected"})},o.a.createElement(f.a,{name:"code-fork-code-alt",resolution:"low"}),"JSX of Example"),o.a.createElement(w.a,{tag:o.a.createElement(m.c,{exact:!0,to:"".concat("/vds-react","/components/select/html"),activeClassName:"vds-state--selected"})},o.a.createElement(f.a,{name:"code-fork-code-alt",resolution:"low"}),"HTML of Example")))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement("div",{className:u()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/select"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/select")})},o.a.createElement(_,n)),o.a.createElement("div",{className:u()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/select/code"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/select/code")})},o.a.createElement(d.a,Object.assign({},d.b,{theme:p.a,code:q,language:"jsx"}),(function(e){var n=e.className,a=e.style,t=e.tokens,r=e.getLineProps,l=e.getTokenProps;return o.a.createElement("pre",{className:n,style:a},t.map((function(e,n){return o.a.createElement("div",Object.assign({},r({key:n,line:e}),{key:n}),o.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},n+1),e.map((function(e,n){return o.a.createElement("span",Object.assign({},l({key:n,token:e}),{key:n}))})))})))}))),o.a.createElement("div",{className:u()({"vds-state--hidden":n.match.path!=="".concat("/vds-react","/components/select/html"),"vds-state--show":n.match.path==="".concat("/vds-react","/components/select/html")})},o.a.createElement(d.a,Object.assign({},d.b,{theme:p.a,code:P.format(c.a.renderToStaticMarkup(o.a.createElement(_,n)),{css:"ignore",parser:"html",plugins:j,printWidth:120}),language:"html"}),(function(e){var n=e.className,a=e.style,t=e.tokens,r=e.getLineProps,l=e.getTokenProps;return o.a.createElement("pre",{className:n,style:a},t.map((function(e,n){return o.a.createElement("div",Object.assign({},r({key:n,line:e}),{key:n}),o.a.createElement("span",{style:{display:"inline-block",opacity:"0.3",userSelect:"none",width:"2em"}},n+1),e.map((function(e,n){return o.a.createElement("span",Object.assign({},l({key:n,token:e}),{key:n}))})))})))}))))),o.a.createElement(y.a,null,o.a.createElement(v.a,null,o.a.createElement(h.a,{className:u()(["components"]),dividerLines:!0,size:"compact"},o.a.createElement(E.a,{tag:"caption"},"Props"),o.a.createElement(x.a,null,o.a.createElement(O.a,{className:"vds-tr"},o.a.createElement(C.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Prop"),o.a.createElement(C.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Type"),o.a.createElement(C.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Default"),o.a.createElement(C.a,{"aria-sort":"none",role:"columnheader",scope:"col"},"Description"))),o.a.createElement(T.a,null,s.props&&Object.entries(s.props).filter((function(e){return"@ignore"!==e[1].description})).map((function(e,n){return o.a.createElement(O.a,{className:"vds-tr",key:n},o.a.createElement(b.a,{className:"vds-td"},e[0]," ",e[1].required?o.a.createElement("strong",null," - required"):""),o.a.createElement(b.a,{className:"vds-td"},o.a.createElement("strong",null,e[1].type.name),e[1].type.value&&e[1].type.value.length?o.a.createElement("small",{style:{color:"#1a1f71"}},o.a.createElement("br",null),Array.isArray(e[1].type.value)?e[1].type.value.map((function(e){return e.value||e.name})).join(", "):"string"===typeof e[1].type.value?e[1].type.value:void 0):""),o.a.createElement(b.a,{className:"vds-td"},e[1].defaultValue?e[1].defaultValue.value:""),o.a.createElement(b.a,{className:"vds-td"},e[1].description))})))))))};F.displayName="SelectExample";n.default=F},534:function(e,n,a){"use strict";var t,r,l,o=a(551),i="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-";function c(){l=!1}function s(e){if(e){if(e!==t){if(e.length!==i.length)throw new Error("Custom alphabet for shortid must be "+i.length+" unique characters. You submitted "+e.length+" characters: "+e);var n=e.split("").filter((function(e,n,a){return n!==a.lastIndexOf(e)}));if(n.length)throw new Error("Custom alphabet for shortid must be "+i.length+" unique characters. These characters were not unique: "+n.join(", "));t=e,c()}}else t!==i&&(t=i,c())}function u(){return l||(l=function(){t||s(i);for(var e,n=t.split(""),a=[],r=o.nextValue();n.length>0;)r=o.nextValue(),e=Math.floor(r*n.length),a.push(n.splice(e,1)[0]);return a.join("")}())}e.exports={get:function(){return t||i},characters:function(e){return s(e),t},seed:function(e){o.seed(e),r!==e&&(c(),r=e)},lookup:function(e){return u()[e]},shuffled:u}},545:function(e,n,a){"use strict";e.exports=a(550)},550:function(e,n,a){"use strict";var t=a(534),r=a(552),l=a(556),o=a(557)||0;function i(){return r(o)}e.exports=i,e.exports.generate=i,e.exports.seed=function(n){return t.seed(n),e.exports},e.exports.worker=function(n){return o=n,e.exports},e.exports.characters=function(e){return void 0!==e&&t.characters(e),t.shuffled()},e.exports.isValid=l},551:function(e,n,a){"use strict";var t=1;e.exports={nextValue:function(){return(t=(9301*t+49297)%233280)/233280},seed:function(e){t=e}}},552:function(e,n,a){"use strict";var t,r,l=a(553);a(534);e.exports=function(e){var n="",a=Math.floor(.001*(Date.now()-1567752802062));return a===r?t++:(t=0,r=a),n+=l(7),n+=l(e),t>0&&(n+=l(t)),n+=l(a)}},553:function(e,n,a){"use strict";var t=a(534),r=a(554),l=a(555);e.exports=function(e){for(var n,a=0,o="";!n;)o+=l(r,t.get(),1),n=e<Math.pow(16,a+1),a++;return o}},554:function(e,n,a){"use strict";var t,r="object"===typeof window&&(window.crypto||window.msCrypto);t=r&&r.getRandomValues?function(e){return r.getRandomValues(new Uint8Array(e))}:function(e){for(var n=[],a=0;a<e;a++)n.push(Math.floor(256*Math.random()));return n},e.exports=t},555:function(e,n){e.exports=function(e,n,a){for(var t=(2<<Math.log(n.length-1)/Math.LN2)-1,r=-~(1.6*t*a/n.length),l="";;)for(var o=e(r),i=r;i--;)if((l+=n[o[i]&t]||"").length===+a)return l}},556:function(e,n,a){"use strict";var t=a(534);e.exports=function(e){return!(!e||"string"!==typeof e||e.length<6)&&!new RegExp("[^"+t.get().replace(/[|\\{}()[\]^$+*?.-]/g,"\\$&")+"]").test(e)}},557:function(e,n,a){"use strict";e.exports=0},582:function(e,n,a){"use strict";var t=a(4),r=a(5),l=a(0),o=a.n(l),i=a(2),c=a.n(i),s=function(e){var n=e.children,a=e.className,l=e.direction,i=Object(r.a)(e,["children","className","direction"]);return o.a.createElement("div",Object.assign({className:c()("vds-btn-group",Object(t.a)({},"".concat("vds-btn-group","--").concat(l),Boolean(l)),a)},i),n)};s.displayName="ButtonGroup",n.a=s}}]);
//# sourceMappingURL=45.620323e8.chunk.js.map