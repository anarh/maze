{"version":3,"sources":["components/radio-error-message/index.js","components/radio-group/index.js","components/radio-list/index.js","components/radio-list-item/index.js","components/radio-group-legend/index.js","components/radio-group-control/index.js","components/radio/example/index.js","pages/components/radio.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/link/index.js","components/radio/index.js"],"names":["RadioErrorMessage","ariaAtomic","ariaLive","children","className","remainingProps","aria-atomic","aria-live","classnames","defaultProps","displayName","RadioGroup","disabled","invalid","Boolean","RadioList","orientation","RadioListItem","RadioGroupLegend","getChild","child","index","value","cloneElement","checked","props","key","RadioGroupControl","errorIcon","errorMessage","isVertical","legend","onChange","undefined","Children","map","name","resolution","RadioExample","refOneValidation","useRef","refTwoValidation","refThreeValidation","useState","showError","setShowError","selectedValue","stateOne","setStateOne","pizzas","id","label","selectedPizza","stateThree","setStateThree","selected","stateFour","setStateFour","handleChangeOne","e","target","handleChangeFour","tag","defaultChecked","pizza","k","href","inline","aria-required","required","aria-describedby","ref","onClick","current","focus","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","exact","to","process","activeClassName","match","path","theme","code","language","style","tokens","getLineProps","getTokenProps","line","i","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","Object","entries","filter","doc","description","type","length","color","Array","isArray","v","join","defaultValue","ScreenReader","forwardRef","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","colorScheme","flippable","isFullWidth","tabIndex","includes","oneOfType","number","Link","element","Radio","shortid","generate","onBlur","onFocus","focused","setFocused","check","setCheck","uid","event","htmlFor","stopPropagation","onKeyPress"],"mappings":"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","file":"static/js/31.19826942.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-radio-error-message';\n\nconst RadioErrorMessage = ({ ariaAtomic, ariaLive, children, className, ...remainingProps }) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={ariaLive}\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nRadioErrorMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: string,\n\n  /**\n   * Aria Live\n   */\n  ariaLive: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nRadioErrorMessage.defaultProps = {\n  ariaAtomic: 'true',\n  ariaLive: 'assertive'\n};\n\nRadioErrorMessage.displayName = 'RadioErrorMessage';\n\nexport default RadioErrorMessage;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-radio-group';\n\nconst RadioGroup = ({ children, className, disabled, invalid, ...remainingProps }) => (\n  <fieldset\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--disabled`]: Boolean(disabled),\n      [`${CSS_PREFIX}--error-required`]: Boolean(invalid)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </fieldset>\n);\n\nRadioGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool\n};\n\nRadioGroup.displayName = 'RadioGroup';\n\nexport default RadioGroup;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-radio-list';\n\nconst RadioList = ({ children, className, orientation, ...remainingProps }) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n);\n\nRadioList.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * orientation\n   */\n  orientation: oneOf(['horizontal', 'vertical'])\n};\n\nRadioList.displayName = 'RadioList';\n\nexport default RadioList;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-radio-list-item';\n\nconst RadioListItem = ({ children, className, ...remainingProps }) => (\n  <li\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n);\n\nRadioListItem.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nRadioListItem.displayName = 'RadioListItem';\n\nexport default RadioListItem;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-radio-group-legend';\n\nconst RadioGroupLegend = ({ children, className, ...remainingProps }) => (\n  <legend\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </legend>\n);\n\nRadioGroupLegend.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nRadioGroupLegend.displayName = 'RadioGroupLegend';\n\nexport default RadioGroupLegend;\n","import React, { Children, cloneElement, Fragment } from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport RadioGroup from '../radio-group';\nimport RadioList from '../radio-list';\nimport RadioListItem from '../radio-list-item';\nimport RadioGroupLegend from '../radio-group-legend';\nimport RadioErrorMessage from '../radio-error-message';\nimport Icon from '../icon';\n\nconst getChild = ({ child, disabled, index, invalid, value }) =>\n  cloneElement(child, {\n    checked: child.props.value === value,\n    disabled: child.props.disabled || disabled,\n    invalid: child.props.invalid || invalid,\n    key: index\n  });\n\nconst RadioGroupControl = ({\n  children,\n  disabled,\n  errorIcon,\n  errorMessage,\n  invalid,\n  isVertical,\n  legend,\n  onChange,\n  value,\n  ...remainingProps\n}) => (\n  <RadioGroup\n    disabled={disabled}\n    invalid={invalid}\n    onChange={onChange}\n    {...remainingProps}\n  >\n    { legend ? <RadioGroupLegend>{legend}</RadioGroupLegend> : undefined }\n    {\n      isVertical\n        ? <RadioList>\n          {\n            Children.map(children, (child, index) => (\n              <RadioListItem key={index}>\n                {\n                  getChild({\n                    child,\n                    disabled,\n                    index,\n                    invalid,\n                    value\n                  })\n                }\n              </RadioListItem>\n            ))\n          }\n        </RadioList>\n        : <Fragment>\n          {\n            Children.map(children, (child, index) => (\n              getChild({\n                child,\n                disabled,\n                index,\n                invalid,\n                value\n              }))\n            )\n          }\n        </Fragment>\n    }\n    {\n      invalid && errorMessage\n        ? <RadioErrorMessage>{errorIcon} {errorMessage}</RadioErrorMessage>\n        : undefined\n    }\n  </RadioGroup>\n);\n\nRadioGroupControl.propTypes = {\n  /**\n   * Content\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * Error icon\n   */\n  errorIcon: node,\n\n  /**\n   * Error message\n   */\n  errorMessage: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Is Vertical\n   */\n  isVertical: bool,\n\n  /**\n   * Legend\n   */\n  legend: string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   * @param {object} event\n   */\n  onChange: func,\n\n  /**\n   * Value of the selected radio button.\n   */\n  value: string\n};\n\nRadioGroupControl.defaultProps = {\n  errorIcon: <Icon name=\"error\" resolution=\"tiny\" />\n};\n\nRadioGroupControl.displayName = 'RadioGroupControl';\n\nexport default RadioGroupControl;\nexport { getChild };\n","/* eslint-disable react/prop-types */\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Link from '../../link';\nimport Radio from '../../radio';\nimport RadioErrorMessage from '../../radio-error-message';\nimport RadioGroup from '../../radio-group';\nimport RadioGroupControl from '../../radio-group-control';\nimport RadioGroupLegend from '../../radio-group-legend';\nimport RadioList from '../../radio-list';\nimport RadioListItem from '../../radio-list-item';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst RadioExample = () => {\n  const refOneValidation = useRef();\n  const refTwoValidation = useRef();\n  const refThreeValidation = useRef();\n  const [showError, setShowError] = useState(false);\n\n  const [stateOne, setStateOne] = useState({\n    selectedValue: '1'\n  });\n\n  const [stateThree, setStateThree] = useState({\n    pizzas: [\n      {\n        checked: false,\n        disabled: false,\n        id: 1,\n        label: 'Regular',\n        value: 'regular'\n      },\n      {\n        checked: false,\n        disabled: false,\n        id: 2,\n        label: 'Deep Dish',\n        value: 'deep-dish'\n      },\n      {\n        checked: false,\n        disabled: false,\n        id: 3,\n        label: 'Thin Crust',\n        value: 'thin-crust'\n      },\n      {\n        checked: false,\n        disabled: true,\n        id: 4,\n        label: 'Super Thin Crust',\n        value: 'super-thin-crust'\n      }\n    ],\n    selectedPizza: 'regular'\n  });\n\n  const [stateFour, setStateFour] = useState({\n    selected: null\n  });\n\n  const handleChangeOne = e => setStateOne({ selectedValue: e.target.value });\n  const handleChangeFour = e => setStateFour({ selected: e.target.value });\n  const handleSubmitFour = () => {\n    if (stateFour.selected) {\n      setShowError(false);\n    } else {\n      setStateFour({\n        selected: false\n      });\n      setShowError(true);\n    }\n    refOneValidation.current.focus();\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Radio default</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <RadioGroup>\n            <RadioGroupLegend>Choose a shipping speed</RadioGroupLegend>\n            <RadioList>\n              <RadioListItem>\n                <Radio\n                  name=\"radio-default-example\"\n                  value=\"1\"\n                  label=\"One-Day Shipping\"\n                />\n              </RadioListItem>\n              <RadioListItem>\n                <Radio\n                  name=\"radio-default-example\"\n                  value=\"2\"\n                  label=\"Two-Day Shipping\"\n                />\n              </RadioListItem>\n            </RadioList>\n          </RadioGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Radio (stateful) with preselection.</Typography>\n\n          <Typography>Composition approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <RadioGroup>\n            <RadioGroupLegend>Choose a shipping speed</RadioGroupLegend>\n            <RadioList>\n              <RadioListItem>\n                <Radio\n                  defaultChecked\n                  name=\"radio-group-stateful-example\"\n                  value=\"1\"\n                  label=\"One-Day Shipping\"\n                />\n              </RadioListItem>\n              <RadioListItem>\n                <Radio\n                  name=\"radio-group-stateful-example\"\n                  value=\"2\"\n                  label=\"Two-Day Shipping\"\n                />\n              </RadioListItem>\n            </RadioList>\n          </RadioGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Radio (stateless) with preselection.</Typography>\n\n          <Typography>Composition approach</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <RadioGroup>\n            <RadioGroupLegend>Choose a shipping speed</RadioGroupLegend>\n            <RadioList>\n              <RadioListItem>\n                <Radio\n                  checked={stateOne.selectedValue === '1'}\n                  label=\"One-Day Shipping\"\n                  name=\"radio-group-stateless-preselection-example\"\n                  onChange={handleChangeOne}\n                  value=\"1\"\n                />\n              </RadioListItem>\n              <RadioListItem>\n                <Radio\n                  checked={stateOne.selectedValue === '2'}\n                  label=\"Two-Day Shipping\"\n                  name=\"radio-group-stateless-preselection-example\"\n                  onChange={handleChangeOne}\n                  value=\"2\"\n                />\n              </RadioListItem>\n            </RadioList>\n          </RadioGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Radio Group Control (legacy wrapper)</Typography>\n\n          <Typography>To create a custom wrapper around a radio group, see the RadioGroupControl component in the code base.</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <RadioGroupControl\n            value={stateThree.selectedPizza}\n            onChange={e => setStateThree({ ...stateThree, selectedPizza: e.target.value })}\n            legend=\"Select Pizza Crust\"\n          >\n            <RadioList>\n              {\n                stateThree.pizzas.map((pizza, k) => (\n                  <RadioListItem key={`legacy-radio-group-pizza-${k}`}>\n                    <Radio\n                      disabled={pizza.disabled}\n                      id={`legacy-radio-group-control-pizza-${k}`}\n                      label={pizza.label}\n                      name=\"legacy-radio-control-pizza-radios\"\n                      value={pizza.value}\n                    />\n                  </RadioListItem>\n                ))\n              }\n            </RadioList>\n          </RadioGroupControl>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Radio Group with validation</Typography>\n          <Typography><Link href=\"https://www.w3.org/TR/WCAG20-TECHS/H90.html#H90-ex4\" inline>Indicating required state on radio groups</Link> is different than what is needed for individual radio buttons.</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <RadioGroup\n            invalid={showError}\n            aria-required=\"true\"\n            required\n          >\n            <RadioGroupLegend aria-describedby=\"single-validation-error-message\">Select Pizza Crust</RadioGroupLegend>\n            <RadioList>\n              <RadioListItem>\n                <Radio\n                  aria-describedby=\"single-validation-error-message\"\n                  invalid={!stateFour.selected && stateFour.selected !== null}\n                  label=\"Regular\"\n                  name=\"radio-group-validation-example\"\n                  onChange={handleChangeFour}\n                  ref={refOneValidation}\n                  value=\"Regular\"\n                />\n              </RadioListItem>\n              <RadioListItem>\n                <Radio\n                  aria-describedby=\"single-validation-error-message\"\n                  invalid={!stateFour.selected && stateFour.selected !== null}\n                  label=\"Deep Dish\"\n                  name=\"radio-group-validation-example\"\n                  onChange={handleChangeFour}\n                  ref={refTwoValidation}\n                  value=\"Deep Dish\"\n                />\n              </RadioListItem>\n              <RadioListItem>\n                <Radio\n                  aria-describedby=\"single-validation-error-message\"\n                  invalid={!stateFour.selected && stateFour.selected !== null}\n                  label=\"Thin Crust\"\n                  name=\"radio-group-validation-example\"\n                  onChange={handleChangeFour}\n                  ref={refThreeValidation}\n                  value=\"Thin Crust\"\n                />\n              </RadioListItem>\n            </RadioList>\n            <RadioErrorMessage id=\"single-validation-error-message\">\n            {\n              showError === true\n                ? <Fragment><Icon name=\"error\" resolution=\"tiny\" />Error: Please select crust type.</Fragment>\n                : ''\n            }\n            </RadioErrorMessage>\n          </RadioGroup>\n          <ButtonText\n            onClick={handleSubmitFour}\n          >\n            Submit (test validation)\n          </ButtonText>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default RadioExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/radio/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/radio/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/radio/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst RadioExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Radio\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Radio</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/radio`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Radio Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/radio/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/radio/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/radio`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/radio`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/radio/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/radio/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/radio/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/radio/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nRadioExample.displayName = 'RadioExample';\n\nexport default RadioExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, number, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\nconst CSS_PREFIX = 'vds-radio';\nconst CSS_STATE = 'vds-state';\n\nconst Radio = forwardRef(({\n  className,\n  disabled,\n  id = shortid.generate(),\n  invalid,\n  label,\n  onBlur,\n  onChange,\n  onFocus,\n  ...remainingProps\n}, ref) => {\n  const [focused, setFocused] = useState();\n  const [check, setCheck] = useState(remainingProps.checked || remainingProps.defaultChecked);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  useEffect(() => {\n    if (typeof remainingProps.defaultChecked !== 'undefined') {\n      setCheck(remainingProps.defaultChecked);\n    }\n  }, [remainingProps.defaultChecked]);\n\n  useEffect(() => {\n    if (typeof remainingProps.checked !== 'undefined') {\n      setCheck(remainingProps.checked);\n    }\n  }, [remainingProps.checked]);\n\n  const handleChange = event => {\n    setCheck(event.target.checked);\n    if (typeof onChange === 'function') {\n      onChange(event);\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n    if (typeof onFocus === 'function') {\n      onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    setFocused(false);\n    if (typeof onBlur === 'function') {\n      onBlur(event);\n    }\n  };\n\n  return (\n    <Fragment>\n      <input\n        className={classnames(CSS_PREFIX, {\n          'focus-visible': Boolean(focused)\n        }, className)}\n        disabled={disabled}\n        id={uid}\n        onBlur={handleBlur}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        type=\"radio\"\n        ref={ref}\n        {...remainingProps}\n      />\n      <label\n        className={classnames(\n          `${CSS_PREFIX}-label`,\n          {\n            [`${CSS_STATE}--checked`]: Boolean(check),\n            [`${CSS_STATE}--disabled`]: Boolean(disabled),\n            [`${CSS_STATE}--focus`]: Boolean(focused),\n            [`${CSS_STATE}--invalid`]: Boolean(invalid)\n          }\n        )}\n        htmlFor={uid}\n        onClick={e => e.stopPropagation()} // if not event fires 2x, one for radio and one for label\n        onKeyPress={e  => e.stopPropagation()} // if not key-press event fires 2x, one for checkbox and one for label\n      >\n        {label}\n      </label>\n    </Fragment>\n  );\n});\n\nRadio.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   *   If `true`, the radio will be disabled.\n   */\n  disabled: bool,\n\n  /**\n   * The id of the input element.\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   *   The label of the radio element.\n   */\n  label: string.isRequired,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * Callback fired when the input element value changes.\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func\n};\n\nRadio.displayName = 'Radio';\n\nexport default Radio;\n"],"sourceRoot":""}