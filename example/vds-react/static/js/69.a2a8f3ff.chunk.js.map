{"version":3,"sources":["components/navmenu/example/index.js","pages/components/navmenu.js"],"names":["NavmenuExample","tag","id","menu","href","disabled","placement","flippable","name","resolution","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","type","value","length","Array","isArray","v","join","undefined","defaultValue","displayName"],"mappings":"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","file":"static/js/69.a2a8f3ff.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonAction from '../../button-action';\nimport ButtonLabel from '../../button-label';\nimport ButtonSplit from '../../button-split';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Listbox from '../../listbox';\nimport ListboxItem from '../../listbox-item';\nimport ListboxItemContainer from '../../listbox-item-container';\nimport Navmenu from '../../navmenu';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst NavmenuExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Typography tag=\"h2\">Navmenu</Typography>\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n        <Navmenu\n          id=\"test\"\n          menu={\n            <Listbox>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Link One</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Sign-out</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Apply</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer disabled>\n                  <a href=\"./\">Disabled Link</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Settings</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Organic</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Disabled link</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n              <ListboxItem>\n                <ListboxItemContainer>\n                  <a href=\"./\">Last link</a>\n                </ListboxItemContainer>\n              </ListboxItem>\n            </Listbox>\n          }\n          placement=\"bottom-start\"\n        >\n          <ButtonSplit flippable>\n            <ButtonLabel>Go to</ButtonLabel>\n            <ButtonAction>\n              <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n            </ButtonAction>\n          </ButtonSplit>\n        </Navmenu>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default NavmenuExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/navmenu/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/navmenu/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/navmenu/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst NavmenuExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Navmenu\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Navmenu</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/navmenu`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Navmenu Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/navmenu/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/navmenu/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/navmenu`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/navmenu`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/navmenu/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/navmenu/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/navmenu/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/navmenu/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nNavmenuExample.displayName = 'NavmenuExample';\n\nexport default NavmenuExample;\n"],"sourceRoot":""}