{"version":3,"sources":["components/select/example/index.js","pages/components/select.js","components/button-group/index.js"],"names":["SelectExample","useState","touched","valid","validated","value","stateOne","setStateOne","refOneValidation","useRef","day","errorText","month","showError","validDay","validMonth","validYear","validatedDay","validatedMonth","validatedYear","year","stateTwo","setStateTwo","refTwoValidationDay","refTwoValidationMonth","refTwoValidationYear","handleStateTwo","String","current","length","tag","position","alertType","name","resolution","label","defaultValue","disabled","hidden","readOnly","variant","helpText","invalid","onChange","e","target","ref","required","showErrorText","showHelpText","Boolean","colorScheme","onClick","focus","legend","id","aria-describedby","map","i","key","substring","toLowerCase","Array","from","x","Date","getFullYear","errorCommaIndex","test","test2","errorString","errorCount","toUpperCase","lastIndexOf","replace","prettier","require","plugins","reactDocs","jsParsed","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","line","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","type","color","isArray","v","join","displayName","ButtonGroup","children","direction"],"mappings":"kaAqceA,EArbO,WAAO,IAAD,EACMC,mBAAS,CACvCC,SAAS,EACTC,OAAO,EACPC,WAAW,EACXC,MAAO,KALiB,mBACnBC,EADmB,KACTC,EADS,KAQpBC,EAAmBC,mBARC,EA6CMR,mBAAS,CACvCS,IAAK,GACLC,UAAW,8CACXC,MAAO,GACPC,WAAW,EACXX,SAAS,EACTC,OAAO,EACPW,UAAU,EACVC,YAAY,EACZC,WAAW,EACXZ,WAAW,EACXa,cAAc,EACdC,gBAAgB,EAChBC,eAAe,EACfC,KAAM,KA3DkB,mBA6CnBC,EA7CmB,KA6CTC,EA7CS,KA8DpBC,EAAsBd,mBACtBe,EAAwBf,mBACxBgB,EAAuBhB,mBA6BvBiB,EAAiB,WACrB,IAAMhB,EAAMiB,OAAOJ,EAAoBK,QAAQvB,OACzCO,EAAQY,EAAsBI,QAAQvB,MACtCe,EAAOO,OAAOF,EAAqBG,QAAQvB,OAE3CS,EAAWJ,EAAImB,OAAS,EACxBd,EAAaH,EAAMiB,OAAS,EAC5Bb,EAAYI,EAAKS,OAAS,EAEhCP,EAAY,eACPD,EADM,CAETX,MACAE,QACAV,SAAS,EACTY,WACAC,aACAC,YACAZ,WAAW,EACXgB,WAiFJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYU,IAAI,MAAhB,YAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,SAAS,WAAWC,UAAU,eACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,KAAK,OAAOC,WAAW,SAE/B,kBAAC,IAAD,iFASZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,YACNC,aAAa,IAEb,4BAAQ/B,MAAM,GAAGgC,UAAQ,EAACC,QAAM,IAChC,4BAAQjC,MAAM,eAAd,yBACA,4BAAQA,MAAM,kBAAd,uBACA,4BAAQA,MAAM,iBAAd,sBACA,4BAAQA,MAAM,gBAAd,0DAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,IAAI,MAAhB,qBACA,kBAAC,IAAD,CACEK,MAAM,cACNI,UAAQ,EACRlC,MAAM,uBAEN,4BAAQA,MAAM,GAAGgC,UAAQ,EAACC,QAAM,IAChC,4BAAQjC,MAAM,eAAd,yBACA,4BAAQA,MAAM,kBAAd,uBACA,4BAAQA,MAAM,iBAAd,sBACA,4BAAQA,MAAM,gBAAd,0DAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,IAAI,MAAhB,qBACA,kBAAC,IAAD,CACEO,UAAQ,EACRF,MAAM,cACN9B,MAAM,kBAEN,4BAAQA,MAAM,GAAGgC,UAAQ,IACzB,4BAAQhC,MAAM,eAAd,yBACA,4BAAQA,MAAM,kBAAd,uBACA,4BAAQA,MAAM,iBAAd,sBACA,4BAAQA,MAAM,gBAAd,0DAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,IAAI,MAAhB,4BACA,kBAAC,IAAD,CACEK,MAAM,YACNC,aAAa,kBAEb,4BAAQ/B,MAAM,eAAd,yBACA,4BAAQA,MAAM,kBAAd,uBACA,4BAAQA,MAAM,iBAAd,sBACA,4BAAQA,MAAM,gBAAd,0DAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYyB,IAAI,MAAhB,0BACA,kBAAC,IAAD,CAAYU,QAAQ,WAApB,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE7B,UAAU,iCACV8B,SAAUnC,EAASH,MAAQ,kCAAqCG,EAASJ,QAAwC,GAA9B,4BACnFwC,QAASpC,EAASF,YAAcE,EAASH,MACzCgC,MAAM,cACNQ,SAxRa,SAAAC,GACrBrC,EAAY,eACPD,EADM,CAETJ,SAAS,EACTE,WAAW,EACXC,MAAOuC,EAAEC,OAAOxC,UAoRVyC,IAAKtC,EACLuC,UAAQ,EACRC,eAAgB1C,EAASH,MACzB8C,aAAcC,SAAS5C,EAASF,WAAaE,EAASH,OACtDE,MAAOC,EAASD,OAEhB,4BAAQA,MAAM,GAAGgC,UAAQ,EAACC,QAAM,IAChC,4BAAQjC,MAAM,eAAd,yBACA,4BAAQA,MAAM,kBAAd,uBACA,4BAAQA,MAAM,iBAAd,sBACA,4BAAQA,MAAM,gBAAd,0DAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8C,YAAY,YACZC,QApRgB,WAC1B7C,EAAY,CACVL,SAAS,EACTC,OAAO,EACPC,WAAW,EACXC,MAAO,KAGTG,EAAiBoB,QAAQyB,UA0QjB,SAMA,kBAAC,IAAD,CACED,QAxSiB,WAC3B,IAAMjD,EAAQG,EAASD,OAASC,EAASD,MAAMwB,OAAS,EAExDtB,EAAY,eACPD,EADM,CAETJ,SAAS,EACTC,QACAC,WAAW,KAGRD,GACHK,EAAiBoB,QAAQyB,UA4RnB,eAQN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYvB,IAAI,MAAhB,qCACA,kBAAC,IAAD,CAAYU,QAAQ,WAApB,cACA,kBAAC,IAAD,CACE7B,UAAWU,EAASR,UAAYQ,EAASV,UAAY,GACrD8B,SAAUpB,EAASlB,MAAQ,sCAAyCkB,EAASnB,QAA4D,GAAlD,gDACvFwC,SAAWrB,EAASlB,OAASkB,EAASjB,YAAeiB,EAASN,aAAeM,EAASP,WAAaO,EAASL,UAC5GsC,OAAO,gBACPN,cAAe3B,EAASR,UACxBoC,aAAcC,SAAS7B,EAASjB,WAAaiB,EAASlB,QAEtD,kBAAC,IAAD,CAAcoD,GAAG,8BACblC,EAASjB,YAAciB,EAASN,WAAa,kBAAC,WAAD,2CAA0D,MAE3G,kBAAC,IAAD,CACEyC,mBAAiB,6BACjBd,SAAUrB,EAASN,YAAcM,EAASH,eAC1CiB,MAAM,UACNQ,SA1QgB,WAC1BrB,EAAY,eACPD,EADM,CAETH,gBAAgB,KAGlBQ,KAqQUoB,IAAKtB,EACLuB,UAAQ,EACRC,eAAe,EACf3C,MAAOgB,EAAST,OAEhB,4BAAQP,MAAM,GAAGgC,UAAQ,EAACC,QAAM,IAE9B,CACE,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YACAmB,KAAI,SAACb,EAAGc,GAAJ,OACJ,4BAAQC,IAAKD,EAAGrD,MAAOuC,EAAEgB,UAAU,EAAG,GAAGC,eAAgBjB,OAI/D,kBAAC,IAAD,YACA,kBAAC,IAAD,CAAcW,GAAG,4BACblC,EAASjB,YAAciB,EAASP,SAAW,kBAAC,WAAD,yCAAwD,MAEvG,kBAAC,IAAD,CACE0C,mBAAiB,2BACjBd,SAAUrB,EAASP,UAAYO,EAASJ,aACxCkB,MAAM,QACNQ,SArTc,WACxBrB,EAAY,eACPD,EADM,CAETJ,cAAc,KAGhBS,KAgTUoB,IAAKvB,EACLwB,UAAQ,EACRC,eAAe,EACf3C,MAAOgB,EAASX,KAEhB,4BAAQL,MAAM,GAAGgC,UAAQ,EAACC,QAAM,IAE9BwB,MACGC,KAAK,IAAID,MAAM,KAAK,SAACE,EAAGN,GAAJ,OAAWA,EAAI,KACnCD,KAAI,SAACb,EAAGc,GAAJ,OACH,4BAAQC,IAAKD,EAAGrD,MAAOuC,GAAIA,OAInC,kBAAC,IAAD,YACA,kBAAC,IAAD,CAAcW,GAAG,6BACblC,EAASjB,YAAciB,EAASL,UAAY,kBAAC,WAAD,0CAAyD,MAEzG,kBAAC,IAAD,CACEwC,mBAAiB,4BACjBd,SAAUrB,EAASL,WAAaK,EAASF,cACzCgB,MAAM,SACNQ,SA1Te,WACzBrB,EAAY,eACPD,EADM,CAETF,eAAe,KAGjBO,KAqTUoB,IAAKrB,EACLsB,UAAQ,EACRC,eAAe,EACf3C,MAAOgB,EAASD,MAEhB,4BAAQf,MAAM,GAAGgC,UAAQ,EAACC,QAAM,IAE9BwB,MACGC,KAAK,IAAID,OAAO,IAAIG,MAAQC,cAAgB,OAAO,SAACF,EAAGN,GAAJ,OAAWA,EAAI,QAClED,KAAI,SAACb,EAAGc,GAAJ,OACH,4BAAQC,IAAKD,EAAGrD,MAAOuC,GAAIA,UAOzC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEO,YAAY,YACZC,QA1PgB,WAC1B9B,EAAY,CACVZ,IAAK,GACLC,UAAW,8CACXC,MAAO,GACPC,WAAW,EACXX,SAAS,EACTC,OAAO,EACPW,UAAU,EACVC,YAAY,EACZC,WAAW,EACXZ,WAAW,EACXa,cAAc,EACdC,gBAAgB,EAChBC,eAAe,EACfC,KAAM,KAGRI,EAAsBI,QAAQyB,UAsOtB,SAMA,kBAAC,IAAD,CACED,QAvTiB,WAC3B,IAGIe,EAHEC,EAAO/C,EAASP,UAAYO,EAASN,YAAcM,EAASL,UAC5DqD,GAAShD,EAASP,WAAaO,EAASN,aAAeM,EAASL,UAGlEsD,EAAc,iCACdC,EAAa,EACA,CACf,QACA,MACA,QAGSd,KAAI,SAACb,EAAGc,GACArC,EAAS,QAAUuB,EAAEgB,UAAU,EAAE,GAAGY,cAAgB5B,EAAEgB,UAAU,MAE/EU,GAAe1B,EAAI,KACnB2B,GAAc,MAIlBJ,EAAkBG,EAAYG,YAAY,MAG1CN,GAFAG,EAAcA,EAAYV,UAAU,EAAGO,IAETM,YAAY,MAEvB,IAAfF,EACFD,EAAcA,EAAYI,QAAQ,KAAM,SAChB,IAAfH,IACTD,EAAcA,EAAYV,UAAU,EAAGO,EAAkB,GAAK,QAAUG,EAAYV,UAAUO,EAAkB,IAGlH7C,EAAY,eACPD,EADM,CAETV,UAAW2D,EACXzD,UAAWwD,EACXnE,SAAS,EACTC,MAAOiE,EACPhE,WAAW,EACXa,cAAc,EACdC,gBAAgB,EAChBC,eAAe,KAIZE,EAASlB,QACPkB,EAASN,WAEFM,EAASP,SAETO,EAASL,WACnBS,EAAqBG,QAAQyB,QAF7B9B,EAAoBK,QAAQyB,QAF5B7B,EAAsBI,QAAQyB,WAuQ1B,iBC9ZNsB,EAAWC,EAAQ,KACnBC,EAAU,CAACD,EAAQ,MACnBE,EAAYF,EAAQ,KAEpBG,EADE,8iLACYL,QAAQ,YAAa,yBAAyBA,QAAQ,gBAAiB,uBAErFM,EADc,2jcACeN,QAAQ,aAAvB,qBAEd1E,EAAgB,SAAC,GAA2B,IAAtBiF,EAAqB,sBACHhF,mBAAS,IADN,mBACxCiF,EADwC,KACxBC,EADwB,KAc/C,OAXAC,qBAAU,WACR,IACED,EAAkBL,EAAUO,MAAMN,IAClC,SAEAO,QAAQC,IAAR,6IAID,IAGD,kBAAC,IAAD,CAAMC,uBAAqB,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAY1D,IAAI,MAAhB,YAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK2D,KAAK,aAAaC,aAAW,aAChC,kBAAC,IAAD,CAASD,KAAK,QACZ,kBAAC,IAAD,CAAKA,UAAME,EAAW7D,IAAK,kBAAC,IAAD,CAAS8D,OAAK,EAACC,GAAE,UAAKC,aAAL,sBAAiDC,gBAAgB,yBAC3G,kBAAC,IAAD,CAAM9D,KAAK,MAAMC,WAAW,QAD9B,kBAGA,kBAAC,IAAD,CAAKuD,UAAME,EAAW7D,IAAK,kBAAC,IAAD,CAAS8D,OAAK,EAACC,GAAE,UAAKC,aAAL,2BAAsDC,gBAAgB,yBAChH,kBAAC,IAAD,CAAM9D,KAAK,qBAAqBC,WAAW,QAD7C,kBAGA,kBAAC,IAAD,CAAKuD,UAAME,EAAW7D,IAAK,kBAAC,IAAD,CAAS8D,OAAK,EAACC,GAAE,UAAKC,aAAL,2BAAsDC,gBAAgB,yBAChH,kBAAC,IAAD,CAAM9D,KAAK,qBAAqBC,WAAW,QAD7C,sBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACE8D,UAAWC,IAAW,CACpB,oBAAqBhB,EAAeiB,MAAMC,OAArB,UAAiCL,aAAjC,sBACrB,kBAAmBb,EAAeiB,MAAMC,OAArB,UAAiCL,aAAjC,yBAGrB,kBAAC,EAAYb,IAEf,yBACEe,UAAWC,IAAW,CACpB,oBAAqBhB,EAAeiB,MAAMC,OAArB,UAAiCL,aAAjC,2BACrB,kBAAmBb,EAAeiB,MAAMC,OAArB,UAAiCL,aAAjC,8BAGrB,kBAAC,IAAD,iBAAeM,IAAf,CAA6BC,MAAOA,IAAOC,KAAMtB,EAAauB,SAAS,SACpE,gBAAGP,EAAH,EAAGA,UAAWQ,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKX,UAAWA,EAAWQ,MAAOA,GAC/BC,EAAOhD,KAAI,SAACmD,EAAMlD,GAAP,OACV,yCAASgD,EAAa,CAAE/C,IAAKD,EAAGkD,SAAhC,CAAyCjD,IAAKD,IAC5C,0BACE8C,MAAO,CACLK,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRtD,EAAI,GAENkD,EAAKnD,KAAI,SAACwD,EAAOtD,GAAR,OAAgB,0CAAUgD,EAAc,CAAEhD,MAAKsD,UAA/B,CAAyCtD,IAAKA,kBAOpF,yBACEqC,UAAWC,IAAW,CACpB,oBAAqBhB,EAAeiB,MAAMC,OAArB,UAAiCL,aAAjC,2BACrB,kBAAmBb,EAAeiB,MAAMC,OAArB,UAAiCL,aAAjC,8BAGrB,kBAAC,IAAD,iBACMM,IADN,CAEEC,MAAOA,IACPC,KAAM3B,EAASuC,OAAOC,IAAeC,qBAAqB,kBAAC,EAAYnC,IAAqB,CAAEoC,IAAK,SAAUC,OAAQ,OAAQzC,UAAS0C,WAAY,MAClJhB,SAAS,UAER,gBAAGP,EAAH,EAAGA,UAAWQ,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKX,UAAWA,EAAWQ,MAAOA,GAC/BC,EAAOhD,KAAI,SAACmD,EAAMlD,GAAP,OACV,yCAASgD,EAAa,CAAE/C,IAAKD,EAAGkD,SAAhC,CAAyCjD,IAAKD,IAC5C,0BACE8C,MAAO,CACLK,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRtD,EAAI,GAENkD,EAAKnD,KAAI,SAACwD,EAAOtD,GAAR,OAAgB,0CAAUgD,EAAc,CAAEhD,MAAKsD,UAA/B,CAAyCtD,IAAKA,oBASxF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqC,UAAWC,IAAW,CACpB,eAEFuB,cAAY,EACZC,KAAK,WAEL,kBAAC,IAAD,CAAc3F,IAAI,WAAlB,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAIkE,UAAU,UACZ,kBAAC,IAAD,CAAI0B,YAAU,OAAOjC,KAAK,eAAekC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAID,YAAU,OAAOjC,KAAK,eAAekC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAID,YAAU,OAAOjC,KAAK,eAAekC,MAAM,OAA/C,WAGA,kBAAC,IAAD,CAAID,YAAU,OAAOjC,KAAK,eAAekC,MAAM,OAA/C,iBAKJ,kBAAC,IAAD,KAEIzC,EAAe0C,OAASC,OAAOC,QAAQ5C,EAAe0C,OACnDG,QAAO,SAAAC,GAAG,MAA2B,YAAvBA,EAAI,GAAGC,eACrBxE,KAAI,SAACuE,EAAKtE,GAAN,OACH,kBAAC,IAAD,CAAIsC,UAAU,SAASrC,IAAKD,GAC1B,kBAAC,IAAD,CAAIsC,UAAU,SAAS2B,MAAM,OAC1BK,EAAI,GADP,IACYA,EAAI,GAAGjF,SAAW,+CAA+B,IAE7D,kBAAC,IAAD,CAAIiD,UAAU,UACZ,gCAASgC,EAAI,GAAGE,KAAKjG,MAEnB+F,EAAI,GAAGE,KAAK7H,OAAS2H,EAAI,GAAGE,KAAK7H,MAAMwB,OACnC,2BAAO2E,MAAO,CAAE2B,MAAO,YAAa,6BAElCrE,MAAMsE,QAAQJ,EAAI,GAAGE,KAAK7H,OACtB2H,EAAI,GAAGE,KAAK7H,MAAMoD,KAAI,SAAA4E,GAAC,OAAIA,EAAEhI,OAASgI,EAAEpG,QAAMqG,KAAK,MACtB,kBAAtBN,EAAI,GAAGE,KAAK7H,MACjB2H,EAAI,GAAGE,KAAK7H,WACZsF,GAGR,IAGR,kBAAC,IAAD,CAAIK,UAAU,UACXgC,EAAI,GAAG5F,aAAe4F,EAAI,GAAG5F,aAAa/B,MAAQ,IAErD,kBAAC,IAAD,CAAI2F,UAAU,UACXgC,EAAI,GAAGC,uBAahCjI,EAAcuI,YAAc,gBAEbvI,a,mFChNTwI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUzC,EAAb,EAAaA,UAAW0C,EAAxB,EAAwBA,UAAczD,EAAtC,2DAClB,uCACEe,UAAWC,IAJI,gBAIM,yBAJN,gBAIM,aACAyC,GAAcxF,QAAQwF,IACxC1C,IACCf,GAEHwD,KAwBLD,EAAYD,YAAc,cAEXC","file":"static/js/67.b26065e1.chunk.js","sourcesContent":["import React, { Fragment, useState, useRef } from 'react';\nimport Alert from '../../alert';\nimport AlertIcon from '../../alert-icon';\nimport AlertLabel from '../../alert-label';\nimport ButtonText from '../../button-text';\nimport ButtonGroup from '../../button-group';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport ScreenReader from '../../screen-reader';\nimport Select from '../../select';\nimport SelectGroup from '../../select-group';\nimport SelectGroupDelimiter from '../../select-group-delimiter';\nimport Typography from '../../typography';\n\nconst SelectExample = () => {\n  const [stateOne, setStateOne] = useState({\n    touched: false,\n    valid: false,\n    validated: false,\n    value: ''\n  });\n\n  const refOneValidation = useRef();\n\n  const handleStateOne = e => {\n    setStateOne({\n      ...stateOne,\n      touched: true,\n      validated: false,\n      value: e.target.value\n    });\n  };\n\n  const handleStateOneSubmit = () => {\n    const valid = stateOne.value && stateOne.value.length > 0;\n\n    setStateOne({\n      ...stateOne,\n      touched: false,\n      valid,\n      validated: true\n    });\n\n    if (!valid) {\n      refOneValidation.current.focus();\n    }\n  };\n\n  const handleStateOneReset = () => {\n    setStateOne({\n      touched: false,\n      valid: false,\n      validated: false,\n      value: ''\n    });\n\n    refOneValidation.current.focus();\n  };\n\n  const [stateTwo, setStateTwo] = useState({\n    day: '',\n    errorText: 'Error: Please provide a valid Date of Birth',\n    month: '',\n    showError: false,\n    touched: false,\n    valid: false,\n    validDay: false,\n    validMonth: false,\n    validYear: false,\n    validated: false,\n    validatedDay: false,\n    validatedMonth: false,\n    validatedYear: false,\n    year: ''\n  });\n\n  const refTwoValidationDay = useRef();\n  const refTwoValidationMonth = useRef();\n  const refTwoValidationYear = useRef();\n\n  const handleStateTwoDay = () => {\n    setStateTwo({\n      ...stateTwo,\n      validatedDay: true\n    });\n\n    handleStateTwo();\n  };\n\n  const handleStateTwoMonth = () => {\n    setStateTwo({\n      ...stateTwo,\n      validatedMonth: true\n    });\n\n    handleStateTwo();\n  };\n\n  const handleStateTwoYear = () => {\n    setStateTwo({\n      ...stateTwo,\n      validatedYear: true\n    });\n\n    handleStateTwo();\n  };\n\n  const handleStateTwo = () => {\n    const day = String(refTwoValidationDay.current.value);\n    const month = refTwoValidationMonth.current.value;\n    const year = String(refTwoValidationYear.current.value);\n\n    const validDay = day.length > 0;\n    const validMonth = month.length > 0;\n    const validYear = year.length > 0;\n\n    setStateTwo({\n      ...stateTwo,\n      day,\n      month,\n      touched: true,\n      validDay,\n      validMonth,\n      validYear,\n      validated: false,\n      year\n    });\n  };\n\n  const handleStateTwoSubmit = () => {\n    const test = stateTwo.validDay && stateTwo.validMonth && stateTwo.validYear;\n    const test2 = !stateTwo.validDay || !stateTwo.validMonth || !stateTwo.validYear;\n\n    let errorCommaIndex;\n    let errorString = 'Error: Please provide a valid ';\n    let errorCount = 0;\n    let errorArray = [\n      'month',\n      'day',\n      'year'\n    ];\n\n    errorArray.map((e, i) => { // eslint-disable-line\n      let validField = stateTwo['valid' + e.substring(0,1).toUpperCase() + e.substring(1)];\n      if (!validField) {\n        errorString += e + ', ';\n        errorCount += 1;\n      }\n    });\n\n    errorCommaIndex = errorString.lastIndexOf(', ');\n    errorString = errorString.substring(0, errorCommaIndex);\n\n    errorCommaIndex = errorString.lastIndexOf(', ');\n\n    if (errorCount === 2) {\n      errorString = errorString.replace(', ', ' and ');\n    } else if (errorCount === 3) {\n      errorString = errorString.substring(0, errorCommaIndex + 1) + ' and ' + errorString.substring(errorCommaIndex + 1);\n    }\n\n    setStateTwo({\n      ...stateTwo,\n      errorText: errorString,\n      showError: test2,\n      touched: false,\n      valid: test,\n      validated: true,\n      validatedDay: true,\n      validatedMonth: true,\n      validatedYear: true\n    });\n\n    // @TODO: focus on first invalid select\n    if (!stateTwo.valid) {\n      if (!stateTwo.validMonth) {\n        refTwoValidationMonth.current.focus();\n      } else if (!stateTwo.validDay) {\n        refTwoValidationDay.current.focus();\n      } else if (!stateTwo.validYear) {\n        refTwoValidationYear.current.focus();\n      }\n    }\n  };\n\n  const handleStateTwoReset = () => {\n    setStateTwo({\n      day: '',\n      errorText: 'Error: Please provide a valid Date of Birth',\n      month: '',\n      showError: false,\n      touched: false,\n      valid: false,\n      validDay: false,\n      validMonth: false,\n      validYear: false,\n      validated: false,\n      validatedDay: false,\n      validatedMonth: false,\n      validatedYear: false,\n      year: ''\n    });\n\n    refTwoValidationMonth.current.focus();\n  };\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Alert position=\"relative\" alertType=\"information\">\n            <Grid>\n              <Row>\n                <Col>\n                  <AlertIcon>\n                    <Icon name=\"info\" resolution=\"low\" />\n                  </AlertIcon>\n                  <AlertLabel>\n                    Select takes all native React props directly, (e.g. onChange, etc)\n                  </AlertLabel>\n                </Col>\n              </Row>\n            </Grid>\n          </Alert>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            label=\"Card Type\"\n            defaultValue=\"\"\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select (ReadOnly)</Typography>\n          <Select\n            label=\"Select Card\"\n            readOnly\n            value=\"Visa Signature Card\"\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select (Disabled)</Typography>\n          <Select\n            disabled\n            label=\"Select Card\"\n            value=\"signature_card\"\n          >\n            <option value=\"\" disabled />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select with preselection</Typography>\n          <Select\n            label=\"Card Type\"\n            defaultValue=\"signature_card\"\n          >\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h3\">Select with validation</Typography>\n          <Typography variant=\"caption\">*=required</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Select\n            errorText=\"Error: A card type is required\"\n            helpText={stateOne.valid ? \"Successfully selected card type\" : !stateOne.touched ? \"Please select a card type\" : ''}\n            invalid={stateOne.validated && !stateOne.valid}\n            label=\"Card Type *\"\n            onChange={handleStateOne}\n            ref={refOneValidation}\n            required\n            showErrorText={!stateOne.valid}\n            showHelpText={Boolean(!stateOne.validated || stateOne.valid)}\n            value={stateOne.value}\n          >\n            <option value=\"\" disabled hidden />\n            <option value=\"silver_card\">Silver Signature Card</option>\n            <option value=\"signature_card\">Visa Signature Card</option>\n            <option value=\"platinum_card\">Platinum Visa Card</option>\n            <option value=\"premium_card\">Premium Card With An Unnecessarily Long Description</option>\n          </Select>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={handleStateOneReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateOneSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Select Group with validity states</Typography>\n          <Typography variant=\"caption\">*=required</Typography>\n          <SelectGroup\n            errorText={stateTwo.showError ? stateTwo.errorText : ''}\n            helpText={stateTwo.valid ? \"Successfully selected date of birth\" : !stateTwo.touched ? \"Please fill out your Date of Birth info field\" : ''}\n            invalid={(!stateTwo.valid && stateTwo.validated) || !stateTwo.validMonth || !stateTwo.validDay || !stateTwo.validYear}\n            legend=\"Date of Birth\"\n            showErrorText={stateTwo.showError}\n            showHelpText={Boolean(!stateTwo.validated || stateTwo.valid)}\n          >\n            <ScreenReader id=\"select-group-invalid-month\">\n              { stateTwo.validated && !stateTwo.validMonth ? <Fragment>Error: Please select a valid month</Fragment> : null }\n            </ScreenReader>\n            <Select\n              aria-describedby=\"select-group-invalid-month\"\n              invalid={!stateTwo.validMonth && stateTwo.validatedMonth}\n              label=\"Month *\"\n              onChange={handleStateTwoMonth}\n              ref={refTwoValidationMonth}\n              required\n              showErrorText={false}\n              value={stateTwo.month}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December'\n                ].map((e, i) => (\n                  <option key={i} value={e.substring(0, 3).toLowerCase()}>{e}</option>\n                ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <ScreenReader id=\"select-group-invalid-day\">\n              { stateTwo.validated && !stateTwo.validDay ? <Fragment>Error: Please select a valid day</Fragment> : null }\n            </ScreenReader>\n            <Select\n              aria-describedby=\"select-group-invalid-day\"\n              invalid={!stateTwo.validDay && stateTwo.validatedDay}\n              label=\"Day *\"\n              onChange={handleStateTwoDay}\n              ref={refTwoValidationDay}\n              required\n              showErrorText={false}\n              value={stateTwo.day}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                Array\n                  .from(new Array(31), (x, i) => (i + 1))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n            <SelectGroupDelimiter> / </SelectGroupDelimiter>\n            <ScreenReader id=\"select-group-invalid-year\">\n              { stateTwo.validated && !stateTwo.validYear ? <Fragment>Error: Please select a valid year</Fragment> : null }\n            </ScreenReader>\n            <Select\n              aria-describedby=\"select-group-invalid-year\"\n              invalid={!stateTwo.validYear && stateTwo.validatedYear}\n              label=\"Year *\"\n              onChange={handleStateTwoYear}\n              ref={refTwoValidationYear}\n              required\n              showErrorText={false}\n              value={stateTwo.year}\n            >\n              <option value=\"\" disabled hidden />\n              {\n                Array\n                  .from(new Array((new Date()).getFullYear() - 1900), (x, i) => (i + 1900))\n                  .map((e, i) => (\n                    <option key={i} value={e}>{e}</option>\n                  ))\n              }\n            </Select>\n          </SelectGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <ButtonGroup>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={handleStateTwoReset}\n            >\n              Reset\n            </ButtonText>\n            <ButtonText\n              onClick={handleStateTwoSubmit}\n            >\n              Validate\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SelectExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/select/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/select/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/select/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SelectExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Select\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Select</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Select Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/select/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/select/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/select/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSelectExample.displayName = 'SelectExample';\n\nexport default SelectExample;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n"],"sourceRoot":""}