{"version":3,"sources":["components/combobox/example/index.js","pages/components/combobox.js","components/data-table/index.js","components/sr/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/button-icon/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-message/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input/index.js","components/input-input/index.js","components/button-group/index.js","components/combobox/listbox.js","components/combobox/useScrollToItem.js","components/combobox/useComboboxAction.js","components/combobox/index.js"],"names":["ComboboxExample","optionsTemplateOne","itemKey","optionValues","value","renderOption","optionItem","className","searchIncludeFields","useState","disabled","stateTwo","setStateTwo","inputPropsTwo","helpText","label","name","optionsTemplateTwo","optionsTemplateThree","dialCode","shortValue","Fragment","errorText","stateFour","setStateFour","optionsTemplateFour","dispatchComboboxActionFour","useRef","optionsTemplateFive","dispatchComboboxActionFive","tag","target","href","filterFunction","optionsTemplate","inputProps","onSelectionChange","item","console","log","JSON","stringify","direction","style","marginTop","colorScheme","onClick","comboboxClass","containerClass","inputWrapperClass","listboxClass","placeholder","required","onInputBlur","onInputChange","onInputFocus","comboboxAction","dispatchComboboxActionCallback","current","noMatchMessage","type","reactDocs","require","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","siblingOfStickyFooter","exact","to","process","activeClassName","resolution","classnames","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","color","length","v","join","undefined","defaultValue","displayName","DataTable","forwardRef","ref","children","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","propTypes","node","string","columns","arrayOf","shape","bool","data","oneOf","Sr","Tag","elementType","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonText","active","flippable","isFullWidth","includes","oneOfType","number","ButtonIcon","ariaLabel","iconType","aria-label","isRequired","InputContainer","css","expanded","filled","focus","invalid","isTextarea","readOnly","InputLabel","InputBar","InputMessage","ariaAtomic","show","aria-atomic","aria-live","InputOption","InputHint","InputText","Input","checkmarkIcon","containerProps","errorIcon","helpIcon","id","shortid","generate","labelId","noValidate","onBlur","onChange","onFocus","showCheckmark","showErrorText","showHelpText","useNativePlaceholder","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","setValidity","e","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput","ButtonGroup","ListBox","getMenuProps","isOpen","isListboxOpen","listboxProps","listboxRef","restOfProps","filteredOptions","getItemProps","inputValue","listboxItemRef","noMatchCallback","noSelectionCheckMark","selectedItem","highlightedIndex","filterCount","ComboboxUtil","filterOptionValues","toLowerCase","count","itemValues","filteredValues","highlightedItem","index","isSelected","isHighlight","itemProps","renderListboxItem","useScrollToItem","currentSelectItem","findIndex","scrollTop","offsetTop","useComboboxAction","downshiftInternalActions","dispatchComboboxAction","useCallback","action","err","Error","Combobox","memo","defaultItem","restProps","setCurrentSelectItem","inputRef","inputError","setInputError","setListboxOpen","searchHasNoMatch","setSearchHasNoMatch","actionList","defaultIndex","clearNoMatchError","handleInputBlur","handleInputChange","handleInputFocus","setSelectionRange","handleNoMatch","noMatch","defaultHighlightedIndex","initialInputValue","initialSelectedItem","itemToString","selection","onOuterClick","stateReducer","state","changes","Downshift","stateChangeTypes","clickButton","newChanges","blurInput","getA11yStatusMessage","status","getInputProps","getToggleButtonProps","listboxDownshift","keys","li","ul","prevProps","nextProps"],"mappings":"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","file":"static/js/13.63e079e9.chunk.js","sourcesContent":["/* eslint-disable no-console, spellcheck/spell-checker */\n\nimport React, { useState, useRef } from 'react';\nimport ButtonGroup from '../../button-group';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Combobox from '../../combobox';\nimport Grid from '../../grid';\nimport Row from '../../row';\nimport Typography from '../../typography';\nimport './index.css';\n\nconst ComboboxExample = () => {\n  //start 1st combobox example\n  const renderOptionOne = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsOne = {\n    disabled: false,\n    helpText: 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeOne = item => console.log(`onSelectionChange ${JSON.stringify(item)}`);\n\n  const cardsValueOne = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateOne = {\n    itemKey: 'value',\n    optionValues: cardsValueOne,\n    renderOption: renderOptionOne,\n    searchIncludeFields: ['value']\n  };\n\n  const myFilterFunctionOne = () => true;\n  // end 1th combobox example\n\n  // start 2st combobox example\n  const [stateTwo, setStateTwo] = useState({\n    disabled: false\n  });\n\n  const renderOptionTwo = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsTwo = {\n    disabled: stateTwo.disabled,\n    helpText : 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeTwo = item =>{\n    console.log(`onSelectionChange ${JSON.stringify(item)}`);\n  };\n\n  const cardsValueTwo = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateTwo = {\n    itemKey: 'value',\n    optionValues: cardsValueTwo,\n    renderOption : renderOptionTwo,\n    searchIncludeFields: ['value']\n  };\n  // end 2st combobox example\n\n  // start 3nd combobox example\n  const comboboxClassThree = {\n    containerClass: 'customContainerClass',\n    inputWrapperClass: 'customInputClass',\n    listboxClass: 'customListBoxClass'\n  };\n\n  const countryValuesThree = [\n    { dialCode: 'None', shortValue: 'Empty', value: '' },\n    { dialCode: '+54', shortValue: 'AR', value: 'Argentina' },\n    { dialCode: '+61', shortValue: 'AU', value: 'Australia' },\n    { dialCode: '+55', shortValue: 'BR', value: 'Brésil' },\n    { dialCode: '+1', shortValue: 'CA', value: 'Canada' },\n    { dialCode: '+56', shortValue: 'CL', value: 'Chile' },\n    { dialCode: '+86', shortValue: 'CN', value: 'China' },\n    { dialCode: '+57', shortValue: 'CO', value: 'Colombia' },\n    { dialCode: '+1', shortValue: 'DO', value: 'République Dominicaine' },\n    { dialCode: '+33', shortValue: 'FR', value: 'France' },\n    { dialCode: '+350', shortValue: 'GI', value: 'Gibraltar' },\n    { dialCode: '+502', shortValue: 'GT', value: 'Guatemala' },\n    { dialCode: '+852', shortValue: 'HK', value: 'Hong Kong' },\n    { dialCode: '+91', shortValue: 'IN', value: 'India' },\n    { dialCode: '+353', shortValue: 'IE', value: 'Ireland' },\n    { dialCode: '+81', shortValue: 'JP', value: 'Japan' },\n    { dialCode: '+965', shortValue: 'KW', value: 'Kuwait' },\n    { dialCode: '+60', shortValue: 'MY', value: 'Malaysia' },\n    { dialCode: '+64', shortValue: 'NZ', value: 'Nouvelle-Zélande' },\n    { dialCode: '+51', shortValue: 'PE', value: 'Peru' },\n    { dialCode: '+48', shortValue: 'PL', value: 'Poland' },\n    { dialCode: '+65', shortValue: 'SG', value: 'Singapore' },\n    { dialCode: '+27', shortValue: 'ZA', value: 'South Africa' },\n    { dialCode: '+34', shortValue: 'ES', value: 'Spain' },\n    { dialCode: '+886', shortValue: 'TW', value: 'Taiwan' },\n    { dialCode: '+66', shortValue: 'TH', value: 'Thailand' },\n    { dialCode: '+971', shortValue: 'AE', value: 'United Arab Emirates' },\n    { dialCode: '+44', shortValue: 'GB', value: 'United Kingdom' },\n    { dialCode: '+1', shortValue: 'US', value: 'United States of America' }\n  ];\n\n  const renderOptionThree = optionItem => (\n    <React.Fragment>\n      <span className=\"dial-code\">{optionItem.dialCode}</span>\n      <span className=\"country-name\">{optionItem.value}</span>\n    </React.Fragment>\n  );\n\n  const optionsTemplateThree = {\n    itemKey: 'shortValue',\n    optionValues: countryValuesThree,\n    renderOption : renderOptionThree,\n    searchIncludeFields: ['dialCode', 'shortValue', 'value']\n  };\n\n  const onInputBlurThree = () => console.log('onInputBlur');\n  const onInputChangeThree = () => console.log('onInputChange');\n  const onInputFocusThree = () => console.log('onInputFocus');\n  const onSelectionChangeThree = () => console.log('onSelectionChange');\n\n  const inputPropsThree = {\n    disabled: false,\n    label: 'Select a Country',\n    name: 'combobox',\n    placeholder: 'country name',\n    required: true\n  };\n  // end 3nd combobox example\n\n  // start 4rd combobox example\n  const [stateFour, setStateFour] = useState({\n    errorText: ''\n  });\n\n  const renderOptionFour = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsFour = {\n    disabled: false,\n    helpText: 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeFour = item => console.log(`onSelectionChange ${JSON.stringify(item)}`);\n\n  const cardsValueFour = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateFour = {\n    itemKey: 'value',\n    optionValues: cardsValueFour,\n    renderOption : renderOptionFour,\n    searchIncludeFields: ['value']\n  };\n\n  const dispatchComboboxActionFour = useRef();\n\n  const comboboxActionFour = dispatchComboboxActionCallback => {\n    dispatchComboboxActionFour.current = dispatchComboboxActionCallback;\n  };\n\n  const resetFour = () => {\n    setStateFour({ errorText: '' });\n  };\n\n  const invalidOptionFour = () => {\n    setStateFour({\n      errorText: 'Invalid option'\n    });\n  };\n  // end 4rd combobox example\n\n  // start 5th combobox example\n  const renderOptionFive = optionItem => <span className=\"card-name\">{optionItem.value}</span>;\n\n  const inputPropsFive = {\n    disabled: false,\n    helpText : 'Please select a card',\n    label: 'Select a card',\n    name: 'combobox'\n  };\n\n  const onSelectionChangeFive = item => console.log(`onSelectionChange ${JSON.stringify(item)}`);\n\n  const cardsValueFive = [\n    { value: 'silver signature card' },\n    { value: 'visa signature card' },\n    { value: 'platinum visa card' },\n    { value: 'premium card' },\n    { value: 'another card' },\n    { value: 'other card' },\n    { value: 'secondary card' },\n    { value: 'tertiary card' },\n    { value: 'gold signature card' },\n    { value: 'yet another card' },\n    { value: 'last card' }\n  ];\n\n  const optionsTemplateFive = {\n    itemKey: 'value',\n    optionValues: cardsValueFive,\n    renderOption : renderOptionFive,\n    searchIncludeFields: ['value']\n  };\n\n  const dispatchComboboxActionFive = useRef();\n  const comboboxActionFive = dispatchComboboxActionCallback => {\n    dispatchComboboxActionFive.current = dispatchComboboxActionCallback;\n  };\n\n  const openMenuFive = () => {\n    dispatchComboboxActionFive.current({ type:'openMenu' });\n  };\n\n  const closeMenuFive = () => {\n    dispatchComboboxActionFive.current({ type:'closeMenu' });\n  };\n\n  const setHighlightedIndexFive = () => {\n    dispatchComboboxActionFive.current({ type:'setHighlightedIndex' }, 2);\n    dispatchComboboxActionFive.current({ type:'openMenu' }, 2);\n  };\n\n  const selectVisaFive = () => {\n    dispatchComboboxActionFive.current({ type:'selectItem' }, { value: 'visa signature card' });\n  };\n\n  // end 5th combobox example\n\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">No autocomplete</Typography>\n          <Typography>The user types in any character in the\n            input and this will invoke the popup menu</Typography>\n          <Typography>However, the options in the menu would\n            not be impacted by the characters typed in\n            the textbox.</Typography>\n          <Typography>The use of this option is to provide quick\n            acceess to option suggestions to the user\n            without limiting their entry.</Typography>\n          <Typography>\n            Follows <a target={\"_blank\"} href={\"https://www.w3.org/TR/wai-aria-practices/#combobox\"}>WAI-ARIA best practices</a> for implementing keyboard interaction\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            filterFunction={myFilterFunctionOne}\n            optionsTemplate={optionsTemplateOne}\n            inputProps={inputPropsOne}\n            onSelectionChange={onSelectionChangeOne}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Autocomplete with manual selection</Typography>\n          <Typography>\n            The user types in any character in the\n            input and this will invoke the popup menu\n            with filtered set of options that match with\n            corresponding values.\n          </Typography>\n          <Typography>\n            The input value that the user typed in would\n            be accepted unless the user explicitly selects\n            from the menu.\n          </Typography>\n          <Typography>\n            When the user moves focus away from\n            the component with Tab and no option\n            from the menu has been selected, the\n            input will be what the user has typed in.\n            Follows WAI-ARIA best practices for implementing keyboard interaction\n          </Typography>\n          <Typography>\n            Follows <a target={\"_blank\"} href={\"https://www.w3.org/TR/wai-aria-practices/#combobox\"}>WAI-ARIA best practices</a> for implementing keyboard interaction\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            optionsTemplate={optionsTemplateTwo}\n            inputProps={inputPropsTwo}\n            onSelectionChange={onSelectionChangeTwo}\n          />\n          <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n            <ButtonText\n              colorScheme=\"primary\"\n              onClick={() => setStateTwo({ disabled: false })}\n            >\n              Enable\n            </ButtonText>\n            <ButtonText\n              colorScheme=\"secondary\"\n              onClick={() => setStateTwo({ disabled: true })}\n            >\n              Disable\n            </ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Customized Listbox Option</Typography>\n          <Typography>\n            Combobox allows developer to use renderOption function in optionsTemplate prop to render custom listbox Option\n          </Typography>\n          <Typography>\n            Developer can also use searchIncludeFields in optionsTemplate prop to decide which fields the autocomplete should apply to\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            comboboxClass={comboboxClassThree}\n            optionsTemplate={optionsTemplateThree}\n            inputProps={inputPropsThree}\n            onInputBlur={onInputBlurThree}\n            onInputChange={onInputChangeThree}\n            onInputFocus={onInputFocusThree}\n            onSelectionChange={onSelectionChangeThree}\n            // defaultItem= {{ dialCode: '+1', shortValue: 'US', value: 'United States of America' }}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Error Handling</Typography>\n          <Typography>\n            Combobox has default no matching message, but you can override it using noMatchMessage prop.\n          </Typography>\n          <Typography>\n            Developer can also pass error message by using errorText prop, as long as errorText exist, the error\n            will show up. So it is up to developer to add/remove errorText.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            comboboxAction={comboboxActionFour}\n            optionsTemplate={optionsTemplateFour}\n            noMatchMessage={'There are no matches!'}\n            errorText={stateFour.errorText}\n            inputProps={inputPropsFour}\n            onSelectionChange={onSelectionChangeFour}\n          />\n          <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n            <ButtonText colorScheme=\"primary\" onClick={() => resetFour()}>Clear Error</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => invalidOptionFour()}>Invalid Option</ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Programmatic control</Typography>\n          <Typography>\n            Combobox allows developer to programmatic trigger internal function, so developer can have more control on it.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Combobox\n            comboboxAction={comboboxActionFive}\n            optionsTemplate={optionsTemplateFive}\n            inputProps={inputPropsFive}\n            onSelectionChange={onSelectionChangeFive}\n          />\n          <ButtonGroup direction=\"right\" style={{ marginTop: \"30px\" }}>\n            <ButtonText colorScheme=\"secondary\" onClick={() => openMenuFive()}>Open listbox</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => closeMenuFive()}>Close listbox</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => setHighlightedIndexFive()}>Highlight Third Item</ButtonText>\n            <ButtonText colorScheme=\"secondary\" onClick={() => selectVisaFive()}>Select visa</ButtonText>\n          </ButtonGroup>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default ComboboxExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport Sr from '../../components/sr';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/combobox/example';\n\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/combobox/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/combobox/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ComboboxExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Combobox\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Combobox</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/combobox`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Combobox Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/combobox/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />Code for Combobox Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/combobox/code`,\n              'vds-state--show': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/combobox/code`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/combobox/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/combobox/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <Sr tag=\"caption\">Props</Sr>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {doc[1].type.value.length ? doc[1].type.value.map(v => v.value || v.name).join(', ') : undefined}\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nComboboxExample.displayName = 'ComboboxExample';\n\nexport default ComboboxExample;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-sr';\n\nconst Sr = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nSr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nSr.defaultProps = {\n  tag: 'span'\n};\n\nSr.displayName = 'Sr';\n\nexport default Sr;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  ariaAtomic,\n  children,\n  className,\n  invalid,\n  role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    aria-atomic={ariaAtomic}\n    aria-live={invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nInputMessage.defaultProps = {\n  ariaAtomic: 'true',\n  role: 'alert'\n};\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${uid}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${uid}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-group';\n\nconst ButtonGroup = ({ children, className, direction, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${direction}`]: Boolean(direction)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nButtonGroup.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Direction\n   */\n  direction: oneOf([\n    'reverse',\n    'right'\n  ])\n};\n\nButtonGroup.displayName = 'ButtonGroup';\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport Icon from '../icon';\nimport { ComboboxUtil } from '@visa/ui-utils';\nconst CSS_PREFIX = 'vds-listbox';\n\nconst renderListboxItem = (props, optionsTemplate) => {\n  const {\n    filterFunction,\n    getItemProps,\n    inputValue,\n    listboxItemRef,\n    noMatchCallback,\n    noSelectionCheckMark,\n    selectedItem\n  } = props;\n\n  const highlightedIndex = props.highlightedIndex < 0 ? -1 : props.highlightedIndex;\n  const { itemKey, optionValues, renderOption } = optionsTemplate;\n  let filteredOptions;\n\n  if (inputValue && inputValue.trim()) {\n    filteredOptions = ComboboxUtil.filterOptionValues(\n      inputValue\n        .trim()\n        .replace(/\\s\\s+/g, ' ')\n        .toLowerCase(),\n      optionsTemplate,\n      filterFunction\n    );\n  } else {\n    filteredOptions = { count: optionValues ? optionValues.length : 0, itemValues: optionValues };\n  }\n\n  const filterCount = filteredOptions.count;\n  const filteredValues = filteredOptions.itemValues;\n  const highlightedItem = filteredOptions.itemValues ? filteredOptions.itemValues[highlightedIndex] : null;\n  if (filterCount === 0) {\n    noMatchCallback(true);\n    return null;\n  }\n  noMatchCallback(false);\n\n  return filteredValues.map((item, index) => {\n    const isSelected = selectedItem && selectedItem[itemKey] === item[itemKey];\n    const isHighlight = highlightedItem && highlightedItem[itemKey] === item[itemKey];\n    const itemProps = {\n      className: classnames(\n        `${CSS_PREFIX}-item`,\n        { [`${CSS_PREFIX}--item-selected`]: isSelected && !noSelectionCheckMark },\n        { [`${CSS_PREFIX}--item-highlight`]: isHighlight },\n        'visa-ui-btn-icon--light-fill'\n      )\n    };\n    if (isSelected) {\n      itemProps.ref = listboxItemRef;\n    }\n    return (\n      <li\n        {...getItemProps({\n          index,\n          item,\n          key: item[itemKey]\n        })}\n        {...itemProps}\n      >\n        <span className={`${CSS_PREFIX}--item-container`}>\n          {renderOption(item)}\n          {isSelected && !noSelectionCheckMark ? <Icon name=\"checkmark\" resolution=\"tiny\" /> : null}\n        </span>\n      </li>\n    );\n  });\n};\n\nconst ListBox = props => {\n  const { getMenuProps, isOpen, listboxClass, isListboxOpen, listboxProps, listboxRef, optionsTemplate, ...restOfProps } = props;\n  return (\n    <div className={classnames('vds-menu--absolute ', { [`vds-menu--show`]: isOpen && isListboxOpen })}>\n      <ul\n        {...listboxProps}\n        {...getMenuProps({\n          className: classnames(CSS_PREFIX, listboxClass),\n          ref: listboxRef\n        })}\n      >\n        {isOpen && optionsTemplate && optionsTemplate.optionValues && optionsTemplate.optionValues.length ? renderListboxItem(restOfProps, optionsTemplate) : null}\n      </ul>\n    </div>\n  );\n};\n\nListBox.propTypes = {\n  filterFunction: func,\n  getMenuProps: func,\n  isListboxOpen: bool,\n  isOpen: bool,\n  listboxClass: string,\n  listboxItemRef: func.isRequired,\n  listboxProps: shape({}),\n  listboxRef: func.isRequired,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  })\n};\n\nListBox.displayName = 'ListBox';\n\nexport default ListBox;\n","import { useEffect, useRef } from 'react';\n/**\n * @description custom react hook, if there is a long list of items,\n * this hook will scroll the selected item to the view\n *\n * @param {object} currentSelectItem\n * @param {object} optionsTemplate\n * @returns {object} listboxItemRef, listboxRef\n */\nconst useScrollToItem = (currentSelectItem, optionsTemplate) => {\n  const listboxItemRef = useRef(null);\n  const listboxRef = useRef(null);\n  useEffect(() => {\n    if (listboxRef.current && listboxItemRef.current) {\n      if (currentSelectItem && optionsTemplate && optionsTemplate.optionValues) {\n        const index = optionsTemplate.optionValues.findIndex(\n          item => item[optionsTemplate.itemKey] === currentSelectItem[optionsTemplate.itemKey]\n        );\n        if (index >= 0) {\n          listboxRef.current.scrollTop += listboxItemRef.current.offsetTop;\n        }\n      }\n    }\n  });\n  return { listboxItemRef, listboxRef };\n};\n\nexport default useScrollToItem;\n","import { useEffect, useCallback } from 'react';\n/**\n * @description Reverse of Control,\n * expose downshift internal action to parent component so\n * we can customize combobox behavior to meet different requirements\n *\n * @param {function} comboboxAction\n * @param {object} downshiftInternalActions\n */\n\nconst useComboboxAction = (comboboxAction, downshiftInternalActions) => {\n  const dispatchComboboxAction = useCallback((action, data) => {\n    try {\n      if (data === undefined) {\n        downshiftInternalActions[action.type]();\n      } else {\n        downshiftInternalActions[action.type](data);\n      }\n    } catch (err) {\n      throw new Error(`Action ${action.type} is not available.`);\n    }\n  }, [downshiftInternalActions]);\n\n  useEffect(() => {\n    if (typeof comboboxAction === 'function') {\n      comboboxAction(dispatchComboboxAction);\n    }\n  }, [comboboxAction, dispatchComboboxAction, downshiftInternalActions]);\n};\n\nexport default useComboboxAction;\n","import React, { memo, useEffect, useRef, useState } from 'react';\nimport Downshift from 'downshift';\nimport { arrayOf, bool, func, shape, string } from 'prop-types';\nimport Listbox from './listbox';\nimport classnames from 'classnames';\nimport ButtonIcon from '../button-icon';\nimport Icon from '../icon';\nimport Input from '../input';\nimport useScrollToItem from './useScrollToItem';\nimport useComboboxAction from './useComboboxAction';\nimport { ComboboxUtil } from '@visa/ui-utils';\n\nconst CSS_PREFIX = 'vds-combobox';\n\nconst preventRerender = (prevProps, nextProps) => JSON.stringify(prevProps) === JSON.stringify(nextProps);\n\nconst Combobox = memo(({\n  className,\n  comboboxClass,\n  containerProps,\n  defaultItem,\n  comboboxAction,\n  errorText,\n  filterFunction,\n  inputProps,\n  noMatchMessage,\n  onInputBlur,\n  onInputChange,\n  onInputFocus,\n  onSelectionChange,\n  optionsTemplate,\n  ...restProps\n}) => {\n  if (typeof filterFunction() !== 'boolean') {\n    throw new Error('Filter function must return a boolean.');\n  }\n\n  const [currentSelectItem, setCurrentSelectItem] = useState(defaultItem);\n  const inputRef = useRef(null);\n  const [inputError, setInputError] = useState(errorText);\n  const [isListboxOpen, setListboxOpen] = useState(false);\n  const [searchHasNoMatch, setSearchHasNoMatch] = useState(false);\n  const { listboxItemRef, listboxRef } = useScrollToItem(currentSelectItem, optionsTemplate);\n\n  //Reverse of Control, expose downshift internal action to parent component\n  const downshiftInternalActions = {};\n  const actionList = ['clearSelection', 'closeMenu', 'openMenu', 'selectItem', 'setHighlightedIndex'];\n  useComboboxAction(comboboxAction, downshiftInternalActions);\n\n  useEffect(() => {\n    if (searchHasNoMatch || errorText) {\n      if (searchHasNoMatch && noMatchMessage) {\n        setInputError(noMatchMessage);\n      } else if (errorText && errorText !== inputError) {\n        setInputError(errorText);\n      } else {\n        setInputError(undefined);\n      }\n    } else {\n      setInputError(undefined);\n    }\n    if (searchHasNoMatch) {\n      setListboxOpen(false);\n    } else {\n      setListboxOpen(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [errorText, noMatchMessage, searchHasNoMatch]);\n\n  //set default index\n  let defaultIndex = -1;\n  if (defaultItem && optionsTemplate && optionsTemplate.optionValues) {\n    defaultIndex = optionsTemplate.optionValues.findIndex(\n      item => item[optionsTemplate.itemKey] === defaultItem[optionsTemplate.itemKey]\n    );\n  }\n\n  const clearNoMatchError = () => {\n    if (inputError === noMatchMessage) {\n      setInputError(undefined);\n      setSearchHasNoMatch(false);\n    }\n  };\n\n  const handleInputBlur = e => {\n    if (typeof onInputBlur === 'function') {\n      if (currentSelectItem) {\n        onInputBlur(e, currentSelectItem.value);\n      } else {\n        onInputBlur(e);\n      }\n    }\n  };\n\n  const handleInputChange = e => {\n    if (typeof onInputChange === 'function') {\n      onInputChange(e, e.target.value);\n    }\n  };\n\n  const handleInputFocus = e => {\n    if (inputRef.current) {\n      inputRef.current.setSelectionRange(0, e.target.value.length);\n    }\n    if (typeof onInputFocus === 'function') {\n      onInputFocus(e, e.target.value);\n    }\n  };\n\n  const handleSelection = selection => {\n    setCurrentSelectItem(selection ? selection : null);\n    clearNoMatchError();\n    if (typeof onSelectionChange === 'function') {\n      onSelectionChange(selection);\n    }\n  };\n\n  const handleNoMatch = noMatch => {\n    if (searchHasNoMatch !== noMatch) {\n      setSearchHasNoMatch(noMatch);\n    }\n  };\n\n  const stateReducer = (state, changes) => {\n    switch (changes.type) {\n      case Downshift.stateChangeTypes.clickButton:\n        if (state.isOpen) {\n          clearNoMatchError();\n          let newChanges = { ...changes };\n          if (state.inputValue) {\n            if (!state.selectedItem) {\n              newChanges = { ...newChanges, inputValue: '' };\n            } else if (state.selectedItem && state.selectedItem.value !== state.inputValue) {\n              newChanges = { ...newChanges, inputValue: state.selectedItem.value };\n            }\n          } else if (!state.inputValue && state.selectedItem) {\n            newChanges = { ...newChanges, inputValue: state.selectedItem.value };\n          }\n          return newChanges;\n        }\n        return changes;\n      case Downshift.stateChangeTypes.blurInput:\n        if (inputError) {\n          clearNoMatchError();\n        }\n        return changes;\n      default:\n        return changes;\n    }\n  };\n\n  return (\n    <Downshift\n      defaultHighlightedIndex={defaultIndex}\n      initialInputValue={defaultItem ? defaultItem.value : ''}\n      initialSelectedItem={currentSelectItem}\n      itemToString={item => (item ? item.value : '')}\n      onChange={handleSelection}\n      onOuterClick={clearNoMatchError}\n      stateReducer={stateReducer}\n      getA11yStatusMessage={status => (status.isOpen && status.highlightedItem ? status.highlightedItem.value : '')}\n    >\n      {({ getInputProps, getToggleButtonProps, isOpen, ...listboxDownshift }) => {\n        if (Object.keys(downshiftInternalActions).length === 0) {\n          downshiftInternalActions.setInputError = setInputError;\n          for (const action of actionList) { // eslint-disable-line\n            downshiftInternalActions[action] = listboxDownshift[action];\n          }\n        }\n        return (\n          <div\n            {...containerProps}\n            className={classnames(`${CSS_PREFIX}-container`, className, comboboxClass.containerClass)}\n          >\n            <Input\n              {...getInputProps({\n                onBlur: handleInputBlur,\n                onChange: handleInputChange,\n                onFocus: handleInputFocus\n              })}\n              {...inputProps}\n              className={classnames(`${CSS_PREFIX}-input-wrapper`, comboboxClass.inputWrapperClass)}\n              errorText={inputError}\n              invalid={Boolean(inputError)}\n              labelId={getInputProps()['aria-labelledby']}\n              noValidate\n              ref={inputRef}\n              showErrorText={Boolean(inputError)}\n              showHelpText={Boolean(inputProps.helpText)}\n              type=\"text\"\n            >\n              <ButtonIcon\n                ariaLabel={isOpen ? 'collapse' : 'expand'}\n                {...getToggleButtonProps({})}\n                iconType=\"light-tiny\"\n                tabIndex=\"-1\"\n              >\n                <Icon name={isOpen ? 'arrow-collapse' : 'arrow-expand'} resolution=\"low\" />\n              </ButtonIcon>\n            </Input>\n            <Listbox\n              {...listboxDownshift}\n              {...restProps}\n              filterFunction={filterFunction}\n              listboxClass={comboboxClass.listboxClass}\n              isListboxOpen={isListboxOpen}\n              listboxItemRef={li => {\n                listboxItemRef.current = li;\n              }}\n              listboxRef={ul => {\n                listboxRef.current = ul;\n              }}\n              isOpen={isOpen}\n              noMatchCallback={handleNoMatch}\n              optionsTemplate={optionsTemplate}\n            />\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}, preventRerender);\n\nCombobox.defaultProps = {\n  comboboxClass: {\n    containerClass: null,\n    inputWrapperClass: null,\n    listboxClass: null\n  },\n  errorText: '',\n  filterFunction: ComboboxUtil.filterFunction,\n  inputProps: {\n    label: 'Label',\n    name: 'combobox'\n  },\n  noMatchMessage: 'No entries matching, Please try again.'\n};\n\nCombobox.propTypes = {\n  className: string,\n  comboboxAction: func,\n  comboboxClass: shape({\n    containerClass: string,\n    inputWrapperClass: string,\n    listboxClass: string\n  }),\n  containerProps: shape({}),\n  defaultItem: shape({\n    value: string.isRequired\n  }),\n  errorText: string,\n  filterFunction: func,\n  inputProps: shape({\n    disabled: bool,\n    helpText: string,\n    label: string.isRequired,\n    name: string.isRequired,\n    placeholder: string,\n    required: bool\n  }),\n  noMatchMessage: string,\n  onInputBlur: func,\n  onInputChange: func,\n  onInputFocus: func,\n  onSelectionChange: func,\n  optionsTemplate: shape({\n    itemKey: string.isRequired,\n    optionValues: arrayOf(shape({ value: string.isRequired })),\n    renderOption: func.isRequired,\n    searchIncludeFields: arrayOf(string)\n  }).isRequired\n};\n\nCombobox.displayName = 'Combobox';\n\nexport default Combobox;\n"],"sourceRoot":""}