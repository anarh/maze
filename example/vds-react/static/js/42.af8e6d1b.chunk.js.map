{"version":3,"sources":["components/button-menu/example/index.js","pages/components/button-menu.js","components/screen-reader/index.js","components/tab-list/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js"],"names":["ButtonMenuExample","tag","name","resolution","disabled","colorScheme","flippable","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","useState","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","role","aria-label","undefined","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","KEY_CODES","TabList","orientation","selectedTab","useRef","selectedTabIndex","setSelectedTabIndex","focusedIndex","setFocusedIndex","focusableChildren","setFocusChildren","from","current","querySelectorAll","Boolean","Children","child","k","cloneElement","onClick","e","handleClick","onKeyDown","charCode","keyCode","count","fIndex","preventDefault","focus","handleKeyDown","selected","tabIndex","Number","isInteger","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel"],"mappings":"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","file":"static/js/42.af8e6d1b.chunk.js","sourcesContent":["import React from 'react';\nimport ButtonAction from '../../button-action';\nimport ButtonLabel from '../../button-label';\nimport ButtonMenu from '../../button-menu';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Row from '../../row';\nimport Typography from '../../typography';\n\nconst ButtonMenuExample = () => (\n  <Grid>\n    <Row>\n      <Col>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Menu Button Primary</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonMenu>\n              <ButtonLabel>\n                Add New\n              </ButtonLabel>\n              <ButtonAction>\n                <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n              </ButtonAction>\n            </ButtonMenu>\n\n            <ButtonMenu disabled>\n              <ButtonLabel>\n                Add New\n              </ButtonLabel>\n              <ButtonAction>\n                <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n              </ButtonAction>\n            </ButtonMenu>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Menu Button Secondary</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonMenu colorScheme=\"secondary\">\n              <ButtonLabel>\n                Add New\n              </ButtonLabel>\n              <ButtonAction>\n                <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n              </ButtonAction>\n            </ButtonMenu>\n\n            <ButtonMenu colorScheme=\"secondary\" disabled>\n              <ButtonLabel>\n                Add New\n              </ButtonLabel>\n              <ButtonAction>\n                <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n              </ButtonAction>\n            </ButtonMenu>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Typography tag=\"h2\">Menu Button Primary (flippable)</Typography>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonMenu flippable>\n              <ButtonLabel>\n                Add New\n              </ButtonLabel>\n              <ButtonAction>\n                <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n              </ButtonAction>\n            </ButtonMenu>\n\n            <ButtonMenu flippable disabled>\n              <ButtonLabel>\n                Add New\n              </ButtonLabel>\n              <ButtonAction>\n                <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n              </ButtonAction>\n            </ButtonMenu>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  </Grid>\n);\n\nexport default ButtonMenuExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/button-menu/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/button-menu/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/button-menu/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst ButtonMenuExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for ButtonMenu\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Button Menu</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col role=\"navigation\" aria-label=\"Secondary\">\n          <TabList role=\"none\">\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-menu`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Button Menu Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-menu/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab role={undefined} tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/button-menu/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-menu`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-menu`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-menu/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-menu/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/button-menu/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/button-menu/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Th className=\"vds-td\" scope=\"row\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Th>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nButtonMenuExample.displayName = 'ButtonMenuExample';\n\nexport default ButtonMenuExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { Children, cloneElement, forwardRef, useEffect, useRef, useState } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport TabItem from '../tab-item';\n\nconst CSS_PREFIX = 'vds-tab';\nconst KEY_CODES = {\n  ARROW_DOWN: 40,\n  ARROW_LEFT: 37,\n  ARROW_RIGHT: 39,\n  ARROW_UP: 38,\n  END: 35,\n  HOME: 36\n};\n\nconst TabList = forwardRef(({\n  children,\n  className,\n  orientation,\n  role,\n  selectedTab,\n  ...remainingProps\n}, ref) => {\n  ref = ref || useRef();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(selectedTab);\n  const [focusedIndex, setFocusedIndex] = useState(selectedTabIndex);\n  const [focusableChildren, setFocusChildren] = useState([]);\n\n  useEffect(() => {\n    setFocusChildren(Array.from(\n      ref.current.querySelectorAll('li > .vds-tab:not(.vds-state--disabled)')\n    ));\n  }, [children, ref]);\n\n  useEffect(() => {\n    setSelectedTabIndex(selectedTab);\n  }, [selectedTab]);\n\n  const handleClick = (e, k, child) => {\n    setSelectedTabIndex(k);\n    setFocusedIndex(k);\n\n    if (typeof child.props.onClick === 'function') {\n      child.props.onClick(e, k);\n    }\n  };\n\n  const handleKeyDown = (e, k, child) => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableChildren.length;\n    const fIndex = focusedIndex || 0;\n\n    switch (code) {\n      case KEY_CODES.END: {\n        e.preventDefault();\n        setFocusedIndex(count - 1);\n        return focusableChildren[count - 1].focus();\n      }\n\n      case KEY_CODES.HOME: {\n        e.preventDefault();\n        setFocusedIndex(0);\n        return focusableChildren[0].focus();\n      }\n\n      case KEY_CODES.ARROW_LEFT:\n      case KEY_CODES.ARROW_UP: {\n        e.preventDefault();\n        setFocusedIndex(fIndex - 1 < 0 ? count - 1 : fIndex - 1);\n        return focusableChildren[fIndex - 1 < 0 ? count - 1 : fIndex - 1].focus();\n      }\n\n      case KEY_CODES.ARROW_RIGHT:\n      case KEY_CODES.ARROW_DOWN: {\n        e.preventDefault();\n        setFocusedIndex((fIndex + 1) % count);\n        return focusableChildren[(fIndex + 1) % count].focus();\n      }\n\n      default:\n        break;\n    }\n\n    if (typeof child.props.onKeyDown === 'function') {\n      child.props.onKeyDown(e, k);\n    }\n\n    return setFocusedIndex(selectedTabIndex);\n  };\n\n  return (\n    <ul\n      className={classnames(`${CSS_PREFIX}-list`, {\n        [`${CSS_PREFIX}--${orientation}`]: Boolean(orientation)\n      }, className)}\n      ref={ref}\n      role={role}\n      {...remainingProps}\n    >\n      {\n        Children.map(children, (child, k) => (\n          <TabItem role=\"none\">\n            {\n              cloneElement(child, {\n                key: k,\n                onClick: e => handleClick(e, k, child),\n                onKeyDown: e => handleKeyDown(e, k, child),\n                selected: selectedTabIndex === k,\n                tabIndex: Number.isInteger(focusedIndex)\n                  ? focusedIndex === k ? 0 : -1\n                  : k === 0 ? 0 : -1\n              })\n            }\n          </TabItem>\n        ))\n      }\n    </ul>\n  );\n});\n\nTabList.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Orientation\n   */\n  orientation: oneOf(['vertical']),\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * Selected Tab Index\n   */\n  selectedTab: oneOfType([number, string])\n};\n\nTabList.defaultProps = {\n  role: 'tablist'\n};\n\nTabList.displayName = 'TabList';\n\nexport default TabList;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, tag: Tag, ...remainingProps }) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'span',\n    'time'\n  ]),\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nButtonLabel.defaultProps = {\n  tag: 'span'\n};\n\nexport default ButtonLabel;\n"],"sourceRoot":""}