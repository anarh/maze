{"version":3,"sources":["components/nav-action/index.js","components/nav-action-info/index.js","components/search-button/index.js","components/search/example/index.js","pages/components/search.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","../node_modules/shortid/lib/alphabet.js","components/button-label/index.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","components/button-icon/index.js","components/input-container/index.js","components/input-label/index.js","components/input-bar/index.js","components/input-option/index.js","components/input-hint/index.js","components/input-text/index.js","components/input-message/index.js","components/input/index.js","components/input-input/index.js","components/search/index.js","components/search-clear-button/index.js","components/search-icon/index.js","components/nav-site/index.js"],"names":["NavAction","children","className","remainingProps","classnames","displayName","NavActionInfo","SearchButton","SearchExample","refOne","useRef","refTwo","useState","disableToggle","expanded","value","stateOne","setStateOne","stateTwo","setStateTwo","stateThree","setStateThree","stateFour","setStateFour","tag","ariaLabel","iconType","name","resolution","autoComplete","label","placeholder","type","useNativePlaceholder","container","expandable","onBlur","Boolean","length","setTimeout","onChange","e","target","ref","undefined","onClick","current","focus","position","href","alt","src","Logo","navbar","dynamic","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","tabIndex","required","color","Array","isArray","v","join","defaultValue","ScreenReader","forwardRef","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","module","exports","get","characters","seed","lookup","index","ButtonLabel","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","REDUCE_TIME","version","str","seconds","Date","now","random","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","bytes","mask","LN2","step","ceil","id","RegExp","test","ButtonIcon","disabled","aria-label","isRequired","InputContainer","filled","invalid","isTextarea","readOnly","InputLabel","InputBar","InputOption","InputHint","InputText","InputMessage","show","Input","checkmarkIcon","containerProps","errorIcon","errorText","helpIcon","helpText","shortid","labelId","noValidate","onFocus","showCheckmark","showErrorText","showHelpText","dirty","setDirty","setFilled","focused","setFocused","isInvalid","setIsInvalid","uid","setValidity","checkValidity","trim","htmlFor","aria-describedby","aria-invalid","helpOrErrorText","getHelpOrErrorText","InputInput","Search","SearchClearButton","SearchIcon","NavSite"],"mappings":"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","file":"static/js/10.1c536961.chunk.js","sourcesContent":["import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-action';\n\nconst NavAction = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavAction.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavAction.displayName = 'NavAction';\n\nexport default NavAction;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-action-info';\n\nconst NavActionInfo = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavActionInfo.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavActionInfo.displayName = 'NavActionInfo';\n\nexport default NavActionInfo;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search-button';\n\nconst SearchButton = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSearchButton.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSearchButton.displayName = 'SearchButton';\n\nexport default SearchButton;\n","import React, { useRef, useState } from 'react';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Input from '../../input';\nimport Nav from '../../nav';\nimport NavAction from '../../nav-action';\nimport NavActionInfo from '../../nav-action-info';\nimport NavBrand from '../../nav-brand';\nimport NavBrandInfo from '../../nav-brand-info';\nimport NavBrandLogo from '../../nav-brand-logo';\nimport NavBrandLogoImage from '../../nav-brand-logo-image';\nimport NavLinks from '../../nav-links';\nimport NavSite from '../../nav-site';\nimport NavSkip from '../../nav-skip';\nimport Row from '../../row';\nimport Search from '../../search';\nimport SearchButton from '../../search-button';\nimport SearchClearButton from '../../search-clear-button';\nimport SearchIcon from '../../search-icon';\nimport Tab from '../../tab';\nimport TabList from '../../tab-list';\nimport Typography from '../../typography';\nimport Logo from '@visa/vds-web/dist/_logos/visa/visa_vbm_wht.svg';\nimport  './index.css';\n\nconst SearchExample = () => {\n  const refOne = useRef();\n  const refTwo = useRef();\n\n  const [stateOne, setStateOne] = useState({\n    disableToggle: false,\n    expanded: false,\n    value: ''\n  });\n\n  const [stateTwo, setStateTwo] = useState({\n    disableToggle: false,\n    expanded: false,\n    value: ''\n  });\n\n  const [stateThree, setStateThree] = useState({\n    value: ''\n  });\n\n  const [stateFour, setStateFour] = useState({\n    value: ''\n  });\n\n  const handleClickOne = () => {\n    if (stateOne.value === '' && stateOne.disableToggle === false) {\n      refOne.current.focus();\n\n      setStateOne({\n        ...stateOne,\n        disableToggle: true,\n        expanded: !stateOne.expanded\n      });\n    }\n  };\n\n  const handleBlurOne = () => {\n    setStateOne({\n      ...stateOne,\n      expanded: Boolean(stateOne.value.length)\n    });\n\n    setTimeout(() => setStateOne({\n      ...stateOne,\n      disableToggle: false,\n      expanded: Boolean(stateOne.value.length)\n    }), 300);\n  };\n\n  const handleClickTwo = () => {\n    if (stateTwo.value === '' && stateTwo.disableToggle === false) {\n      refTwo.current.focus();\n\n      setStateTwo({\n        ...stateTwo,\n        disableToggle: true,\n        expanded: !stateTwo.expanded\n      });\n    }\n  };\n\n  const handleBlurTwo = () => {\n    setStateTwo({\n      ...stateTwo,\n      expanded: Boolean(stateTwo.value.length)\n    });\n\n    setTimeout(() => setStateTwo({\n      ...stateTwo,\n      disableToggle: false,\n      expanded: Boolean(stateTwo.value.length)\n    }), 300);\n  };\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Search Default</Typography>\n          <Typography>\n            Standard search interaction provides search results\n            after user has input their keyword search query and\n            submit the action. While auto-suggest may help the user\n            complete their input, search results are not displayed\n            until users explicitly submit the search action.\n          </Typography>\n          <Typography>\n            Note: Standard Search includes a button with the\n            magnifying glass icon and the input field is 48px tall.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search>\n            <SearchButton>\n              <ButtonIcon ariaLabel=\"search\" iconType=\"light\">\n                <Icon name=\"search\" resolution=\"low\" />\n              </ButtonIcon>\n            </SearchButton>\n            <Input\n              autoComplete=\"off\"\n              label=\"Search\"\n              name=\"q\"\n              placeholder=\"Search\"\n              type=\"search\"\n              useNativePlaceholder\n            />\n          </Search>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Search Expandable (with state)</Typography>\n          <Typography>\n            When the search feature is more of a secondary action and\n            the allowed canvas real-estate is limited, the search magnifying\n            glass icon can be used as an entry point to invoke a modal search box.\n          </Typography>\n          <Typography>\n            Once users press the search icon, the text field will expand and be ready for input.\n          </Typography>\n          <Typography>\n            After the field is expanded, if focus is removed from field\n            before an entry is made, then the field will collapse to it’s default state.\n          </Typography>\n          <Typography>\n            Pressing the search icon while the field is expanded will check\n            if the field contains entered text. If there is an entry then a\n            search is performed, otherwise the field is collapsed to it’s default state.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search container expandable>\n            <Input\n              autoComplete=\"off\"\n              expanded={stateOne.expanded}\n              label=\"Search\"\n              name=\"q\"\n              onBlur={handleBlurOne}\n              onChange={e => setStateOne({ ...stateOne, value: e.target.value })}\n              placeholder=\"Search\"\n              ref={refOne}\n              type=\"search\"\n              useNativePlaceholder\n              value={stateOne.value}\n            />\n            <SearchButton>\n              <ButtonIcon\n                ariaLabel=\"search\"\n                iconType={stateOne.expanded ? 'light' : undefined}\n                onClick={handleClickOne}\n              >\n                <Icon name=\"search\" resolution=\"low\" />\n              </ButtonIcon>\n            </SearchButton>\n          </Search>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Navigation Bar With Standard Expandable Search</Typography>\n          <Typography>\n            Search feature as placed in the Navigation Bar will gather\n            results from across the entire app experience. By default,\n            it will use the expandable behavior with non-dynamic search behavior.\n            This design of the text field input (no borders) is specific to Search on the Navigation Bar.\n          </Typography>\n          <Typography>\n            Default\n          </Typography>\n          <Typography>\n            By default the user will only see the Search magnifying glass\n            icon as part of the navigation bar. To invoke the search feature,\n            the user will press on the icon button.\n          </Typography>\n          <Typography>\n            After Expansion\n          </Typography>\n          <Typography>\n            Once the user presses on the Search magnifying glass,\n            the search box will expand and place the focus on the text\n            field, ready for users to type in their query.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav position=\"relative\">\n            <Grid>\n              <Row>\n                <Col>\n                  <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                  <NavBrand>\n                    <NavBrandInfo>\n                      <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                        <Icon name=\"menu\" resolution=\"low\" />\n                      </ButtonIcon>\n                      <NavBrandLogo href=\"http://www.visa.com\">\n                        <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                      </NavBrandLogo>\n                    </NavBrandInfo>\n                  </NavBrand>\n                  <NavSite>\n                    <NavLinks ariaLabel=\"Site Navigation\">\n                      <TabList>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Contact</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Service</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Statistics</Tab>\n                      </TabList>\n                    </NavLinks>\n                  </NavSite>\n                  <NavAction>\n                    <NavActionInfo>\n                      <Search expandable navbar>\n                        <Input\n                          autoComplete=\"off\"\n                          expanded={stateTwo.expanded}\n                          label=\"Search\"\n                          name=\"q\"\n                          onBlur={handleBlurTwo}\n                          onChange={e => setStateTwo({ ...stateTwo, value: e.target.value })}\n                          placeholder=\"Search\"\n                          ref={refTwo}\n                          type=\"search\"\n                          useNativePlaceholder\n                          value={stateTwo.value}\n                        />\n                        <SearchButton>\n                          <ButtonIcon\n                            ariaLabel=\"search\"\n                            iconType={stateTwo.expanded ? 'light' : 'dark'}\n                            onClick={handleClickTwo}\n                          >\n                            <Icon name=\"search\" resolution=\"low\" />\n                          </ButtonIcon>\n                        </SearchButton>\n                      </Search>\n                    </NavActionInfo>\n                  </NavAction>\n                </Col>\n              </Row>\n            </Grid>\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Dynamic Search</Typography>\n          <Typography>\n            Dynamic search begins when the user starts typing in their\n            query after invoking the search function. Users will see a\n            list of auto-suggestions to help users find the proper query or\n            related results. The search-as-you-type is often used in dedicated\n            search experiences and often in mobile app experiences.\n          </Typography>\n          <Typography>\n            Typing three or more characters presents the search assist menu.\n          </Typography>\n          <Typography>\n            Note: Unlike Standard Search, Dynamic Search includes a\n            \"clear entry\" button and not a Search button and the input\n            field is 40px tall.\n          </Typography>\n          <Typography>\n            The clear button will show up if users entered a keyword entry.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search dynamic>\n            <Input\n              autoComplete=\"off\"\n              label=\"Search\"\n              name=\"q\"\n              onChange={e => setStateThree({ value: e.target.value })}\n              placeholder=\"Search\"\n              type=\"search\"\n              useNativePlaceholder\n              value={stateThree.value}\n            />\n            <SearchIcon>\n              <Icon name=\"search\" resolution=\"low\" />\n            </SearchIcon>\n            {\n              stateThree.value.length\n                ? <SearchClearButton>\n                  <ButtonIcon\n                    ariaLabel=\"clear entry\"\n                    iconType=\"light-tiny\"\n                    onClick={() => setStateThree({ value: '' })}\n                  >\n                    <Icon name=\"clear\" resolution=\"tiny\" />\n                  </ButtonIcon>\n                </SearchClearButton>\n                : undefined\n            }\n          </Search>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Contextual Search</Typography>\n          <Typography>\n            As the search scope becomes more narrow and contextual,\n            the placement of the search feature will be placed closer with\n            the content that it will search. This will utilize the text field,\n            hidden label variant. The search feature may run dynamically\n            depending on the app architecture.\n          </Typography>\n          <Typography>\n            Typing three or more characters presents the search assist menu.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Search dynamic>\n            <Input\n              autoComplete=\"off\"\n              label=\"Search\"\n              name=\"q\"\n              onChange={e => setStateFour({ value: e.target.value })}\n              placeholder=\"Search news articles\"\n              type=\"search\"\n              useNativePlaceholder\n              value={stateFour.value}\n            />\n            <SearchIcon>\n              <Icon name=\"search\" resolution=\"low\" />\n            </SearchIcon>\n            {\n              stateFour.value.length\n                ? <SearchClearButton>\n                  <ButtonIcon\n                    ariaLabel=\"clear entry\"\n                    iconType=\"light-tiny\"\n                    onClick={() => setStateFour({ value: '' })}\n                  >\n                    <Icon name=\"clear\" resolution=\"tiny\" />\n                  </ButtonIcon>\n                </SearchClearButton>\n                : undefined\n            }\n          </Search>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default SearchExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/search/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/search/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/search/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst SearchExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Search\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Search</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/search`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Search Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/search/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/search/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/search`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/search`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/search/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/search/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/search/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/search/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i} tabIndex=\"0\">\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <sup style={{ color: 'red' }}> required</sup> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nSearchExample.displayName = 'SearchExample';\n\nexport default SearchExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\n\nfunction reset() {\n  shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n\n    return;\n  }\n\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n\n  alphabet = _alphabet_;\n  reset();\n}\n\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\n\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\n\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n\n  return targetArray.join('');\n}\n\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n\n  shuffled = shuffle();\n  return shuffled;\n}\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\n\n\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\n\nfunction get() {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar build = require('./build');\n\nvar isValid = require('./is-valid'); // if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\n\n\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\n\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\n\n\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\n\n\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n\n  return alphabet.shuffled();\n}\n/**\n * Generate unique id\n * Returns string id\n */\n\n\nfunction generate() {\n  return build(clusterWorkerId);\n} // Export all other functions as properties of the generate function\n\n\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict'; // Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\n\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\n\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\n\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nvar generate = require('./generate');\n\nvar alphabet = require('./alphabet'); // Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\n\n\nvar REDUCE_TIME = 1567752802062; // don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\n\nvar version = 7; // Counter is used when shortid is called multiple times in one second.\n\nvar counter; // Remember the last time shortid was called in case counter is needed.\n\nvar previousSeconds;\n/**\n * Generate unique id\n * Returns string id\n */\n\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n\n  str = str + generate(seconds);\n  return str;\n}\n\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\n\nvar random = require('./random/random-byte');\n\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n\n  return str;\n}\n\nmodule.exports = generate;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\n\nmodule.exports = randomByte;","module.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  var step = Math.ceil(1.6 * mask * size / alphabet.length);\n  var id = '';\n\n  while (true) {\n    var i = step;\n    var bytes = random(i);\n\n    while (i--) {\n      id += alphabet[bytes[i] & mask] || '';\n      if (id.length === +size) return id;\n    }\n  }\n};","'use strict';\n\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;","'use strict';\n\nmodule.exports = 0;","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string.isRequired,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React from 'react';\nimport { bool, func, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input';\nconst CSS_STATE = 'vds-state';\n\nconst InputContainer = ({\n  children,\n  className,\n  css,\n  disabled,\n  expanded,\n  filled,\n  focus,\n  invalid,\n  isTextarea,\n  readOnly,\n  ...remainingProps\n}) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !isTextarea,\n      [`${CSS_PREFIX}-textarea-container`]: Boolean(isTextarea),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--error`]: Boolean(invalid),\n      [`${CSS_STATE}--expanded`]: Boolean(expanded),\n      [`${CSS_STATE}--filled`]: Boolean(filled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--readonly`]: Boolean(readOnly),\n      [`${CSS_STATE}--success`]: typeof invalid === 'boolean' && !invalid\n    }, className)}\n    css={css}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputContainer.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Filled\n   */\n  filled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * isTextarea\n   */\n  isTextarea: bool,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool\n};\n\nInputContainer.displayName = 'InputContainer';\n\nexport default InputContainer;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-label';\n\nconst InputLabel = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <label\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </label>\n));\n\nInputLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputLabel.displayName = 'InputLabel';\n\nexport default InputLabel;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-bar';\n\nconst InputBar = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputBar.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputBar.displayName = 'InputBar';\n\nexport default InputBar;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-option';\n\nconst InputOption = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputOption.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputOption.displayName = 'InputOption';\n\nexport default InputOption;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-hint';\n\nconst InputHint = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputHint.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputHint.displayName = 'InputHint';\n\nexport default InputHint;\n","import React, { forwardRef } from 'react';\nimport { string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input--input-text';\n\nconst InputText = forwardRef(({ className, type, ...remainingProps }, ref) => (\n  <input\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  />\n));\n\nInputText.propTypes = {\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Type of the input element. It should be a valid HTML5 input type.\n   */\n  type: string\n};\n\nInputText.defaultProps = {\n  type: 'text'\n};\n\nInputText.displayName = 'InputText';\n\nexport default InputText;\n","import React from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-message';\nconst CSS_STATE = 'vds-state';\n\nconst InputMessage = ({\n  // ariaAtomic,\n  children,\n  className,\n  invalid,\n  // role,\n  show,\n  ...remainingProps\n}) => (\n  <span\n    // aria-atomic={ariaAtomic}\n    // aria-live=\"polite\" //''invalid ? 'assertive' : 'polite'}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--hidden`]: !show,\n      [`${CSS_STATE}--error`]: Boolean(invalid)\n    }, className)}\n    // role={role}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nInputMessage.propTypes = {\n  /**\n   * Aria Atomic\n   */\n  ariaAtomic: oneOf(['true', 'false']),\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\n// InputMessage.defaultProps = {\n//   ariaAtomic: 'true',\n//   role: 'alert'\n// };\n\nInputMessage.displayName = 'InputMessage';\n\nexport default InputMessage;\n","import React, { forwardRef, Fragment, useEffect, useRef, useState } from 'react';\nimport { bool, func, node, number, object, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport InputContainer from '../input-container';\nimport InputLabel from '../input-label';\nimport InputBar from '../input-bar';\nimport InputHint from '../input-hint';\nimport InputInput from '../input-input';\nimport InputText from '../input-text';\nimport InputMessage from '../input-message';\nimport InputOption from '../input-option';\nimport Icon from '../icon';\nimport ScreenReader from '../screen-reader';\n\nconst CSS_STATE = 'vds-state';\n\nconst Input = forwardRef(({\n  ariaLabel,\n  checkmarkIcon,\n  children,\n  className,\n  containerProps,\n  css,\n  disabled,\n  errorIcon,\n  errorText,\n  expanded,\n  helpIcon,\n  helpText,\n  id = shortid.generate(),\n  invalid,\n  label,\n  labelId,\n  noValidate,\n  onBlur,\n  onChange,\n  onFocus,\n  placeholder,\n  readOnly,\n  showCheckmark,\n  showErrorText,\n  showHelpText,\n  useNativePlaceholder,\n  ...remainingProps\n}, ref) => {\n  const [dirty, setDirty] = useState(false);\n  const [filled, setFilled] = useState(Boolean(remainingProps.value) || Boolean(remainingProps.defaultValue));\n  const [focused, setFocused] = useState(false);\n  const [isInvalid, setIsInvalid] = useState(invalid);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  const setValidity = e => {\n    if (!noValidate) {\n      if (dirty) {\n        setIsInvalid((!e.target.checkValidity() || (e.target.required && !e.target.value.trim().length)));\n      }\n\n      if (!dirty && (e.target.required && !e.target.value.trim().length)) {\n        setIsInvalid(true);\n      }\n\n      if (dirty && !e.target.required && !e.target.value.trim().length) {\n        setIsInvalid(undefined);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setFilled(Boolean(remainingProps.defaultValue) || Boolean(remainingProps.value));\n  }, [remainingProps.defaultValue, remainingProps.value]);\n\n  useEffect(() => {\n    setIsInvalid(invalid);\n  }, [invalid]);\n\n  const handleBlur = e => {\n    setFocused(false);\n    setValidity(e);\n\n    if (typeof onBlur === 'function') {\n      onBlur(e);\n    }\n  };\n\n  const handleChange = e => {\n    setFilled(e.target.value !== '');\n\n    if (typeof isInvalid === 'boolean') {\n      setValidity(e);\n    }\n\n    setDirty(true);\n    if (typeof onChange === 'function') {\n      onChange(e);\n    }\n  };\n\n  const handleFocus = e => {\n    setFocused(true);\n\n    if (typeof onFocus === 'function') {\n      onFocus(e);\n    }\n  };\n\n  // NOTE: I'd actually separate out getting help text from error text\n  const getHelpOrErrorText = () => {\n    let helpOrErrorText = null;\n    if (showHelpText || showErrorText) {\n      helpOrErrorText = (\n        <InputMessage\n          id={`input-message-${uid}`}\n          show={(showHelpText && Boolean(helpText)) || (showErrorText && Boolean(errorText))}\n          invalid={isInvalid}\n        >\n          {\n            !isInvalid && focused && showHelpText && Boolean(helpText)\n              ? <Fragment>{helpIcon} {helpText}</Fragment>\n              : undefined\n          }\n          {\n            isInvalid === true && showErrorText && Boolean(errorText)\n              ? <Fragment>{errorIcon} <ScreenReader>Error</ScreenReader> {errorText}</Fragment>\n              : undefined\n          }\n        </InputMessage>\n      );\n    }\n    return helpOrErrorText;\n  };\n\n  return (\n    <InputContainer\n      className={classnames(className)}\n      css={css}\n      disabled={disabled}\n      expanded={expanded}\n      filled={filled}\n      focus={focused}\n      readOnly={readOnly}\n      invalid={isInvalid}\n      {...containerProps}\n    >\n      {label ? <InputLabel id={labelId} htmlFor={uid}>{label}</InputLabel> : undefined}\n      <InputBar>\n        <InputInput>\n          { placeholder && !useNativePlaceholder ? <InputHint>{placeholder}</InputHint> : undefined}\n          <InputText\n            aria-describedby={\n              showErrorText || showHelpText\n                ? `input-message-${uid}`\n                : undefined\n            }\n            aria-label={label ? undefined : ariaLabel}\n            aria-invalid={isInvalid}\n            id={uid}\n            disabled={disabled}\n            onBlur={handleBlur}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder={useNativePlaceholder ? placeholder : undefined}\n            readOnly={readOnly}\n            ref={ref}\n            {...remainingProps}\n          />\n        </InputInput>\n        {\n          showCheckmark && typeof isInvalid === 'boolean' && !isInvalid && Boolean(checkmarkIcon)\n            ? <InputOption\n              className={classnames({\n                [`${CSS_STATE}--hidden`]: typeof isInvalid === 'boolean' && isInvalid\n              })}\n            >\n              {checkmarkIcon}\n            </InputOption>\n            : undefined\n        }\n        {children}\n      </InputBar>\n      {getHelpOrErrorText()}\n\n    </InputContainer>\n  );\n});\n\nInput.propTypes = {\n  /**\n   * Aria Label\n   */\n  ariaLabel: string,\n\n  /**\n   *  Checkmark Icon\n   */\n  checkmarkIcon: node,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Props\n   */\n  containerProps: object, // eslint-disable-line\n\n  /**\n   * @ignore\n   */\n  css: func,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   *  Error Message Icon\n   */\n  errorIcon: node,\n\n  /**\n   *  Error Message\n   */\n  errorText: node,\n\n  /**\n   *  Expanded\n   */\n  expanded: bool,\n\n  /**\n   * Input Help Message Icon\n   */\n  helpIcon: node,\n\n  /**\n   * Input Help Message\n   */\n  helpText: node,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Invalid\n   */\n  invalid: bool,\n\n  /**\n   * Label\n   */\n  label: node,\n\n  /**\n   * Label Id\n   */\n  labelId: oneOfType([number, string]),\n\n  /**\n   * Disable native HTML5 validation e.g. type=email, pattern=\"some regex pattern\"\n   */\n  noValidate: bool,\n\n  /**\n   * Callback fired when the input element loses focus.\n   */\n  onBlur: func,\n\n  /**\n   * On Change\n   */\n  onChange: func,\n\n  /**\n   * Callback fired when the input element is focused on.\n   */\n  onFocus: func,\n\n  /**\n   * Placeholder\n   */\n  placeholder: node,\n\n  /**\n   * ReadOnly\n   */\n  readOnly: bool,\n\n  /**\n   * Show Checkmark Icon\n   */\n  showCheckmark: bool,\n\n  /**\n   * Show Error Message\n   */\n  showErrorText: bool,\n\n  /**\n   * Show Help Message\n   */\n  showHelpText: bool,\n\n  /**\n   * Use native placeholder\n   */\n  useNativePlaceholder: bool\n};\n\nInput.defaultProps = {\n  checkmarkIcon: <Icon name=\"checkmark\" resolution=\"low\" />,\n  errorIcon: <Icon name=\"error\" resolution=\"low\" />\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-input-input';\n\nconst InputInput = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nInputInput.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nInputInput.displayName = 'InputInput';\n\nexport default InputInput;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search';\n\nconst Search = forwardRef(({\n  children,\n  className,\n  container,\n  dynamic,\n  expandable,\n  navbar,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--container`]: Boolean(container),\n      [`${CSS_PREFIX}--dynamic`]: Boolean(dynamic),\n      [`${CSS_PREFIX}--expandable`]: Boolean(expandable),\n      [`${CSS_PREFIX}--nav-bar`]: Boolean(navbar)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nSearch.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Container Search bar\n   */\n  container: bool,\n\n  /**\n   * Dynamic Search bar\n   */\n  dynamic: bool,\n\n  /**\n   * Expandable Search bar\n   */\n  expandable: bool,\n\n  /**\n   * Navbar Search bar\n   */\n  navbar: bool\n};\n\nSearch.displayName = 'Search';\n\nexport default Search;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search-clear-btn';\n\nconst SearchClearButton = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    style={{ display: 'block' }}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSearchClearButton.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSearchClearButton.displayName = 'SearchClearButton';\n\nexport default SearchClearButton;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-search-icon';\n\nconst SearchIcon = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nSearchIcon.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nSearchIcon.displayName = 'SearchIcon';\n\nexport default SearchIcon;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-site';\nconst CSS_STATE = 'vds-state';\n\nconst NavSite = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavSite.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show in mobile\n   */\n  show: bool\n};\n\nNavSite.displayName = 'NavSite';\n\nexport default NavSite;\n"],"sourceRoot":""}