{"version":3,"sources":["components/nav/example/index.js","pages/components/nav.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-icon/index.js","components/listbox/index.js","components/listbox-item/index.js","components/menu/index.js","components/listbox-item-container/index.js","components/menu-curtain/index.js","components/navmenu/index.js","components/button/index.js","components/nav-user/index.js","components/nav-site/index.js"],"names":["NavExample","useState","open","setOpen","tag","position","href","menu","placement","ariaLabel","iconType","name","resolution","alt","src","Logo","flippable","orientation","size","undefined","style","aria-expanded","aria-label","onClick","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","className","classnames","match","path","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","textAlign","Th","Thead","Tr","ButtonLabel","ButtonIcon","disabled","Listbox","multiselect","ListboxItem","active","focus","listItemValue","selected","aria-disabled","data-list-item-value","tabIndex","Menu","show","ListboxItemContainer","cloneElement","element","MenuCurtain","keyCode","DOWN","END","ESC","HOME","PAGEDOWN","PAGEUP","RETURN","SPACE","TAB","UP","Navmenu","id","shortid","generate","modifiers","focusedIndex","setFocusedIndex","focusableItems","setFocusableItems","focusableItemsTextContent","setFocusableItemsTextContent","disabledFocusReturn","setDisabledFocusReturn","uid","useRef","current","listboxRef","buttonRef","listBoxChildren","querySelectorAll","from","char","textContent","trim","toLowerCase","substring","index","handleClick","e","isButton","target","tagName","isLink","preventDefault","handleKeyDown","charCode","count","currentTarget","isListBox","isPrintableChar","focusId","ctrlKey","altKey","metaKey","ENTER","start","filteredTextContent","charObj","obj","matchIndex","indexOf","Manager","Popper","scheduleUpdate","Reference","onKeyDown","overflowY","Children","child","k","c","offset","enabled","Button","NavUser","NavSite"],"mappings":"kkBA2MeA,GAtKI,WAAO,IAAD,EACCC,oBAAS,GADV,mBAChBC,EADgB,KACVC,EADU,KAGvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,IAAI,MAAhB,SAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,SAAS,YACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,YAAd,wBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGD,KAAK,uBAAR,aAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,KAAK,uBAAR,aAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,KAAK,uBAAR,iBAKRE,UAAU,gBAEV,kBAAC,IAAD,CAAYC,UAAU,OAAOC,SAAS,QACpC,kBAAC,IAAD,CAAMC,KAAK,OAAOC,WAAW,UAGjC,kBAAC,IAAD,CAAcN,KAAK,uBACjB,kBAAC,IAAD,CAAmBO,IAAI,OAAOC,IAAKC,SAIzC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUN,UAAU,mBAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKL,IAAK,4BAAOE,KAAK,uBAAtB,WACA,kBAAC,IAAD,CAAKF,IAAK,4BAAOE,KAAK,uBAAtB,WACA,kBAAC,IAAD,CAAKF,IAAK,4BAAOE,KAAK,uBAAtB,iBAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGD,KAAK,MAAR,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,KAAK,MAAR,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,KAAK,MAAR,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,KAAK,MAAR,gBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGA,KAAK,MAAR,eAKRE,UAAU,cAEV,kBAAC,IAAD,CAAQQ,WAAS,GACf,kBAAC,IAAD,KACE,kBAAC,IAAD,oBAEF,kBAAC,IAAD,CAAML,KAAK,eAAeC,WAAW,kBAUvD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYR,IAAI,MAAhB,kBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKa,YAAY,WAAWC,KAAMhB,OAAOiB,EAAY,QACnD,kBAAC,IAAD,CAAUC,MAAO,CAAEf,SAAU,YAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,YAAd,wBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcA,KAAK,KACjB,kBAAC,IAAD,CAAmBO,IAAI,OAAOC,IAAKC,UAK3C,kBAAC,IAAD,CAAUN,UAAU,mBAClB,kBAAC,IAAD,CAASQ,YAAY,YACnB,kBAAC,IAAD,CAAKb,IAAK,4BAAOE,KAAK,uBACpB,kBAAC,IAAD,CAAMK,KAAK,kBAAkBC,WAAW,QAD1C,IACmD,kBAAC,IAAD,cAEnD,kBAAC,IAAD,CAAKR,IAAK,4BAAOE,KAAK,uBACpB,kBAAC,IAAD,CAAMK,KAAK,OAAOC,WAAW,QAD/B,IACwC,kBAAC,IAAD,cAExC,kBAAC,IAAD,CAAKR,IAAK,4BAAOE,KAAK,uBACpB,kBAAC,IAAD,CAAMK,KAAK,YAAYC,WAAW,QADpC,IAC6C,kBAAC,IAAD,oBAE7C,kBAAC,IAAD,CAAKR,IAAK,4BAAOE,KAAK,uBACpB,kBAAC,IAAD,CAAMK,KAAK,kBAAkBC,WAAW,QAD1C,IACmD,kBAAC,IAAD,mBAEnD,kBAAC,IAAD,CAAKR,IAAK,4BAAOE,KAAK,uBACpB,kBAAC,IAAD,CAAMK,KAAK,YAAYC,WAAW,QADpC,IAC6C,kBAAC,IAAD,0BAIjD,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAQ,kBAAC,IAAD,gBAEV,kBAAC,IAAD,CAAyBS,gBAAenB,EAAO,OAAS,QAAUoB,aAAW,6BAA6BC,QAAS,kBAAMpB,GAASD,KAChI,kBAAC,IAAD,KAEIA,EACI,kBAAC,IAAD,CAAMS,KAAK,iBAAiBC,WAAW,SACvC,kBAAC,IAAD,CAAMD,KAAK,aAAaC,WAAW,kBCnKvDY,GAAWC,EAAQ,KACnBC,GAAU,CAACD,EAAQ,MACnBE,GAAYF,EAAQ,KAEpBG,GADE,0wCACYC,QAAQ,YAAa,yBAAyBA,QAAQ,gBAAiB,uBAErFC,GADc,m/QACeD,QAAQ,aAAvB,qBAEd7B,GAAa,SAAC,GAA2B,IAAtB+B,EAAqB,oBACA9B,mBAAS,IADT,mBACrC+B,EADqC,KACrBC,EADqB,KAc5C,OAXAC,qBAAU,WACR,IACED,EAAkBN,GAAUQ,MAAMP,KAClC,SAEAQ,QAAQC,IAAR,0IAID,IAGD,kBAAC,IAAD,CAAMC,uBAAqB,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYlC,IAAI,MAAhB,SAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,IAAK,kBAAC,IAAD,CAASmC,OAAK,EAACC,GAAE,UAAKC,iBAAL,mBAA8CC,gBAAgB,yBACvF,kBAAC,IAAD,CAAM/B,KAAK,MAAMC,WAAW,QAD9B,eAGA,kBAAC,IAAD,CAAKR,IAAK,kBAAC,IAAD,CAASmC,OAAK,EAACC,GAAE,UAAKC,iBAAL,wBAAmDC,gBAAgB,yBAC5F,kBAAC,IAAD,CAAM/B,KAAK,qBAAqBC,WAAW,QAD7C,kBAGA,kBAAC,IAAD,CAAKR,IAAK,kBAAC,IAAD,CAASmC,OAAK,EAACC,GAAE,UAAKC,iBAAL,wBAAmDC,gBAAgB,yBAC5F,kBAAC,IAAD,CAAM/B,KAAK,qBAAqBC,WAAW,QAD7C,sBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACE+B,UAAWC,IAAW,CACpB,oBAAqBb,EAAec,MAAMC,OAArB,UAAiCL,iBAAjC,mBACrB,kBAAmBV,EAAec,MAAMC,OAArB,UAAiCL,iBAAjC,sBAGrB,kBAAC,GAAYV,IAEf,yBACEY,UAAWC,IAAW,CACpB,oBAAqBb,EAAec,MAAMC,OAArB,UAAiCL,iBAAjC,wBACrB,kBAAmBV,EAAec,MAAMC,OAArB,UAAiCL,iBAAjC,2BAGrB,kBAAC,IAAD,iBAAeM,IAAf,CAA6BC,MAAOA,IAAOC,KAAMnB,GAAaoB,SAAS,SACpE,gBAAGP,EAAH,EAAGA,UAAWvB,EAAd,EAAcA,MAAO+B,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKV,UAAWA,EAAWvB,MAAOA,GAC/B+B,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,yCAASJ,EAAa,CAAEK,IAAKD,EAAGD,SAAhC,CAAyCE,IAAKD,IAC5C,0BACEpC,MAAO,CACLsC,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRL,EAAI,GAEND,EAAKD,KAAI,SAACQ,EAAOL,GAAR,OAAgB,0CAAUJ,EAAc,CAAEI,MAAKK,UAA/B,CAAyCL,IAAKA,iBAOpF,yBACEd,UAAWC,IAAW,CACpB,oBAAqBb,EAAec,MAAMC,OAArB,UAAiCL,iBAAjC,wBACrB,kBAAmBV,EAAec,MAAMC,OAArB,UAAiCL,iBAAjC,2BAGrB,kBAAC,IAAD,iBACMM,IADN,CAEEC,MAAOA,IACPC,KAAMzB,GAASuC,OAAOC,IAAeC,qBAAqB,kBAAC,GAAYlC,IAAqB,CAAEmC,IAAK,SAAUC,OAAQ,OAAQzC,WAAS0C,WAAY,MAClJlB,SAAS,UAER,gBAAGP,EAAH,EAAGA,UAAWvB,EAAd,EAAcA,MAAO+B,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,aAAcC,EAA3C,EAA2CA,cAA3C,OACC,yBAAKV,UAAWA,EAAWvB,MAAOA,GAC/B+B,EAAOG,KAAI,SAACC,EAAMC,GAAP,OACV,yCAASJ,EAAa,CAAEK,IAAKD,EAAGD,SAAhC,CAAyCE,IAAKD,IAC5C,0BACEpC,MAAO,CACLsC,QAAS,eACTC,QAAS,MACTC,WAAY,OACZC,MAAO,QAGRL,EAAI,GAEND,EAAKD,KAAI,SAACQ,EAAOL,GAAR,OAAgB,0CAAUJ,EAAc,CAAEI,MAAKK,UAA/B,CAAyCL,IAAKA,mBASxF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEd,UAAWC,IAAW,CACpB,eAEFyB,cAAY,EACZnD,KAAK,WAEL,kBAAC,IAAD,CAAcd,IAAI,WAAlB,SACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAIuC,UAAU,UACZ,kBAAC,IAAD,CAAI2B,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,QAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,WAGA,kBAAC,IAAD,CAAIF,YAAU,OAAOC,KAAK,eAAeC,MAAM,OAA/C,iBAKJ,kBAAC,IAAD,KAEIxC,EAAeyC,OAASC,OAAOC,QAAQ3C,EAAeyC,OACnDG,QAAO,SAAAC,GAAG,MAA2B,YAAvBA,EAAI,GAAGC,eACrBxB,KAAI,SAACuB,EAAKrB,GAAN,OACH,kBAAC,IAAD,CAAIb,UAAU,SAASc,IAAKD,GAC1B,kBAAC,IAAD,CAAIb,UAAU,UACXkC,EAAI,GADP,IACYA,EAAI,GAAGE,SAAW,+CAA+B,IAE7D,kBAAC,IAAD,CAAIpC,UAAU,UACZ,gCAASkC,EAAI,GAAGG,KAAKrE,MAEnBkE,EAAI,GAAGG,KAAKC,OAASJ,EAAI,GAAGG,KAAKC,MAAMC,OACnC,2BAAO9D,MAAO,CAAE+D,MAAO,YAAa,6BAElCC,MAAMC,QAAQR,EAAI,GAAGG,KAAKC,OACtBJ,EAAI,GAAGG,KAAKC,MAAM3B,KAAI,SAAAgC,GAAC,OAAIA,EAAEL,OAASK,EAAE3E,QAAM4E,KAAK,MACtB,kBAAtBV,EAAI,GAAGG,KAAKC,MACjBJ,EAAI,GAAGG,KAAKC,WACZ9D,GAGR,IAGR,kBAAC,IAAD,CAAIwB,UAAU,UACXkC,EAAI,GAAGW,aAAeX,EAAI,GAAGW,aAAaP,MAAQ,IAErD,kBAAC,IAAD,CAAItC,UAAU,UACXkC,EAAI,GAAGC,uBAahC9E,GAAWyF,YAAc,aAEVzF,c,mFChNT0F,EAAeC,sBAAW,WAAuDC,GAAvD,IAAGC,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAgBmD,EAA7B,EAAwB1F,IAAa2B,EAArC,qDAC9B,kBAAC+D,EAAD,eACEnD,UAAWC,IAJI,oBAImBD,GAClCiD,IAAKA,GACD7D,GAEH8D,MAILH,EAAaK,UAAY,CAIvBF,SAAUG,OAKVrD,UAAWsD,SAKX7F,IAAK8F,eAGPR,EAAa3C,aAAe,CAC1B3C,IAAK,QAGPsF,EAAaD,YAAc,eAEZC,O,0FChCTS,EAAYR,sBAAW,WAa1BC,GAb0B,MAC3BC,EAD2B,EAC3BA,SACAlD,EAF2B,EAE3BA,UACAyD,EAH2B,EAG3BA,oBACA/B,EAJ2B,EAI3BA,aACAgC,EAL2B,EAK3BA,cACAC,EAN2B,EAM3BA,OACAC,EAP2B,EAO3BA,kBACAC,EAR2B,EAQ3BA,iBACAC,EAT2B,EAS3BA,aACAvF,EAV2B,EAU3BA,KACAwF,EAX2B,EAW3BA,aACG3E,EAZwB,yLAc3B,2CACMA,EADN,CAEEY,UAAWC,IAnBI,kBAmBM,6BAlBP,YAkBO,0BACqB+D,QAAQP,IAD7B,wBAlBP,YAkBO,mBAEcO,QAAQtC,IAFtB,wBAlBP,YAkBO,qBAGgBsC,QAAQN,IAHxB,wBAlBP,YAkBO,aAIDnF,GAASyF,QAAQzF,IAJhB,wBAlBP,YAkBO,YAKOyF,QAAQL,IALf,wBAlBP,YAkBO,yBAMoBK,QAAQJ,IAN5B,wBAlBP,YAkBO,wBAOmBI,QAAQH,IAP3B,wBAlBP,YAkBO,aAQDC,GAAiBE,QAAQF,IARxB,wBAlBP,YAkBO,mBAScE,QAAQD,IATtB,GAUlB/D,GACHiD,IAAKA,IAEJC,MAILM,EAAUJ,UAAY,CAIpBF,SAAUG,OAKVrD,UAAWsD,SAKXW,QAASC,kBAAQC,gBAAM,KAKvBV,oBAAqBW,OAKrBC,KAAMH,kBAAQC,gBAAM,KAKpBzC,aAAc0C,OAKdV,cAAeU,OAKfT,OAAQS,OAKRR,kBAAmBQ,OAKnBP,iBAAkBO,OAKlBN,aAAcQ,gBAAM,CAAC,eAAgB,kBAKrC/F,KAAM+F,gBAAM,CAAC,YAKbP,aAAcK,QAGhBZ,EAAUV,YAAc,YAETU,O,mFCvGTe,EAAQvB,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAcZ,EAA3B,+CACvB,yCACEY,UAAWC,IAJI,YAImBD,GAClCiD,IAAKA,GACD7D,GAEH8D,MAILqB,EAAMnB,UAAY,CAIhBF,SAAUG,OAKVrD,UAAWsD,UAGbiB,EAAMzB,YAAc,QAELyB,O,0FCxBTC,EAAKxB,sBAAW,WAKnBC,GALmB,IACpBC,EADoB,EACpBA,SACAlD,EAFoB,EAEpBA,UACAyE,EAHoB,EAGpBA,UACGrF,EAJiB,2DAMpB,sCACEY,UAAWC,IATI,SASM,mCACLwE,GAAcT,QAAQS,IACnCzE,GACHiD,IAAKA,GACD7D,GAEH8D,MAILsB,EAAGpB,UAAY,CAIbF,SAAUG,OAKVrD,UAAWsD,SAKXmB,UAAWH,gBAAM,CAAC,SAAU,OAAQ,WAGtCE,EAAG1B,YAAc,KAEF0B,O,mFCpCTE,EAAK1B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAcZ,EAA3B,+CACpB,sCACEY,UAAWC,IAJI,SAImBD,GAClCiD,IAAKA,GACD7D,GAEH8D,MAILwB,EAAGtB,UAAY,CAIbF,SAAUG,OAKVrD,UAAWsD,UAGboB,EAAG5B,YAAc,KAEF4B,O,mFCxBTC,EAAQ3B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAcZ,EAA3B,+CACvB,yCACEY,UAAWC,IAJI,YAImBD,GAClCiD,IAAKA,GACD7D,GAEH8D,MAILyB,EAAMvB,UAAY,CAIhBF,SAAUG,OAKVrD,UAAWsD,UAGbqB,EAAM7B,YAAc,QAEL6B,O,mFCxBTC,EAAK5B,sBAAW,WAA6CC,GAA7C,IAAGC,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAcZ,EAA3B,+CACpB,sCACEY,UAAWC,IAJI,SAImBD,GAClCiD,IAAKA,GACD7D,GAEH8D,MAIL0B,EAAGxB,UAAY,CAIbF,SAAUG,OAKVrD,UAAWsD,UAGbsB,EAAG9B,YAAc,KAEF8B,O,4ECxBTC,EAAc,SAAC,GAAD,IAAG3B,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAcZ,EAA3B,+CAClB,wCACEY,UAAWC,IAJI,gBAImBD,IAC9BZ,GAEH8D,IAgBL2B,EAAY/B,YAAc,cAEX+B,O,2ICtBTC,EAAa9B,sBAAW,WAQ3BC,GAR2B,IAC5BnF,EAD4B,EAC5BA,UACAoF,EAF4B,EAE5BA,SACAlD,EAH4B,EAG5BA,UACA+E,EAJ4B,EAI5BA,SACAhH,EAL4B,EAK5BA,SACAsE,EAN4B,EAM5BA,KACGjD,EAPyB,wFAS5B,0CACET,aAAYb,EACZkC,UAAWC,IAbI,eAaM,yBAbN,eAaM,aACAlC,GAAaiG,QAAQjG,IACvCiC,GACH+E,SAAUA,EACV9B,IAAKA,EACLZ,KAAMA,GACFjD,GAEJ,kBAAC,IAAD,KAAc8D,OAIlB4B,EAAW1B,UAAY,CAIrBtF,UAAWwF,SAKXJ,SAAUG,OAKVrD,UAAWsD,SAKXyB,SAAUX,OAKVrG,SAAUuG,gBAAM,CACd,OACA,eACA,YACA,QACA,aACA,gBACA,eAMFjC,KAAMiB,UAGRwB,EAAW1E,aAAe,CACxBiC,KAAM,UAGRyC,EAAWhC,YAAc,aAEVgC,O,mFCtETE,EAAUhC,sBAAW,WAMxBC,GANwB,IACzBC,EADyB,EACzBA,SACAlD,EAFyB,EAEzBA,UACAiF,EAHyB,EAGzBA,YACArD,EAJyB,EAIzBA,KACGxC,EALsB,oEAOzB,sCACEY,UAAWC,IAVI,cAUmB,CAChC,oBAAqB+D,QAAQiB,IAC5BjF,GACHiD,IAAKA,EACLrB,KAAMA,GACFxC,GAEH8D,MAIL8B,EAAQ5B,UAAY,CAIlBF,SAAUG,OAKVrD,UAAWsD,SAKX2B,YAAab,OAKbxC,KAAM0B,UAGR0B,EAAQ5E,aAAe,CACrBwB,KAAM,WAGRoD,EAAQlC,YAAc,UAEPkC,O,0FC9CTE,EAAclC,sBAAW,WAU5BC,GAV4B,MAC7BkC,EAD6B,EAC7BA,OACAjC,EAF6B,EAE7BA,SACAlD,EAH6B,EAG7BA,UACA+E,EAJ6B,EAI7BA,SACAK,EAL6B,EAK7BA,MACAC,EAN6B,EAM7BA,cACAzD,EAP6B,EAO7BA,KACA0D,EAR6B,EAQ7BA,SACGlG,EAT0B,6GAW7B,sCACEmG,gBAAevB,QAAQe,GAAY,YAASvG,EAC5CwB,UAAWC,IAhBI,oBAgBM,6BAfP,YAeO,YACO+D,QAAQmB,IADf,wBAfP,YAeO,cAESnB,QAAQe,IAFjB,wBAfP,YAeO,WAGMf,QAAQoB,IAHd,wBAfP,YAeO,cAISpB,QAAQsB,IAJjB,GAKlBtF,GACHwF,uBAAsBH,EACtBpC,IAAKA,EACLrB,KAAMA,EACN6D,SAAUzB,QAAQe,GAAY,UAAOvG,GACjCY,GAEH8D,MAILgC,EAAY9B,UAAY,CAItB+B,OAAQf,OAKRlB,SAAUG,OAKVrD,UAAWsD,SAKXyB,SAAUX,OAKVgB,MAAOhB,OAKPiB,cAAe/B,SAKf1B,KAAM0B,SAKNgC,SAAUlB,QAGZc,EAAY9E,aAAe,CACzBwB,KAAM,UAGRsD,EAAYpC,YAAc,cAEXoC,O,0FC9ETQ,EAAO1C,sBAAW,WAMrBC,GANqB,MACtBC,EADsB,EACtBA,SACAlD,EAFsB,EAEtBA,UACAtC,EAHsB,EAGtBA,SACAiI,EAJsB,EAItBA,KACGvG,EALmB,iEAOtB,uCACEY,UAAWC,KAAU,6BAVN,aAWOvC,GADD,wBAVN,WAUM,aAEAA,GAAasG,QAAQtG,IAFrB,wBAVN,WAUM,UAGMsG,QAAQ2B,IAHd,GAIlB3F,GACHiD,IAAKA,GACD7D,GAEH8D,MAILwC,EAAKtC,UAAY,CAIfF,SAAUG,OAKVrD,UAAWsD,SAKX5F,SAAU4G,gBAAM,CAAC,WAAY,UAK7BqB,KAAMvB,QAGRsB,EAAK5C,YAAc,OAEJ4C,O,yFC3CTE,EAAuB5C,sBAAW,WAKrCC,GALqC,IACtCC,EADsC,EACtCA,SACAlD,EAFsC,EAEtCA,UACA+E,EAHsC,EAGtCA,SACG3F,EAJmC,0DAMtCyG,uBAAa3C,EAAD,aACVlD,UAAWC,IAVI,6BAUM,yBATP,YASO,cACS+D,QAAQe,IACnC/E,GACHiD,OACG7D,OAIPwG,EAAqBxC,UAAY,CAI/BF,SAAU4C,UAKV9F,UAAWsD,SAKXyB,SAAUX,QAGZwB,EAAqB9C,YAAc,uBAEpB8C,O,yJCnCTG,EAAc/C,sBAAW,WAK5BC,GAL4B,IAC7BC,EAD6B,EAC7BA,SACAlD,EAF6B,EAE7BA,UACA2F,EAH6B,EAG7BA,KACGvG,EAJ0B,sDAM7B,uCACEY,UAAWC,IAAW,GAAD,OATN,WASM,qCATN,WASM,UACM+D,QAAQ2B,IAChC3F,GACHiD,IAAKA,GACD7D,GAEH8D,MAIL6C,EAAY3C,UAAY,CAItBF,SAAUG,OAKVrD,UAAWsD,SAKXqC,KAAMvB,QAGR2B,EAAYjD,YAAc,cAEXiD,Q,SC/BTC,EAAU,CACdC,KAAM,GACNC,IAAK,GACLC,IAAK,GACLC,KAAM,GACNC,SAAU,GACVC,OAAQ,GACRC,OAAQ,GACRC,MAAO,GACPC,IAAK,EACLC,GAAI,IAGAC,EAAU,SAAC,GAQV,IAPLzD,EAOI,EAPJA,SACAlD,EAMI,EANJA,UAMI,IALJ4G,UAKI,MALCC,IAAQC,WAKT,EAJJlJ,EAII,EAJJA,KACAmJ,EAGI,EAHJA,UACAlJ,EAEI,EAFJA,UACGuB,EACC,8EACoB9B,oBAAS,GAD7B,mBACGC,EADH,KACSC,EADT,OAEoCF,mBAAS,GAF7C,mBAEG0J,EAFH,KAEiBC,EAFjB,OAGwC3J,mBAAS,IAHjD,mBAGG4J,EAHH,KAGmBC,EAHnB,OAI8D7J,mBAAS,IAJvE,mBAIG8J,EAJH,KAI8BC,EAJ9B,OAKkD/J,oBAAS,GAL3D,mBAKGgK,EALH,KAKwBC,EALxB,KAOEC,EADWC,iBAAOb,GACHc,QACfC,EAAaF,mBACbG,EAAYH,mBAElBlI,qBAAU,WACR,GAAIoI,EAAWD,QAAS,CACtB,IAAMG,EAAkBF,EAAWD,QAAQI,iBACzC,sFAGFX,EAAkBU,GAElBR,EAA6B5E,MAAMsF,KAAKF,GAAiBlH,KACvD,SAAC0C,EAAMxC,GAAP,MAAc,CACZmH,KAAM3E,EAAK4E,YAAYC,OAAOC,cAAcC,UAAU,EAAG,GACzDC,MAAOxH,UAIZ,IAEHtB,qBAAU,WACJhC,GACF2J,EAAeF,GAAc5B,QAG1B7H,IAAQqK,EAAUF,SAAYJ,IACjCM,EAAUF,QAAQtC,QAClBmC,GAAuB,MAExB,CAACD,EAAqBN,EAAcE,EAAgB3J,IAEvD,IAAM+K,EAAc,SAAAC,GAClB,IAAMC,EAA8C,WAAnCD,EAAEE,OAAOC,QAAQP,cAC5BQ,EAA4C,MAAnCJ,EAAEE,OAAOC,QAAQP,cAEhC3K,GAASD,GACJiL,GAAaG,GAChBJ,EAAEK,kBAIAC,EAAgB,SAAAN,GACpB,IAAMjI,EAAOiI,EAAEO,UAAYP,EAAEvC,QACvB+C,EAAQ7B,EAAe3E,OACvBiG,EAAWD,EAAES,gBAAkBpB,EAAUF,QACzCuB,EAAYV,EAAES,gBAAkBrB,EAAWD,QAC3CM,EAAOO,EAAEzH,IAAIqH,cACbe,EAAkC,IAAhBlB,EAAKzF,QAAgByF,EAAK9H,MAAM,MACpDiJ,EAAU,EAMd,GAJIF,GACF1B,GAAuB,KAGrBgB,EAAEa,SAAWb,EAAEc,QAAUd,EAAEe,SAAYf,EAAEvC,UAAYA,EAAQQ,OAAW+B,EAAEvC,UAAYA,EAAQO,UAI9FjG,IAAS0F,EAAQE,KAAO5F,IAAS0F,EAAQI,OAC3CmC,EAAEK,iBAEEJ,GACFhL,GAAQ,GAGNuL,IAEF9B,EADAkC,EAAU7I,IAAS0F,EAAQE,IAAM6C,EAAQ,EAAI,GAE7C7B,EAAeiC,GAAS/D,UAIxB9E,IAAS0F,EAAQU,IAAMpG,IAAS0F,EAAQC,OAC1CsC,EAAEK,iBAEEJ,IACFhL,GAAQ,GACR2L,EAAU7I,IAAS0F,EAAQU,GACvBM,GAAgB+B,EAAQ,EACxB/B,GAAgB,GAGlBiC,GAAaF,IACfI,EAAU7I,IAAS0F,EAAQU,GACvBM,EAAe,EAAI,EAAI+B,EAAQ,EAAI/B,EAAe,GACjDA,EAAe,GAAK+B,GAGvBA,IACF9B,EAAgBkC,GAChBjC,EAAeiC,GAAS/D,UAIxB9E,IAAS0F,EAAQuD,OACnB/L,EAAQgL,GAGNlI,IAAS0F,EAAQG,MACnBoC,EAAEK,iBACFpL,GAAQ,IAIN8C,IAAS0F,EAAQS,KAAOwC,IAC1B1B,GAAuB,GACvB/J,GAAQ,IAGN0L,GAAmB3L,GAAM,CAC3B,IAAMiM,EAAQxC,EAAe,IAAM+B,EAAQ,EAAI/B,EAAe,EACxDyC,EAAsBrC,EAA0BnF,QAAO,SAAAyH,GAAO,OAClEA,EAAQ1B,OAASA,GAAQ0B,EAAQrB,QAAUrB,KAC3CrG,KAAI,SAAAgJ,GAAG,OAAIA,EAAItB,SAEbuB,EAAaH,EAAoBI,QAAQL,IAC7CI,EAAcA,GAAc,EACxBH,EAAoBG,QACOpL,IAA3BiL,EAAoB,IAAoB,EAAIA,EAAoB,KAElD,IAChBxC,EAAgB2C,GAChB1C,EAAe0C,GAAYxE,WAKjC,OACE,kBAAC0E,EAAA,EAAD,KACE,uCAAK9J,UAAWC,IAjKH,cAiK0BD,IAAgBZ,GACrD,kBAAC2K,EAAA,EAAD,CAAQhD,UAAWA,EAAWlJ,UAAWA,IACtC,gBAAGoF,EAAH,EAAGA,IAAKxE,EAAR,EAAQA,MAAOuL,EAAf,EAAeA,eAAf,OACC,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,MACG,gBAAGhH,EAAH,EAAGA,IAAH,OACC,0BAAMA,IAAKA,EAAKjD,UAtKL,wBAuKR6F,uBAAa3C,EAAU,CAEtB,gBAAgB,GAAhB,OA1KH,cA0KG,oBAA0CsE,GAC1C,gBAAiBjK,EAAO,YAASiB,EACjC,gBAAiBZ,EAAO,OAAS,QACjCgJ,GAAIY,EACJ5I,QAAS,SAAA2J,GAEPyB,IACA1B,EAAYC,IAEd2B,UAAWrB,EACX5F,IAAK2E,QAKb,kBAAC,IAAD,CACEhB,GAAE,UA1LC,cA0LD,iBAAwBY,GAC1B9J,SAAS,WACTuF,IAAKA,EACL0C,KAAMpI,EACNkB,MAAK,eAAOA,EAAP,CAAc0L,UAAW,aAE7BtE,uBAAajI,EAAM,CAClB,kBAAmB4J,EACnBtE,SAAUkH,WAASzJ,IAAI/C,EAAKkE,MAAMoB,UAAU,SAACmH,EAAOC,GAAR,OAC1CzE,uBAAawE,EAAO,CAClBnH,SAAUkH,WAASzJ,IAAI0J,EAAMvI,MAAMoB,UAAU,SAACqH,EAAG1J,GAAJ,OAC3CgF,uBAAa0E,EAAG,CACdzJ,IAAI,GAAD,OAAK0G,EAAL,YAAY8C,EAAZ,YAAiBzJ,GACpBe,KAAM,WACN6D,SAAU,UAGd3E,IAAI,GAAD,OAAK0G,EAAL,YAAY8C,GACf1I,KAAM,YAGVgF,GAAG,GAAD,OA/MD,cA+MC,oBAA2BY,GAC7B5I,QAAS0J,EACT4B,UAAWrB,EACX5F,IAAK0E,EACL/F,KAAM,eAOlB,kBAAC,EAAD,CAAahD,QAAS0J,EAAa3C,KAAMpI,MAmD/CoJ,EAAQvG,aAAe,CACrB2G,UAAW,CACTyD,OAAQ,CACNC,SAAS,EACTD,OAAQ,MAGZ3M,UAAW,gBAGb8I,EAAQ7D,YAAc,UAEP6D,O,0FC1RT+D,EAAS1H,sBAAW,WAOvBC,GAPuB,MACxBkC,EADwB,EACxBA,OACAjC,EAFwB,EAExBA,SACAlD,EAHwB,EAGxBA,UACA+E,EAJwB,EAIxBA,SACA1G,EALwB,EAKxBA,UACGe,EANqB,+EAQxB,0CACEY,UAAWC,IAZI,WAYM,6BAXP,YAWO,YACO+D,QAAQmB,IADf,wBAXP,YAWO,cAESnB,QAAQe,IAFjB,wBAXP,YAWO,eAGUf,QAAQ3F,IAHlB,GAIlB2B,GACHiD,IAAKA,GACD7D,GAEH8D,MAILwH,EAAOtH,UAAY,CAIjB+B,OAAQf,OAKRlB,SAAUG,OAKVrD,UAAWsD,SAKXyB,SAAUX,OAKV/F,UAAW+F,QAGbsG,EAAO5H,YAAc,SAEN4H,O,4ECnDTC,EAAU,SAAC,GAAD,IAAGzH,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAcZ,EAA3B,+CACd,uCACEY,UAAWC,IAJI,eAImBD,IAC9BZ,GAEH8D,IAgBLyH,EAAQ7H,YAAc,UAEP6H,O,mFCtBTC,EAAU,SAAC,GAAD,IAAG1H,EAAH,EAAGA,SAAUlD,EAAb,EAAaA,UAAW2F,EAAxB,EAAwBA,KAASvG,EAAjC,sDACd,uCACEY,UAAWC,IALI,eAKM,yBAJP,YAIO,UACK+D,QAAQ2B,IAC/B3F,IACCZ,GAEH8D,IAqBL0H,EAAQ9H,YAAc,UAEP8H","file":"static/js/29.64ec10b8.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport React, { useState } from 'react';\nimport Avatar from '../../avatar';\nimport AvatarText from '../../avatar-text';\nimport Button from '../../button';\nimport ButtonAction from '../../button-action';\nimport ButtonIcon from '../../button-icon';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Icon from '../../icon';\nimport Listbox from '../../listbox';\nimport ListboxItem from '../../listbox-item';\nimport ListboxItemContainer from '../../listbox-item-container';\nimport Nav from '../../nav';\nimport NavBrand from '../../nav-brand';\nimport NavBrandInfo from '../../nav-brand-info';\nimport NavBrandLogo from '../../nav-brand-logo';\nimport NavBrandLogoImage from '../../nav-brand-logo-image';\nimport NavLinks from '../../nav-links';\nimport Navmenu from '../../navmenu';\nimport NavPanel from '../../nav-panel';\nimport NavSite from '../../nav-site';\nimport NavSkip from '../../nav-skip';\nimport NavUser from '../../nav-user';\nimport NavVersionMenu from '../../nav-version-menu';\nimport NavVerticalFooter from '../../nav-vertical-footer';\nimport NavVerticalHeader from '../../nav-vertical-header';\nimport NavVerticalToggleButton from '../../nav-vertical-toggle-button';\nimport Row from '../../row';\nimport Tab from '../../tab';\nimport TabItemLabel from '../../tab-item-label';\nimport TabList from '../../tab-list';\nimport Typography from '../../typography';\nimport Logo from '@visa/vds-web/dist/_logos/visa/visa_vbm_wht.svg';\n\nconst NavExample = () => {\n  const [open, setOpen] = useState(true);\n\n  return (\n    <Grid>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav position=\"relative\">\n            <Grid>\n              <Row>\n                <Col>\n                  <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                  <NavBrand>\n                    <NavBrandInfo>\n                      <Navmenu\n                        menu={\n                          <Listbox>\n                            <ListboxItem>\n                              <ListboxItemContainer>\n                                <a href=\"http://www.visa.com\">Contact</a>\n                              </ListboxItemContainer>\n                            </ListboxItem>\n                            <ListboxItem>\n                              <ListboxItemContainer>\n                                <a href=\"http://www.visa.com\">Service</a>\n                              </ListboxItemContainer>\n                            </ListboxItem>\n                            <ListboxItem>\n                              <ListboxItemContainer>\n                                <a href=\"http://www.visa.com\">Statistics</a>\n                              </ListboxItemContainer>\n                            </ListboxItem>\n                          </Listbox>\n                        }\n                        placement=\"bottom-start\"\n                      >\n                        <ButtonIcon ariaLabel=\"menu\" iconType=\"dark\">\n                          <Icon name=\"menu\" resolution=\"low\" />\n                        </ButtonIcon>\n                      </Navmenu>\n                      <NavBrandLogo href=\"http://www.visa.com\">\n                        <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                      </NavBrandLogo>\n                    </NavBrandInfo>\n                  </NavBrand>\n                  <NavSite>\n                    <NavLinks ariaLabel=\"Site Navigation\">\n                      <TabList>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Contact</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Service</Tab>\n                        <Tab tag={<a />} href=\"http://www.visa.com\">Statistics</Tab>\n                      </TabList>\n                    </NavLinks>\n                  </NavSite>\n                  <NavUser>\n                    <Navmenu\n                      menu={\n                        <Listbox>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Profile</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Rewards</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">My Account</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">Send Email</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                          <ListboxItem>\n                            <ListboxItemContainer>\n                              <a href=\"./\">Sign Out</a>\n                            </ListboxItemContainer>\n                          </ListboxItem>\n                        </Listbox>\n                      }\n                      placement=\"bottom-end\"\n                    >\n                      <Button flippable>\n                        <Avatar>\n                          <AvatarText>Adam Smith</AvatarText>\n                        </Avatar>\n                        <Icon name=\"arrow-expand\" resolution=\"tiny\" />\n                      </Button>\n                    </Navmenu>\n                  </NavUser>\n                </Col>\n              </Row>\n            </Grid>\n          </Nav>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Typography tag=\"h2\">Vertical Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Nav orientation=\"vertical\" size={open ? undefined : 'mini'}>\n            <NavPanel style={{ position: 'inherit' }}>\n              <NavVerticalHeader>\n                <NavSkip href=\"#content\">Skip to main content</NavSkip>\n                <NavBrand>\n                  <NavBrandInfo>\n                    <NavBrandLogo href=\"/\">\n                      <NavBrandLogoImage alt=\"Visa\" src={Logo} />\n                    </NavBrandLogo>\n                  </NavBrandInfo>\n                </NavBrand>\n              </NavVerticalHeader>\n              <NavLinks ariaLabel=\"Site Navigation\">\n                <TabList orientation=\"vertical\">\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"savings-account\" resolution=\"low\" /> <TabItemLabel>Info</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"note\" resolution=\"low\" /> <TabItemLabel>Docs</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"view-grid\" resolution=\"low\" /> <TabItemLabel>Components</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"folder-multiple\" resolution=\"low\" /> <TabItemLabel>Resources</TabItemLabel>\n                  </Tab>\n                  <Tab tag={<a />} href=\"http://www.visa.com\">\n                    <Icon name=\"analytics\" resolution=\"low\" /> <TabItemLabel>Charts Library</TabItemLabel>\n                  </Tab>\n                </TabList>\n              </NavLinks>\n              <NavVerticalFooter>\n                <NavVersionMenu>\n                  <Avatar><AvatarText>0.0.0</AvatarText></Avatar>\n                </NavVersionMenu>\n                <NavVerticalToggleButton aria-expanded={open ? 'true' : 'false' } aria-label=\"navigation example control\" onClick={() => setOpen(!open)}>\n                  <ButtonAction>\n                    {\n                      open\n                        ? <Icon name=\"arrow-previous\" resolution=\"tiny\" />\n                        : <Icon name=\"arrow-next\" resolution=\"tiny\" />\n                    }\n                  </ButtonAction>\n                </NavVerticalToggleButton>\n              </NavVerticalFooter>\n            </NavPanel>\n          </Nav>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default NavExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/nav/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/nav/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/nav/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst NavExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Nav\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Nav</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Nav Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/nav/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/nav/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/nav/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nNavExample.displayName = 'NavExample';\n\nexport default NavExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-icon';\n\nconst ButtonIcon = forwardRef(({\n  ariaLabel,\n  children,\n  className,\n  disabled,\n  iconType,\n  type,\n  ...remainingProps\n}, ref) => (\n  <button\n    aria-label={ariaLabel}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--${iconType}`]: Boolean(iconType)\n    }, className)}\n    disabled={disabled}\n    ref={ref}\n    type={type}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </button>\n));\n\nButtonIcon.propTypes = {\n  /**\n   * Button aria label\n   */\n  ariaLabel: string,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Icon type\n   */\n  iconType: oneOf([\n    'dark',\n    'dark-outline',\n    'dark-tiny',\n    'light',\n    'light-fill',\n    'light-outline',\n    'light-tiny'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonIcon.defaultProps = {\n  type: 'button'\n};\n\nButtonIcon.displayName = 'ButtonIcon';\n\nexport default ButtonIcon;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox';\n\nconst Listbox = forwardRef(({\n  children,\n  className,\n  multiselect,\n  role,\n  ...remainingProps\n}, ref) => (\n  <ul\n    className={classnames(CSS_PREFIX, {\n      'vds-select--multi': Boolean(multiselect)\n    }, className)}\n    ref={ref}\n    role={role}\n    {...remainingProps}\n  >\n    {children}\n  </ul>\n));\n\nListbox.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Multi select\n   */\n  multiselect: bool,\n\n  /**\n   * Role\n   */\n  role: string\n};\n\nListbox.defaultProps = {\n  role: 'listbox'\n};\n\nListbox.displayName = 'Listbox';\n\nexport default Listbox;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItem = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  focus,\n  listItemValue,\n  role,\n  selected,\n  ...remainingProps\n}, ref) => (\n  <li\n    aria-disabled={Boolean(disabled) ? 'true' : undefined}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--focus`]: Boolean(focus),\n      [`${CSS_STATE}--selected`]: Boolean(selected)\n    }, className)}\n    data-list-item-value={listItemValue}\n    ref={ref}\n    role={role}\n    tabIndex={Boolean(disabled) ? '-1' : undefined}\n    {...remainingProps}\n  >\n    {children}\n  </li>\n));\n\nListboxItem.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Focus\n   */\n  focus: bool,\n\n  /**\n   * List item value\n   */\n  listItemValue: string,\n\n  /**\n   * Role\n   */\n  role: string,\n\n  /**\n   * Selected\n   */\n  selected: bool\n};\n\nListboxItem.defaultProps = {\n  role: 'option'\n};\n\nListboxItem.displayName = 'ListboxItem';\n\nexport default ListboxItem;\n","import React, { forwardRef } from 'react';\nimport { bool, node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst Menu = forwardRef(({\n  children,\n  className,\n  position,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames({\n      [`${CSS_PREFIX}`]: !position,\n      [`${CSS_PREFIX}--${position}`]: Boolean(position),\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenu.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Position\n   */\n  position: oneOf(['absolute', 'fixed']),\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenu.displayName = 'Menu';\n\nexport default Menu;\n","import { cloneElement, forwardRef } from 'react';\nimport { bool, element, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-listbox-item-container';\nconst CSS_STATE = 'vds-state';\n\nconst ListboxItemContainer = forwardRef(({\n  children,\n  className,\n  disabled,\n  ...remainingProps\n}, ref) => (\n  cloneElement(children, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nListboxItemContainer.propTypes = {\n  /**\n   * @ignore\n   */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool\n};\n\nListboxItemContainer.displayName = 'ListboxItemContainer';\n\nexport default ListboxItemContainer;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-menu';\n\nconst MenuCurtain = forwardRef(({\n  children,\n  className,\n  show,\n  ...remainingProps\n}, ref) => (\n  <div\n    className={classnames(`${CSS_PREFIX}-curtain`, {\n      [`${CSS_PREFIX}--show`]: Boolean(show)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n));\n\nMenuCurtain.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show\n   */\n  show: bool\n};\n\nMenuCurtain.displayName = 'MenuCurtain';\n\nexport default MenuCurtain;\n","import React, { Children, cloneElement, useEffect, useRef, useState, Fragment } from 'react';\nimport { element, number, oneOf, oneOfType, shape, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport MenuCurtain from '../menu-curtain';\nimport Menu from '../menu';\n\nconst CSS_PREFIX = 'vds-navmenu';\nconst CSS_POPPER_CONTAINER = 'vds-popper-container';\n\nconst keyCode = {\n  DOWN: 40,\n  END: 35,\n  ESC: 27,\n  HOME: 36,\n  PAGEDOWN: 34,\n  PAGEUP: 33,\n  RETURN: 13,\n  SPACE: 32,\n  TAB: 9,\n  UP: 38\n};\n\nconst Navmenu = ({\n  children,\n  className,\n  id = shortid.generate(),\n  menu,\n  modifiers,\n  placement,\n  ...remainingProps\n}) => {\n  const [open, setOpen] = useState(false);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const [focusableItems, setFocusableItems] = useState([]);\n  const [focusableItemsTextContent, setFocusableItemsTextContent] = useState({});\n  const [disabledFocusReturn, setDisabledFocusReturn] = useState(true);\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n  const listboxRef = useRef();\n  const buttonRef = useRef();\n\n  useEffect(() => {\n    if (listboxRef.current) {\n      const listBoxChildren = listboxRef.current.querySelectorAll(\n        'button:not([disabled]):not(.vds-state--disabled), [href]:not(.vds-state--disabled)'\n      );\n\n      setFocusableItems(listBoxChildren);\n\n      setFocusableItemsTextContent(Array.from(listBoxChildren).map(\n        (node, i) => ({\n          char: node.textContent.trim().toLowerCase().substring(0, 1),\n          index: i\n        })\n      ));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (open) {\n      focusableItems[focusedIndex].focus();\n    }\n\n    if (!open && buttonRef.current && !disabledFocusReturn) {\n      buttonRef.current.focus();\n      setDisabledFocusReturn(false);\n    }\n  }, [disabledFocusReturn, focusedIndex, focusableItems, open]);\n\n  const handleClick = e => {\n    const isButton = e.target.tagName.toLowerCase() === 'button';\n    const isLink = e.target.tagName.toLowerCase() === 'a';\n\n    setOpen(!open);\n    if (!isButton && !isLink) {\n      e.preventDefault();\n    }\n  };\n\n  const handleKeyDown = e => {\n    const code = e.charCode || e.keyCode;\n    const count = focusableItems.length;\n    const isButton = e.currentTarget === buttonRef.current;\n    const isListBox = e.currentTarget === listboxRef.current;\n    const char = e.key.toLowerCase();\n    const isPrintableChar = char.length === 1 && char.match(/\\S/);\n    let focusId = 0;\n\n    if (isListBox) {\n      setDisabledFocusReturn(false);\n    }\n\n    if (e.ctrlKey || e.altKey || e.metaKey || (e.keyCode === keyCode.SPACE) || (e.keyCode === keyCode.RETURN)) {\n      return;\n    }\n\n    if (code === keyCode.END || code === keyCode.HOME) {\n      e.preventDefault();\n\n      if (isButton) {\n        setOpen(true);\n      }\n\n      if (count) {\n        focusId = code === keyCode.END ? count - 1 : 0;\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.UP || code === keyCode.DOWN) {\n      e.preventDefault();\n\n      if (isButton) {\n        setOpen(true);\n        focusId = code === keyCode.UP\n          ? focusedIndex || count - 1\n          : focusedIndex || 0;\n      }\n\n      if (isListBox && count) {\n        focusId = code === keyCode.UP\n          ? focusedIndex - 1 < 0 ? count - 1 : focusedIndex - 1\n          : (focusedIndex + 1) % count;\n      }\n\n      if (count) {\n        setFocusedIndex(focusId);\n        focusableItems[focusId].focus();\n      }\n    }\n\n    if (code === keyCode.ENTER) {\n      setOpen(isButton);\n    }\n\n    if (code === keyCode.ESC) {\n      e.preventDefault();\n      setOpen(false);\n    }\n\n    // Tab\n    if (code === keyCode.TAB && isListBox) {\n      setDisabledFocusReturn(true);\n      setOpen(false);\n    }\n\n    if (isPrintableChar && open) {\n      const start = focusedIndex + 1 === count ? 0 : focusedIndex + 1;\n      const filteredTextContent = focusableItemsTextContent.filter(charObj =>\n        charObj.char === char && charObj.index !== focusedIndex\n      ).map(obj => obj.index);\n\n      let matchIndex = filteredTextContent.indexOf(start);\n      matchIndex = (matchIndex > -1)\n        ? filteredTextContent[matchIndex]\n        : filteredTextContent[0] === undefined ? -1 : filteredTextContent[0];\n\n      if (matchIndex > -1) {\n        setFocusedIndex(matchIndex);\n        focusableItems[matchIndex].focus();\n      }\n    }\n  };\n\n  return (\n    <Manager>\n      <div className={classnames(CSS_PREFIX, className)} {...remainingProps}>\n        <Popper modifiers={modifiers} placement={placement}>\n          {({ ref, style, scheduleUpdate }) => (\n            <Fragment>\n              <Reference>\n                {({ ref }) => (\n                  <span ref={ref} className={CSS_POPPER_CONTAINER}>\n                    {cloneElement(children, {\n                      // active: open.toString(),\n                      'aria-controls': `${CSS_PREFIX}-listbox-${uid}`,\n                      'aria-expanded': open ? 'true' : undefined,\n                      'aria-haspopup': menu ? 'true' : 'false',\n                      id: uid,\n                      onClick: e => {\n                        // the popper position is not always positioned properly until it re-renders after being shown\n                        scheduleUpdate();\n                        handleClick(e);\n                      },\n                      onKeyDown: handleKeyDown,\n                      ref: buttonRef\n                    })}\n                  </span>\n                )}\n              </Reference>\n              <Menu\n                id={`${CSS_PREFIX}-menu-${uid}`}\n                position=\"absolute\"\n                ref={ref}\n                show={open}\n                style={{ ...style, overflowY: 'inherit' }}\n              >\n                {cloneElement(menu, {\n                  'aria-labelledby': uid,\n                  children: Children.map(menu.props.children, (child, k) =>\n                    cloneElement(child, {\n                      children: Children.map(child.props.children, (c, i) =>\n                        cloneElement(c, {\n                          key: `${uid}-${k}-${i}`,\n                          role: 'menuitem',\n                          tabIndex: '-1'\n                        })\n                      ),\n                      key: `${uid}-${k}`,\n                      role: 'none'\n                    })\n                  ),\n                  id: `${CSS_PREFIX}-listbox-${uid}`,\n                  onClick: handleClick,\n                  onKeyDown: handleKeyDown,\n                  ref: listboxRef,\n                  role: 'menu'\n                })}\n              </Menu>\n            </Fragment>\n          )}\n        </Popper>\n      </div>\n      <MenuCurtain onClick={handleClick} show={open} />\n    </Manager>\n  );\n};\n\nNavmenu.propTypes = {\n  /**\n   * @ignore\n   */\n  children: element,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Menu\n   */\n  menu: element.isRequired,\n\n  /**\n   * Modifiers\n   */\n  modifiers: shape({}),\n\n  /**\n   * Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ])\n};\n\nNavmenu.defaultProps = {\n  modifiers: {\n    offset: {\n      enabled: true,\n      offset: '0'\n    }\n  },\n  placement: 'bottom-start'\n};\n\nNavmenu.displayName = 'Navmenu';\n\nexport default Navmenu;\n","import React, { forwardRef } from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn';\nconst CSS_STATE = 'vds-state';\n\nconst Button = forwardRef(({\n  active,\n  children,\n  className,\n  disabled,\n  flippable,\n  ...remainingProps\n}, ref) => (\n  <button\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </button>\n));\n\nButton.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-user';\n\nconst NavUser = ({ children, className, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavUser.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nNavUser.displayName = 'NavUser';\n\nexport default NavUser;\n","import React from 'react';\nimport { bool, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-nav-site';\nconst CSS_STATE = 'vds-state';\n\nconst NavSite = ({ children, className, show, ...remainingProps }) => (\n  <div\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--show`]: Boolean(show)\n    }, className)}\n    {...remainingProps}\n  >\n    {children}\n  </div>\n);\n\nNavSite.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Show in mobile\n   */\n  show: bool\n};\n\nNavSite.displayName = 'NavSite';\n\nexport default NavSite;\n"],"sourceRoot":""}