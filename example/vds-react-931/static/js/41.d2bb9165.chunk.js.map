{"version":3,"sources":["components/tooltip/example/index.js","pages/components/tooltip.js","components/screen-reader/index.js","components/data-table/index.js","components/tbody/index.js","components/td/index.js","components/th/index.js","components/thead/index.js","components/tr/index.js","components/button-label/index.js","components/button-text/index.js","components/link/index.js","../../../src/utils.ts","../../../src/Tooltip.tsx","../../../src/TooltipTrigger.tsx","components/tooltip/index.js"],"names":["TooltipExample","useState","showTooltip","setShowTooltip","tag","textAlign","tooltip","placement","trigger","id","colorScheme","href","tooltipShown","onFocus","onBlur","onMouseEnter","onMouseLeave","prettier","require","plugins","reactDocs","jsParsed","replace","exampleCode","remainingProps","componentProps","setComponentProps","useEffect","parse","console","log","siblingOfStickyFooter","exact","to","process","activeClassName","name","resolution","className","classnames","match","path","defaultProps","theme","code","language","style","tokens","getLineProps","getTokenProps","map","line","i","key","display","opacity","userSelect","width","token","format","ReactDOMServer","renderToStaticMarkup","css","parser","printWidth","dividerLines","size","aria-sort","role","scope","props","Object","entries","filter","doc","description","required","type","value","length","color","Array","isArray","v","join","undefined","defaultValue","displayName","ScreenReader","forwardRef","ref","children","Tag","propTypes","node","string","elementType","DataTable","customizableColumns","keyValuePairs","reveal","revealFirstColumn","revealLastColumn","rowSelection","stickyHeader","Boolean","columns","arrayOf","shape","bool","data","oneOf","Tbody","Td","Th","Thead","Tr","ButtonLabel","ButtonText","active","disabled","flippable","isFullWidth","tabIndex","includes","oneOfType","number","Link","inline","cloneElement","element","TooltipContext","React","callAll","fns","args","fn","canUseDOM","window","setRef","MUTATION_OBSERVER_CONFIG","childList","subtree","Tooltip","observer","tooltipRef","handleOutsideClick","event","parentOutsideClickHandler","hideTooltip","clearScheduled","handleOutsideRightClick","parentOutsideRightClickHandler","addOutsideClickHandler","document","removeOutsideClickHandler","addOutsideRightClickHandler","removeOutsideRightClickHandler","getTooltipRef","getArrowProps","getTooltipProps","contextValue","isParentNoneTriggered","addParentOutsideClickHandler","addParentOutsideRightClickHandler","removeParentOutsideClickHandler","removeParentOutsideRightClickHandler","componentDidMount","this","MutationObserver","isTriggeredBy","componentDidUpdate","closeOnOutOfBoundaries","componentWillUnmount","render","arrowProps","arrowRef","Component","contextType","DEFAULT_MODIFIERS","preventOverflow","boundariesElement","TooltipTrigger","state","defaultTooltipShown","hideTimeout","showTimeout","popperOffset","setTooltipState","cb","clearTimeout","pageX","pageY","toggleTooltip","action","clickToggle","contextMenuToggle","getTriggerProps","onClick","onTouchEnd","onContextMenu","onMouseMove","getTriggerRef","modifiers","usePortal","portalContainer","followCursor","restProps","popper","innerRef","followCursorModifier","enabled","order","outOfBoundaries","scheduleUpdate","height","x","y","triggerRef","getState","createPortal","isControlled","delayHide","delayShow","onVisibilityChange","shortid","generate","uid","useRef","current","offset","hidden","aria-hidden"],"mappings":"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","file":"static/js/41.d2bb9165.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ButtonText from '../../button-text';\nimport Col from '../../col';\nimport Grid from '../../grid';\nimport Link from '../../link';\nimport Row from '../../row';\nimport Tooltip from '../../tooltip';\nimport Typography from '../../typography';\n\nconst TooltipExample = () => {\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  return (\n    <Grid>\n      <Row>\n        <Typography tag=\"h2\">Raw state, mouse-only interactions</Typography>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"right\"\n            trigger=\"hover\"\n            id=\"tooltip-12\"\n          >\n            <ButtonText>Right</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"top\"\n            trigger=\"hover\"\n            id=\"tooltip-1\"\n          >\n            <ButtonText>Top</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"bottom\"\n            trigger=\"hover\"\n            id=\"tooltip-15\"\n          >\n            <ButtonText>Bottom</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            placement=\"left\"\n            trigger=\"hover\"\n            id=\"tooltip-13\"\n          >\n            <ButtonText colorScheme=\"primary\">Left</ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Typography>{\"This is an example of a \"}\n            <Tooltip\n              trigger=\"hover\"\n              id=\"tooltip-20\"\n              tooltip=\"Because it's for demo purposes only\"\n            >\n              <Link href=\"#\">link</Link>\n            </Tooltip> with a tooltip.\n          </Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Typography tag=\"h2\">A11y/VGAR usage, with mouse + keyboard/focus interactions</Typography>\n        <Typography tag=\"h4\">\n          Use the Tooltip component as a stateless wrapper component\n          to take control of the visibility of the tooltip. See code example for how to proceed...\n        </Typography>\n      </Row>\n      <Row>\n        <Col textAlign=\"center\">\n          <Tooltip\n            tooltip=\"Because it's for demo purposes only\"\n            tooltipShown={showTooltip}\n            placement=\"right\"\n            trigger=\"none\"\n            id=\"tooltip-012\"\n          >\n            <ButtonText\n              onFocus={() => setShowTooltip(true)}\n              onBlur={() => setShowTooltip(false)}\n              onMouseEnter={() => setShowTooltip(true)}\n              onMouseLeave={() => setShowTooltip(false)}\n            >\n              Supports keyboard(focus) and mouse(hover)\n            </ButtonText>\n          </Tooltip>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nexport default TooltipExample;\n","/* This file is autogenerated  DO NOT EDIT */\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport classnames from 'classnames';\nimport raw from \"raw.macro\";\nimport Highlight, { defaultProps } from 'prism-react-renderer';\nimport theme from 'prism-react-renderer/themes/github';\nimport { NavLink } from 'react-router-dom';\n\nimport Col from '../../components/col';\nimport DataTable from '../../components/data-table';\nimport Icon from '../../components/icon';\nimport Grid from '../../components/grid';\nimport Row from '../../components/row';\nimport ScreenReader from '../../components/screen-reader';\nimport Tab from '../../components/tab';\nimport TabList from '../../components/tab-list';\nimport Tbody from '../../components/tbody';\nimport Td from '../../components/td';\nimport Th from '../../components/th';\nimport Thead from '../../components/thead';\nimport Tr from '../../components/tr';\nimport Typography from '../../components/typography';\n\nimport Example from '../../components/tooltip/example';\n\nconst prettier = require(\"prettier/standalone\");\nconst plugins = [require(\"prettier/parser-html\")];\nconst reactDocs = require('react-docgen');\nconst js = raw('../../components/tooltip/index.js');\nconst jsParsed = js.replace('= memo(({', '= React.forwardRef(({').replace('cloneElement(', 'React.cloneElement('); // see https://github.com/reactjs/react-docgen/issues/342\nconst exampleCodeRaw = raw('../../components/tooltip/example/index.js');\nconst exampleCode = exampleCodeRaw.replace(/'..\\/..\\//g, `'@visa/vds-react/`);\n\nconst TooltipExample = ({ ...remainingProps }) => {\n  const [componentProps, setComponentProps] = useState({});\n\n  useEffect(() => {\n    try {\n      setComponentProps(reactDocs.parse(jsParsed));\n    } catch {\n      // eslint-disable-next-line\n      console.log(`\n        React-docgen could not parse props for Tooltip\n        check for fix here https://github.com/reactjs/react-docgen/issues/342`);\n    }\n  }, []);\n\n  return (\n    <Grid siblingOfStickyFooter>\n      <Row>\n        <Col>\n          <Typography tag=\"h1\">Tooltip</Typography>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <TabList>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"log\" resolution=\"low\" />Tooltip Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip/code`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />JSX of Example\n            </Tab>\n            <Tab tag={<NavLink exact to={`${process.env.PUBLIC_URL}/components/tooltip/html`} activeClassName=\"vds-state--selected\" />}>\n              <Icon name=\"code-fork-code-alt\" resolution=\"low\" />HTML of Example\n            </Tab>\n          </TabList>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip`\n            })}\n          >\n            <Example {...remainingProps} />\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip/code`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip/code`\n            })}\n          >\n            <Highlight {...defaultProps} theme={theme} code={exampleCode} language=\"jsx\">\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n          <div\n            className={classnames({\n              'vds-state--hidden': remainingProps.match.path !== `${process.env.PUBLIC_URL}/components/tooltip/html`,\n              'vds-state--show': remainingProps.match.path === `${process.env.PUBLIC_URL}/components/tooltip/html`\n            })}\n          >\n            <Highlight\n              {...defaultProps}\n              theme={theme}\n              code={prettier.format(ReactDOMServer.renderToStaticMarkup(<Example {...remainingProps} />), { css: 'ignore', parser: 'html', plugins, printWidth: 120 })}\n              language=\"html\"\n            >\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre className={className} style={style}>\n                  {tokens.map((line, i) => (\n                    <div {...getLineProps({ key: i, line })} key={i}>\n                      <span\n                        style={{\n                          display: 'inline-block',\n                          opacity: '0.3',\n                          userSelect: 'none',\n                          width: '2em'\n                        }}\n                      >\n                        {i + 1}\n                      </span>\n                      {line.map((token, key) => <span {...getTokenProps({ key, token })} key={key} />)}\n                    </div>\n                  ))}\n                </pre>\n              )}\n            </Highlight>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <DataTable\n            className={classnames([\n              'components'\n            ])}\n            dividerLines\n            size=\"compact\"\n          >\n            <ScreenReader tag=\"caption\">Props</ScreenReader>\n            <Thead>\n              <Tr className=\"vds-tr\">\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Prop\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Type\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Default\n                </Th>\n                <Th aria-sort=\"none\" role=\"columnheader\" scope=\"col\">\n                  Description\n                </Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {\n                componentProps.props && Object.entries(componentProps.props)\n                  .filter(doc => doc[1].description !== '@ignore')\n                  .map((doc, i) => (\n                    <Tr className=\"vds-tr\" key={i}>\n                      <Td className=\"vds-td\">\n                        {doc[0]} {doc[1].required ? <strong> - required</strong> : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        <strong>{doc[1].type.name}</strong>\n                        {\n                          doc[1].type.value && doc[1].type.value.length\n                            ? <small style={{ color: '#1a1f71' }}><br />\n                              {\n                                Array.isArray(doc[1].type.value)\n                                  ? doc[1].type.value.map(v => v.value || v.name).join(', ')\n                                  : typeof doc[1].type.value === 'string'\n                                    ? doc[1].type.value\n                                    : undefined\n                              }\n                            </small>\n                            : ''\n                        }\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].defaultValue ? doc[1].defaultValue.value : ''}\n                      </Td>\n                      <Td className=\"vds-td\">\n                        {doc[1].description}\n                      </Td>\n                    </Tr>\n                  ))\n              }\n            </Tbody>\n          </DataTable>\n        </Col>\n      </Row>\n    </Grid>\n  );\n};\n\nTooltipExample.displayName = 'TooltipExample';\n\nexport default TooltipExample;\n","import React, { forwardRef } from 'react';\nimport { elementType, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-screen-reader';\n\nconst ScreenReader = forwardRef(({ children, className, tag: Tag, ...remainingProps }, ref) => (\n  <Tag\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </Tag>\n));\n\nScreenReader.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Tag\n  */\n  tag: elementType\n};\n\nScreenReader.defaultProps = {\n  tag: 'span'\n};\n\nScreenReader.displayName = 'ScreenReader';\n\nexport default ScreenReader;\n","import React, { forwardRef } from 'react';\nimport { arrayOf, bool, node, oneOf, shape, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-data-table';\nconst CSS_STATE = 'vds-state';\n\nconst DataTable = forwardRef(({\n  children,\n  className,\n  customizableColumns,\n  dividerLines,\n  keyValuePairs,\n  reveal,\n  revealFirstColumn,\n  revealLastColumn,\n  rowSelection,\n  size,\n  stickyHeader,\n  ...remainingProps\n}, ref) => (\n  <table\n    {...remainingProps}\n    className={classnames(CSS_PREFIX, {\n      [`${CSS_STATE}--customizable-columns`]: Boolean(customizableColumns),\n      [`${CSS_STATE}--divider-lines`]: Boolean(dividerLines),\n      [`${CSS_STATE}--key-value-pairs`]: Boolean(keyValuePairs),\n      [`${CSS_STATE}--${size}`]: Boolean(size),\n      [`${CSS_STATE}--reveal`]: Boolean(reveal),\n      [`${CSS_STATE}--reveal-first-column`]: Boolean(revealFirstColumn),\n      [`${CSS_STATE}--reveal-last-column`]: Boolean(revealLastColumn),\n      [`${CSS_STATE}--${rowSelection}`]: Boolean(rowSelection),\n      [`${CSS_STATE}--sticky-header`]: Boolean(stickyHeader)\n    }, className)}\n    ref={ref}\n  >\n    {children}\n  </table>\n));\n\nDataTable.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Columns\n   */\n  columns: arrayOf(shape({})),\n\n  /**\n   * Customizable columns\n   */\n  customizableColumns: bool,\n\n  /**\n   * Data\n   */\n  data: arrayOf(shape({})),\n\n  /**\n   * Divider lines\n   */\n  dividerLines: bool,\n\n  /**\n   * Key value pairs\n   */\n  keyValuePairs: bool,\n\n  /**\n   * Reveal\n   */\n  reveal: bool,\n\n  /**\n   * Reveal first column\n   */\n  revealFirstColumn: bool,\n\n  /**\n   * Reveal last column\n   */\n  revealLastColumn: bool,\n\n  /**\n   * Row Selection\n   */\n  rowSelection: oneOf(['multi-select', 'single-select']),\n\n  /**\n   * Size\n   */\n  size: oneOf(['compact']),\n\n  /**\n   * Sticky Header\n   */\n  stickyHeader: bool\n};\n\nDataTable.displayName = 'DataTable';\n\nexport default DataTable;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tbody';\n\nconst Tbody = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tbody\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tbody>\n));\n\nTbody.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTbody.displayName = 'Tbody';\n\nexport default Tbody;\n","import React, { forwardRef } from 'react';\nimport { node, oneOf, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-td';\n\nconst Td = forwardRef(({\n  children,\n  className,\n  textAlign,\n  ...remainingProps\n}, ref) => (\n  <td\n    className={classnames(CSS_PREFIX, {\n      [`vds-text--${textAlign}`]: Boolean(textAlign)\n    }, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </td>\n));\n\nTd.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Text alignment at all sizes\n   */\n  textAlign: oneOf(['center', 'left', 'right'])\n};\n\nTd.displayName = 'Td';\n\nexport default Td;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-th';\n\nconst Th = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <th\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </th>\n));\n\nTh.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTh.displayName = 'Th';\n\nexport default Th;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-thead';\n\nconst Thead = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <thead\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </thead>\n));\n\nThead.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nThead.displayName = 'Thead';\n\nexport default Thead;\n","import React, { forwardRef } from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-tr';\n\nconst Tr = forwardRef(({ children, className, ...remainingProps }, ref) => (\n  <tr\n    className={classnames(CSS_PREFIX, className)}\n    ref={ref}\n    {...remainingProps}\n  >\n    {children}\n  </tr>\n));\n\nTr.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nTr.displayName = 'Tr';\n\nexport default Tr;\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-btn-label';\n\nconst ButtonLabel = ({ children, className, ...remainingProps }) => (\n  <span\n    className={classnames(CSS_PREFIX, className)}\n    {...remainingProps}\n  >\n    {children}\n  </span>\n);\n\nButtonLabel.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string\n};\n\nButtonLabel.displayName = 'ButtonLabel';\n\nexport default ButtonLabel;\n","import React, { forwardRef } from 'react';\nimport { bool, node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport ButtonLabel from '../button-label';\n\nconst CSS_PREFIX = 'vds-btn-text';\nconst CSS_STATE = 'vds-state';\n\nconst ButtonText = forwardRef(({\n  active,\n  children,\n  className,\n  colorScheme,\n  disabled,\n  flippable,\n  isFullWidth,\n  role,\n  tabIndex,\n  tag: Tag,\n  type,\n  ...remainingProps\n}, ref) => (\n  <Tag\n    className={classnames({\n      [`${CSS_PREFIX}`]: Boolean(colorScheme) === false,\n      [`${CSS_STATE}--active`]: Boolean(active),\n      [`${CSS_PREFIX}--${colorScheme}`]: Boolean(colorScheme),\n      [`${CSS_STATE}--flippable`]: Boolean(flippable),\n      [`${CSS_PREFIX}--fullwidth`]: Boolean(isFullWidth),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className)}\n    disabled={disabled}\n    role={Tag === 'button' ? undefined : role}\n    tabIndex={['span', 'div'].includes(Tag) ? tabIndex : undefined}\n    type={Tag === 'button' ? type : undefined}\n    ref={ref}\n    {...remainingProps}\n  >\n    <ButtonLabel>{children}</ButtonLabel>\n  </Tag>\n));\n\nButtonText.propTypes = {\n  /**\n   * Active\n   */\n  active: bool,\n\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * Color scheme of button\n   */\n  colorScheme: oneOf([\n    'primary',\n    'secondary',\n    'tertiary'\n  ]),\n\n  /**\n   * Disabled\n   */\n  disabled: bool,\n\n  /**\n   * Flippable\n   */\n  flippable: bool,\n\n  /**\n   * Full width\n   */\n  isFullWidth: bool,\n\n  /**\n   * @ignore\n   */\n  role: string,\n\n  /**\n   * @ignore\n   */\n  tabIndex: oneOfType([number, string]),\n\n  /**\n   * Tag of button\n   */\n  tag: oneOf([\n    'a',\n    'button',\n    'div',\n    'span'\n  ]),\n\n  /**\n   * @ignore\n   */\n  type: string\n};\n\nButtonText.defaultProps = {\n  role: 'button',\n  tabIndex: 0,\n  tag: 'button',\n  type: 'button'\n};\n\nButtonText.displayName = 'ButtonText';\n\nexport default ButtonText;\n","import React, { cloneElement, forwardRef } from 'react';\nimport { bool, element, node, string } from 'prop-types';\nimport classnames from 'classnames';\n\nconst CSS_PREFIX = 'vds-link';\nconst CSS_STATE = 'vds-state';\n\nconst Link = forwardRef(({\n  className,\n  disabled,\n  inline,\n  tag,\n  ...remainingProps\n}, ref) => (\n  cloneElement(tag, {\n    className: classnames(CSS_PREFIX, {\n      [`${CSS_PREFIX}--inline`]: Boolean(inline),\n      [`${CSS_STATE}--disabled`]: Boolean(disabled)\n    }, className),\n    ref,\n    ...remainingProps\n  })\n));\n\nLink.propTypes = {\n  /**\n   * @ignore\n   */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n  * Disabled\n  */\n  disabled: bool,\n\n  /**\n  * Inline\n  */\n  inline: bool,\n\n  /**\n  * Tag\n  */\n  tag: element\n};\n\nLink.defaultProps = {\n  tag: <a /> // eslint-disable-line\n};\n\nLink.displayName = 'Link';\n\nexport default Link;\n","import React from 'react';\nimport {Ref} from './types';\n\nexport const TooltipContext = React.createContext({});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Fn = (...args: any[]) => void;\ntype FnOrBool = undefined | Fn;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const callAll = (...fns: FnOrBool[]) => (...args: any[]) =>\n  fns.forEach(fn => fn && fn(...args));\n\nexport const noop = () => {};\n\nexport const canUseDOM = () =>\n  !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  );\n\nexport const setRef = (ref: Ref, node: HTMLElement | null) => {\n  if (typeof ref === 'function') {\n    return ref(node);\n  } else if (ref != null) {\n    ref.current = node;\n  }\n};\n","import React, {Component} from 'react';\nimport {\n  GetArrowPropsArg,\n  GetTooltipPropsArg,\n  TooltipProps,\n  TriggerTypes\n} from './types';\nimport {callAll, TooltipContext, setRef} from './utils';\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  subtree: true\n};\n\nclass Tooltip extends Component<TooltipProps> {\n  public static contextType = TooltipContext;\n\n  private observer?: MutationObserver;\n  private tooltipRef!: HTMLElement | null;\n\n  public componentDidMount() {\n    const observer = (this.observer = new MutationObserver(() => {\n      this.props.scheduleUpdate();\n    }));\n    observer.observe(this.tooltipRef!, MUTATION_OBSERVER_CONFIG);\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        removeParentOutsideClickHandler,\n        removeParentOutsideRightClickHandler\n      } = this.context;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.closeOnOutOfBoundaries && this.props.outOfBoundaries) {\n      this.props.hideTooltip();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        isParentNoneTriggered,\n        addParentOutsideClickHandler,\n        addParentOutsideRightClickHandler\n      } = this.context;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public render() {\n    const {arrowProps, placement, tooltip} = this.props;\n\n    return (\n      <TooltipContext.Provider value={this.contextValue}>\n        {tooltip({\n          arrowRef: arrowProps.ref,\n          getArrowProps: this.getArrowProps,\n          getTooltipProps: this.getTooltipProps,\n          placement,\n          tooltipRef: this.getTooltipRef\n        })}\n      </TooltipContext.Provider>\n    );\n  }\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private handleOutsideClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideClickHandler) {\n        parentOutsideClickHandler(event);\n      }\n    }\n  };\n\n  private handleOutsideRightClick?: EventListener = event => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const {parentOutsideRightClickHandler} = this.context;\n      const {hideTooltip, clearScheduled} = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideRightClickHandler) {\n        parentOutsideRightClickHandler(event);\n      }\n    }\n  };\n\n  private addOutsideClickHandler = () => {\n    document.body.addEventListener('touchend', this.handleOutsideClick!);\n    document.body.addEventListener('click', this.handleOutsideClick!);\n  };\n\n  private removeOutsideClickHandler = () => {\n    document.body.removeEventListener('touchend', this.handleOutsideClick!);\n    document.body.removeEventListener('click', this.handleOutsideClick!);\n  };\n\n  private addOutsideRightClickHandler = () =>\n    document.body.addEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private removeOutsideRightClickHandler = () =>\n    document.body.removeEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private getTooltipRef = (node: HTMLElement | null) => {\n    this.tooltipRef = node;\n    setRef(this.props.innerRef, node);\n  };\n\n  private getArrowProps = (props: GetArrowPropsArg = {}) => ({\n    ...props,\n    style: {...props.style, ...this.props.arrowProps.style}\n  });\n\n  private getTooltipProps = (props: GetTooltipPropsArg = {}) => ({\n    ...props,\n    ...(this.isTriggeredBy('hover') && {\n      onMouseEnter: callAll(this.props.clearScheduled, props.onMouseEnter),\n      onMouseLeave: callAll(this.props.hideTooltip, props.onMouseLeave)\n    }),\n    style: {...props.style, ...this.props.style}\n  });\n\n  private contextValue = {\n    isParentNoneTriggered: this.props.trigger === 'none',\n    addParentOutsideClickHandler: this.addOutsideClickHandler,\n    addParentOutsideRightClickHandler: this.addOutsideRightClickHandler,\n    parentOutsideClickHandler: this.handleOutsideClick,\n    parentOutsideRightClickHandler: this.handleOutsideRightClick,\n    removeParentOutsideClickHandler: this.removeOutsideClickHandler,\n    removeParentOutsideRightClickHandler: this.removeOutsideRightClickHandler\n  };\n}\n\nexport default Tooltip;\n","/**\n * @author Mohsin Ul Haq <mohsinulhaq01@gmail.com>\n */\nimport PopperJS from 'popper.js';\nimport React, {Component} from 'react';\nimport {createPortal} from 'react-dom';\nimport {Manager, Popper, Reference} from 'react-popper';\nimport Tooltip from './Tooltip';\nimport {\n  GetTriggerPropsArg,\n  TooltipTriggerProps,\n  TooltipTriggerState,\n  TriggerTypes\n} from './types';\nimport {callAll, canUseDOM, noop} from './utils';\n\nconst DEFAULT_MODIFIERS: PopperJS.Modifiers = {\n  preventOverflow: {\n    boundariesElement: 'viewport'\n  }\n};\n\nclass TooltipTrigger extends Component<\n  TooltipTriggerProps,\n  TooltipTriggerState\n> {\n  public static defaultProps = {\n    closeOnOutOfBoundaries: true,\n    defaultTooltipShown: false,\n    delayHide: 0,\n    delayShow: 0,\n    followCursor: false,\n    onVisibilityChange: noop,\n    placement: 'right',\n    portalContainer: canUseDOM() ? document.body : null,\n    trigger: 'hover',\n    usePortal: canUseDOM()\n  };\n\n  public state: TooltipTriggerState = {\n    tooltipShown: this.props.defaultTooltipShown\n  };\n\n  private hideTimeout?: number;\n  private showTimeout?: number;\n  private popperOffset?: PopperJS.Offset;\n\n  public componentWillUnmount() {\n    this.clearScheduled();\n  }\n\n  public render() {\n    const {\n      children,\n      tooltip,\n      placement,\n      trigger,\n      getTriggerRef,\n      modifiers,\n      closeOnOutOfBoundaries,\n      usePortal,\n      portalContainer,\n      followCursor,\n      getTooltipRef,\n      ...restProps\n    } = this.props;\n\n    const popper = (\n      <Popper\n        innerRef={getTooltipRef}\n        placement={placement}\n        modifiers={{\n          ...DEFAULT_MODIFIERS,\n          ...(followCursor && {\n            followCursorModifier: {\n              enabled: true,\n              fn: data => {\n                this.popperOffset = data.offsets.popper;\n                return data;\n              },\n              order: 1000\n            }\n          }),\n          ...modifiers\n        }}\n        {...restProps}\n      >\n        {({\n          ref,\n          style,\n          // tslint:disable-next-line\n          placement,\n          arrowProps,\n          outOfBoundaries,\n          scheduleUpdate\n        }) => {\n          if (followCursor && this.popperOffset) {\n            const {pageX, pageY} = this.state;\n            const {width, height} = this.popperOffset;\n            const x =\n              pageX! + width > window.scrollX + document.body.offsetWidth\n                ? pageX! - width\n                : pageX;\n            const y =\n              pageY! + height > window.scrollY + document.body.offsetHeight\n                ? pageY! - height\n                : pageY;\n            style.transform = `translate3d(${x}px, ${y}px, 0`;\n          }\n\n          return (\n            <Tooltip\n              {...{\n                arrowProps,\n                closeOnOutOfBoundaries,\n                outOfBoundaries,\n                placement,\n                scheduleUpdate,\n                style,\n                tooltip,\n                trigger\n              }}\n              clearScheduled={this.clearScheduled}\n              hideTooltip={this.hideTooltip}\n              innerRef={ref}\n            />\n          );\n        }}\n      </Popper>\n    );\n\n    return (\n      <Manager>\n        <Reference innerRef={getTriggerRef}>\n          {({ref}) =>\n            children({getTriggerProps: this.getTriggerProps, triggerRef: ref})\n          }\n        </Reference>\n        {this.getState() &&\n          (usePortal ? createPortal(popper, portalContainer) : popper)}\n      </Manager>\n    );\n  }\n\n  private isControlled() {\n    return this.props.tooltipShown !== undefined;\n  }\n\n  private getState() {\n    return this.isControlled()\n      ? this.props.tooltipShown\n      : this.state.tooltipShown;\n  }\n\n  private setTooltipState = (state: TooltipTriggerState) => {\n    const cb = () => this.props.onVisibilityChange(state.tooltipShown);\n    this.isControlled() ? cb() : this.setState(state, cb);\n  };\n\n  private clearScheduled = () => {\n    clearTimeout(this.hideTimeout);\n    clearTimeout(this.showTimeout);\n  };\n\n  private showTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    this.clearScheduled();\n    let state: TooltipTriggerState = {\n      tooltipShown: true\n    };\n    if (this.props.followCursor) {\n      state = {\n        ...state,\n        pageX,\n        pageY\n      };\n    }\n    this.showTimeout = window.setTimeout(\n      () => this.setTooltipState(state),\n      this.props.delayShow\n    );\n  };\n\n  private hideTooltip = () => {\n    this.clearScheduled();\n    this.hideTimeout = window.setTimeout(\n      () => this.setTooltipState({tooltipShown: false}),\n      this.props.delayHide\n    );\n  };\n\n  private toggleTooltip = ({pageX, pageY}: {pageX: number; pageY: number}) => {\n    const action = this.getState() ? 'hideTooltip' : 'showTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private clickToggle: React.MouseEventHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private contextMenuToggle: React.MouseEventHandler = event => {\n    event.preventDefault();\n    const {pageX, pageY} = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({pageX, pageY});\n  };\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const {trigger} = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private getTriggerProps = (props: GetTriggerPropsArg = {}) => {\n    return {\n      ...props,\n      ...(this.isTriggeredBy('click') && {\n        onClick: callAll(this.clickToggle, props.onClick),\n        onTouchEnd: callAll(this.clickToggle, props.onTouchEnd)\n      }),\n      ...(this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(this.contextMenuToggle, props.onContextMenu)\n      }),\n      ...(this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(this.hideTooltip, props.onMouseLeave),\n        ...(this.props.followCursor && {\n          onMouseMove: callAll(this.showTooltip, props.onMouseMove)\n        })\n      }),\n      ...(this.isTriggeredBy('focus') && {\n        onFocus: callAll(this.showTooltip, props.onFocus),\n        onBlur: callAll(this.hideTooltip, props.onBlur)\n      })\n    };\n  };\n}\n\nexport default TooltipTrigger;\n","import React, { cloneElement, Fragment, useRef } from 'react';\nimport { node, number, oneOf, oneOfType, string } from 'prop-types';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\nimport TooltipTrigger from 'react-popper-tooltip';\n\nconst CSS_PREFIX = 'vds-tooltip';\nconst CSS_STATE = 'vds-state';\n\nconst Tooltip = ({ className, tooltip, children, id = shortid.generate(), trigger, ...remainingProps }) => {\n  const uniqueId = useRef(id);\n  const uid = uniqueId.current;\n\n  return (\n    <TooltipTrigger\n      trigger={trigger}\n      {...remainingProps}\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: '0, 4px'\n        }\n      }}\n      tooltip={({ getTooltipProps, tooltipRef }) => (\n        <div\n          hidden\n          {...getTooltipProps({\n            className: classnames(CSS_PREFIX, `${CSS_STATE}--show`, className),\n            ref: tooltipRef\n          })}\n        >\n          <div className={`${CSS_PREFIX}-content`}>\n            <span className={`${CSS_PREFIX}-text`}>{tooltip}</span>\n            <span className={`${CSS_PREFIX}-pointer`} />\n          </div>\n        </div>\n      )}\n    >\n      {({ getTriggerProps, triggerRef }) => (\n        <Fragment>\n          {cloneElement(children, {\n            ...getTriggerProps({\n              'aria-controls': uid,\n              'aria-describedby': uid,\n              ref: triggerRef\n            })\n          })}\n          <span aria-hidden=\"true\" id={uid} style={{ display: 'none' }}>\n            {tooltip}\n          </span>\n        </Fragment>\n      )}\n    </TooltipTrigger>\n  );\n};\nTooltip.propTypes = {\n  /**\n  * @ignore\n  */\n  children: node,\n\n  /**\n   * @ignore\n   */\n  className: string,\n\n  /**\n   * ID\n   */\n  id: oneOfType([number, string]),\n\n  /**\n   * Popper Placement\n   */\n  placement: oneOf([\n    'auto',\n    'bottom-end',\n    'bottom-start',\n    'bottom',\n    'left-end',\n    'left-start',\n    'left',\n    'right-end',\n    'right-start',\n    'right',\n    'top-end',\n    'top-start',\n    'top'\n  ]),\n\n  /**\n   * Tooltip\n   */\n  tooltip: node.isRequired,\n\n  /**\n   * Trigger\n   */\n  trigger: oneOf([\n    'click',\n    'hover',\n    'right-click',\n    'none'\n  ])\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n"],"sourceRoot":""}